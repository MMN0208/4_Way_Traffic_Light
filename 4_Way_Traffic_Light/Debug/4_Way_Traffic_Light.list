
4_Way_Traffic_Light.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004388  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000068  08004494  08004494  00014494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080044fc  080044fc  00020390  2**0
                  CONTENTS
  4 .ARM          00000000  080044fc  080044fc  00020390  2**0
                  CONTENTS
  5 .preinit_array 00000000  080044fc  080044fc  00020390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080044fc  080044fc  000144fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004500  08004500  00014500  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000390  20000000  08004504  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000047c  20000390  08004894  00020390  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000080c  08004894  0002080c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020390  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c41c  00000000  00000000  000203b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000027ed  00000000  00000000  0002c7d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000da8  00000000  00000000  0002efc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c38  00000000  00000000  0002fd70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a7db  00000000  00000000  000309a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00012edc  00000000  00000000  0004b183  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b64b  00000000  00000000  0005e05f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e96aa  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000038fc  00000000  00000000  000e96fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000390 	.word	0x20000390
 8000128:	00000000 	.word	0x00000000
 800012c:	0800447c 	.word	0x0800447c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000394 	.word	0x20000394
 8000148:	0800447c 	.word	0x0800447c

0800014c <grnBuzzer>:
  4,16,4,
  4,8,4,4,4,
  4,20,
};

void grnBuzzer(void) {
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
	int counter = sizeof(music1)/sizeof(music1[0]);
 8000152:	234e      	movs	r3, #78	; 0x4e
 8000154:	607b      	str	r3, [r7, #4]
//		grnBuzzerCounter++;
//	}
//	else {
//		grnBuzzerCounter = 10;
//	}
	if (grnBuzzerCounter < counter){
 8000156:	4b16      	ldr	r3, [pc, #88]	; (80001b0 <grnBuzzer+0x64>)
 8000158:	681b      	ldr	r3, [r3, #0]
 800015a:	687a      	ldr	r2, [r7, #4]
 800015c:	429a      	cmp	r2, r3
 800015e:	dd1f      	ble.n	80001a0 <grnBuzzer+0x54>
		__HAL_TIM_SET_AUTORELOAD(&htim3, 1000000/music1[grnBuzzerCounter]);
 8000160:	4b13      	ldr	r3, [pc, #76]	; (80001b0 <grnBuzzer+0x64>)
 8000162:	681b      	ldr	r3, [r3, #0]
 8000164:	4a13      	ldr	r2, [pc, #76]	; (80001b4 <grnBuzzer+0x68>)
 8000166:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800016a:	4a13      	ldr	r2, [pc, #76]	; (80001b8 <grnBuzzer+0x6c>)
 800016c:	fb92 f2f3 	sdiv	r2, r2, r3
 8000170:	4b12      	ldr	r3, [pc, #72]	; (80001bc <grnBuzzer+0x70>)
 8000172:	681b      	ldr	r3, [r3, #0]
 8000174:	62da      	str	r2, [r3, #44]	; 0x2c
 8000176:	4b0e      	ldr	r3, [pc, #56]	; (80001b0 <grnBuzzer+0x64>)
 8000178:	681b      	ldr	r3, [r3, #0]
 800017a:	4a0e      	ldr	r2, [pc, #56]	; (80001b4 <grnBuzzer+0x68>)
 800017c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000180:	4a0d      	ldr	r2, [pc, #52]	; (80001b8 <grnBuzzer+0x6c>)
 8000182:	fb92 f3f3 	sdiv	r3, r2, r3
 8000186:	461a      	mov	r2, r3
 8000188:	4b0c      	ldr	r3, [pc, #48]	; (80001bc <grnBuzzer+0x70>)
 800018a:	60da      	str	r2, [r3, #12]
		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 15);
 800018c:	4b0b      	ldr	r3, [pc, #44]	; (80001bc <grnBuzzer+0x70>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	220f      	movs	r2, #15
 8000192:	635a      	str	r2, [r3, #52]	; 0x34
		grnBuzzerCounter++;
 8000194:	4b06      	ldr	r3, [pc, #24]	; (80001b0 <grnBuzzer+0x64>)
 8000196:	681b      	ldr	r3, [r3, #0]
 8000198:	3301      	adds	r3, #1
 800019a:	4a05      	ldr	r2, [pc, #20]	; (80001b0 <grnBuzzer+0x64>)
 800019c:	6013      	str	r3, [r2, #0]
	} else {
		grnBuzzerCounter = 0;
	}
}
 800019e:	e002      	b.n	80001a6 <grnBuzzer+0x5a>
		grnBuzzerCounter = 0;
 80001a0:	4b03      	ldr	r3, [pc, #12]	; (80001b0 <grnBuzzer+0x64>)
 80001a2:	2200      	movs	r2, #0
 80001a4:	601a      	str	r2, [r3, #0]
}
 80001a6:	bf00      	nop
 80001a8:	370c      	adds	r7, #12
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bc80      	pop	{r7}
 80001ae:	4770      	bx	lr
 80001b0:	200003ac 	.word	0x200003ac
 80001b4:	20000000 	.word	0x20000000
 80001b8:	000f4240 	.word	0x000f4240
 80001bc:	2000076c 	.word	0x2000076c

080001c0 <redBuzzer>:

void redBuzzer(void) {
 80001c0:	b480      	push	{r7}
 80001c2:	b083      	sub	sp, #12
 80001c4:	af00      	add	r7, sp, #0
	int counter = sizeof(music2)/sizeof(music2[0]);
 80001c6:	2363      	movs	r3, #99	; 0x63
 80001c8:	607b      	str	r3, [r7, #4]
	if(redBuzzerCounter < counter) {
 80001ca:	4b13      	ldr	r3, [pc, #76]	; (8000218 <redBuzzer+0x58>)
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	687a      	ldr	r2, [r7, #4]
 80001d0:	429a      	cmp	r2, r3
 80001d2:	dd19      	ble.n	8000208 <redBuzzer+0x48>
		__HAL_TIM_SET_AUTORELOAD(&htim3, music2[redBuzzerCounter]);
 80001d4:	4b10      	ldr	r3, [pc, #64]	; (8000218 <redBuzzer+0x58>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a10      	ldr	r2, [pc, #64]	; (800021c <redBuzzer+0x5c>)
 80001da:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001de:	4b10      	ldr	r3, [pc, #64]	; (8000220 <redBuzzer+0x60>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	62da      	str	r2, [r3, #44]	; 0x2c
 80001e4:	4b0c      	ldr	r3, [pc, #48]	; (8000218 <redBuzzer+0x58>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a0c      	ldr	r2, [pc, #48]	; (800021c <redBuzzer+0x5c>)
 80001ea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80001ee:	461a      	mov	r2, r3
 80001f0:	4b0b      	ldr	r3, [pc, #44]	; (8000220 <redBuzzer+0x60>)
 80001f2:	60da      	str	r2, [r3, #12]
		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 15);
 80001f4:	4b0a      	ldr	r3, [pc, #40]	; (8000220 <redBuzzer+0x60>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	220f      	movs	r2, #15
 80001fa:	635a      	str	r2, [r3, #52]	; 0x34
//		__HAL_TIM_SET_PRESCALER(&htim3,music2[redBuzzerCounter]);
		redBuzzerCounter ++;
 80001fc:	4b06      	ldr	r3, [pc, #24]	; (8000218 <redBuzzer+0x58>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	3301      	adds	r3, #1
 8000202:	4a05      	ldr	r2, [pc, #20]	; (8000218 <redBuzzer+0x58>)
 8000204:	6013      	str	r3, [r2, #0]
	}
	else {
		redBuzzerCounter  = 0;
	}
}
 8000206:	e002      	b.n	800020e <redBuzzer+0x4e>
		redBuzzerCounter  = 0;
 8000208:	4b03      	ldr	r3, [pc, #12]	; (8000218 <redBuzzer+0x58>)
 800020a:	2200      	movs	r2, #0
 800020c:	601a      	str	r2, [r3, #0]
}
 800020e:	bf00      	nop
 8000210:	370c      	adds	r7, #12
 8000212:	46bd      	mov	sp, r7
 8000214:	bc80      	pop	{r7}
 8000216:	4770      	bx	lr
 8000218:	200003b0 	.word	0x200003b0
 800021c:	20000138 	.word	0x20000138
 8000220:	2000076c 	.word	0x2000076c

08000224 <stopBuzzer>:

void stopBuzzer(void) {
 8000224:	b480      	push	{r7}
 8000226:	af00      	add	r7, sp, #0
	__HAL_TIM_SET_AUTORELOAD(&htim3, 0);
 8000228:	4b07      	ldr	r3, [pc, #28]	; (8000248 <stopBuzzer+0x24>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	2200      	movs	r2, #0
 800022e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000230:	4b05      	ldr	r3, [pc, #20]	; (8000248 <stopBuzzer+0x24>)
 8000232:	2200      	movs	r2, #0
 8000234:	60da      	str	r2, [r3, #12]
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 0);
 8000236:	4b04      	ldr	r3, [pc, #16]	; (8000248 <stopBuzzer+0x24>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	2200      	movs	r2, #0
 800023c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800023e:	bf00      	nop
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop
 8000248:	2000076c 	.word	0x2000076c

0800024c <fsm_multi_mode_run>:

int newGrnTime = 0;
int newYelTime = 0;

void fsm_multi_mode_run(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
    switch (sysStatus) {
 8000250:	4ba8      	ldr	r3, [pc, #672]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000252:	781b      	ldrb	r3, [r3, #0]
 8000254:	2b06      	cmp	r3, #6
 8000256:	f200 8285 	bhi.w	8000764 <fsm_multi_mode_run+0x518>
 800025a:	a201      	add	r2, pc, #4	; (adr r2, 8000260 <fsm_multi_mode_run+0x14>)
 800025c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000260:	0800027d 	.word	0x0800027d
 8000264:	080002b3 	.word	0x080002b3
 8000268:	08000371 	.word	0x08000371
 800026c:	08000433 	.word	0x08000433
 8000270:	08000515 	.word	0x08000515
 8000274:	080006b1 	.word	0x080006b1
 8000278:	080005d7 	.word	0x080005d7
    case INIT:
        // init timer 1 for countdown updating
        setTimer(&timer1,SECOND);
 800027c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000280:	489d      	ldr	r0, [pc, #628]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000282:	f001 f851 	bl	8001328 <setTimer>

        // init countdown
        countdown = redTime;
 8000286:	4b9d      	ldr	r3, [pc, #628]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	4a9d      	ldr	r2, [pc, #628]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 800028c:	6013      	str	r3, [r2, #0]

        auto_mode = 1;
 800028e:	4b9d      	ldr	r3, [pc, #628]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000290:	2201      	movs	r2, #1
 8000292:	601a      	str	r2, [r3, #0]

        sysStatus = RED__GRN;
 8000294:	4b97      	ldr	r3, [pc, #604]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000296:	2201      	movs	r2, #1
 8000298:	701a      	strb	r2, [r3, #0]
        trafficLightRed(TRAFFIC_LIGHT_1);
 800029a:	2000      	movs	r0, #0
 800029c:	f001 fae4 	bl	8001868 <trafficLightRed>
        trafficLightGrn(TRAFFIC_LIGHT_2);
 80002a0:	2001      	movs	r0, #1
 80002a2:	f001 fa95 	bl	80017d0 <trafficLightGrn>
        displayCountdown(countdown);
 80002a6:	4b96      	ldr	r3, [pc, #600]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4618      	mov	r0, r3
 80002ac:	f001 fb02 	bl	80018b4 <displayCountdown>
        break;
 80002b0:	e265      	b.n	800077e <fsm_multi_mode_run+0x532>

    case RED__GRN:
        if (auto_mode == 1) {
 80002b2:	4b94      	ldr	r3, [pc, #592]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d12c      	bne.n	8000314 <fsm_multi_mode_run+0xc8>
            if (timer1.flag == 1) {
 80002ba:	4b8f      	ldr	r3, [pc, #572]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80002bc:	685b      	ldr	r3, [r3, #4]
 80002be:	2b01      	cmp	r3, #1
 80002c0:	d11d      	bne.n	80002fe <fsm_multi_mode_run+0xb2>
                setTimer(&timer1,SECOND);
 80002c2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80002c6:	488c      	ldr	r0, [pc, #560]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80002c8:	f001 f82e 	bl	8001328 <setTimer>
                countdown--;
 80002cc:	4b8c      	ldr	r3, [pc, #560]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	3b01      	subs	r3, #1
 80002d2:	4a8b      	ldr	r2, [pc, #556]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80002d4:	6013      	str	r3, [r2, #0]
                if (countdown == yelTime) {
 80002d6:	4b8a      	ldr	r3, [pc, #552]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	4b8b      	ldr	r3, [pc, #556]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	429a      	cmp	r2, r3
 80002e0:	d108      	bne.n	80002f4 <fsm_multi_mode_run+0xa8>
                    sysStatus = RED__YEL;
 80002e2:	4b84      	ldr	r3, [pc, #528]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002e4:	2202      	movs	r2, #2
 80002e6:	701a      	strb	r2, [r3, #0]
                    trafficLightRed(TRAFFIC_LIGHT_1);
 80002e8:	2000      	movs	r0, #0
 80002ea:	f001 fabd 	bl	8001868 <trafficLightRed>
                    trafficLightYel(TRAFFIC_LIGHT_2);
 80002ee:	2001      	movs	r0, #1
 80002f0:	f001 fa94 	bl	800181c <trafficLightYel>
                }
                displayCountdown(countdown);
 80002f4:	4b82      	ldr	r3, [pc, #520]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4618      	mov	r0, r3
 80002fa:	f001 fadb 	bl	80018b4 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 80002fe:	2001      	movs	r0, #1
 8000300:	f000 fd26 	bl	8000d50 <isButtonPressed>
 8000304:	4603      	mov	r3, r0
 8000306:	2b00      	cmp	r3, #0
 8000308:	f000 822e 	beq.w	8000768 <fsm_multi_mode_run+0x51c>
                auto_mode = 0;
 800030c:	4b7d      	ldr	r3, [pc, #500]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 800030e:	2200      	movs	r2, #0
 8000310:	601a      	str	r2, [r3, #0]
                trafficLightRed(TRAFFIC_LIGHT_1);
                trafficLightYel(TRAFFIC_LIGHT_2);
            }
        }

        break;
 8000312:	e229      	b.n	8000768 <fsm_multi_mode_run+0x51c>
            if (isButtonPressed(BUTTON_1)) {
 8000314:	2001      	movs	r0, #1
 8000316:	f000 fd1b 	bl	8000d50 <isButtonPressed>
 800031a:	4603      	mov	r3, r0
 800031c:	2b00      	cmp	r3, #0
 800031e:	d016      	beq.n	800034e <fsm_multi_mode_run+0x102>
                setTimer(&timer1,LED_BLINK);
 8000320:	2164      	movs	r1, #100	; 0x64
 8000322:	4875      	ldr	r0, [pc, #468]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000324:	f001 f800 	bl	8001328 <setTimer>
                newGrnTime = grnTime;
 8000328:	4b78      	ldr	r3, [pc, #480]	; (800050c <fsm_multi_mode_run+0x2c0>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	4a78      	ldr	r2, [pc, #480]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 800032e:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 8000330:	4b70      	ldr	r3, [pc, #448]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000332:	2206      	movs	r2, #6
 8000334:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 8000336:	2000      	movs	r0, #0
 8000338:	f001 fa4a 	bl	80017d0 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 800033c:	2001      	movs	r0, #1
 800033e:	f001 fa47 	bl	80017d0 <trafficLightGrn>
                displayCountdown(newGrnTime);
 8000342:	4b73      	ldr	r3, [pc, #460]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4618      	mov	r0, r3
 8000348:	f001 fab4 	bl	80018b4 <displayCountdown>
        break;
 800034c:	e20c      	b.n	8000768 <fsm_multi_mode_run+0x51c>
            } else if (isButtonPressed(BUTTON_2)) {
 800034e:	2002      	movs	r0, #2
 8000350:	f000 fcfe 	bl	8000d50 <isButtonPressed>
 8000354:	4603      	mov	r3, r0
 8000356:	2b00      	cmp	r3, #0
 8000358:	f000 8206 	beq.w	8000768 <fsm_multi_mode_run+0x51c>
                sysStatus = RED__YEL;
 800035c:	4b65      	ldr	r3, [pc, #404]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 800035e:	2202      	movs	r2, #2
 8000360:	701a      	strb	r2, [r3, #0]
                trafficLightRed(TRAFFIC_LIGHT_1);
 8000362:	2000      	movs	r0, #0
 8000364:	f001 fa80 	bl	8001868 <trafficLightRed>
                trafficLightYel(TRAFFIC_LIGHT_2);
 8000368:	2001      	movs	r0, #1
 800036a:	f001 fa57 	bl	800181c <trafficLightYel>
        break;
 800036e:	e1fb      	b.n	8000768 <fsm_multi_mode_run+0x51c>

    case RED__YEL:
        if (auto_mode == 1) {
 8000370:	4b64      	ldr	r3, [pc, #400]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	2b01      	cmp	r3, #1
 8000376:	d12e      	bne.n	80003d6 <fsm_multi_mode_run+0x18a>
            if (timer1.flag == 1) {
 8000378:	4b5f      	ldr	r3, [pc, #380]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800037a:	685b      	ldr	r3, [r3, #4]
 800037c:	2b01      	cmp	r3, #1
 800037e:	d11f      	bne.n	80003c0 <fsm_multi_mode_run+0x174>
                setTimer(&timer1,SECOND);
 8000380:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000384:	485c      	ldr	r0, [pc, #368]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000386:	f000 ffcf 	bl	8001328 <setTimer>
                countdown--;
 800038a:	4b5d      	ldr	r3, [pc, #372]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	3b01      	subs	r3, #1
 8000390:	4a5b      	ldr	r2, [pc, #364]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000392:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 8000394:	4b5a      	ldr	r3, [pc, #360]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	2b00      	cmp	r3, #0
 800039a:	d10c      	bne.n	80003b6 <fsm_multi_mode_run+0x16a>
                    countdown = grnTime;
 800039c:	4b5b      	ldr	r3, [pc, #364]	; (800050c <fsm_multi_mode_run+0x2c0>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4a57      	ldr	r2, [pc, #348]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80003a2:	6013      	str	r3, [r2, #0]
                    sysStatus = GRN__RED;
 80003a4:	4b53      	ldr	r3, [pc, #332]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80003a6:	2203      	movs	r2, #3
 80003a8:	701a      	strb	r2, [r3, #0]
                    trafficLightGrn(TRAFFIC_LIGHT_1);
 80003aa:	2000      	movs	r0, #0
 80003ac:	f001 fa10 	bl	80017d0 <trafficLightGrn>
                    trafficLightRed(TRAFFIC_LIGHT_2);
 80003b0:	2001      	movs	r0, #1
 80003b2:	f001 fa59 	bl	8001868 <trafficLightRed>
                }
                displayCountdown(countdown);
 80003b6:	4b52      	ldr	r3, [pc, #328]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	4618      	mov	r0, r3
 80003bc:	f001 fa7a 	bl	80018b4 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 80003c0:	2001      	movs	r0, #1
 80003c2:	f000 fcc5 	bl	8000d50 <isButtonPressed>
 80003c6:	4603      	mov	r3, r0
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	f000 81cf 	beq.w	800076c <fsm_multi_mode_run+0x520>
                auto_mode = 0;
 80003ce:	4b4d      	ldr	r3, [pc, #308]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80003d0:	2200      	movs	r2, #0
 80003d2:	601a      	str	r2, [r3, #0]
                sysStatus = GRN__RED;
                trafficLightGrn(TRAFFIC_LIGHT_1);
                trafficLightRed(TRAFFIC_LIGHT_2);
            }
        }
        break;
 80003d4:	e1ca      	b.n	800076c <fsm_multi_mode_run+0x520>
            if (isButtonPressed(BUTTON_1)) {
 80003d6:	2001      	movs	r0, #1
 80003d8:	f000 fcba 	bl	8000d50 <isButtonPressed>
 80003dc:	4603      	mov	r3, r0
 80003de:	2b00      	cmp	r3, #0
 80003e0:	d016      	beq.n	8000410 <fsm_multi_mode_run+0x1c4>
                setTimer(&timer1,LED_BLINK);
 80003e2:	2164      	movs	r1, #100	; 0x64
 80003e4:	4844      	ldr	r0, [pc, #272]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80003e6:	f000 ff9f 	bl	8001328 <setTimer>
                newGrnTime = grnTime;
 80003ea:	4b48      	ldr	r3, [pc, #288]	; (800050c <fsm_multi_mode_run+0x2c0>)
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	4a48      	ldr	r2, [pc, #288]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 80003f0:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 80003f2:	4b40      	ldr	r3, [pc, #256]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80003f4:	2206      	movs	r2, #6
 80003f6:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 80003f8:	2000      	movs	r0, #0
 80003fa:	f001 f9e9 	bl	80017d0 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80003fe:	2001      	movs	r0, #1
 8000400:	f001 f9e6 	bl	80017d0 <trafficLightGrn>
                displayCountdown(newGrnTime);
 8000404:	4b42      	ldr	r3, [pc, #264]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	4618      	mov	r0, r3
 800040a:	f001 fa53 	bl	80018b4 <displayCountdown>
        break;
 800040e:	e1ad      	b.n	800076c <fsm_multi_mode_run+0x520>
            } else if (isButtonPressed(BUTTON_2)) {
 8000410:	2002      	movs	r0, #2
 8000412:	f000 fc9d 	bl	8000d50 <isButtonPressed>
 8000416:	4603      	mov	r3, r0
 8000418:	2b00      	cmp	r3, #0
 800041a:	f000 81a7 	beq.w	800076c <fsm_multi_mode_run+0x520>
                sysStatus = GRN__RED;
 800041e:	4b35      	ldr	r3, [pc, #212]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000420:	2203      	movs	r2, #3
 8000422:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 8000424:	2000      	movs	r0, #0
 8000426:	f001 f9d3 	bl	80017d0 <trafficLightGrn>
                trafficLightRed(TRAFFIC_LIGHT_2);
 800042a:	2001      	movs	r0, #1
 800042c:	f001 fa1c 	bl	8001868 <trafficLightRed>
        break;
 8000430:	e19c      	b.n	800076c <fsm_multi_mode_run+0x520>

    case GRN__RED:
        if (auto_mode == 1) {
 8000432:	4b34      	ldr	r3, [pc, #208]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	2b01      	cmp	r3, #1
 8000438:	d12e      	bne.n	8000498 <fsm_multi_mode_run+0x24c>
            if (timer1.flag == 1) {
 800043a:	4b2f      	ldr	r3, [pc, #188]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800043c:	685b      	ldr	r3, [r3, #4]
 800043e:	2b01      	cmp	r3, #1
 8000440:	d11f      	bne.n	8000482 <fsm_multi_mode_run+0x236>
                setTimer(&timer1,SECOND);
 8000442:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000446:	482c      	ldr	r0, [pc, #176]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000448:	f000 ff6e 	bl	8001328 <setTimer>
                countdown--;
 800044c:	4b2c      	ldr	r3, [pc, #176]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	3b01      	subs	r3, #1
 8000452:	4a2b      	ldr	r2, [pc, #172]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000454:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 8000456:	4b2a      	ldr	r3, [pc, #168]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	2b00      	cmp	r3, #0
 800045c:	d10c      	bne.n	8000478 <fsm_multi_mode_run+0x22c>
                    countdown = yelTime;
 800045e:	4b2a      	ldr	r3, [pc, #168]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	4a27      	ldr	r2, [pc, #156]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000464:	6013      	str	r3, [r2, #0]
                    sysStatus = YEL__RED;
 8000466:	4b23      	ldr	r3, [pc, #140]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000468:	2204      	movs	r2, #4
 800046a:	701a      	strb	r2, [r3, #0]
                    trafficLightYel(TRAFFIC_LIGHT_1);
 800046c:	2000      	movs	r0, #0
 800046e:	f001 f9d5 	bl	800181c <trafficLightYel>
                    trafficLightRed(TRAFFIC_LIGHT_2);
 8000472:	2001      	movs	r0, #1
 8000474:	f001 f9f8 	bl	8001868 <trafficLightRed>
                }
                displayCountdown(countdown);
 8000478:	4b21      	ldr	r3, [pc, #132]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4618      	mov	r0, r3
 800047e:	f001 fa19 	bl	80018b4 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 8000482:	2001      	movs	r0, #1
 8000484:	f000 fc64 	bl	8000d50 <isButtonPressed>
 8000488:	4603      	mov	r3, r0
 800048a:	2b00      	cmp	r3, #0
 800048c:	f000 8170 	beq.w	8000770 <fsm_multi_mode_run+0x524>
                auto_mode = 0;
 8000490:	4b1c      	ldr	r3, [pc, #112]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000492:	2200      	movs	r2, #0
 8000494:	601a      	str	r2, [r3, #0]
                sysStatus = YEL__RED;
                trafficLightYel(TRAFFIC_LIGHT_1);
                trafficLightRed(TRAFFIC_LIGHT_2);
            }
        }
        break;
 8000496:	e16b      	b.n	8000770 <fsm_multi_mode_run+0x524>
            if (isButtonPressed(BUTTON_1)) {
 8000498:	2001      	movs	r0, #1
 800049a:	f000 fc59 	bl	8000d50 <isButtonPressed>
 800049e:	4603      	mov	r3, r0
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	d016      	beq.n	80004d2 <fsm_multi_mode_run+0x286>
                setTimer(&timer1,LED_BLINK);
 80004a4:	2164      	movs	r1, #100	; 0x64
 80004a6:	4814      	ldr	r0, [pc, #80]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80004a8:	f000 ff3e 	bl	8001328 <setTimer>
                newGrnTime = grnTime;
 80004ac:	4b17      	ldr	r3, [pc, #92]	; (800050c <fsm_multi_mode_run+0x2c0>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	4a17      	ldr	r2, [pc, #92]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 80004b2:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 80004b4:	4b0f      	ldr	r3, [pc, #60]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80004b6:	2206      	movs	r2, #6
 80004b8:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 80004ba:	2000      	movs	r0, #0
 80004bc:	f001 f988 	bl	80017d0 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80004c0:	2001      	movs	r0, #1
 80004c2:	f001 f985 	bl	80017d0 <trafficLightGrn>
                displayCountdown(newGrnTime);
 80004c6:	4b12      	ldr	r3, [pc, #72]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	4618      	mov	r0, r3
 80004cc:	f001 f9f2 	bl	80018b4 <displayCountdown>
        break;
 80004d0:	e14e      	b.n	8000770 <fsm_multi_mode_run+0x524>
            } else if (isButtonPressed(BUTTON_2)) {
 80004d2:	2002      	movs	r0, #2
 80004d4:	f000 fc3c 	bl	8000d50 <isButtonPressed>
 80004d8:	4603      	mov	r3, r0
 80004da:	2b00      	cmp	r3, #0
 80004dc:	f000 8148 	beq.w	8000770 <fsm_multi_mode_run+0x524>
                sysStatus = YEL__RED;
 80004e0:	4b04      	ldr	r3, [pc, #16]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80004e2:	2204      	movs	r2, #4
 80004e4:	701a      	strb	r2, [r3, #0]
                trafficLightYel(TRAFFIC_LIGHT_1);
 80004e6:	2000      	movs	r0, #0
 80004e8:	f001 f998 	bl	800181c <trafficLightYel>
                trafficLightRed(TRAFFIC_LIGHT_2);
 80004ec:	2001      	movs	r0, #1
 80004ee:	f001 f9bb 	bl	8001868 <trafficLightRed>
        break;
 80004f2:	e13d      	b.n	8000770 <fsm_multi_mode_run+0x524>
 80004f4:	200003c0 	.word	0x200003c0
 80004f8:	20000708 	.word	0x20000708
 80004fc:	200002c4 	.word	0x200002c4
 8000500:	200003c4 	.word	0x200003c4
 8000504:	200002d0 	.word	0x200002d0
 8000508:	200002c8 	.word	0x200002c8
 800050c:	200002cc 	.word	0x200002cc
 8000510:	200003b4 	.word	0x200003b4

    case YEL__RED:
        if (auto_mode == 1) {
 8000514:	4b9b      	ldr	r3, [pc, #620]	; (8000784 <fsm_multi_mode_run+0x538>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	2b01      	cmp	r3, #1
 800051a:	d12e      	bne.n	800057a <fsm_multi_mode_run+0x32e>
            if (timer1.flag == 1) {
 800051c:	4b9a      	ldr	r3, [pc, #616]	; (8000788 <fsm_multi_mode_run+0x53c>)
 800051e:	685b      	ldr	r3, [r3, #4]
 8000520:	2b01      	cmp	r3, #1
 8000522:	d11f      	bne.n	8000564 <fsm_multi_mode_run+0x318>
                setTimer(&timer1,SECOND);
 8000524:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000528:	4897      	ldr	r0, [pc, #604]	; (8000788 <fsm_multi_mode_run+0x53c>)
 800052a:	f000 fefd 	bl	8001328 <setTimer>
                countdown--;
 800052e:	4b97      	ldr	r3, [pc, #604]	; (800078c <fsm_multi_mode_run+0x540>)
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	3b01      	subs	r3, #1
 8000534:	4a95      	ldr	r2, [pc, #596]	; (800078c <fsm_multi_mode_run+0x540>)
 8000536:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 8000538:	4b94      	ldr	r3, [pc, #592]	; (800078c <fsm_multi_mode_run+0x540>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	2b00      	cmp	r3, #0
 800053e:	d10c      	bne.n	800055a <fsm_multi_mode_run+0x30e>
                    countdown = redTime;
 8000540:	4b93      	ldr	r3, [pc, #588]	; (8000790 <fsm_multi_mode_run+0x544>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	4a91      	ldr	r2, [pc, #580]	; (800078c <fsm_multi_mode_run+0x540>)
 8000546:	6013      	str	r3, [r2, #0]
                    sysStatus = RED__GRN;
 8000548:	4b92      	ldr	r3, [pc, #584]	; (8000794 <fsm_multi_mode_run+0x548>)
 800054a:	2201      	movs	r2, #1
 800054c:	701a      	strb	r2, [r3, #0]
                    trafficLightRed(TRAFFIC_LIGHT_1);
 800054e:	2000      	movs	r0, #0
 8000550:	f001 f98a 	bl	8001868 <trafficLightRed>
                    trafficLightGrn(TRAFFIC_LIGHT_2);
 8000554:	2001      	movs	r0, #1
 8000556:	f001 f93b 	bl	80017d0 <trafficLightGrn>
                }
                displayCountdown(countdown);
 800055a:	4b8c      	ldr	r3, [pc, #560]	; (800078c <fsm_multi_mode_run+0x540>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	4618      	mov	r0, r3
 8000560:	f001 f9a8 	bl	80018b4 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 8000564:	2001      	movs	r0, #1
 8000566:	f000 fbf3 	bl	8000d50 <isButtonPressed>
 800056a:	4603      	mov	r3, r0
 800056c:	2b00      	cmp	r3, #0
 800056e:	f000 8101 	beq.w	8000774 <fsm_multi_mode_run+0x528>
                auto_mode = 0;
 8000572:	4b84      	ldr	r3, [pc, #528]	; (8000784 <fsm_multi_mode_run+0x538>)
 8000574:	2200      	movs	r2, #0
 8000576:	601a      	str	r2, [r3, #0]
                sysStatus = RED__GRN;
                trafficLightRed(TRAFFIC_LIGHT_1);
                trafficLightGrn(TRAFFIC_LIGHT_2);
            }
        }
        break;
 8000578:	e0fc      	b.n	8000774 <fsm_multi_mode_run+0x528>
            if (isButtonPressed(BUTTON_1)) {
 800057a:	2001      	movs	r0, #1
 800057c:	f000 fbe8 	bl	8000d50 <isButtonPressed>
 8000580:	4603      	mov	r3, r0
 8000582:	2b00      	cmp	r3, #0
 8000584:	d016      	beq.n	80005b4 <fsm_multi_mode_run+0x368>
                setTimer(&timer1,LED_BLINK);
 8000586:	2164      	movs	r1, #100	; 0x64
 8000588:	487f      	ldr	r0, [pc, #508]	; (8000788 <fsm_multi_mode_run+0x53c>)
 800058a:	f000 fecd 	bl	8001328 <setTimer>
                newGrnTime = grnTime;
 800058e:	4b82      	ldr	r3, [pc, #520]	; (8000798 <fsm_multi_mode_run+0x54c>)
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	4a82      	ldr	r2, [pc, #520]	; (800079c <fsm_multi_mode_run+0x550>)
 8000594:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 8000596:	4b7f      	ldr	r3, [pc, #508]	; (8000794 <fsm_multi_mode_run+0x548>)
 8000598:	2206      	movs	r2, #6
 800059a:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 800059c:	2000      	movs	r0, #0
 800059e:	f001 f917 	bl	80017d0 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80005a2:	2001      	movs	r0, #1
 80005a4:	f001 f914 	bl	80017d0 <trafficLightGrn>
                displayCountdown(newGrnTime);
 80005a8:	4b7c      	ldr	r3, [pc, #496]	; (800079c <fsm_multi_mode_run+0x550>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	4618      	mov	r0, r3
 80005ae:	f001 f981 	bl	80018b4 <displayCountdown>
        break;
 80005b2:	e0df      	b.n	8000774 <fsm_multi_mode_run+0x528>
            } else if (isButtonPressed(BUTTON_2)) {
 80005b4:	2002      	movs	r0, #2
 80005b6:	f000 fbcb 	bl	8000d50 <isButtonPressed>
 80005ba:	4603      	mov	r3, r0
 80005bc:	2b00      	cmp	r3, #0
 80005be:	f000 80d9 	beq.w	8000774 <fsm_multi_mode_run+0x528>
                sysStatus = RED__GRN;
 80005c2:	4b74      	ldr	r3, [pc, #464]	; (8000794 <fsm_multi_mode_run+0x548>)
 80005c4:	2201      	movs	r2, #1
 80005c6:	701a      	strb	r2, [r3, #0]
                trafficLightRed(TRAFFIC_LIGHT_1);
 80005c8:	2000      	movs	r0, #0
 80005ca:	f001 f94d 	bl	8001868 <trafficLightRed>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80005ce:	2001      	movs	r0, #1
 80005d0:	f001 f8fe 	bl	80017d0 <trafficLightGrn>
        break;
 80005d4:	e0ce      	b.n	8000774 <fsm_multi_mode_run+0x528>

    case SET_GRN:
        if (isButtonPressed(BUTTON_1)) {
 80005d6:	2001      	movs	r0, #1
 80005d8:	f000 fbba 	bl	8000d50 <isButtonPressed>
 80005dc:	4603      	mov	r3, r0
 80005de:	2b00      	cmp	r3, #0
 80005e0:	d016      	beq.n	8000610 <fsm_multi_mode_run+0x3c4>
            setTimer(&timer1,LED_BLINK);
 80005e2:	2164      	movs	r1, #100	; 0x64
 80005e4:	4868      	ldr	r0, [pc, #416]	; (8000788 <fsm_multi_mode_run+0x53c>)
 80005e6:	f000 fe9f 	bl	8001328 <setTimer>
            newYelTime = yelTime;
 80005ea:	4b6d      	ldr	r3, [pc, #436]	; (80007a0 <fsm_multi_mode_run+0x554>)
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a6d      	ldr	r2, [pc, #436]	; (80007a4 <fsm_multi_mode_run+0x558>)
 80005f0:	6013      	str	r3, [r2, #0]
            sysStatus = SET_YEL;
 80005f2:	4b68      	ldr	r3, [pc, #416]	; (8000794 <fsm_multi_mode_run+0x548>)
 80005f4:	2205      	movs	r2, #5
 80005f6:	701a      	strb	r2, [r3, #0]
            trafficLightYel(TRAFFIC_LIGHT_1);
 80005f8:	2000      	movs	r0, #0
 80005fa:	f001 f90f 	bl	800181c <trafficLightYel>
            trafficLightYel(TRAFFIC_LIGHT_2);
 80005fe:	2001      	movs	r0, #1
 8000600:	f001 f90c 	bl	800181c <trafficLightYel>
            displayCountdown(newYelTime);
 8000604:	4b67      	ldr	r3, [pc, #412]	; (80007a4 <fsm_multi_mode_run+0x558>)
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4618      	mov	r0, r3
 800060a:	f001 f953 	bl	80018b4 <displayCountdown>
 800060e:	e040      	b.n	8000692 <fsm_multi_mode_run+0x446>
        } else if (isButtonPressed(BUTTON_2)) {
 8000610:	2002      	movs	r0, #2
 8000612:	f000 fb9d 	bl	8000d50 <isButtonPressed>
 8000616:	4603      	mov	r3, r0
 8000618:	2b00      	cmp	r3, #0
 800061a:	d011      	beq.n	8000640 <fsm_multi_mode_run+0x3f4>
            newGrnTime++;
 800061c:	4b5f      	ldr	r3, [pc, #380]	; (800079c <fsm_multi_mode_run+0x550>)
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	3301      	adds	r3, #1
 8000622:	4a5e      	ldr	r2, [pc, #376]	; (800079c <fsm_multi_mode_run+0x550>)
 8000624:	6013      	str	r3, [r2, #0]
            if (newGrnTime == MAX_VALUE)
 8000626:	4b5d      	ldr	r3, [pc, #372]	; (800079c <fsm_multi_mode_run+0x550>)
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	2b64      	cmp	r3, #100	; 0x64
 800062c:	d102      	bne.n	8000634 <fsm_multi_mode_run+0x3e8>
                newGrnTime = 1;
 800062e:	4b5b      	ldr	r3, [pc, #364]	; (800079c <fsm_multi_mode_run+0x550>)
 8000630:	2201      	movs	r2, #1
 8000632:	601a      	str	r2, [r3, #0]
            displayCountdown(newGrnTime);
 8000634:	4b59      	ldr	r3, [pc, #356]	; (800079c <fsm_multi_mode_run+0x550>)
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	4618      	mov	r0, r3
 800063a:	f001 f93b 	bl	80018b4 <displayCountdown>
 800063e:	e028      	b.n	8000692 <fsm_multi_mode_run+0x446>
        } else if (isButtonDoublePressed(BUTTON_2)) {
 8000640:	2002      	movs	r0, #2
 8000642:	f000 fba7 	bl	8000d94 <isButtonDoublePressed>
 8000646:	4603      	mov	r3, r0
 8000648:	2b00      	cmp	r3, #0
 800064a:	d011      	beq.n	8000670 <fsm_multi_mode_run+0x424>
            newGrnTime--;
 800064c:	4b53      	ldr	r3, [pc, #332]	; (800079c <fsm_multi_mode_run+0x550>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	3b01      	subs	r3, #1
 8000652:	4a52      	ldr	r2, [pc, #328]	; (800079c <fsm_multi_mode_run+0x550>)
 8000654:	6013      	str	r3, [r2, #0]
            if (newGrnTime == 0)
 8000656:	4b51      	ldr	r3, [pc, #324]	; (800079c <fsm_multi_mode_run+0x550>)
 8000658:	681b      	ldr	r3, [r3, #0]
 800065a:	2b00      	cmp	r3, #0
 800065c:	d102      	bne.n	8000664 <fsm_multi_mode_run+0x418>
                newGrnTime = MAX_VALUE - 1;
 800065e:	4b4f      	ldr	r3, [pc, #316]	; (800079c <fsm_multi_mode_run+0x550>)
 8000660:	2263      	movs	r2, #99	; 0x63
 8000662:	601a      	str	r2, [r3, #0]
            displayCountdown(newGrnTime);
 8000664:	4b4d      	ldr	r3, [pc, #308]	; (800079c <fsm_multi_mode_run+0x550>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	4618      	mov	r0, r3
 800066a:	f001 f923 	bl	80018b4 <displayCountdown>
 800066e:	e010      	b.n	8000692 <fsm_multi_mode_run+0x446>
        } else if (isButtonPressed(BUTTON_3)) {
 8000670:	2003      	movs	r0, #3
 8000672:	f000 fb6d 	bl	8000d50 <isButtonPressed>
 8000676:	4603      	mov	r3, r0
 8000678:	2b00      	cmp	r3, #0
 800067a:	d00a      	beq.n	8000692 <fsm_multi_mode_run+0x446>
            grnTime = newGrnTime;
 800067c:	4b47      	ldr	r3, [pc, #284]	; (800079c <fsm_multi_mode_run+0x550>)
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	4a45      	ldr	r2, [pc, #276]	; (8000798 <fsm_multi_mode_run+0x54c>)
 8000682:	6013      	str	r3, [r2, #0]
            redTime = grnTime + yelTime;
 8000684:	4b44      	ldr	r3, [pc, #272]	; (8000798 <fsm_multi_mode_run+0x54c>)
 8000686:	681a      	ldr	r2, [r3, #0]
 8000688:	4b45      	ldr	r3, [pc, #276]	; (80007a0 <fsm_multi_mode_run+0x554>)
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	4413      	add	r3, r2
 800068e:	4a40      	ldr	r2, [pc, #256]	; (8000790 <fsm_multi_mode_run+0x544>)
 8000690:	6013      	str	r3, [r2, #0]
        }

        if (timer1.flag == 1) {
 8000692:	4b3d      	ldr	r3, [pc, #244]	; (8000788 <fsm_multi_mode_run+0x53c>)
 8000694:	685b      	ldr	r3, [r3, #4]
 8000696:	2b01      	cmp	r3, #1
 8000698:	d16e      	bne.n	8000778 <fsm_multi_mode_run+0x52c>
            setTimer(&timer1,LED_BLINK);
 800069a:	2164      	movs	r1, #100	; 0x64
 800069c:	483a      	ldr	r0, [pc, #232]	; (8000788 <fsm_multi_mode_run+0x53c>)
 800069e:	f000 fe43 	bl	8001328 <setTimer>
            trafficLightBlinkGrn(TRAFFIC_LIGHT_1);
 80006a2:	2000      	movs	r0, #0
 80006a4:	f001 f848 	bl	8001738 <trafficLightBlinkGrn>
            trafficLightBlinkGrn(TRAFFIC_LIGHT_2);
 80006a8:	2001      	movs	r0, #1
 80006aa:	f001 f845 	bl	8001738 <trafficLightBlinkGrn>
        }
        break;
 80006ae:	e063      	b.n	8000778 <fsm_multi_mode_run+0x52c>

    case SET_YEL:
        if (isButtonPressed(BUTTON_1)) {
 80006b0:	2001      	movs	r0, #1
 80006b2:	f000 fb4d 	bl	8000d50 <isButtonPressed>
 80006b6:	4603      	mov	r3, r0
 80006b8:	2b00      	cmp	r3, #0
 80006ba:	d003      	beq.n	80006c4 <fsm_multi_mode_run+0x478>
            sysStatus = INIT;
 80006bc:	4b35      	ldr	r3, [pc, #212]	; (8000794 <fsm_multi_mode_run+0x548>)
 80006be:	2200      	movs	r2, #0
 80006c0:	701a      	strb	r2, [r3, #0]
 80006c2:	e040      	b.n	8000746 <fsm_multi_mode_run+0x4fa>
        } else if (isButtonPressed(BUTTON_2)) {
 80006c4:	2002      	movs	r0, #2
 80006c6:	f000 fb43 	bl	8000d50 <isButtonPressed>
 80006ca:	4603      	mov	r3, r0
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d011      	beq.n	80006f4 <fsm_multi_mode_run+0x4a8>
            newYelTime++;
 80006d0:	4b34      	ldr	r3, [pc, #208]	; (80007a4 <fsm_multi_mode_run+0x558>)
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	3301      	adds	r3, #1
 80006d6:	4a33      	ldr	r2, [pc, #204]	; (80007a4 <fsm_multi_mode_run+0x558>)
 80006d8:	6013      	str	r3, [r2, #0]
            if (newYelTime == MAX_VALUE)
 80006da:	4b32      	ldr	r3, [pc, #200]	; (80007a4 <fsm_multi_mode_run+0x558>)
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	2b64      	cmp	r3, #100	; 0x64
 80006e0:	d102      	bne.n	80006e8 <fsm_multi_mode_run+0x49c>
                newYelTime = 1;
 80006e2:	4b30      	ldr	r3, [pc, #192]	; (80007a4 <fsm_multi_mode_run+0x558>)
 80006e4:	2201      	movs	r2, #1
 80006e6:	601a      	str	r2, [r3, #0]
            displayCountdown(newYelTime);
 80006e8:	4b2e      	ldr	r3, [pc, #184]	; (80007a4 <fsm_multi_mode_run+0x558>)
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	4618      	mov	r0, r3
 80006ee:	f001 f8e1 	bl	80018b4 <displayCountdown>
 80006f2:	e028      	b.n	8000746 <fsm_multi_mode_run+0x4fa>
        } else if (isButtonDoublePressed(BUTTON_2)) {
 80006f4:	2002      	movs	r0, #2
 80006f6:	f000 fb4d 	bl	8000d94 <isButtonDoublePressed>
 80006fa:	4603      	mov	r3, r0
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	d011      	beq.n	8000724 <fsm_multi_mode_run+0x4d8>
            newYelTime--;
 8000700:	4b28      	ldr	r3, [pc, #160]	; (80007a4 <fsm_multi_mode_run+0x558>)
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	3b01      	subs	r3, #1
 8000706:	4a27      	ldr	r2, [pc, #156]	; (80007a4 <fsm_multi_mode_run+0x558>)
 8000708:	6013      	str	r3, [r2, #0]
            if (newYelTime == 0)
 800070a:	4b26      	ldr	r3, [pc, #152]	; (80007a4 <fsm_multi_mode_run+0x558>)
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	2b00      	cmp	r3, #0
 8000710:	d102      	bne.n	8000718 <fsm_multi_mode_run+0x4cc>
                newYelTime = MAX_VALUE - 1;
 8000712:	4b24      	ldr	r3, [pc, #144]	; (80007a4 <fsm_multi_mode_run+0x558>)
 8000714:	2263      	movs	r2, #99	; 0x63
 8000716:	601a      	str	r2, [r3, #0]
            displayCountdown(newYelTime);
 8000718:	4b22      	ldr	r3, [pc, #136]	; (80007a4 <fsm_multi_mode_run+0x558>)
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	4618      	mov	r0, r3
 800071e:	f001 f8c9 	bl	80018b4 <displayCountdown>
 8000722:	e010      	b.n	8000746 <fsm_multi_mode_run+0x4fa>
        } else if (isButtonPressed(BUTTON_3)) {
 8000724:	2003      	movs	r0, #3
 8000726:	f000 fb13 	bl	8000d50 <isButtonPressed>
 800072a:	4603      	mov	r3, r0
 800072c:	2b00      	cmp	r3, #0
 800072e:	d00a      	beq.n	8000746 <fsm_multi_mode_run+0x4fa>
            yelTime = newYelTime;
 8000730:	4b1c      	ldr	r3, [pc, #112]	; (80007a4 <fsm_multi_mode_run+0x558>)
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	4a1a      	ldr	r2, [pc, #104]	; (80007a0 <fsm_multi_mode_run+0x554>)
 8000736:	6013      	str	r3, [r2, #0]
            redTime = grnTime + yelTime;
 8000738:	4b17      	ldr	r3, [pc, #92]	; (8000798 <fsm_multi_mode_run+0x54c>)
 800073a:	681a      	ldr	r2, [r3, #0]
 800073c:	4b18      	ldr	r3, [pc, #96]	; (80007a0 <fsm_multi_mode_run+0x554>)
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	4413      	add	r3, r2
 8000742:	4a13      	ldr	r2, [pc, #76]	; (8000790 <fsm_multi_mode_run+0x544>)
 8000744:	6013      	str	r3, [r2, #0]
        }

        if (timer1.flag == 1) {
 8000746:	4b10      	ldr	r3, [pc, #64]	; (8000788 <fsm_multi_mode_run+0x53c>)
 8000748:	685b      	ldr	r3, [r3, #4]
 800074a:	2b01      	cmp	r3, #1
 800074c:	d116      	bne.n	800077c <fsm_multi_mode_run+0x530>
            setTimer(&timer1,LED_BLINK);
 800074e:	2164      	movs	r1, #100	; 0x64
 8000750:	480d      	ldr	r0, [pc, #52]	; (8000788 <fsm_multi_mode_run+0x53c>)
 8000752:	f000 fde9 	bl	8001328 <setTimer>
            trafficLightBlinkYel(TRAFFIC_LIGHT_1);
 8000756:	2000      	movs	r0, #0
 8000758:	f001 f814 	bl	8001784 <trafficLightBlinkYel>
            trafficLightBlinkYel(TRAFFIC_LIGHT_2);
 800075c:	2001      	movs	r0, #1
 800075e:	f001 f811 	bl	8001784 <trafficLightBlinkYel>
        }
        break;
 8000762:	e00b      	b.n	800077c <fsm_multi_mode_run+0x530>

    default:
        break;
 8000764:	bf00      	nop
 8000766:	e00a      	b.n	800077e <fsm_multi_mode_run+0x532>
        break;
 8000768:	bf00      	nop
 800076a:	e008      	b.n	800077e <fsm_multi_mode_run+0x532>
        break;
 800076c:	bf00      	nop
 800076e:	e006      	b.n	800077e <fsm_multi_mode_run+0x532>
        break;
 8000770:	bf00      	nop
 8000772:	e004      	b.n	800077e <fsm_multi_mode_run+0x532>
        break;
 8000774:	bf00      	nop
 8000776:	e002      	b.n	800077e <fsm_multi_mode_run+0x532>
        break;
 8000778:	bf00      	nop
 800077a:	e000      	b.n	800077e <fsm_multi_mode_run+0x532>
        break;
 800077c:	bf00      	nop
    }
 800077e:	bf00      	nop
 8000780:	bd80      	pop	{r7, pc}
 8000782:	bf00      	nop
 8000784:	200002d0 	.word	0x200002d0
 8000788:	20000708 	.word	0x20000708
 800078c:	200003c4 	.word	0x200003c4
 8000790:	200002c4 	.word	0x200002c4
 8000794:	200003c0 	.word	0x200003c0
 8000798:	200002cc 	.word	0x200002cc
 800079c:	200003b4 	.word	0x200003b4
 80007a0:	200002c8 	.word	0x200002c8
 80007a4:	200003b8 	.word	0x200003b8

080007a8 <fsm_for_pedestrian>:

#include "fsm_for_pedestrian.h"

int timeOut;

void fsm_for_pedestrian(void) {
 80007a8:	b580      	push	{r7, lr}
 80007aa:	af00      	add	r7, sp, #0
	switch(pedestrianStatus) {
 80007ac:	4b8c      	ldr	r3, [pc, #560]	; (80009e0 <fsm_for_pedestrian+0x238>)
 80007ae:	781b      	ldrb	r3, [r3, #0]
 80007b0:	2b02      	cmp	r3, #2
 80007b2:	f000 80ab 	beq.w	800090c <fsm_for_pedestrian+0x164>
 80007b6:	2b02      	cmp	r3, #2
 80007b8:	f300 8110 	bgt.w	80009dc <fsm_for_pedestrian+0x234>
 80007bc:	2b00      	cmp	r3, #0
 80007be:	d002      	beq.n	80007c6 <fsm_for_pedestrian+0x1e>
 80007c0:	2b01      	cmp	r3, #1
 80007c2:	d040      	beq.n	8000846 <fsm_for_pedestrian+0x9e>
			}
		}

		break;
	}
}
 80007c4:	e10a      	b.n	80009dc <fsm_for_pedestrian+0x234>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 80007c6:	2000      	movs	r0, #0
 80007c8:	f000 fac2 	bl	8000d50 <isButtonPressed>
 80007cc:	4603      	mov	r3, r0
 80007ce:	2b00      	cmp	r3, #0
 80007d0:	f000 80ff 	beq.w	80009d2 <fsm_for_pedestrian+0x22a>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 80007d4:	4b83      	ldr	r3, [pc, #524]	; (80009e4 <fsm_for_pedestrian+0x23c>)
 80007d6:	681a      	ldr	r2, [r3, #0]
 80007d8:	4b83      	ldr	r3, [pc, #524]	; (80009e8 <fsm_for_pedestrian+0x240>)
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	441a      	add	r2, r3
 80007de:	4b83      	ldr	r3, [pc, #524]	; (80009ec <fsm_for_pedestrian+0x244>)
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	4413      	add	r3, r2
 80007e4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80007e8:	fb02 f303 	mul.w	r3, r2, r3
 80007ec:	4a80      	ldr	r2, [pc, #512]	; (80009f0 <fsm_for_pedestrian+0x248>)
 80007ee:	6013      	str	r3, [r2, #0]
			setTimer(&timer2, timeOut);
 80007f0:	4b7f      	ldr	r3, [pc, #508]	; (80009f0 <fsm_for_pedestrian+0x248>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	4619      	mov	r1, r3
 80007f6:	487f      	ldr	r0, [pc, #508]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 80007f8:	f000 fd96 	bl	8001328 <setTimer>
			setTimer(&timer3, TIMER_INIT);
 80007fc:	210a      	movs	r1, #10
 80007fe:	487e      	ldr	r0, [pc, #504]	; (80009f8 <fsm_for_pedestrian+0x250>)
 8000800:	f000 fd92 	bl	8001328 <setTimer>
			if(sysStatus == RED__GRN || sysStatus == RED__YEL) {
 8000804:	4b7d      	ldr	r3, [pc, #500]	; (80009fc <fsm_for_pedestrian+0x254>)
 8000806:	781b      	ldrb	r3, [r3, #0]
 8000808:	2b01      	cmp	r3, #1
 800080a:	d003      	beq.n	8000814 <fsm_for_pedestrian+0x6c>
 800080c:	4b7b      	ldr	r3, [pc, #492]	; (80009fc <fsm_for_pedestrian+0x254>)
 800080e:	781b      	ldrb	r3, [r3, #0]
 8000810:	2b02      	cmp	r3, #2
 8000812:	d107      	bne.n	8000824 <fsm_for_pedestrian+0x7c>
				pedestrianStatus = GRN;
 8000814:	4b72      	ldr	r3, [pc, #456]	; (80009e0 <fsm_for_pedestrian+0x238>)
 8000816:	2201      	movs	r2, #1
 8000818:	701a      	strb	r2, [r3, #0]
				pedestrianLightGrn();
 800081a:	f000 fba9 	bl	8000f70 <pedestrianLightGrn>
				grnBuzzer();
 800081e:	f7ff fc95 	bl	800014c <grnBuzzer>
		break;
 8000822:	e0d6      	b.n	80009d2 <fsm_for_pedestrian+0x22a>
			else if(sysStatus == GRN__RED || sysStatus == YEL__RED) {
 8000824:	4b75      	ldr	r3, [pc, #468]	; (80009fc <fsm_for_pedestrian+0x254>)
 8000826:	781b      	ldrb	r3, [r3, #0]
 8000828:	2b03      	cmp	r3, #3
 800082a:	d004      	beq.n	8000836 <fsm_for_pedestrian+0x8e>
 800082c:	4b73      	ldr	r3, [pc, #460]	; (80009fc <fsm_for_pedestrian+0x254>)
 800082e:	781b      	ldrb	r3, [r3, #0]
 8000830:	2b04      	cmp	r3, #4
 8000832:	f040 80ce 	bne.w	80009d2 <fsm_for_pedestrian+0x22a>
				pedestrianStatus = RED;
 8000836:	4b6a      	ldr	r3, [pc, #424]	; (80009e0 <fsm_for_pedestrian+0x238>)
 8000838:	2202      	movs	r2, #2
 800083a:	701a      	strb	r2, [r3, #0]
				pedestrianLightRed();
 800083c:	f000 fbb0 	bl	8000fa0 <pedestrianLightRed>
				redBuzzer();
 8000840:	f7ff fcbe 	bl	80001c0 <redBuzzer>
		break;
 8000844:	e0c5      	b.n	80009d2 <fsm_for_pedestrian+0x22a>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 8000846:	2000      	movs	r0, #0
 8000848:	f000 fa82 	bl	8000d50 <isButtonPressed>
 800084c:	4603      	mov	r3, r0
 800084e:	2b00      	cmp	r3, #0
 8000850:	d014      	beq.n	800087c <fsm_for_pedestrian+0xd4>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 8000852:	4b64      	ldr	r3, [pc, #400]	; (80009e4 <fsm_for_pedestrian+0x23c>)
 8000854:	681a      	ldr	r2, [r3, #0]
 8000856:	4b64      	ldr	r3, [pc, #400]	; (80009e8 <fsm_for_pedestrian+0x240>)
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	441a      	add	r2, r3
 800085c:	4b63      	ldr	r3, [pc, #396]	; (80009ec <fsm_for_pedestrian+0x244>)
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	4413      	add	r3, r2
 8000862:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000866:	fb02 f303 	mul.w	r3, r2, r3
 800086a:	4a61      	ldr	r2, [pc, #388]	; (80009f0 <fsm_for_pedestrian+0x248>)
 800086c:	6013      	str	r3, [r2, #0]
			setTimer(&timer2, timeOut);
 800086e:	4b60      	ldr	r3, [pc, #384]	; (80009f0 <fsm_for_pedestrian+0x248>)
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	4619      	mov	r1, r3
 8000874:	485f      	ldr	r0, [pc, #380]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 8000876:	f000 fd57 	bl	8001328 <setTimer>
		break;
 800087a:	e0ac      	b.n	80009d6 <fsm_for_pedestrian+0x22e>
		else if(sysStatus == SET_GRN || sysStatus == SET_YEL) {
 800087c:	4b5f      	ldr	r3, [pc, #380]	; (80009fc <fsm_for_pedestrian+0x254>)
 800087e:	781b      	ldrb	r3, [r3, #0]
 8000880:	2b06      	cmp	r3, #6
 8000882:	d003      	beq.n	800088c <fsm_for_pedestrian+0xe4>
 8000884:	4b5d      	ldr	r3, [pc, #372]	; (80009fc <fsm_for_pedestrian+0x254>)
 8000886:	781b      	ldrb	r3, [r3, #0]
 8000888:	2b05      	cmp	r3, #5
 800088a:	d10b      	bne.n	80008a4 <fsm_for_pedestrian+0xfc>
			setTimer(&timer2, 0);
 800088c:	2100      	movs	r1, #0
 800088e:	4859      	ldr	r0, [pc, #356]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 8000890:	f000 fd4a 	bl	8001328 <setTimer>
			pedestrianStatus = WAIT;
 8000894:	4b52      	ldr	r3, [pc, #328]	; (80009e0 <fsm_for_pedestrian+0x238>)
 8000896:	2200      	movs	r2, #0
 8000898:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 800089a:	f000 fb99 	bl	8000fd0 <pedestrianLightOff>
			stopBuzzer();
 800089e:	f7ff fcc1 	bl	8000224 <stopBuzzer>
		break;
 80008a2:	e098      	b.n	80009d6 <fsm_for_pedestrian+0x22e>
		else if(timer2.flag == 1) {
 80008a4:	4b53      	ldr	r3, [pc, #332]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 80008a6:	685b      	ldr	r3, [r3, #4]
 80008a8:	2b01      	cmp	r3, #1
 80008aa:	d10b      	bne.n	80008c4 <fsm_for_pedestrian+0x11c>
			setTimer(&timer2, 0);
 80008ac:	2100      	movs	r1, #0
 80008ae:	4851      	ldr	r0, [pc, #324]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 80008b0:	f000 fd3a 	bl	8001328 <setTimer>
			pedestrianStatus = WAIT;
 80008b4:	4b4a      	ldr	r3, [pc, #296]	; (80009e0 <fsm_for_pedestrian+0x238>)
 80008b6:	2200      	movs	r2, #0
 80008b8:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 80008ba:	f000 fb89 	bl	8000fd0 <pedestrianLightOff>
			stopBuzzer();
 80008be:	f7ff fcb1 	bl	8000224 <stopBuzzer>
		break;
 80008c2:	e088      	b.n	80009d6 <fsm_for_pedestrian+0x22e>
		else if(sysStatus == GRN__RED) {
 80008c4:	4b4d      	ldr	r3, [pc, #308]	; (80009fc <fsm_for_pedestrian+0x254>)
 80008c6:	781b      	ldrb	r3, [r3, #0]
 80008c8:	2b03      	cmp	r3, #3
 80008ca:	d107      	bne.n	80008dc <fsm_for_pedestrian+0x134>
			pedestrianStatus = RED;
 80008cc:	4b44      	ldr	r3, [pc, #272]	; (80009e0 <fsm_for_pedestrian+0x238>)
 80008ce:	2202      	movs	r2, #2
 80008d0:	701a      	strb	r2, [r3, #0]
			pedestrianLightRed();
 80008d2:	f000 fb65 	bl	8000fa0 <pedestrianLightRed>
			redBuzzer();
 80008d6:	f7ff fc73 	bl	80001c0 <redBuzzer>
		break;
 80008da:	e07c      	b.n	80009d6 <fsm_for_pedestrian+0x22e>
		else if(timer3.flag == 1) {
 80008dc:	4b46      	ldr	r3, [pc, #280]	; (80009f8 <fsm_for_pedestrian+0x250>)
 80008de:	685b      	ldr	r3, [r3, #4]
 80008e0:	2b01      	cmp	r3, #1
 80008e2:	d178      	bne.n	80009d6 <fsm_for_pedestrian+0x22e>
			if(sysStatus == RED__YEL) {
 80008e4:	4b45      	ldr	r3, [pc, #276]	; (80009fc <fsm_for_pedestrian+0x254>)
 80008e6:	781b      	ldrb	r3, [r3, #0]
 80008e8:	2b02      	cmp	r3, #2
 80008ea:	d108      	bne.n	80008fe <fsm_for_pedestrian+0x156>
				setTimer(&timer3, LED_BLINK);
 80008ec:	2164      	movs	r1, #100	; 0x64
 80008ee:	4842      	ldr	r0, [pc, #264]	; (80009f8 <fsm_for_pedestrian+0x250>)
 80008f0:	f000 fd1a 	bl	8001328 <setTimer>
				pedestrianLightBlinkGrn();
 80008f4:	f000 fb0c 	bl	8000f10 <pedestrianLightBlinkGrn>
				grnBuzzer();
 80008f8:	f7ff fc28 	bl	800014c <grnBuzzer>
		break;
 80008fc:	e06b      	b.n	80009d6 <fsm_for_pedestrian+0x22e>
				setTimer(&timer3, 200);
 80008fe:	21c8      	movs	r1, #200	; 0xc8
 8000900:	483d      	ldr	r0, [pc, #244]	; (80009f8 <fsm_for_pedestrian+0x250>)
 8000902:	f000 fd11 	bl	8001328 <setTimer>
				grnBuzzer();
 8000906:	f7ff fc21 	bl	800014c <grnBuzzer>
		break;
 800090a:	e064      	b.n	80009d6 <fsm_for_pedestrian+0x22e>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 800090c:	2000      	movs	r0, #0
 800090e:	f000 fa1f 	bl	8000d50 <isButtonPressed>
 8000912:	4603      	mov	r3, r0
 8000914:	2b00      	cmp	r3, #0
 8000916:	d014      	beq.n	8000942 <fsm_for_pedestrian+0x19a>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 8000918:	4b32      	ldr	r3, [pc, #200]	; (80009e4 <fsm_for_pedestrian+0x23c>)
 800091a:	681a      	ldr	r2, [r3, #0]
 800091c:	4b32      	ldr	r3, [pc, #200]	; (80009e8 <fsm_for_pedestrian+0x240>)
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	441a      	add	r2, r3
 8000922:	4b32      	ldr	r3, [pc, #200]	; (80009ec <fsm_for_pedestrian+0x244>)
 8000924:	681b      	ldr	r3, [r3, #0]
 8000926:	4413      	add	r3, r2
 8000928:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800092c:	fb02 f303 	mul.w	r3, r2, r3
 8000930:	4a2f      	ldr	r2, [pc, #188]	; (80009f0 <fsm_for_pedestrian+0x248>)
 8000932:	6013      	str	r3, [r2, #0]
			setTimer(&timer2, timeOut);
 8000934:	4b2e      	ldr	r3, [pc, #184]	; (80009f0 <fsm_for_pedestrian+0x248>)
 8000936:	681b      	ldr	r3, [r3, #0]
 8000938:	4619      	mov	r1, r3
 800093a:	482e      	ldr	r0, [pc, #184]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 800093c:	f000 fcf4 	bl	8001328 <setTimer>
		break;
 8000940:	e04b      	b.n	80009da <fsm_for_pedestrian+0x232>
		else if(sysStatus == SET_GRN || sysStatus == SET_YEL) {
 8000942:	4b2e      	ldr	r3, [pc, #184]	; (80009fc <fsm_for_pedestrian+0x254>)
 8000944:	781b      	ldrb	r3, [r3, #0]
 8000946:	2b06      	cmp	r3, #6
 8000948:	d003      	beq.n	8000952 <fsm_for_pedestrian+0x1aa>
 800094a:	4b2c      	ldr	r3, [pc, #176]	; (80009fc <fsm_for_pedestrian+0x254>)
 800094c:	781b      	ldrb	r3, [r3, #0]
 800094e:	2b05      	cmp	r3, #5
 8000950:	d10b      	bne.n	800096a <fsm_for_pedestrian+0x1c2>
			setTimer(&timer2, 0);
 8000952:	2100      	movs	r1, #0
 8000954:	4827      	ldr	r0, [pc, #156]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 8000956:	f000 fce7 	bl	8001328 <setTimer>
			pedestrianStatus = WAIT;
 800095a:	4b21      	ldr	r3, [pc, #132]	; (80009e0 <fsm_for_pedestrian+0x238>)
 800095c:	2200      	movs	r2, #0
 800095e:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000960:	f000 fb36 	bl	8000fd0 <pedestrianLightOff>
			stopBuzzer();
 8000964:	f7ff fc5e 	bl	8000224 <stopBuzzer>
		break;
 8000968:	e037      	b.n	80009da <fsm_for_pedestrian+0x232>
		else if(timer2.flag == 1) {
 800096a:	4b22      	ldr	r3, [pc, #136]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 800096c:	685b      	ldr	r3, [r3, #4]
 800096e:	2b01      	cmp	r3, #1
 8000970:	d10b      	bne.n	800098a <fsm_for_pedestrian+0x1e2>
			setTimer(&timer2, 0);
 8000972:	2100      	movs	r1, #0
 8000974:	481f      	ldr	r0, [pc, #124]	; (80009f4 <fsm_for_pedestrian+0x24c>)
 8000976:	f000 fcd7 	bl	8001328 <setTimer>
			pedestrianStatus = WAIT;
 800097a:	4b19      	ldr	r3, [pc, #100]	; (80009e0 <fsm_for_pedestrian+0x238>)
 800097c:	2200      	movs	r2, #0
 800097e:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000980:	f000 fb26 	bl	8000fd0 <pedestrianLightOff>
			stopBuzzer();
 8000984:	f7ff fc4e 	bl	8000224 <stopBuzzer>
		break;
 8000988:	e027      	b.n	80009da <fsm_for_pedestrian+0x232>
		else if(sysStatus == RED__GRN) {
 800098a:	4b1c      	ldr	r3, [pc, #112]	; (80009fc <fsm_for_pedestrian+0x254>)
 800098c:	781b      	ldrb	r3, [r3, #0]
 800098e:	2b01      	cmp	r3, #1
 8000990:	d107      	bne.n	80009a2 <fsm_for_pedestrian+0x1fa>
			pedestrianStatus = GRN;
 8000992:	4b13      	ldr	r3, [pc, #76]	; (80009e0 <fsm_for_pedestrian+0x238>)
 8000994:	2201      	movs	r2, #1
 8000996:	701a      	strb	r2, [r3, #0]
			pedestrianLightGrn();
 8000998:	f000 faea 	bl	8000f70 <pedestrianLightGrn>
			grnBuzzer();
 800099c:	f7ff fbd6 	bl	800014c <grnBuzzer>
		break;
 80009a0:	e01b      	b.n	80009da <fsm_for_pedestrian+0x232>
		else if(timer3.flag == 1) {
 80009a2:	4b15      	ldr	r3, [pc, #84]	; (80009f8 <fsm_for_pedestrian+0x250>)
 80009a4:	685b      	ldr	r3, [r3, #4]
 80009a6:	2b01      	cmp	r3, #1
 80009a8:	d117      	bne.n	80009da <fsm_for_pedestrian+0x232>
			if(sysStatus == YEL__RED) {
 80009aa:	4b14      	ldr	r3, [pc, #80]	; (80009fc <fsm_for_pedestrian+0x254>)
 80009ac:	781b      	ldrb	r3, [r3, #0]
 80009ae:	2b04      	cmp	r3, #4
 80009b0:	d108      	bne.n	80009c4 <fsm_for_pedestrian+0x21c>
				setTimer(&timer3, LED_BLINK);
 80009b2:	2164      	movs	r1, #100	; 0x64
 80009b4:	4810      	ldr	r0, [pc, #64]	; (80009f8 <fsm_for_pedestrian+0x250>)
 80009b6:	f000 fcb7 	bl	8001328 <setTimer>
				pedestrianLightBlinkRed();
 80009ba:	f000 fac1 	bl	8000f40 <pedestrianLightBlinkRed>
				redBuzzer();
 80009be:	f7ff fbff 	bl	80001c0 <redBuzzer>
		break;
 80009c2:	e00a      	b.n	80009da <fsm_for_pedestrian+0x232>
				setTimer(&timer3, 200);
 80009c4:	21c8      	movs	r1, #200	; 0xc8
 80009c6:	480c      	ldr	r0, [pc, #48]	; (80009f8 <fsm_for_pedestrian+0x250>)
 80009c8:	f000 fcae 	bl	8001328 <setTimer>
				redBuzzer();
 80009cc:	f7ff fbf8 	bl	80001c0 <redBuzzer>
		break;
 80009d0:	e003      	b.n	80009da <fsm_for_pedestrian+0x232>
		break;
 80009d2:	bf00      	nop
 80009d4:	e002      	b.n	80009dc <fsm_for_pedestrian+0x234>
		break;
 80009d6:	bf00      	nop
 80009d8:	e000      	b.n	80009dc <fsm_for_pedestrian+0x234>
		break;
 80009da:	bf00      	nop
}
 80009dc:	bf00      	nop
 80009de:	bd80      	pop	{r7, pc}
 80009e0:	200003c1 	.word	0x200003c1
 80009e4:	200002c4 	.word	0x200002c4
 80009e8:	200002c8 	.word	0x200002c8
 80009ec:	200002cc 	.word	0x200002cc
 80009f0:	200003bc 	.word	0x200003bc
 80009f4:	20000710 	.word	0x20000710
 80009f8:	20000718 	.word	0x20000718
 80009fc:	200003c0 	.word	0x200003c0

08000a00 <MX_GPIO_Init>:
 8000a00:	b580      	push	{r7, lr}
 8000a02:	b088      	sub	sp, #32
 8000a04:	af00      	add	r7, sp, #0
 8000a06:	f107 0310 	add.w	r3, r7, #16
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	601a      	str	r2, [r3, #0]
 8000a0e:	605a      	str	r2, [r3, #4]
 8000a10:	609a      	str	r2, [r3, #8]
 8000a12:	60da      	str	r2, [r3, #12]
 8000a14:	4b45      	ldr	r3, [pc, #276]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a16:	699b      	ldr	r3, [r3, #24]
 8000a18:	4a44      	ldr	r2, [pc, #272]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a1a:	f043 0310 	orr.w	r3, r3, #16
 8000a1e:	6193      	str	r3, [r2, #24]
 8000a20:	4b42      	ldr	r3, [pc, #264]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a22:	699b      	ldr	r3, [r3, #24]
 8000a24:	f003 0310 	and.w	r3, r3, #16
 8000a28:	60fb      	str	r3, [r7, #12]
 8000a2a:	68fb      	ldr	r3, [r7, #12]
 8000a2c:	4b3f      	ldr	r3, [pc, #252]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a2e:	699b      	ldr	r3, [r3, #24]
 8000a30:	4a3e      	ldr	r2, [pc, #248]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a32:	f043 0320 	orr.w	r3, r3, #32
 8000a36:	6193      	str	r3, [r2, #24]
 8000a38:	4b3c      	ldr	r3, [pc, #240]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a3a:	699b      	ldr	r3, [r3, #24]
 8000a3c:	f003 0320 	and.w	r3, r3, #32
 8000a40:	60bb      	str	r3, [r7, #8]
 8000a42:	68bb      	ldr	r3, [r7, #8]
 8000a44:	4b39      	ldr	r3, [pc, #228]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a46:	699b      	ldr	r3, [r3, #24]
 8000a48:	4a38      	ldr	r2, [pc, #224]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a4a:	f043 0304 	orr.w	r3, r3, #4
 8000a4e:	6193      	str	r3, [r2, #24]
 8000a50:	4b36      	ldr	r3, [pc, #216]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a52:	699b      	ldr	r3, [r3, #24]
 8000a54:	f003 0304 	and.w	r3, r3, #4
 8000a58:	607b      	str	r3, [r7, #4]
 8000a5a:	687b      	ldr	r3, [r7, #4]
 8000a5c:	4b33      	ldr	r3, [pc, #204]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a5e:	699b      	ldr	r3, [r3, #24]
 8000a60:	4a32      	ldr	r2, [pc, #200]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a62:	f043 0308 	orr.w	r3, r3, #8
 8000a66:	6193      	str	r3, [r2, #24]
 8000a68:	4b30      	ldr	r3, [pc, #192]	; (8000b2c <MX_GPIO_Init+0x12c>)
 8000a6a:	699b      	ldr	r3, [r3, #24]
 8000a6c:	f003 0308 	and.w	r3, r3, #8
 8000a70:	603b      	str	r3, [r7, #0]
 8000a72:	683b      	ldr	r3, [r7, #0]
 8000a74:	2200      	movs	r2, #0
 8000a76:	f44f 61a4 	mov.w	r1, #1312	; 0x520
 8000a7a:	482d      	ldr	r0, [pc, #180]	; (8000b30 <MX_GPIO_Init+0x130>)
 8000a7c:	f001 facf 	bl	800201e <HAL_GPIO_WritePin>
 8000a80:	2200      	movs	r2, #0
 8000a82:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000a86:	482b      	ldr	r0, [pc, #172]	; (8000b34 <MX_GPIO_Init+0x134>)
 8000a88:	f001 fac9 	bl	800201e <HAL_GPIO_WritePin>
 8000a8c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000a90:	613b      	str	r3, [r7, #16]
 8000a92:	4b29      	ldr	r3, [pc, #164]	; (8000b38 <MX_GPIO_Init+0x138>)
 8000a94:	617b      	str	r3, [r7, #20]
 8000a96:	2300      	movs	r3, #0
 8000a98:	61bb      	str	r3, [r7, #24]
 8000a9a:	f107 0310 	add.w	r3, r7, #16
 8000a9e:	4619      	mov	r1, r3
 8000aa0:	4826      	ldr	r0, [pc, #152]	; (8000b3c <MX_GPIO_Init+0x13c>)
 8000aa2:	f001 f921 	bl	8001ce8 <HAL_GPIO_Init>
 8000aa6:	2313      	movs	r3, #19
 8000aa8:	613b      	str	r3, [r7, #16]
 8000aaa:	2300      	movs	r3, #0
 8000aac:	617b      	str	r3, [r7, #20]
 8000aae:	2300      	movs	r3, #0
 8000ab0:	61bb      	str	r3, [r7, #24]
 8000ab2:	f107 0310 	add.w	r3, r7, #16
 8000ab6:	4619      	mov	r1, r3
 8000ab8:	481d      	ldr	r0, [pc, #116]	; (8000b30 <MX_GPIO_Init+0x130>)
 8000aba:	f001 f915 	bl	8001ce8 <HAL_GPIO_Init>
 8000abe:	f44f 63a4 	mov.w	r3, #1312	; 0x520
 8000ac2:	613b      	str	r3, [r7, #16]
 8000ac4:	2301      	movs	r3, #1
 8000ac6:	617b      	str	r3, [r7, #20]
 8000ac8:	2300      	movs	r3, #0
 8000aca:	61bb      	str	r3, [r7, #24]
 8000acc:	2302      	movs	r3, #2
 8000ace:	61fb      	str	r3, [r7, #28]
 8000ad0:	f107 0310 	add.w	r3, r7, #16
 8000ad4:	4619      	mov	r1, r3
 8000ad6:	4816      	ldr	r0, [pc, #88]	; (8000b30 <MX_GPIO_Init+0x130>)
 8000ad8:	f001 f906 	bl	8001ce8 <HAL_GPIO_Init>
 8000adc:	2301      	movs	r3, #1
 8000ade:	613b      	str	r3, [r7, #16]
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	617b      	str	r3, [r7, #20]
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	61bb      	str	r3, [r7, #24]
 8000ae8:	f107 0310 	add.w	r3, r7, #16
 8000aec:	4619      	mov	r1, r3
 8000aee:	4811      	ldr	r0, [pc, #68]	; (8000b34 <MX_GPIO_Init+0x134>)
 8000af0:	f001 f8fa 	bl	8001ce8 <HAL_GPIO_Init>
 8000af4:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000af8:	613b      	str	r3, [r7, #16]
 8000afa:	2301      	movs	r3, #1
 8000afc:	617b      	str	r3, [r7, #20]
 8000afe:	2300      	movs	r3, #0
 8000b00:	61bb      	str	r3, [r7, #24]
 8000b02:	2302      	movs	r3, #2
 8000b04:	61fb      	str	r3, [r7, #28]
 8000b06:	f107 0310 	add.w	r3, r7, #16
 8000b0a:	4619      	mov	r1, r3
 8000b0c:	4809      	ldr	r0, [pc, #36]	; (8000b34 <MX_GPIO_Init+0x134>)
 8000b0e:	f001 f8eb 	bl	8001ce8 <HAL_GPIO_Init>
 8000b12:	2200      	movs	r2, #0
 8000b14:	2100      	movs	r1, #0
 8000b16:	2028      	movs	r0, #40	; 0x28
 8000b18:	f001 f8af 	bl	8001c7a <HAL_NVIC_SetPriority>
 8000b1c:	2028      	movs	r0, #40	; 0x28
 8000b1e:	f001 f8c8 	bl	8001cb2 <HAL_NVIC_EnableIRQ>
 8000b22:	bf00      	nop
 8000b24:	3720      	adds	r7, #32
 8000b26:	46bd      	mov	sp, r7
 8000b28:	bd80      	pop	{r7, pc}
 8000b2a:	bf00      	nop
 8000b2c:	40021000 	.word	0x40021000
 8000b30:	40010800 	.word	0x40010800
 8000b34:	40010c00 	.word	0x40010c00
 8000b38:	10110000 	.word	0x10110000
 8000b3c:	40011000 	.word	0x40011000

08000b40 <buttonRead>:
//we define counter for automatically increasing the value
//after the button is pressed more than 1 second.
static uint16_t counterForButtonHold[NO_OF_BUTTONS] = {0, 0, 0, 0};
static uint16_t counterForButtonDoublePressed[NO_OF_BUTTONS] = {0, 0, 0, 0};

void buttonRead(void){
 8000b40:	b580      	push	{r7, lr}
 8000b42:	b082      	sub	sp, #8
 8000b44:	af00      	add	r7, sp, #0
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000b46:	2300      	movs	r3, #0
 8000b48:	607b      	str	r3, [r7, #4]
 8000b4a:	e0e0      	b.n	8000d0e <buttonRead+0x1ce>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000b4c:	4a74      	ldr	r2, [pc, #464]	; (8000d20 <buttonRead+0x1e0>)
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	4413      	add	r3, r2
 8000b52:	7819      	ldrb	r1, [r3, #0]
 8000b54:	4a73      	ldr	r2, [pc, #460]	; (8000d24 <buttonRead+0x1e4>)
 8000b56:	687b      	ldr	r3, [r7, #4]
 8000b58:	4413      	add	r3, r2
 8000b5a:	460a      	mov	r2, r1
 8000b5c:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 8000b5e:	4a72      	ldr	r2, [pc, #456]	; (8000d28 <buttonRead+0x1e8>)
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	4413      	add	r3, r2
 8000b64:	7819      	ldrb	r1, [r3, #0]
 8000b66:	4a6e      	ldr	r2, [pc, #440]	; (8000d20 <buttonRead+0x1e0>)
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	4413      	add	r3, r2
 8000b6c:	460a      	mov	r2, r1
 8000b6e:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(buttonPort[i], buttonPin[i]);
 8000b70:	4a6e      	ldr	r2, [pc, #440]	; (8000d2c <buttonRead+0x1ec>)
 8000b72:	687b      	ldr	r3, [r7, #4]
 8000b74:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000b78:	496d      	ldr	r1, [pc, #436]	; (8000d30 <buttonRead+0x1f0>)
 8000b7a:	687b      	ldr	r3, [r7, #4]
 8000b7c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000b80:	4619      	mov	r1, r3
 8000b82:	4610      	mov	r0, r2
 8000b84:	f001 fa34 	bl	8001ff0 <HAL_GPIO_ReadPin>
 8000b88:	4603      	mov	r3, r0
 8000b8a:	4619      	mov	r1, r3
 8000b8c:	4a66      	ldr	r2, [pc, #408]	; (8000d28 <buttonRead+0x1e8>)
 8000b8e:	687b      	ldr	r3, [r7, #4]
 8000b90:	4413      	add	r3, r2
 8000b92:	460a      	mov	r2, r1
 8000b94:	701a      	strb	r2, [r3, #0]
		if((debounceButtonBuffer2[i] == debounceButtonBuffer1[i]) && (debounceButtonBuffer1[i] == debounceButtonBuffer0[i])) {
 8000b96:	4a63      	ldr	r2, [pc, #396]	; (8000d24 <buttonRead+0x1e4>)
 8000b98:	687b      	ldr	r3, [r7, #4]
 8000b9a:	4413      	add	r3, r2
 8000b9c:	781a      	ldrb	r2, [r3, #0]
 8000b9e:	4960      	ldr	r1, [pc, #384]	; (8000d20 <buttonRead+0x1e0>)
 8000ba0:	687b      	ldr	r3, [r7, #4]
 8000ba2:	440b      	add	r3, r1
 8000ba4:	781b      	ldrb	r3, [r3, #0]
 8000ba6:	429a      	cmp	r2, r3
 8000ba8:	f040 80ae 	bne.w	8000d08 <buttonRead+0x1c8>
 8000bac:	4a5c      	ldr	r2, [pc, #368]	; (8000d20 <buttonRead+0x1e0>)
 8000bae:	687b      	ldr	r3, [r7, #4]
 8000bb0:	4413      	add	r3, r2
 8000bb2:	781a      	ldrb	r2, [r3, #0]
 8000bb4:	495c      	ldr	r1, [pc, #368]	; (8000d28 <buttonRead+0x1e8>)
 8000bb6:	687b      	ldr	r3, [r7, #4]
 8000bb8:	440b      	add	r3, r1
 8000bba:	781b      	ldrb	r3, [r3, #0]
 8000bbc:	429a      	cmp	r2, r3
 8000bbe:	f040 80a3 	bne.w	8000d08 <buttonRead+0x1c8>
			if(buttonBuffer[i] != debounceButtonBuffer0[i]) {
 8000bc2:	4a5c      	ldr	r2, [pc, #368]	; (8000d34 <buttonRead+0x1f4>)
 8000bc4:	687b      	ldr	r3, [r7, #4]
 8000bc6:	4413      	add	r3, r2
 8000bc8:	781a      	ldrb	r2, [r3, #0]
 8000bca:	4957      	ldr	r1, [pc, #348]	; (8000d28 <buttonRead+0x1e8>)
 8000bcc:	687b      	ldr	r3, [r7, #4]
 8000bce:	440b      	add	r3, r1
 8000bd0:	781b      	ldrb	r3, [r3, #0]
 8000bd2:	429a      	cmp	r2, r3
 8000bd4:	d05c      	beq.n	8000c90 <buttonRead+0x150>
				buttonBuffer[i] = debounceButtonBuffer0[i];
 8000bd6:	4a54      	ldr	r2, [pc, #336]	; (8000d28 <buttonRead+0x1e8>)
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	4413      	add	r3, r2
 8000bdc:	7819      	ldrb	r1, [r3, #0]
 8000bde:	4a55      	ldr	r2, [pc, #340]	; (8000d34 <buttonRead+0x1f4>)
 8000be0:	687b      	ldr	r3, [r7, #4]
 8000be2:	4413      	add	r3, r2
 8000be4:	460a      	mov	r2, r1
 8000be6:	701a      	strb	r2, [r3, #0]
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000be8:	4a52      	ldr	r2, [pc, #328]	; (8000d34 <buttonRead+0x1f4>)
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	4413      	add	r3, r2
 8000bee:	781b      	ldrb	r3, [r3, #0]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d13d      	bne.n	8000c70 <buttonRead+0x130>
					counterForButtonHold[i] = DURATION_FOR_BUTTON_HOLD;
 8000bf4:	4a50      	ldr	r2, [pc, #320]	; (8000d38 <buttonRead+0x1f8>)
 8000bf6:	687b      	ldr	r3, [r7, #4]
 8000bf8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000bfc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

					if(counterForButtonDoublePressed[i] > 0 && counterForButtonDoublePressed[i] < WAIT_FOR_DOUBLE_PRESS / SYSTEM_DELAY) {
 8000c00:	4a4e      	ldr	r2, [pc, #312]	; (8000d3c <buttonRead+0x1fc>)
 8000c02:	687b      	ldr	r3, [r7, #4]
 8000c04:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d010      	beq.n	8000c2e <buttonRead+0xee>
 8000c0c:	4a4b      	ldr	r2, [pc, #300]	; (8000d3c <buttonRead+0x1fc>)
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c14:	2b31      	cmp	r3, #49	; 0x31
 8000c16:	d80a      	bhi.n	8000c2e <buttonRead+0xee>
						flagForButtonDoublePressed[i] = 1;
 8000c18:	4a49      	ldr	r2, [pc, #292]	; (8000d40 <buttonRead+0x200>)
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	4413      	add	r3, r2
 8000c1e:	2201      	movs	r2, #1
 8000c20:	701a      	strb	r2, [r3, #0]
						counterForButtonDoublePressed[i] = 0;
 8000c22:	4a46      	ldr	r2, [pc, #280]	; (8000d3c <buttonRead+0x1fc>)
 8000c24:	687b      	ldr	r3, [r7, #4]
 8000c26:	2100      	movs	r1, #0
 8000c28:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000c2c:	e005      	b.n	8000c3a <buttonRead+0xfa>
					}
					else {
						counterForButtonDoublePressed[i] = WAIT_FOR_DOUBLE_PRESS;
 8000c2e:	4a43      	ldr	r2, [pc, #268]	; (8000d3c <buttonRead+0x1fc>)
 8000c30:	687b      	ldr	r3, [r7, #4]
 8000c32:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000c36:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
					}

					if(SYSTEM_DELAY > 0) {
						counterForButtonHold[i] /= SYSTEM_DELAY;
 8000c3a:	4a3f      	ldr	r2, [pc, #252]	; (8000d38 <buttonRead+0x1f8>)
 8000c3c:	687b      	ldr	r3, [r7, #4]
 8000c3e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c42:	4a40      	ldr	r2, [pc, #256]	; (8000d44 <buttonRead+0x204>)
 8000c44:	fba2 2303 	umull	r2, r3, r2, r3
 8000c48:	08db      	lsrs	r3, r3, #3
 8000c4a:	b299      	uxth	r1, r3
 8000c4c:	4a3a      	ldr	r2, [pc, #232]	; (8000d38 <buttonRead+0x1f8>)
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
						counterForButtonDoublePressed[i] /= SYSTEM_DELAY;
 8000c54:	4a39      	ldr	r2, [pc, #228]	; (8000d3c <buttonRead+0x1fc>)
 8000c56:	687b      	ldr	r3, [r7, #4]
 8000c58:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c5c:	4a39      	ldr	r2, [pc, #228]	; (8000d44 <buttonRead+0x204>)
 8000c5e:	fba2 2303 	umull	r2, r3, r2, r3
 8000c62:	08db      	lsrs	r3, r3, #3
 8000c64:	b299      	uxth	r1, r3
 8000c66:	4a35      	ldr	r2, [pc, #212]	; (8000d3c <buttonRead+0x1fc>)
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000c6e:	e04b      	b.n	8000d08 <buttonRead+0x1c8>
					}
				}
				else {
					flagForButtonHold[i] = 0;
 8000c70:	4a35      	ldr	r2, [pc, #212]	; (8000d48 <buttonRead+0x208>)
 8000c72:	687b      	ldr	r3, [r7, #4]
 8000c74:	4413      	add	r3, r2
 8000c76:	2200      	movs	r2, #0
 8000c78:	701a      	strb	r2, [r3, #0]
					counterForButtonDoublePressed[i]--;
 8000c7a:	4a30      	ldr	r2, [pc, #192]	; (8000d3c <buttonRead+0x1fc>)
 8000c7c:	687b      	ldr	r3, [r7, #4]
 8000c7e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c82:	3b01      	subs	r3, #1
 8000c84:	b299      	uxth	r1, r3
 8000c86:	4a2d      	ldr	r2, [pc, #180]	; (8000d3c <buttonRead+0x1fc>)
 8000c88:	687b      	ldr	r3, [r7, #4]
 8000c8a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000c8e:	e03b      	b.n	8000d08 <buttonRead+0x1c8>
				}
			}
			else {
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000c90:	4a28      	ldr	r2, [pc, #160]	; (8000d34 <buttonRead+0x1f4>)
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	4413      	add	r3, r2
 8000c96:	781b      	ldrb	r3, [r3, #0]
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d11a      	bne.n	8000cd2 <buttonRead+0x192>
					counterForButtonHold[i]--;
 8000c9c:	4a26      	ldr	r2, [pc, #152]	; (8000d38 <buttonRead+0x1f8>)
 8000c9e:	687b      	ldr	r3, [r7, #4]
 8000ca0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000ca4:	3b01      	subs	r3, #1
 8000ca6:	b299      	uxth	r1, r3
 8000ca8:	4a23      	ldr	r2, [pc, #140]	; (8000d38 <buttonRead+0x1f8>)
 8000caa:	687b      	ldr	r3, [r7, #4]
 8000cac:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
					if(counterForButtonHold[i] == 0) {
 8000cb0:	4a21      	ldr	r2, [pc, #132]	; (8000d38 <buttonRead+0x1f8>)
 8000cb2:	687b      	ldr	r3, [r7, #4]
 8000cb4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000cb8:	2b00      	cmp	r3, #0
 8000cba:	d125      	bne.n	8000d08 <buttonRead+0x1c8>
						flagForButtonHold[i] = 1;
 8000cbc:	4a22      	ldr	r2, [pc, #136]	; (8000d48 <buttonRead+0x208>)
 8000cbe:	687b      	ldr	r3, [r7, #4]
 8000cc0:	4413      	add	r3, r2
 8000cc2:	2201      	movs	r2, #1
 8000cc4:	701a      	strb	r2, [r3, #0]
						counterForButtonDoublePressed[i] = 0;
 8000cc6:	4a1d      	ldr	r2, [pc, #116]	; (8000d3c <buttonRead+0x1fc>)
 8000cc8:	687b      	ldr	r3, [r7, #4]
 8000cca:	2100      	movs	r1, #0
 8000ccc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000cd0:	e01a      	b.n	8000d08 <buttonRead+0x1c8>
					}
				}
				else {
					if(counterForButtonDoublePressed[i] > 0) {
 8000cd2:	4a1a      	ldr	r2, [pc, #104]	; (8000d3c <buttonRead+0x1fc>)
 8000cd4:	687b      	ldr	r3, [r7, #4]
 8000cd6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000cda:	2b00      	cmp	r3, #0
 8000cdc:	d014      	beq.n	8000d08 <buttonRead+0x1c8>
						counterForButtonDoublePressed[i]--;
 8000cde:	4a17      	ldr	r2, [pc, #92]	; (8000d3c <buttonRead+0x1fc>)
 8000ce0:	687b      	ldr	r3, [r7, #4]
 8000ce2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000ce6:	3b01      	subs	r3, #1
 8000ce8:	b299      	uxth	r1, r3
 8000cea:	4a14      	ldr	r2, [pc, #80]	; (8000d3c <buttonRead+0x1fc>)
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
						if(counterForButtonDoublePressed[i] == 0) {
 8000cf2:	4a12      	ldr	r2, [pc, #72]	; (8000d3c <buttonRead+0x1fc>)
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d104      	bne.n	8000d08 <buttonRead+0x1c8>
							flagForButtonPressed[i] = 1;
 8000cfe:	4a13      	ldr	r2, [pc, #76]	; (8000d4c <buttonRead+0x20c>)
 8000d00:	687b      	ldr	r3, [r7, #4]
 8000d02:	4413      	add	r3, r2
 8000d04:	2201      	movs	r2, #1
 8000d06:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000d08:	687b      	ldr	r3, [r7, #4]
 8000d0a:	3301      	adds	r3, #1
 8000d0c:	607b      	str	r3, [r7, #4]
 8000d0e:	687b      	ldr	r3, [r7, #4]
 8000d10:	2b03      	cmp	r3, #3
 8000d12:	f77f af1b 	ble.w	8000b4c <buttonRead+0xc>
					}
				}
			}
		}
	}
}
 8000d16:	bf00      	nop
 8000d18:	bf00      	nop
 8000d1a:	3708      	adds	r7, #8
 8000d1c:	46bd      	mov	sp, r7
 8000d1e:	bd80      	pop	{r7, pc}
 8000d20:	200002f4 	.word	0x200002f4
 8000d24:	200002f8 	.word	0x200002f8
 8000d28:	200002f0 	.word	0x200002f0
 8000d2c:	200002d4 	.word	0x200002d4
 8000d30:	200002e4 	.word	0x200002e4
 8000d34:	200002ec 	.word	0x200002ec
 8000d38:	200003d4 	.word	0x200003d4
 8000d3c:	200003dc 	.word	0x200003dc
 8000d40:	200003d0 	.word	0x200003d0
 8000d44:	cccccccd 	.word	0xcccccccd
 8000d48:	200003cc 	.word	0x200003cc
 8000d4c:	200003c8 	.word	0x200003c8

08000d50 <isButtonPressed>:

int isButtonPressed(int index) {
 8000d50:	b480      	push	{r7}
 8000d52:	b083      	sub	sp, #12
 8000d54:	af00      	add	r7, sp, #0
 8000d56:	6078      	str	r0, [r7, #4]
	if(index < 0 || index > NO_OF_BUTTONS) return 0;
 8000d58:	687b      	ldr	r3, [r7, #4]
 8000d5a:	2b00      	cmp	r3, #0
 8000d5c:	db02      	blt.n	8000d64 <isButtonPressed+0x14>
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	2b04      	cmp	r3, #4
 8000d62:	dd01      	ble.n	8000d68 <isButtonPressed+0x18>
 8000d64:	2300      	movs	r3, #0
 8000d66:	e00d      	b.n	8000d84 <isButtonPressed+0x34>
	if(flagForButtonPressed[index] == 1) {
 8000d68:	4a09      	ldr	r2, [pc, #36]	; (8000d90 <isButtonPressed+0x40>)
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	4413      	add	r3, r2
 8000d6e:	781b      	ldrb	r3, [r3, #0]
 8000d70:	2b01      	cmp	r3, #1
 8000d72:	d106      	bne.n	8000d82 <isButtonPressed+0x32>
		flagForButtonPressed[index] = 0;
 8000d74:	4a06      	ldr	r2, [pc, #24]	; (8000d90 <isButtonPressed+0x40>)
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	4413      	add	r3, r2
 8000d7a:	2200      	movs	r2, #0
 8000d7c:	701a      	strb	r2, [r3, #0]
		return 1;
 8000d7e:	2301      	movs	r3, #1
 8000d80:	e000      	b.n	8000d84 <isButtonPressed+0x34>
	}
	return 0;
 8000d82:	2300      	movs	r3, #0
}
 8000d84:	4618      	mov	r0, r3
 8000d86:	370c      	adds	r7, #12
 8000d88:	46bd      	mov	sp, r7
 8000d8a:	bc80      	pop	{r7}
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop
 8000d90:	200003c8 	.word	0x200003c8

08000d94 <isButtonDoublePressed>:
		return 1;
	}
	return 0;
}

int isButtonDoublePressed(int index) {
 8000d94:	b480      	push	{r7}
 8000d96:	b083      	sub	sp, #12
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	6078      	str	r0, [r7, #4]
	if(index < 0 || index > NO_OF_BUTTONS) return 0;
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	db02      	blt.n	8000da8 <isButtonDoublePressed+0x14>
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	2b04      	cmp	r3, #4
 8000da6:	dd01      	ble.n	8000dac <isButtonDoublePressed+0x18>
 8000da8:	2300      	movs	r3, #0
 8000daa:	e00d      	b.n	8000dc8 <isButtonDoublePressed+0x34>
	if(flagForButtonDoublePressed[index] == 1) {
 8000dac:	4a09      	ldr	r2, [pc, #36]	; (8000dd4 <isButtonDoublePressed+0x40>)
 8000dae:	687b      	ldr	r3, [r7, #4]
 8000db0:	4413      	add	r3, r2
 8000db2:	781b      	ldrb	r3, [r3, #0]
 8000db4:	2b01      	cmp	r3, #1
 8000db6:	d106      	bne.n	8000dc6 <isButtonDoublePressed+0x32>
		flagForButtonDoublePressed[index] = 0;
 8000db8:	4a06      	ldr	r2, [pc, #24]	; (8000dd4 <isButtonDoublePressed+0x40>)
 8000dba:	687b      	ldr	r3, [r7, #4]
 8000dbc:	4413      	add	r3, r2
 8000dbe:	2200      	movs	r2, #0
 8000dc0:	701a      	strb	r2, [r3, #0]
		return 1;
 8000dc2:	2301      	movs	r3, #1
 8000dc4:	e000      	b.n	8000dc8 <isButtonDoublePressed+0x34>
	}
	return 0;
 8000dc6:	2300      	movs	r3, #0
}
 8000dc8:	4618      	mov	r0, r3
 8000dca:	370c      	adds	r7, #12
 8000dcc:	46bd      	mov	sp, r7
 8000dce:	bc80      	pop	{r7}
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	200003d0 	.word	0x200003d0

08000dd8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ddc:	f000 fe14 	bl	8001a08 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000de0:	f000 f846 	bl	8000e70 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000de4:	f7ff fe0c 	bl	8000a00 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000de8:	f000 fd80 	bl	80018ec <MX_USART2_UART_Init>
  MX_TIM3_Init();
 8000dec:	f000 fbc4 	bl	8001578 <MX_TIM3_Init>
  MX_TIM2_Init();
 8000df0:	f000 fb76 	bl	80014e0 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000df4:	480e      	ldr	r0, [pc, #56]	; (8000e30 <main+0x58>)
 8000df6:	f001 fdcf 	bl	8002998 <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000dfa:	2100      	movs	r1, #0
 8000dfc:	480d      	ldr	r0, [pc, #52]	; (8000e34 <main+0x5c>)
 8000dfe:	f001 fe75 	bl	8002aec <HAL_TIM_PWM_Start>

  // SCH_Add_Task(&timerRun, 0, 10);
  SCH_Add_Task(&UpdateTimer, 0, 10);
 8000e02:	220a      	movs	r2, #10
 8000e04:	2100      	movs	r1, #0
 8000e06:	480c      	ldr	r0, [pc, #48]	; (8000e38 <main+0x60>)
 8000e08:	f000 f8fa 	bl	8001000 <SCH_Add_Task>
  SCH_Add_Task(&buttonRead, 10, 10);
 8000e0c:	220a      	movs	r2, #10
 8000e0e:	210a      	movs	r1, #10
 8000e10:	480a      	ldr	r0, [pc, #40]	; (8000e3c <main+0x64>)
 8000e12:	f000 f8f5 	bl	8001000 <SCH_Add_Task>
  SCH_Add_Task(&fsm_multi_mode_run, 20, 10);
 8000e16:	220a      	movs	r2, #10
 8000e18:	2114      	movs	r1, #20
 8000e1a:	4809      	ldr	r0, [pc, #36]	; (8000e40 <main+0x68>)
 8000e1c:	f000 f8f0 	bl	8001000 <SCH_Add_Task>
  SCH_Add_Task(&fsm_for_pedestrian, 30, 10);
 8000e20:	220a      	movs	r2, #10
 8000e22:	211e      	movs	r1, #30
 8000e24:	4807      	ldr	r0, [pc, #28]	; (8000e44 <main+0x6c>)
 8000e26:	f000 f8eb 	bl	8001000 <SCH_Add_Task>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	SCH_Dispatch_Tasks();
 8000e2a:	f000 fa41 	bl	80012b0 <SCH_Dispatch_Tasks>
 8000e2e:	e7fc      	b.n	8000e2a <main+0x52>
 8000e30:	20000724 	.word	0x20000724
 8000e34:	2000076c 	.word	0x2000076c
 8000e38:	08000e49 	.word	0x08000e49
 8000e3c:	08000b41 	.word	0x08000b41
 8000e40:	0800024d 	.word	0x0800024d
 8000e44:	080007a9 	.word	0x080007a9

08000e48 <UpdateTimer>:
    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

void UpdateTimer(void) {
 8000e48:	b580      	push	{r7, lr}
 8000e4a:	af00      	add	r7, sp, #0
  timerBreath(&timer1);
 8000e4c:	4805      	ldr	r0, [pc, #20]	; (8000e64 <UpdateTimer+0x1c>)
 8000e4e:	f000 fa85 	bl	800135c <timerBreath>
  timerBreath(&timer2);
 8000e52:	4805      	ldr	r0, [pc, #20]	; (8000e68 <UpdateTimer+0x20>)
 8000e54:	f000 fa82 	bl	800135c <timerBreath>
  timerBreath(&timer3);
 8000e58:	4804      	ldr	r0, [pc, #16]	; (8000e6c <UpdateTimer+0x24>)
 8000e5a:	f000 fa7f 	bl	800135c <timerBreath>
}
 8000e5e:	bf00      	nop
 8000e60:	bd80      	pop	{r7, pc}
 8000e62:	bf00      	nop
 8000e64:	20000708 	.word	0x20000708
 8000e68:	20000710 	.word	0x20000710
 8000e6c:	20000718 	.word	0x20000718

08000e70 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e70:	b580      	push	{r7, lr}
 8000e72:	b090      	sub	sp, #64	; 0x40
 8000e74:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e76:	f107 0318 	add.w	r3, r7, #24
 8000e7a:	2228      	movs	r2, #40	; 0x28
 8000e7c:	2100      	movs	r1, #0
 8000e7e:	4618      	mov	r0, r3
 8000e80:	f002 fe7a 	bl	8003b78 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e84:	1d3b      	adds	r3, r7, #4
 8000e86:	2200      	movs	r2, #0
 8000e88:	601a      	str	r2, [r3, #0]
 8000e8a:	605a      	str	r2, [r3, #4]
 8000e8c:	609a      	str	r2, [r3, #8]
 8000e8e:	60da      	str	r2, [r3, #12]
 8000e90:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000e92:	2302      	movs	r3, #2
 8000e94:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000e96:	2301      	movs	r3, #1
 8000e98:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000e9a:	2310      	movs	r3, #16
 8000e9c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000e9e:	2302      	movs	r3, #2
 8000ea0:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000ea6:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000eaa:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000eac:	f107 0318 	add.w	r3, r7, #24
 8000eb0:	4618      	mov	r0, r3
 8000eb2:	f001 f907 	bl	80020c4 <HAL_RCC_OscConfig>
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	2b00      	cmp	r3, #0
 8000eba:	d001      	beq.n	8000ec0 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000ebc:	f000 f823 	bl	8000f06 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ec0:	230f      	movs	r3, #15
 8000ec2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000ec4:	2302      	movs	r3, #2
 8000ec6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ec8:	2300      	movs	r3, #0
 8000eca:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000ecc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ed0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000ed6:	1d3b      	adds	r3, r7, #4
 8000ed8:	2102      	movs	r1, #2
 8000eda:	4618      	mov	r0, r3
 8000edc:	f001 fb74 	bl	80025c8 <HAL_RCC_ClockConfig>
 8000ee0:	4603      	mov	r3, r0
 8000ee2:	2b00      	cmp	r3, #0
 8000ee4:	d001      	beq.n	8000eea <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000ee6:	f000 f80e 	bl	8000f06 <Error_Handler>
  }
}
 8000eea:	bf00      	nop
 8000eec:	3740      	adds	r7, #64	; 0x40
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bd80      	pop	{r7, pc}

08000ef2 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
{
 8000ef2:	b580      	push	{r7, lr}
 8000ef4:	b082      	sub	sp, #8
 8000ef6:	af00      	add	r7, sp, #0
 8000ef8:	6078      	str	r0, [r7, #4]
	SCH_Update();
 8000efa:	f000 f9fd 	bl	80012f8 <SCH_Update>
}
 8000efe:	bf00      	nop
 8000f00:	3708      	adds	r7, #8
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}

08000f06 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f06:	b480      	push	{r7}
 8000f08:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f0a:	b672      	cpsid	i
}
 8000f0c:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f0e:	e7fe      	b.n	8000f0e <Error_Handler+0x8>

08000f10 <pedestrianLightBlinkGrn>:
uint16_t pedestrianLightPin[NUM_OF_PORTS] = {
		D6_Pin,
		D7_Pin
};

void pedestrianLightBlinkGrn(void) {
 8000f10:	b580      	push	{r7, lr}
 8000f12:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT]);
 8000f14:	4b08      	ldr	r3, [pc, #32]	; (8000f38 <pedestrianLightBlinkGrn+0x28>)
 8000f16:	685b      	ldr	r3, [r3, #4]
 8000f18:	4a08      	ldr	r2, [pc, #32]	; (8000f3c <pedestrianLightBlinkGrn+0x2c>)
 8000f1a:	8852      	ldrh	r2, [r2, #2]
 8000f1c:	4611      	mov	r1, r2
 8000f1e:	4618      	mov	r0, r3
 8000f20:	f001 f895 	bl	800204e <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000f24:	4b04      	ldr	r3, [pc, #16]	; (8000f38 <pedestrianLightBlinkGrn+0x28>)
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	4a04      	ldr	r2, [pc, #16]	; (8000f3c <pedestrianLightBlinkGrn+0x2c>)
 8000f2a:	8811      	ldrh	r1, [r2, #0]
 8000f2c:	2200      	movs	r2, #0
 8000f2e:	4618      	mov	r0, r3
 8000f30:	f001 f875 	bl	800201e <HAL_GPIO_WritePin>
}
 8000f34:	bf00      	nop
 8000f36:	bd80      	pop	{r7, pc}
 8000f38:	200002fc 	.word	0x200002fc
 8000f3c:	20000304 	.word	0x20000304

08000f40 <pedestrianLightBlinkRed>:

void pedestrianLightBlinkRed(void) {
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT]);
 8000f44:	4b08      	ldr	r3, [pc, #32]	; (8000f68 <pedestrianLightBlinkRed+0x28>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	4a08      	ldr	r2, [pc, #32]	; (8000f6c <pedestrianLightBlinkRed+0x2c>)
 8000f4a:	8812      	ldrh	r2, [r2, #0]
 8000f4c:	4611      	mov	r1, r2
 8000f4e:	4618      	mov	r0, r3
 8000f50:	f001 f87d 	bl	800204e <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000f54:	4b04      	ldr	r3, [pc, #16]	; (8000f68 <pedestrianLightBlinkRed+0x28>)
 8000f56:	685b      	ldr	r3, [r3, #4]
 8000f58:	4a04      	ldr	r2, [pc, #16]	; (8000f6c <pedestrianLightBlinkRed+0x2c>)
 8000f5a:	8851      	ldrh	r1, [r2, #2]
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	4618      	mov	r0, r3
 8000f60:	f001 f85d 	bl	800201e <HAL_GPIO_WritePin>
}
 8000f64:	bf00      	nop
 8000f66:	bd80      	pop	{r7, pc}
 8000f68:	200002fc 	.word	0x200002fc
 8000f6c:	20000304 	.word	0x20000304

08000f70 <pedestrianLightGrn>:

void pedestrianLightGrn(void) {
 8000f70:	b580      	push	{r7, lr}
 8000f72:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], ON);
 8000f74:	4b08      	ldr	r3, [pc, #32]	; (8000f98 <pedestrianLightGrn+0x28>)
 8000f76:	685b      	ldr	r3, [r3, #4]
 8000f78:	4a08      	ldr	r2, [pc, #32]	; (8000f9c <pedestrianLightGrn+0x2c>)
 8000f7a:	8851      	ldrh	r1, [r2, #2]
 8000f7c:	2201      	movs	r2, #1
 8000f7e:	4618      	mov	r0, r3
 8000f80:	f001 f84d 	bl	800201e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000f84:	4b04      	ldr	r3, [pc, #16]	; (8000f98 <pedestrianLightGrn+0x28>)
 8000f86:	681b      	ldr	r3, [r3, #0]
 8000f88:	4a04      	ldr	r2, [pc, #16]	; (8000f9c <pedestrianLightGrn+0x2c>)
 8000f8a:	8811      	ldrh	r1, [r2, #0]
 8000f8c:	2200      	movs	r2, #0
 8000f8e:	4618      	mov	r0, r3
 8000f90:	f001 f845 	bl	800201e <HAL_GPIO_WritePin>
}
 8000f94:	bf00      	nop
 8000f96:	bd80      	pop	{r7, pc}
 8000f98:	200002fc 	.word	0x200002fc
 8000f9c:	20000304 	.word	0x20000304

08000fa0 <pedestrianLightRed>:

void pedestrianLightRed(void) {
 8000fa0:	b580      	push	{r7, lr}
 8000fa2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], ON);
 8000fa4:	4b08      	ldr	r3, [pc, #32]	; (8000fc8 <pedestrianLightRed+0x28>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	4a08      	ldr	r2, [pc, #32]	; (8000fcc <pedestrianLightRed+0x2c>)
 8000faa:	8811      	ldrh	r1, [r2, #0]
 8000fac:	2201      	movs	r2, #1
 8000fae:	4618      	mov	r0, r3
 8000fb0:	f001 f835 	bl	800201e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000fb4:	4b04      	ldr	r3, [pc, #16]	; (8000fc8 <pedestrianLightRed+0x28>)
 8000fb6:	685b      	ldr	r3, [r3, #4]
 8000fb8:	4a04      	ldr	r2, [pc, #16]	; (8000fcc <pedestrianLightRed+0x2c>)
 8000fba:	8851      	ldrh	r1, [r2, #2]
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	f001 f82d 	bl	800201e <HAL_GPIO_WritePin>
}
 8000fc4:	bf00      	nop
 8000fc6:	bd80      	pop	{r7, pc}
 8000fc8:	200002fc 	.word	0x200002fc
 8000fcc:	20000304 	.word	0x20000304

08000fd0 <pedestrianLightOff>:

void pedestrianLightOff(void) {
 8000fd0:	b580      	push	{r7, lr}
 8000fd2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000fd4:	4b08      	ldr	r3, [pc, #32]	; (8000ff8 <pedestrianLightOff+0x28>)
 8000fd6:	685b      	ldr	r3, [r3, #4]
 8000fd8:	4a08      	ldr	r2, [pc, #32]	; (8000ffc <pedestrianLightOff+0x2c>)
 8000fda:	8851      	ldrh	r1, [r2, #2]
 8000fdc:	2200      	movs	r2, #0
 8000fde:	4618      	mov	r0, r3
 8000fe0:	f001 f81d 	bl	800201e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000fe4:	4b04      	ldr	r3, [pc, #16]	; (8000ff8 <pedestrianLightOff+0x28>)
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	4a04      	ldr	r2, [pc, #16]	; (8000ffc <pedestrianLightOff+0x2c>)
 8000fea:	8811      	ldrh	r1, [r2, #0]
 8000fec:	2200      	movs	r2, #0
 8000fee:	4618      	mov	r0, r3
 8000ff0:	f001 f815 	bl	800201e <HAL_GPIO_WritePin>
}
 8000ff4:	bf00      	nop
 8000ff6:	bd80      	pop	{r7, pc}
 8000ff8:	200002fc 	.word	0x200002fc
 8000ffc:	20000304 	.word	0x20000304

08001000 <SCH_Add_Task>:
		SCH_tasks_G[Index].Period = 0;
		SCH_tasks_G[Index].RunMe = 0;
	}
}

uint32_t SCH_Add_Task(void (* pFunction)(void), uint32_t DELAY, uint32_t PERIOD) {
 8001000:	b4b0      	push	{r4, r5, r7}
 8001002:	b089      	sub	sp, #36	; 0x24
 8001004:	af00      	add	r7, sp, #0
 8001006:	60f8      	str	r0, [r7, #12]
 8001008:	60b9      	str	r1, [r7, #8]
 800100a:	607a      	str	r2, [r7, #4]
	if(Size == SCH_MAX_TASKS - 1) return SCH_MAX_TASKS;
 800100c:	4b6d      	ldr	r3, [pc, #436]	; (80011c4 <SCH_Add_Task+0x1c4>)
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	2b27      	cmp	r3, #39	; 0x27
 8001012:	d101      	bne.n	8001018 <SCH_Add_Task+0x18>
 8001014:	2328      	movs	r3, #40	; 0x28
 8001016:	e0d0      	b.n	80011ba <SCH_Add_Task+0x1ba>

	uint8_t flag = 0;
 8001018:	2300      	movs	r3, #0
 800101a:	77fb      	strb	r3, [r7, #31]
	uint32_t Index = 0;
 800101c:	2300      	movs	r3, #0
 800101e:	61bb      	str	r3, [r7, #24]
	if(SYSTEM_DELAY > 0) {
		DELAY /= SYSTEM_DELAY;
 8001020:	68bb      	ldr	r3, [r7, #8]
 8001022:	4a69      	ldr	r2, [pc, #420]	; (80011c8 <SCH_Add_Task+0x1c8>)
 8001024:	fba2 2303 	umull	r2, r3, r2, r3
 8001028:	08db      	lsrs	r3, r3, #3
 800102a:	60bb      	str	r3, [r7, #8]
	}

	for(; Index < Size && flag == 0; Index++) {
 800102c:	e046      	b.n	80010bc <SCH_Add_Task+0xbc>
		if(DELAY > SCH_tasks_G[Index].Delay) {
 800102e:	4967      	ldr	r1, [pc, #412]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001030:	69ba      	ldr	r2, [r7, #24]
 8001032:	4613      	mov	r3, r2
 8001034:	009b      	lsls	r3, r3, #2
 8001036:	4413      	add	r3, r2
 8001038:	009b      	lsls	r3, r3, #2
 800103a:	440b      	add	r3, r1
 800103c:	3304      	adds	r3, #4
 800103e:	681b      	ldr	r3, [r3, #0]
 8001040:	68ba      	ldr	r2, [r7, #8]
 8001042:	429a      	cmp	r2, r3
 8001044:	d90c      	bls.n	8001060 <SCH_Add_Task+0x60>
			DELAY -= SCH_tasks_G[Index].Delay;
 8001046:	4961      	ldr	r1, [pc, #388]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001048:	69ba      	ldr	r2, [r7, #24]
 800104a:	4613      	mov	r3, r2
 800104c:	009b      	lsls	r3, r3, #2
 800104e:	4413      	add	r3, r2
 8001050:	009b      	lsls	r3, r3, #2
 8001052:	440b      	add	r3, r1
 8001054:	3304      	adds	r3, #4
 8001056:	681b      	ldr	r3, [r3, #0]
 8001058:	68ba      	ldr	r2, [r7, #8]
 800105a:	1ad3      	subs	r3, r2, r3
 800105c:	60bb      	str	r3, [r7, #8]
 800105e:	e02a      	b.n	80010b6 <SCH_Add_Task+0xb6>
		}
		else {
			flag = 1;
 8001060:	2301      	movs	r3, #1
 8001062:	77fb      	strb	r3, [r7, #31]
			SCH_tasks_G[Index].Delay -= DELAY;
 8001064:	4959      	ldr	r1, [pc, #356]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001066:	69ba      	ldr	r2, [r7, #24]
 8001068:	4613      	mov	r3, r2
 800106a:	009b      	lsls	r3, r3, #2
 800106c:	4413      	add	r3, r2
 800106e:	009b      	lsls	r3, r3, #2
 8001070:	440b      	add	r3, r1
 8001072:	3304      	adds	r3, #4
 8001074:	681a      	ldr	r2, [r3, #0]
 8001076:	68bb      	ldr	r3, [r7, #8]
 8001078:	1ad1      	subs	r1, r2, r3
 800107a:	4854      	ldr	r0, [pc, #336]	; (80011cc <SCH_Add_Task+0x1cc>)
 800107c:	69ba      	ldr	r2, [r7, #24]
 800107e:	4613      	mov	r3, r2
 8001080:	009b      	lsls	r3, r3, #2
 8001082:	4413      	add	r3, r2
 8001084:	009b      	lsls	r3, r3, #2
 8001086:	4403      	add	r3, r0
 8001088:	3304      	adds	r3, #4
 800108a:	6019      	str	r1, [r3, #0]
			if(SCH_tasks_G[Index].Delay == 0) {
 800108c:	494f      	ldr	r1, [pc, #316]	; (80011cc <SCH_Add_Task+0x1cc>)
 800108e:	69ba      	ldr	r2, [r7, #24]
 8001090:	4613      	mov	r3, r2
 8001092:	009b      	lsls	r3, r3, #2
 8001094:	4413      	add	r3, r2
 8001096:	009b      	lsls	r3, r3, #2
 8001098:	440b      	add	r3, r1
 800109a:	3304      	adds	r3, #4
 800109c:	681b      	ldr	r3, [r3, #0]
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d109      	bne.n	80010b6 <SCH_Add_Task+0xb6>
				SCH_tasks_G[Index].RunMe = 1;
 80010a2:	494a      	ldr	r1, [pc, #296]	; (80011cc <SCH_Add_Task+0x1cc>)
 80010a4:	69ba      	ldr	r2, [r7, #24]
 80010a6:	4613      	mov	r3, r2
 80010a8:	009b      	lsls	r3, r3, #2
 80010aa:	4413      	add	r3, r2
 80010ac:	009b      	lsls	r3, r3, #2
 80010ae:	440b      	add	r3, r1
 80010b0:	330c      	adds	r3, #12
 80010b2:	2201      	movs	r2, #1
 80010b4:	701a      	strb	r2, [r3, #0]
	for(; Index < Size && flag == 0; Index++) {
 80010b6:	69bb      	ldr	r3, [r7, #24]
 80010b8:	3301      	adds	r3, #1
 80010ba:	61bb      	str	r3, [r7, #24]
 80010bc:	4b41      	ldr	r3, [pc, #260]	; (80011c4 <SCH_Add_Task+0x1c4>)
 80010be:	681b      	ldr	r3, [r3, #0]
 80010c0:	69ba      	ldr	r2, [r7, #24]
 80010c2:	429a      	cmp	r2, r3
 80010c4:	d202      	bcs.n	80010cc <SCH_Add_Task+0xcc>
 80010c6:	7ffb      	ldrb	r3, [r7, #31]
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d0b0      	beq.n	800102e <SCH_Add_Task+0x2e>
			}
		}
	}

	if(flag == 1) {
 80010cc:	7ffb      	ldrb	r3, [r7, #31]
 80010ce:	2b01      	cmp	r3, #1
 80010d0:	d135      	bne.n	800113e <SCH_Add_Task+0x13e>
		Index -= 1;
 80010d2:	69bb      	ldr	r3, [r7, #24]
 80010d4:	3b01      	subs	r3, #1
 80010d6:	61bb      	str	r3, [r7, #24]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 80010d8:	4b3a      	ldr	r3, [pc, #232]	; (80011c4 <SCH_Add_Task+0x1c4>)
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	617b      	str	r3, [r7, #20]
 80010de:	e02a      	b.n	8001136 <SCH_Add_Task+0x136>
			SCH_tasks_G[Temp] = SCH_tasks_G[Temp - 1];
 80010e0:	697b      	ldr	r3, [r7, #20]
 80010e2:	1e5a      	subs	r2, r3, #1
 80010e4:	4839      	ldr	r0, [pc, #228]	; (80011cc <SCH_Add_Task+0x1cc>)
 80010e6:	6979      	ldr	r1, [r7, #20]
 80010e8:	460b      	mov	r3, r1
 80010ea:	009b      	lsls	r3, r3, #2
 80010ec:	440b      	add	r3, r1
 80010ee:	009b      	lsls	r3, r3, #2
 80010f0:	4418      	add	r0, r3
 80010f2:	4936      	ldr	r1, [pc, #216]	; (80011cc <SCH_Add_Task+0x1cc>)
 80010f4:	4613      	mov	r3, r2
 80010f6:	009b      	lsls	r3, r3, #2
 80010f8:	4413      	add	r3, r2
 80010fa:	009b      	lsls	r3, r3, #2
 80010fc:	440b      	add	r3, r1
 80010fe:	4604      	mov	r4, r0
 8001100:	461d      	mov	r5, r3
 8001102:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001104:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001106:	682b      	ldr	r3, [r5, #0]
 8001108:	6023      	str	r3, [r4, #0]
			SCH_tasks_G[Temp].TaskID += 1;
 800110a:	4930      	ldr	r1, [pc, #192]	; (80011cc <SCH_Add_Task+0x1cc>)
 800110c:	697a      	ldr	r2, [r7, #20]
 800110e:	4613      	mov	r3, r2
 8001110:	009b      	lsls	r3, r3, #2
 8001112:	4413      	add	r3, r2
 8001114:	009b      	lsls	r3, r3, #2
 8001116:	440b      	add	r3, r1
 8001118:	3310      	adds	r3, #16
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	1c59      	adds	r1, r3, #1
 800111e:	482b      	ldr	r0, [pc, #172]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001120:	697a      	ldr	r2, [r7, #20]
 8001122:	4613      	mov	r3, r2
 8001124:	009b      	lsls	r3, r3, #2
 8001126:	4413      	add	r3, r2
 8001128:	009b      	lsls	r3, r3, #2
 800112a:	4403      	add	r3, r0
 800112c:	3310      	adds	r3, #16
 800112e:	6019      	str	r1, [r3, #0]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 8001130:	697b      	ldr	r3, [r7, #20]
 8001132:	3b01      	subs	r3, #1
 8001134:	617b      	str	r3, [r7, #20]
 8001136:	697a      	ldr	r2, [r7, #20]
 8001138:	69bb      	ldr	r3, [r7, #24]
 800113a:	429a      	cmp	r2, r3
 800113c:	d8d0      	bhi.n	80010e0 <SCH_Add_Task+0xe0>
		}
	}
	SCH_tasks_G[Index].pTask = pFunction;
 800113e:	4923      	ldr	r1, [pc, #140]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001140:	69ba      	ldr	r2, [r7, #24]
 8001142:	4613      	mov	r3, r2
 8001144:	009b      	lsls	r3, r3, #2
 8001146:	4413      	add	r3, r2
 8001148:	009b      	lsls	r3, r3, #2
 800114a:	440b      	add	r3, r1
 800114c:	68fa      	ldr	r2, [r7, #12]
 800114e:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Delay = DELAY;
 8001150:	491e      	ldr	r1, [pc, #120]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001152:	69ba      	ldr	r2, [r7, #24]
 8001154:	4613      	mov	r3, r2
 8001156:	009b      	lsls	r3, r3, #2
 8001158:	4413      	add	r3, r2
 800115a:	009b      	lsls	r3, r3, #2
 800115c:	440b      	add	r3, r1
 800115e:	3304      	adds	r3, #4
 8001160:	68ba      	ldr	r2, [r7, #8]
 8001162:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Period = PERIOD;
 8001164:	4919      	ldr	r1, [pc, #100]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001166:	69ba      	ldr	r2, [r7, #24]
 8001168:	4613      	mov	r3, r2
 800116a:	009b      	lsls	r3, r3, #2
 800116c:	4413      	add	r3, r2
 800116e:	009b      	lsls	r3, r3, #2
 8001170:	440b      	add	r3, r1
 8001172:	3308      	adds	r3, #8
 8001174:	687a      	ldr	r2, [r7, #4]
 8001176:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].RunMe = (DELAY == 0) ? 1 : 0;
 8001178:	68bb      	ldr	r3, [r7, #8]
 800117a:	2b00      	cmp	r3, #0
 800117c:	bf0c      	ite	eq
 800117e:	2301      	moveq	r3, #1
 8001180:	2300      	movne	r3, #0
 8001182:	b2db      	uxtb	r3, r3
 8001184:	4618      	mov	r0, r3
 8001186:	4911      	ldr	r1, [pc, #68]	; (80011cc <SCH_Add_Task+0x1cc>)
 8001188:	69ba      	ldr	r2, [r7, #24]
 800118a:	4613      	mov	r3, r2
 800118c:	009b      	lsls	r3, r3, #2
 800118e:	4413      	add	r3, r2
 8001190:	009b      	lsls	r3, r3, #2
 8001192:	440b      	add	r3, r1
 8001194:	330c      	adds	r3, #12
 8001196:	4602      	mov	r2, r0
 8001198:	701a      	strb	r2, [r3, #0]
	SCH_tasks_G[Index].TaskID = Index;
 800119a:	490c      	ldr	r1, [pc, #48]	; (80011cc <SCH_Add_Task+0x1cc>)
 800119c:	69ba      	ldr	r2, [r7, #24]
 800119e:	4613      	mov	r3, r2
 80011a0:	009b      	lsls	r3, r3, #2
 80011a2:	4413      	add	r3, r2
 80011a4:	009b      	lsls	r3, r3, #2
 80011a6:	440b      	add	r3, r1
 80011a8:	3310      	adds	r3, #16
 80011aa:	69ba      	ldr	r2, [r7, #24]
 80011ac:	601a      	str	r2, [r3, #0]

	Size += 1;
 80011ae:	4b05      	ldr	r3, [pc, #20]	; (80011c4 <SCH_Add_Task+0x1c4>)
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	3301      	adds	r3, #1
 80011b4:	4a03      	ldr	r2, [pc, #12]	; (80011c4 <SCH_Add_Task+0x1c4>)
 80011b6:	6013      	str	r3, [r2, #0]

	return Index;
 80011b8:	69bb      	ldr	r3, [r7, #24]
}
 80011ba:	4618      	mov	r0, r3
 80011bc:	3724      	adds	r7, #36	; 0x24
 80011be:	46bd      	mov	sp, r7
 80011c0:	bcb0      	pop	{r4, r5, r7}
 80011c2:	4770      	bx	lr
 80011c4:	20000704 	.word	0x20000704
 80011c8:	cccccccd 	.word	0xcccccccd
 80011cc:	200003e4 	.word	0x200003e4

080011d0 <SCH_Delete_Task>:

void SCH_Delete_Task(uint32_t TASK_INDEX) {
 80011d0:	b4b0      	push	{r4, r5, r7}
 80011d2:	b085      	sub	sp, #20
 80011d4:	af00      	add	r7, sp, #0
 80011d6:	6078      	str	r0, [r7, #4]
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 80011d8:	4933      	ldr	r1, [pc, #204]	; (80012a8 <SCH_Delete_Task+0xd8>)
 80011da:	687a      	ldr	r2, [r7, #4]
 80011dc:	4613      	mov	r3, r2
 80011de:	009b      	lsls	r3, r3, #2
 80011e0:	4413      	add	r3, r2
 80011e2:	009b      	lsls	r3, r3, #2
 80011e4:	440b      	add	r3, r1
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d057      	beq.n	800129c <SCH_Delete_Task+0xcc>

	SCH_tasks_G[TASK_INDEX + 1].Delay += SCH_tasks_G[TASK_INDEX].Delay;
 80011ec:	687b      	ldr	r3, [r7, #4]
 80011ee:	1c5a      	adds	r2, r3, #1
 80011f0:	492d      	ldr	r1, [pc, #180]	; (80012a8 <SCH_Delete_Task+0xd8>)
 80011f2:	4613      	mov	r3, r2
 80011f4:	009b      	lsls	r3, r3, #2
 80011f6:	4413      	add	r3, r2
 80011f8:	009b      	lsls	r3, r3, #2
 80011fa:	440b      	add	r3, r1
 80011fc:	3304      	adds	r3, #4
 80011fe:	6819      	ldr	r1, [r3, #0]
 8001200:	4829      	ldr	r0, [pc, #164]	; (80012a8 <SCH_Delete_Task+0xd8>)
 8001202:	687a      	ldr	r2, [r7, #4]
 8001204:	4613      	mov	r3, r2
 8001206:	009b      	lsls	r3, r3, #2
 8001208:	4413      	add	r3, r2
 800120a:	009b      	lsls	r3, r3, #2
 800120c:	4403      	add	r3, r0
 800120e:	3304      	adds	r3, #4
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	687a      	ldr	r2, [r7, #4]
 8001214:	3201      	adds	r2, #1
 8001216:	4419      	add	r1, r3
 8001218:	4823      	ldr	r0, [pc, #140]	; (80012a8 <SCH_Delete_Task+0xd8>)
 800121a:	4613      	mov	r3, r2
 800121c:	009b      	lsls	r3, r3, #2
 800121e:	4413      	add	r3, r2
 8001220:	009b      	lsls	r3, r3, #2
 8001222:	4403      	add	r3, r0
 8001224:	3304      	adds	r3, #4
 8001226:	6019      	str	r1, [r3, #0]

	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	60fb      	str	r3, [r7, #12]
 800122c:	e02a      	b.n	8001284 <SCH_Delete_Task+0xb4>
		SCH_tasks_G[Temp] = SCH_tasks_G[Temp + 1];
 800122e:	68fb      	ldr	r3, [r7, #12]
 8001230:	1c5a      	adds	r2, r3, #1
 8001232:	481d      	ldr	r0, [pc, #116]	; (80012a8 <SCH_Delete_Task+0xd8>)
 8001234:	68f9      	ldr	r1, [r7, #12]
 8001236:	460b      	mov	r3, r1
 8001238:	009b      	lsls	r3, r3, #2
 800123a:	440b      	add	r3, r1
 800123c:	009b      	lsls	r3, r3, #2
 800123e:	4418      	add	r0, r3
 8001240:	4919      	ldr	r1, [pc, #100]	; (80012a8 <SCH_Delete_Task+0xd8>)
 8001242:	4613      	mov	r3, r2
 8001244:	009b      	lsls	r3, r3, #2
 8001246:	4413      	add	r3, r2
 8001248:	009b      	lsls	r3, r3, #2
 800124a:	440b      	add	r3, r1
 800124c:	4604      	mov	r4, r0
 800124e:	461d      	mov	r5, r3
 8001250:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001252:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001254:	682b      	ldr	r3, [r5, #0]
 8001256:	6023      	str	r3, [r4, #0]
		SCH_tasks_G[Temp].TaskID -= 1;
 8001258:	4913      	ldr	r1, [pc, #76]	; (80012a8 <SCH_Delete_Task+0xd8>)
 800125a:	68fa      	ldr	r2, [r7, #12]
 800125c:	4613      	mov	r3, r2
 800125e:	009b      	lsls	r3, r3, #2
 8001260:	4413      	add	r3, r2
 8001262:	009b      	lsls	r3, r3, #2
 8001264:	440b      	add	r3, r1
 8001266:	3310      	adds	r3, #16
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	1e59      	subs	r1, r3, #1
 800126c:	480e      	ldr	r0, [pc, #56]	; (80012a8 <SCH_Delete_Task+0xd8>)
 800126e:	68fa      	ldr	r2, [r7, #12]
 8001270:	4613      	mov	r3, r2
 8001272:	009b      	lsls	r3, r3, #2
 8001274:	4413      	add	r3, r2
 8001276:	009b      	lsls	r3, r3, #2
 8001278:	4403      	add	r3, r0
 800127a:	3310      	adds	r3, #16
 800127c:	6019      	str	r1, [r3, #0]
	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 800127e:	68fb      	ldr	r3, [r7, #12]
 8001280:	3301      	adds	r3, #1
 8001282:	60fb      	str	r3, [r7, #12]
 8001284:	4b09      	ldr	r3, [pc, #36]	; (80012ac <SCH_Delete_Task+0xdc>)
 8001286:	681b      	ldr	r3, [r3, #0]
 8001288:	3b01      	subs	r3, #1
 800128a:	68fa      	ldr	r2, [r7, #12]
 800128c:	429a      	cmp	r2, r3
 800128e:	d3ce      	bcc.n	800122e <SCH_Delete_Task+0x5e>
	}

	Size -= 1;
 8001290:	4b06      	ldr	r3, [pc, #24]	; (80012ac <SCH_Delete_Task+0xdc>)
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	3b01      	subs	r3, #1
 8001296:	4a05      	ldr	r2, [pc, #20]	; (80012ac <SCH_Delete_Task+0xdc>)
 8001298:	6013      	str	r3, [r2, #0]
 800129a:	e000      	b.n	800129e <SCH_Delete_Task+0xce>
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 800129c:	bf00      	nop
}
 800129e:	3714      	adds	r7, #20
 80012a0:	46bd      	mov	sp, r7
 80012a2:	bcb0      	pop	{r4, r5, r7}
 80012a4:	4770      	bx	lr
 80012a6:	bf00      	nop
 80012a8:	200003e4 	.word	0x200003e4
 80012ac:	20000704 	.word	0x20000704

080012b0 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void) {
 80012b0:	b5b0      	push	{r4, r5, r7, lr}
 80012b2:	b086      	sub	sp, #24
 80012b4:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[HEAD].RunMe == 1) {
 80012b6:	4b0f      	ldr	r3, [pc, #60]	; (80012f4 <SCH_Dispatch_Tasks+0x44>)
 80012b8:	7b1b      	ldrb	r3, [r3, #12]
 80012ba:	2b01      	cmp	r3, #1
 80012bc:	d115      	bne.n	80012ea <SCH_Dispatch_Tasks+0x3a>
		(*SCH_tasks_G[HEAD].pTask)();
 80012be:	4b0d      	ldr	r3, [pc, #52]	; (80012f4 <SCH_Dispatch_Tasks+0x44>)
 80012c0:	681b      	ldr	r3, [r3, #0]
 80012c2:	4798      	blx	r3

		sTask temp = SCH_tasks_G[HEAD];
 80012c4:	4b0b      	ldr	r3, [pc, #44]	; (80012f4 <SCH_Dispatch_Tasks+0x44>)
 80012c6:	1d3c      	adds	r4, r7, #4
 80012c8:	461d      	mov	r5, r3
 80012ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80012cc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80012ce:	682b      	ldr	r3, [r5, #0]
 80012d0:	6023      	str	r3, [r4, #0]

		SCH_Delete_Task(HEAD);
 80012d2:	2000      	movs	r0, #0
 80012d4:	f7ff ff7c 	bl	80011d0 <SCH_Delete_Task>

		if(temp.Period > 0) {
 80012d8:	68fb      	ldr	r3, [r7, #12]
 80012da:	2b00      	cmp	r3, #0
 80012dc:	d005      	beq.n	80012ea <SCH_Dispatch_Tasks+0x3a>
			SCH_Add_Task(temp.pTask, temp.Period, temp.Period);
 80012de:	687b      	ldr	r3, [r7, #4]
 80012e0:	68f9      	ldr	r1, [r7, #12]
 80012e2:	68fa      	ldr	r2, [r7, #12]
 80012e4:	4618      	mov	r0, r3
 80012e6:	f7ff fe8b 	bl	8001000 <SCH_Add_Task>
		}
	}
}
 80012ea:	bf00      	nop
 80012ec:	3718      	adds	r7, #24
 80012ee:	46bd      	mov	sp, r7
 80012f0:	bdb0      	pop	{r4, r5, r7, pc}
 80012f2:	bf00      	nop
 80012f4:	200003e4 	.word	0x200003e4

080012f8 <SCH_Update>:

void SCH_Update(void) {
 80012f8:	b480      	push	{r7}
 80012fa:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[HEAD].Delay > 0) SCH_tasks_G[HEAD].Delay--;
 80012fc:	4b09      	ldr	r3, [pc, #36]	; (8001324 <SCH_Update+0x2c>)
 80012fe:	685b      	ldr	r3, [r3, #4]
 8001300:	2b00      	cmp	r3, #0
 8001302:	d004      	beq.n	800130e <SCH_Update+0x16>
 8001304:	4b07      	ldr	r3, [pc, #28]	; (8001324 <SCH_Update+0x2c>)
 8001306:	685b      	ldr	r3, [r3, #4]
 8001308:	3b01      	subs	r3, #1
 800130a:	4a06      	ldr	r2, [pc, #24]	; (8001324 <SCH_Update+0x2c>)
 800130c:	6053      	str	r3, [r2, #4]

	if(SCH_tasks_G[HEAD].Delay == 0) {
 800130e:	4b05      	ldr	r3, [pc, #20]	; (8001324 <SCH_Update+0x2c>)
 8001310:	685b      	ldr	r3, [r3, #4]
 8001312:	2b00      	cmp	r3, #0
 8001314:	d102      	bne.n	800131c <SCH_Update+0x24>
		SCH_tasks_G[HEAD].RunMe = 1;
 8001316:	4b03      	ldr	r3, [pc, #12]	; (8001324 <SCH_Update+0x2c>)
 8001318:	2201      	movs	r2, #1
 800131a:	731a      	strb	r2, [r3, #12]
	}
}
 800131c:	bf00      	nop
 800131e:	46bd      	mov	sp, r7
 8001320:	bc80      	pop	{r7}
 8001322:	4770      	bx	lr
 8001324:	200003e4 	.word	0x200003e4

08001328 <setTimer>:
struct timer_count timer2;
struct timer_count timer3;

// Blame Nguyen Tran
/* DEPENDENCY INJECTION */
void setTimer(struct timer_count* timer, int duration) {
 8001328:	b480      	push	{r7}
 800132a:	b085      	sub	sp, #20
 800132c:	af00      	add	r7, sp, #0
 800132e:	6078      	str	r0, [r7, #4]
 8001330:	6039      	str	r1, [r7, #0]
    int tick = SYSTEM_DELAY;
 8001332:	230a      	movs	r3, #10
 8001334:	60fb      	str	r3, [r7, #12]
    if (tick <= 0) {
 8001336:	68fb      	ldr	r3, [r7, #12]
 8001338:	2b00      	cmp	r3, #0
 800133a:	dc01      	bgt.n	8001340 <setTimer+0x18>
        tick = 1;
 800133c:	2301      	movs	r3, #1
 800133e:	60fb      	str	r3, [r7, #12]
    }
    timer->counter = duration / tick;
 8001340:	683a      	ldr	r2, [r7, #0]
 8001342:	68fb      	ldr	r3, [r7, #12]
 8001344:	fb92 f2f3 	sdiv	r2, r2, r3
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	601a      	str	r2, [r3, #0]
    timer->flag = 0;
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	2200      	movs	r2, #0
 8001350:	605a      	str	r2, [r3, #4]
}
 8001352:	bf00      	nop
 8001354:	3714      	adds	r7, #20
 8001356:	46bd      	mov	sp, r7
 8001358:	bc80      	pop	{r7}
 800135a:	4770      	bx	lr

0800135c <timerBreath>:

void timerBreath(struct timer_count* timer) {
 800135c:	b480      	push	{r7}
 800135e:	b083      	sub	sp, #12
 8001360:	af00      	add	r7, sp, #0
 8001362:	6078      	str	r0, [r7, #4]
    if (timer->counter > 0) {
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	2b00      	cmp	r3, #0
 800136a:	dd0b      	ble.n	8001384 <timerBreath+0x28>
        timer->counter -= 1;
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	1e5a      	subs	r2, r3, #1
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	601a      	str	r2, [r3, #0]
        if (timer->counter <= 0) {
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	2b00      	cmp	r3, #0
 800137c:	dc02      	bgt.n	8001384 <timerBreath+0x28>
            timer->flag = 1;
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	2201      	movs	r2, #1
 8001382:	605a      	str	r2, [r3, #4]
        }
    }
}
 8001384:	bf00      	nop
 8001386:	370c      	adds	r7, #12
 8001388:	46bd      	mov	sp, r7
 800138a:	bc80      	pop	{r7}
 800138c:	4770      	bx	lr
	...

08001390 <HAL_MspInit>:
 8001390:	b480      	push	{r7}
 8001392:	b085      	sub	sp, #20
 8001394:	af00      	add	r7, sp, #0
 8001396:	4b15      	ldr	r3, [pc, #84]	; (80013ec <HAL_MspInit+0x5c>)
 8001398:	699b      	ldr	r3, [r3, #24]
 800139a:	4a14      	ldr	r2, [pc, #80]	; (80013ec <HAL_MspInit+0x5c>)
 800139c:	f043 0301 	orr.w	r3, r3, #1
 80013a0:	6193      	str	r3, [r2, #24]
 80013a2:	4b12      	ldr	r3, [pc, #72]	; (80013ec <HAL_MspInit+0x5c>)
 80013a4:	699b      	ldr	r3, [r3, #24]
 80013a6:	f003 0301 	and.w	r3, r3, #1
 80013aa:	60bb      	str	r3, [r7, #8]
 80013ac:	68bb      	ldr	r3, [r7, #8]
 80013ae:	4b0f      	ldr	r3, [pc, #60]	; (80013ec <HAL_MspInit+0x5c>)
 80013b0:	69db      	ldr	r3, [r3, #28]
 80013b2:	4a0e      	ldr	r2, [pc, #56]	; (80013ec <HAL_MspInit+0x5c>)
 80013b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80013b8:	61d3      	str	r3, [r2, #28]
 80013ba:	4b0c      	ldr	r3, [pc, #48]	; (80013ec <HAL_MspInit+0x5c>)
 80013bc:	69db      	ldr	r3, [r3, #28]
 80013be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013c2:	607b      	str	r3, [r7, #4]
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	4b0a      	ldr	r3, [pc, #40]	; (80013f0 <HAL_MspInit+0x60>)
 80013c8:	685b      	ldr	r3, [r3, #4]
 80013ca:	60fb      	str	r3, [r7, #12]
 80013cc:	68fb      	ldr	r3, [r7, #12]
 80013ce:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80013d2:	60fb      	str	r3, [r7, #12]
 80013d4:	68fb      	ldr	r3, [r7, #12]
 80013d6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80013da:	60fb      	str	r3, [r7, #12]
 80013dc:	4a04      	ldr	r2, [pc, #16]	; (80013f0 <HAL_MspInit+0x60>)
 80013de:	68fb      	ldr	r3, [r7, #12]
 80013e0:	6053      	str	r3, [r2, #4]
 80013e2:	bf00      	nop
 80013e4:	3714      	adds	r7, #20
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bc80      	pop	{r7}
 80013ea:	4770      	bx	lr
 80013ec:	40021000 	.word	0x40021000
 80013f0:	40010000 	.word	0x40010000

080013f4 <NMI_Handler>:
 80013f4:	b480      	push	{r7}
 80013f6:	af00      	add	r7, sp, #0
 80013f8:	e7fe      	b.n	80013f8 <NMI_Handler+0x4>

080013fa <HardFault_Handler>:
 80013fa:	b480      	push	{r7}
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	e7fe      	b.n	80013fe <HardFault_Handler+0x4>

08001400 <MemManage_Handler>:
 8001400:	b480      	push	{r7}
 8001402:	af00      	add	r7, sp, #0
 8001404:	e7fe      	b.n	8001404 <MemManage_Handler+0x4>

08001406 <BusFault_Handler>:
 8001406:	b480      	push	{r7}
 8001408:	af00      	add	r7, sp, #0
 800140a:	e7fe      	b.n	800140a <BusFault_Handler+0x4>

0800140c <UsageFault_Handler>:
 800140c:	b480      	push	{r7}
 800140e:	af00      	add	r7, sp, #0
 8001410:	e7fe      	b.n	8001410 <UsageFault_Handler+0x4>

08001412 <SVC_Handler>:
 8001412:	b480      	push	{r7}
 8001414:	af00      	add	r7, sp, #0
 8001416:	bf00      	nop
 8001418:	46bd      	mov	sp, r7
 800141a:	bc80      	pop	{r7}
 800141c:	4770      	bx	lr

0800141e <DebugMon_Handler>:
 800141e:	b480      	push	{r7}
 8001420:	af00      	add	r7, sp, #0
 8001422:	bf00      	nop
 8001424:	46bd      	mov	sp, r7
 8001426:	bc80      	pop	{r7}
 8001428:	4770      	bx	lr

0800142a <PendSV_Handler>:
 800142a:	b480      	push	{r7}
 800142c:	af00      	add	r7, sp, #0
 800142e:	bf00      	nop
 8001430:	46bd      	mov	sp, r7
 8001432:	bc80      	pop	{r7}
 8001434:	4770      	bx	lr

08001436 <SysTick_Handler>:
 8001436:	b580      	push	{r7, lr}
 8001438:	af00      	add	r7, sp, #0
 800143a:	f000 fb2b 	bl	8001a94 <HAL_IncTick>
 800143e:	bf00      	nop
 8001440:	bd80      	pop	{r7, pc}
	...

08001444 <TIM2_IRQHandler>:
 8001444:	b580      	push	{r7, lr}
 8001446:	af00      	add	r7, sp, #0
 8001448:	4802      	ldr	r0, [pc, #8]	; (8001454 <TIM2_IRQHandler+0x10>)
 800144a:	f001 fbf1 	bl	8002c30 <HAL_TIM_IRQHandler>
 800144e:	bf00      	nop
 8001450:	bd80      	pop	{r7, pc}
 8001452:	bf00      	nop
 8001454:	20000724 	.word	0x20000724

08001458 <EXTI15_10_IRQHandler>:
 8001458:	b580      	push	{r7, lr}
 800145a:	af00      	add	r7, sp, #0
 800145c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001460:	f000 fe0e 	bl	8002080 <HAL_GPIO_EXTI_IRQHandler>
 8001464:	bf00      	nop
 8001466:	bd80      	pop	{r7, pc}

08001468 <_sbrk>:
 8001468:	b580      	push	{r7, lr}
 800146a:	b086      	sub	sp, #24
 800146c:	af00      	add	r7, sp, #0
 800146e:	6078      	str	r0, [r7, #4]
 8001470:	4a14      	ldr	r2, [pc, #80]	; (80014c4 <_sbrk+0x5c>)
 8001472:	4b15      	ldr	r3, [pc, #84]	; (80014c8 <_sbrk+0x60>)
 8001474:	1ad3      	subs	r3, r2, r3
 8001476:	617b      	str	r3, [r7, #20]
 8001478:	697b      	ldr	r3, [r7, #20]
 800147a:	613b      	str	r3, [r7, #16]
 800147c:	4b13      	ldr	r3, [pc, #76]	; (80014cc <_sbrk+0x64>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	2b00      	cmp	r3, #0
 8001482:	d102      	bne.n	800148a <_sbrk+0x22>
 8001484:	4b11      	ldr	r3, [pc, #68]	; (80014cc <_sbrk+0x64>)
 8001486:	4a12      	ldr	r2, [pc, #72]	; (80014d0 <_sbrk+0x68>)
 8001488:	601a      	str	r2, [r3, #0]
 800148a:	4b10      	ldr	r3, [pc, #64]	; (80014cc <_sbrk+0x64>)
 800148c:	681a      	ldr	r2, [r3, #0]
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	4413      	add	r3, r2
 8001492:	693a      	ldr	r2, [r7, #16]
 8001494:	429a      	cmp	r2, r3
 8001496:	d207      	bcs.n	80014a8 <_sbrk+0x40>
 8001498:	f002 fb44 	bl	8003b24 <__errno>
 800149c:	4603      	mov	r3, r0
 800149e:	220c      	movs	r2, #12
 80014a0:	601a      	str	r2, [r3, #0]
 80014a2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80014a6:	e009      	b.n	80014bc <_sbrk+0x54>
 80014a8:	4b08      	ldr	r3, [pc, #32]	; (80014cc <_sbrk+0x64>)
 80014aa:	681b      	ldr	r3, [r3, #0]
 80014ac:	60fb      	str	r3, [r7, #12]
 80014ae:	4b07      	ldr	r3, [pc, #28]	; (80014cc <_sbrk+0x64>)
 80014b0:	681a      	ldr	r2, [r3, #0]
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	4413      	add	r3, r2
 80014b6:	4a05      	ldr	r2, [pc, #20]	; (80014cc <_sbrk+0x64>)
 80014b8:	6013      	str	r3, [r2, #0]
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	4618      	mov	r0, r3
 80014be:	3718      	adds	r7, #24
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}
 80014c4:	20005000 	.word	0x20005000
 80014c8:	00000400 	.word	0x00000400
 80014cc:	20000720 	.word	0x20000720
 80014d0:	20000810 	.word	0x20000810

080014d4 <SystemInit>:
 80014d4:	b480      	push	{r7}
 80014d6:	af00      	add	r7, sp, #0
 80014d8:	bf00      	nop
 80014da:	46bd      	mov	sp, r7
 80014dc:	bc80      	pop	{r7}
 80014de:	4770      	bx	lr

080014e0 <MX_TIM2_Init>:
 80014e0:	b580      	push	{r7, lr}
 80014e2:	b086      	sub	sp, #24
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	f107 0308 	add.w	r3, r7, #8
 80014ea:	2200      	movs	r2, #0
 80014ec:	601a      	str	r2, [r3, #0]
 80014ee:	605a      	str	r2, [r3, #4]
 80014f0:	609a      	str	r2, [r3, #8]
 80014f2:	60da      	str	r2, [r3, #12]
 80014f4:	463b      	mov	r3, r7
 80014f6:	2200      	movs	r2, #0
 80014f8:	601a      	str	r2, [r3, #0]
 80014fa:	605a      	str	r2, [r3, #4]
 80014fc:	4b1d      	ldr	r3, [pc, #116]	; (8001574 <MX_TIM2_Init+0x94>)
 80014fe:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001502:	601a      	str	r2, [r3, #0]
 8001504:	4b1b      	ldr	r3, [pc, #108]	; (8001574 <MX_TIM2_Init+0x94>)
 8001506:	223f      	movs	r2, #63	; 0x3f
 8001508:	605a      	str	r2, [r3, #4]
 800150a:	4b1a      	ldr	r3, [pc, #104]	; (8001574 <MX_TIM2_Init+0x94>)
 800150c:	2200      	movs	r2, #0
 800150e:	609a      	str	r2, [r3, #8]
 8001510:	4b18      	ldr	r3, [pc, #96]	; (8001574 <MX_TIM2_Init+0x94>)
 8001512:	f242 720f 	movw	r2, #9999	; 0x270f
 8001516:	60da      	str	r2, [r3, #12]
 8001518:	4b16      	ldr	r3, [pc, #88]	; (8001574 <MX_TIM2_Init+0x94>)
 800151a:	2200      	movs	r2, #0
 800151c:	611a      	str	r2, [r3, #16]
 800151e:	4b15      	ldr	r3, [pc, #84]	; (8001574 <MX_TIM2_Init+0x94>)
 8001520:	2200      	movs	r2, #0
 8001522:	619a      	str	r2, [r3, #24]
 8001524:	4813      	ldr	r0, [pc, #76]	; (8001574 <MX_TIM2_Init+0x94>)
 8001526:	f001 f9e7 	bl	80028f8 <HAL_TIM_Base_Init>
 800152a:	4603      	mov	r3, r0
 800152c:	2b00      	cmp	r3, #0
 800152e:	d001      	beq.n	8001534 <MX_TIM2_Init+0x54>
 8001530:	f7ff fce9 	bl	8000f06 <Error_Handler>
 8001534:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001538:	60bb      	str	r3, [r7, #8]
 800153a:	f107 0308 	add.w	r3, r7, #8
 800153e:	4619      	mov	r1, r3
 8001540:	480c      	ldr	r0, [pc, #48]	; (8001574 <MX_TIM2_Init+0x94>)
 8001542:	f001 fd3b 	bl	8002fbc <HAL_TIM_ConfigClockSource>
 8001546:	4603      	mov	r3, r0
 8001548:	2b00      	cmp	r3, #0
 800154a:	d001      	beq.n	8001550 <MX_TIM2_Init+0x70>
 800154c:	f7ff fcdb 	bl	8000f06 <Error_Handler>
 8001550:	2300      	movs	r3, #0
 8001552:	603b      	str	r3, [r7, #0]
 8001554:	2300      	movs	r3, #0
 8001556:	607b      	str	r3, [r7, #4]
 8001558:	463b      	mov	r3, r7
 800155a:	4619      	mov	r1, r3
 800155c:	4805      	ldr	r0, [pc, #20]	; (8001574 <MX_TIM2_Init+0x94>)
 800155e:	f002 f8b9 	bl	80036d4 <HAL_TIMEx_MasterConfigSynchronization>
 8001562:	4603      	mov	r3, r0
 8001564:	2b00      	cmp	r3, #0
 8001566:	d001      	beq.n	800156c <MX_TIM2_Init+0x8c>
 8001568:	f7ff fccd 	bl	8000f06 <Error_Handler>
 800156c:	bf00      	nop
 800156e:	3718      	adds	r7, #24
 8001570:	46bd      	mov	sp, r7
 8001572:	bd80      	pop	{r7, pc}
 8001574:	20000724 	.word	0x20000724

08001578 <MX_TIM3_Init>:
 8001578:	b580      	push	{r7, lr}
 800157a:	b08e      	sub	sp, #56	; 0x38
 800157c:	af00      	add	r7, sp, #0
 800157e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001582:	2200      	movs	r2, #0
 8001584:	601a      	str	r2, [r3, #0]
 8001586:	605a      	str	r2, [r3, #4]
 8001588:	609a      	str	r2, [r3, #8]
 800158a:	60da      	str	r2, [r3, #12]
 800158c:	f107 0320 	add.w	r3, r7, #32
 8001590:	2200      	movs	r2, #0
 8001592:	601a      	str	r2, [r3, #0]
 8001594:	605a      	str	r2, [r3, #4]
 8001596:	1d3b      	adds	r3, r7, #4
 8001598:	2200      	movs	r2, #0
 800159a:	601a      	str	r2, [r3, #0]
 800159c:	605a      	str	r2, [r3, #4]
 800159e:	609a      	str	r2, [r3, #8]
 80015a0:	60da      	str	r2, [r3, #12]
 80015a2:	611a      	str	r2, [r3, #16]
 80015a4:	615a      	str	r2, [r3, #20]
 80015a6:	619a      	str	r2, [r3, #24]
 80015a8:	4b2c      	ldr	r3, [pc, #176]	; (800165c <MX_TIM3_Init+0xe4>)
 80015aa:	4a2d      	ldr	r2, [pc, #180]	; (8001660 <MX_TIM3_Init+0xe8>)
 80015ac:	601a      	str	r2, [r3, #0]
 80015ae:	4b2b      	ldr	r3, [pc, #172]	; (800165c <MX_TIM3_Init+0xe4>)
 80015b0:	223f      	movs	r2, #63	; 0x3f
 80015b2:	605a      	str	r2, [r3, #4]
 80015b4:	4b29      	ldr	r3, [pc, #164]	; (800165c <MX_TIM3_Init+0xe4>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	609a      	str	r2, [r3, #8]
 80015ba:	4b28      	ldr	r3, [pc, #160]	; (800165c <MX_TIM3_Init+0xe4>)
 80015bc:	f240 32e7 	movw	r2, #999	; 0x3e7
 80015c0:	60da      	str	r2, [r3, #12]
 80015c2:	4b26      	ldr	r3, [pc, #152]	; (800165c <MX_TIM3_Init+0xe4>)
 80015c4:	2200      	movs	r2, #0
 80015c6:	611a      	str	r2, [r3, #16]
 80015c8:	4b24      	ldr	r3, [pc, #144]	; (800165c <MX_TIM3_Init+0xe4>)
 80015ca:	2200      	movs	r2, #0
 80015cc:	619a      	str	r2, [r3, #24]
 80015ce:	4823      	ldr	r0, [pc, #140]	; (800165c <MX_TIM3_Init+0xe4>)
 80015d0:	f001 f992 	bl	80028f8 <HAL_TIM_Base_Init>
 80015d4:	4603      	mov	r3, r0
 80015d6:	2b00      	cmp	r3, #0
 80015d8:	d001      	beq.n	80015de <MX_TIM3_Init+0x66>
 80015da:	f7ff fc94 	bl	8000f06 <Error_Handler>
 80015de:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80015e2:	62bb      	str	r3, [r7, #40]	; 0x28
 80015e4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80015e8:	4619      	mov	r1, r3
 80015ea:	481c      	ldr	r0, [pc, #112]	; (800165c <MX_TIM3_Init+0xe4>)
 80015ec:	f001 fce6 	bl	8002fbc <HAL_TIM_ConfigClockSource>
 80015f0:	4603      	mov	r3, r0
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d001      	beq.n	80015fa <MX_TIM3_Init+0x82>
 80015f6:	f7ff fc86 	bl	8000f06 <Error_Handler>
 80015fa:	4818      	ldr	r0, [pc, #96]	; (800165c <MX_TIM3_Init+0xe4>)
 80015fc:	f001 fa1e 	bl	8002a3c <HAL_TIM_PWM_Init>
 8001600:	4603      	mov	r3, r0
 8001602:	2b00      	cmp	r3, #0
 8001604:	d001      	beq.n	800160a <MX_TIM3_Init+0x92>
 8001606:	f7ff fc7e 	bl	8000f06 <Error_Handler>
 800160a:	2300      	movs	r3, #0
 800160c:	623b      	str	r3, [r7, #32]
 800160e:	2300      	movs	r3, #0
 8001610:	627b      	str	r3, [r7, #36]	; 0x24
 8001612:	f107 0320 	add.w	r3, r7, #32
 8001616:	4619      	mov	r1, r3
 8001618:	4810      	ldr	r0, [pc, #64]	; (800165c <MX_TIM3_Init+0xe4>)
 800161a:	f002 f85b 	bl	80036d4 <HAL_TIMEx_MasterConfigSynchronization>
 800161e:	4603      	mov	r3, r0
 8001620:	2b00      	cmp	r3, #0
 8001622:	d001      	beq.n	8001628 <MX_TIM3_Init+0xb0>
 8001624:	f7ff fc6f 	bl	8000f06 <Error_Handler>
 8001628:	2360      	movs	r3, #96	; 0x60
 800162a:	607b      	str	r3, [r7, #4]
 800162c:	2300      	movs	r3, #0
 800162e:	60bb      	str	r3, [r7, #8]
 8001630:	2300      	movs	r3, #0
 8001632:	60fb      	str	r3, [r7, #12]
 8001634:	2300      	movs	r3, #0
 8001636:	617b      	str	r3, [r7, #20]
 8001638:	1d3b      	adds	r3, r7, #4
 800163a:	2200      	movs	r2, #0
 800163c:	4619      	mov	r1, r3
 800163e:	4807      	ldr	r0, [pc, #28]	; (800165c <MX_TIM3_Init+0xe4>)
 8001640:	f001 fbfe 	bl	8002e40 <HAL_TIM_PWM_ConfigChannel>
 8001644:	4603      	mov	r3, r0
 8001646:	2b00      	cmp	r3, #0
 8001648:	d001      	beq.n	800164e <MX_TIM3_Init+0xd6>
 800164a:	f7ff fc5c 	bl	8000f06 <Error_Handler>
 800164e:	4803      	ldr	r0, [pc, #12]	; (800165c <MX_TIM3_Init+0xe4>)
 8001650:	f000 f840 	bl	80016d4 <HAL_TIM_MspPostInit>
 8001654:	bf00      	nop
 8001656:	3738      	adds	r7, #56	; 0x38
 8001658:	46bd      	mov	sp, r7
 800165a:	bd80      	pop	{r7, pc}
 800165c:	2000076c 	.word	0x2000076c
 8001660:	40000400 	.word	0x40000400

08001664 <HAL_TIM_Base_MspInit>:
 8001664:	b580      	push	{r7, lr}
 8001666:	b084      	sub	sp, #16
 8001668:	af00      	add	r7, sp, #0
 800166a:	6078      	str	r0, [r7, #4]
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	681b      	ldr	r3, [r3, #0]
 8001670:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001674:	d114      	bne.n	80016a0 <HAL_TIM_Base_MspInit+0x3c>
 8001676:	4b15      	ldr	r3, [pc, #84]	; (80016cc <HAL_TIM_Base_MspInit+0x68>)
 8001678:	69db      	ldr	r3, [r3, #28]
 800167a:	4a14      	ldr	r2, [pc, #80]	; (80016cc <HAL_TIM_Base_MspInit+0x68>)
 800167c:	f043 0301 	orr.w	r3, r3, #1
 8001680:	61d3      	str	r3, [r2, #28]
 8001682:	4b12      	ldr	r3, [pc, #72]	; (80016cc <HAL_TIM_Base_MspInit+0x68>)
 8001684:	69db      	ldr	r3, [r3, #28]
 8001686:	f003 0301 	and.w	r3, r3, #1
 800168a:	60fb      	str	r3, [r7, #12]
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	2200      	movs	r2, #0
 8001690:	2100      	movs	r1, #0
 8001692:	201c      	movs	r0, #28
 8001694:	f000 faf1 	bl	8001c7a <HAL_NVIC_SetPriority>
 8001698:	201c      	movs	r0, #28
 800169a:	f000 fb0a 	bl	8001cb2 <HAL_NVIC_EnableIRQ>
 800169e:	e010      	b.n	80016c2 <HAL_TIM_Base_MspInit+0x5e>
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	4a0a      	ldr	r2, [pc, #40]	; (80016d0 <HAL_TIM_Base_MspInit+0x6c>)
 80016a6:	4293      	cmp	r3, r2
 80016a8:	d10b      	bne.n	80016c2 <HAL_TIM_Base_MspInit+0x5e>
 80016aa:	4b08      	ldr	r3, [pc, #32]	; (80016cc <HAL_TIM_Base_MspInit+0x68>)
 80016ac:	69db      	ldr	r3, [r3, #28]
 80016ae:	4a07      	ldr	r2, [pc, #28]	; (80016cc <HAL_TIM_Base_MspInit+0x68>)
 80016b0:	f043 0302 	orr.w	r3, r3, #2
 80016b4:	61d3      	str	r3, [r2, #28]
 80016b6:	4b05      	ldr	r3, [pc, #20]	; (80016cc <HAL_TIM_Base_MspInit+0x68>)
 80016b8:	69db      	ldr	r3, [r3, #28]
 80016ba:	f003 0302 	and.w	r3, r3, #2
 80016be:	60bb      	str	r3, [r7, #8]
 80016c0:	68bb      	ldr	r3, [r7, #8]
 80016c2:	bf00      	nop
 80016c4:	3710      	adds	r7, #16
 80016c6:	46bd      	mov	sp, r7
 80016c8:	bd80      	pop	{r7, pc}
 80016ca:	bf00      	nop
 80016cc:	40021000 	.word	0x40021000
 80016d0:	40000400 	.word	0x40000400

080016d4 <HAL_TIM_MspPostInit>:
 80016d4:	b580      	push	{r7, lr}
 80016d6:	b088      	sub	sp, #32
 80016d8:	af00      	add	r7, sp, #0
 80016da:	6078      	str	r0, [r7, #4]
 80016dc:	f107 0310 	add.w	r3, r7, #16
 80016e0:	2200      	movs	r2, #0
 80016e2:	601a      	str	r2, [r3, #0]
 80016e4:	605a      	str	r2, [r3, #4]
 80016e6:	609a      	str	r2, [r3, #8]
 80016e8:	60da      	str	r2, [r3, #12]
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	4a0f      	ldr	r2, [pc, #60]	; (800172c <HAL_TIM_MspPostInit+0x58>)
 80016f0:	4293      	cmp	r3, r2
 80016f2:	d117      	bne.n	8001724 <HAL_TIM_MspPostInit+0x50>
 80016f4:	4b0e      	ldr	r3, [pc, #56]	; (8001730 <HAL_TIM_MspPostInit+0x5c>)
 80016f6:	699b      	ldr	r3, [r3, #24]
 80016f8:	4a0d      	ldr	r2, [pc, #52]	; (8001730 <HAL_TIM_MspPostInit+0x5c>)
 80016fa:	f043 0304 	orr.w	r3, r3, #4
 80016fe:	6193      	str	r3, [r2, #24]
 8001700:	4b0b      	ldr	r3, [pc, #44]	; (8001730 <HAL_TIM_MspPostInit+0x5c>)
 8001702:	699b      	ldr	r3, [r3, #24]
 8001704:	f003 0304 	and.w	r3, r3, #4
 8001708:	60fb      	str	r3, [r7, #12]
 800170a:	68fb      	ldr	r3, [r7, #12]
 800170c:	2340      	movs	r3, #64	; 0x40
 800170e:	613b      	str	r3, [r7, #16]
 8001710:	2302      	movs	r3, #2
 8001712:	617b      	str	r3, [r7, #20]
 8001714:	2302      	movs	r3, #2
 8001716:	61fb      	str	r3, [r7, #28]
 8001718:	f107 0310 	add.w	r3, r7, #16
 800171c:	4619      	mov	r1, r3
 800171e:	4805      	ldr	r0, [pc, #20]	; (8001734 <HAL_TIM_MspPostInit+0x60>)
 8001720:	f000 fae2 	bl	8001ce8 <HAL_GPIO_Init>
 8001724:	bf00      	nop
 8001726:	3720      	adds	r7, #32
 8001728:	46bd      	mov	sp, r7
 800172a:	bd80      	pop	{r7, pc}
 800172c:	40000400 	.word	0x40000400
 8001730:	40021000 	.word	0x40021000
 8001734:	40010800 	.word	0x40010800

08001738 <trafficLightBlinkGrn>:
uint16_t trafficLightPin[NUM_OF_TRAFFIC_LIGHTS][NUM_OF_PORTS] = {
		{D2_Pin, D3_Pin},
		{D4_Pin, D5_Pin}
};

void trafficLightBlinkGrn(int index) {
 8001738:	b580      	push	{r7, lr}
 800173a:	b082      	sub	sp, #8
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 8001740:	4a0e      	ldr	r2, [pc, #56]	; (800177c <trafficLightBlinkGrn+0x44>)
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	00db      	lsls	r3, r3, #3
 8001746:	4413      	add	r3, r2
 8001748:	685a      	ldr	r2, [r3, #4]
 800174a:	490d      	ldr	r1, [pc, #52]	; (8001780 <trafficLightBlinkGrn+0x48>)
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	009b      	lsls	r3, r3, #2
 8001750:	440b      	add	r3, r1
 8001752:	885b      	ldrh	r3, [r3, #2]
 8001754:	4619      	mov	r1, r3
 8001756:	4610      	mov	r0, r2
 8001758:	f000 fc79 	bl	800204e <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
 800175c:	4a07      	ldr	r2, [pc, #28]	; (800177c <trafficLightBlinkGrn+0x44>)
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001764:	4a06      	ldr	r2, [pc, #24]	; (8001780 <trafficLightBlinkGrn+0x48>)
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 800176c:	2200      	movs	r2, #0
 800176e:	4619      	mov	r1, r3
 8001770:	f000 fc55 	bl	800201e <HAL_GPIO_WritePin>
}
 8001774:	bf00      	nop
 8001776:	3708      	adds	r7, #8
 8001778:	46bd      	mov	sp, r7
 800177a:	bd80      	pop	{r7, pc}
 800177c:	2000030c 	.word	0x2000030c
 8001780:	2000031c 	.word	0x2000031c

08001784 <trafficLightBlinkYel>:

void trafficLightBlinkYel(int index) {
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 800178c:	4a0e      	ldr	r2, [pc, #56]	; (80017c8 <trafficLightBlinkYel+0x44>)
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	00db      	lsls	r3, r3, #3
 8001792:	4413      	add	r3, r2
 8001794:	685a      	ldr	r2, [r3, #4]
 8001796:	490d      	ldr	r1, [pc, #52]	; (80017cc <trafficLightBlinkYel+0x48>)
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	009b      	lsls	r3, r3, #2
 800179c:	440b      	add	r3, r1
 800179e:	885b      	ldrh	r3, [r3, #2]
 80017a0:	4619      	mov	r1, r3
 80017a2:	4610      	mov	r0, r2
 80017a4:	f000 fc53 	bl	800204e <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
 80017a8:	4a07      	ldr	r2, [pc, #28]	; (80017c8 <trafficLightBlinkYel+0x44>)
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 80017b0:	4906      	ldr	r1, [pc, #24]	; (80017cc <trafficLightBlinkYel+0x48>)
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	f831 3023 	ldrh.w	r3, [r1, r3, lsl #2]
 80017b8:	4619      	mov	r1, r3
 80017ba:	4610      	mov	r0, r2
 80017bc:	f000 fc47 	bl	800204e <HAL_GPIO_TogglePin>
}
 80017c0:	bf00      	nop
 80017c2:	3708      	adds	r7, #8
 80017c4:	46bd      	mov	sp, r7
 80017c6:	bd80      	pop	{r7, pc}
 80017c8:	2000030c 	.word	0x2000030c
 80017cc:	2000031c 	.word	0x2000031c

080017d0 <trafficLightGrn>:
void trafficLightBlinkRed(int index) {
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
}

void trafficLightGrn(int index) {
 80017d0:	b580      	push	{r7, lr}
 80017d2:	b082      	sub	sp, #8
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], ON);
 80017d8:	4a0e      	ldr	r2, [pc, #56]	; (8001814 <trafficLightGrn+0x44>)
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	00db      	lsls	r3, r3, #3
 80017de:	4413      	add	r3, r2
 80017e0:	6858      	ldr	r0, [r3, #4]
 80017e2:	4a0d      	ldr	r2, [pc, #52]	; (8001818 <trafficLightGrn+0x48>)
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	009b      	lsls	r3, r3, #2
 80017e8:	4413      	add	r3, r2
 80017ea:	885b      	ldrh	r3, [r3, #2]
 80017ec:	2201      	movs	r2, #1
 80017ee:	4619      	mov	r1, r3
 80017f0:	f000 fc15 	bl	800201e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
 80017f4:	4a07      	ldr	r2, [pc, #28]	; (8001814 <trafficLightGrn+0x44>)
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80017fc:	4a06      	ldr	r2, [pc, #24]	; (8001818 <trafficLightGrn+0x48>)
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001804:	2200      	movs	r2, #0
 8001806:	4619      	mov	r1, r3
 8001808:	f000 fc09 	bl	800201e <HAL_GPIO_WritePin>
}
 800180c:	bf00      	nop
 800180e:	3708      	adds	r7, #8
 8001810:	46bd      	mov	sp, r7
 8001812:	bd80      	pop	{r7, pc}
 8001814:	2000030c 	.word	0x2000030c
 8001818:	2000031c 	.word	0x2000031c

0800181c <trafficLightYel>:

void trafficLightYel(int index) {
 800181c:	b580      	push	{r7, lr}
 800181e:	b082      	sub	sp, #8
 8001820:	af00      	add	r7, sp, #0
 8001822:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], ON);
 8001824:	4a0e      	ldr	r2, [pc, #56]	; (8001860 <trafficLightYel+0x44>)
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	00db      	lsls	r3, r3, #3
 800182a:	4413      	add	r3, r2
 800182c:	6858      	ldr	r0, [r3, #4]
 800182e:	4a0d      	ldr	r2, [pc, #52]	; (8001864 <trafficLightYel+0x48>)
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	009b      	lsls	r3, r3, #2
 8001834:	4413      	add	r3, r2
 8001836:	885b      	ldrh	r3, [r3, #2]
 8001838:	2201      	movs	r2, #1
 800183a:	4619      	mov	r1, r3
 800183c:	f000 fbef 	bl	800201e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], ON);
 8001840:	4a07      	ldr	r2, [pc, #28]	; (8001860 <trafficLightYel+0x44>)
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001848:	4a06      	ldr	r2, [pc, #24]	; (8001864 <trafficLightYel+0x48>)
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001850:	2201      	movs	r2, #1
 8001852:	4619      	mov	r1, r3
 8001854:	f000 fbe3 	bl	800201e <HAL_GPIO_WritePin>
}
 8001858:	bf00      	nop
 800185a:	3708      	adds	r7, #8
 800185c:	46bd      	mov	sp, r7
 800185e:	bd80      	pop	{r7, pc}
 8001860:	2000030c 	.word	0x2000030c
 8001864:	2000031c 	.word	0x2000031c

08001868 <trafficLightRed>:

void trafficLightRed(int index) {
 8001868:	b580      	push	{r7, lr}
 800186a:	b082      	sub	sp, #8
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], ON);
 8001870:	4a0e      	ldr	r2, [pc, #56]	; (80018ac <trafficLightRed+0x44>)
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001878:	4a0d      	ldr	r2, [pc, #52]	; (80018b0 <trafficLightRed+0x48>)
 800187a:	687b      	ldr	r3, [r7, #4]
 800187c:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001880:	2201      	movs	r2, #1
 8001882:	4619      	mov	r1, r3
 8001884:	f000 fbcb 	bl	800201e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
 8001888:	4a08      	ldr	r2, [pc, #32]	; (80018ac <trafficLightRed+0x44>)
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	00db      	lsls	r3, r3, #3
 800188e:	4413      	add	r3, r2
 8001890:	6858      	ldr	r0, [r3, #4]
 8001892:	4a07      	ldr	r2, [pc, #28]	; (80018b0 <trafficLightRed+0x48>)
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	009b      	lsls	r3, r3, #2
 8001898:	4413      	add	r3, r2
 800189a:	885b      	ldrh	r3, [r3, #2]
 800189c:	2200      	movs	r2, #0
 800189e:	4619      	mov	r1, r3
 80018a0:	f000 fbbd 	bl	800201e <HAL_GPIO_WritePin>
}
 80018a4:	bf00      	nop
 80018a6:	3708      	adds	r7, #8
 80018a8:	46bd      	mov	sp, r7
 80018aa:	bd80      	pop	{r7, pc}
 80018ac:	2000030c 	.word	0x2000030c
 80018b0:	2000031c 	.word	0x2000031c

080018b4 <displayCountdown>:
 */


#include "uart_communication.h"

void displayCountdown(int value) {
 80018b4:	b580      	push	{r7, lr}
 80018b6:	b090      	sub	sp, #64	; 0x40
 80018b8:	af00      	add	r7, sp, #0
 80018ba:	6078      	str	r0, [r7, #4]
	char str[50];
	HAL_UART_Transmit(&huart2, (uint8_t *)str, sprintf(str, "!7SEG=%d#\r\n", value), 1000);
 80018bc:	f107 030c 	add.w	r3, r7, #12
 80018c0:	687a      	ldr	r2, [r7, #4]
 80018c2:	4908      	ldr	r1, [pc, #32]	; (80018e4 <displayCountdown+0x30>)
 80018c4:	4618      	mov	r0, r3
 80018c6:	f002 f95f 	bl	8003b88 <siprintf>
 80018ca:	4603      	mov	r3, r0
 80018cc:	b29a      	uxth	r2, r3
 80018ce:	f107 010c 	add.w	r1, r7, #12
 80018d2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80018d6:	4804      	ldr	r0, [pc, #16]	; (80018e8 <displayCountdown+0x34>)
 80018d8:	f001 ffb9 	bl	800384e <HAL_UART_Transmit>
}
 80018dc:	bf00      	nop
 80018de:	3740      	adds	r7, #64	; 0x40
 80018e0:	46bd      	mov	sp, r7
 80018e2:	bd80      	pop	{r7, pc}
 80018e4:	08004494 	.word	0x08004494
 80018e8:	200007b4 	.word	0x200007b4

080018ec <MX_USART2_UART_Init>:
 80018ec:	b580      	push	{r7, lr}
 80018ee:	af00      	add	r7, sp, #0
 80018f0:	4b11      	ldr	r3, [pc, #68]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 80018f2:	4a12      	ldr	r2, [pc, #72]	; (800193c <MX_USART2_UART_Init+0x50>)
 80018f4:	601a      	str	r2, [r3, #0]
 80018f6:	4b10      	ldr	r3, [pc, #64]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 80018f8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80018fc:	605a      	str	r2, [r3, #4]
 80018fe:	4b0e      	ldr	r3, [pc, #56]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 8001900:	2200      	movs	r2, #0
 8001902:	609a      	str	r2, [r3, #8]
 8001904:	4b0c      	ldr	r3, [pc, #48]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 8001906:	2200      	movs	r2, #0
 8001908:	60da      	str	r2, [r3, #12]
 800190a:	4b0b      	ldr	r3, [pc, #44]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 800190c:	2200      	movs	r2, #0
 800190e:	611a      	str	r2, [r3, #16]
 8001910:	4b09      	ldr	r3, [pc, #36]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 8001912:	220c      	movs	r2, #12
 8001914:	615a      	str	r2, [r3, #20]
 8001916:	4b08      	ldr	r3, [pc, #32]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 8001918:	2200      	movs	r2, #0
 800191a:	619a      	str	r2, [r3, #24]
 800191c:	4b06      	ldr	r3, [pc, #24]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 800191e:	2200      	movs	r2, #0
 8001920:	61da      	str	r2, [r3, #28]
 8001922:	4805      	ldr	r0, [pc, #20]	; (8001938 <MX_USART2_UART_Init+0x4c>)
 8001924:	f001 ff46 	bl	80037b4 <HAL_UART_Init>
 8001928:	4603      	mov	r3, r0
 800192a:	2b00      	cmp	r3, #0
 800192c:	d001      	beq.n	8001932 <MX_USART2_UART_Init+0x46>
 800192e:	f7ff faea 	bl	8000f06 <Error_Handler>
 8001932:	bf00      	nop
 8001934:	bd80      	pop	{r7, pc}
 8001936:	bf00      	nop
 8001938:	200007b4 	.word	0x200007b4
 800193c:	40004400 	.word	0x40004400

08001940 <HAL_UART_MspInit>:
 8001940:	b580      	push	{r7, lr}
 8001942:	b088      	sub	sp, #32
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	f107 0310 	add.w	r3, r7, #16
 800194c:	2200      	movs	r2, #0
 800194e:	601a      	str	r2, [r3, #0]
 8001950:	605a      	str	r2, [r3, #4]
 8001952:	609a      	str	r2, [r3, #8]
 8001954:	60da      	str	r2, [r3, #12]
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	681b      	ldr	r3, [r3, #0]
 800195a:	4a15      	ldr	r2, [pc, #84]	; (80019b0 <HAL_UART_MspInit+0x70>)
 800195c:	4293      	cmp	r3, r2
 800195e:	d123      	bne.n	80019a8 <HAL_UART_MspInit+0x68>
 8001960:	4b14      	ldr	r3, [pc, #80]	; (80019b4 <HAL_UART_MspInit+0x74>)
 8001962:	69db      	ldr	r3, [r3, #28]
 8001964:	4a13      	ldr	r2, [pc, #76]	; (80019b4 <HAL_UART_MspInit+0x74>)
 8001966:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800196a:	61d3      	str	r3, [r2, #28]
 800196c:	4b11      	ldr	r3, [pc, #68]	; (80019b4 <HAL_UART_MspInit+0x74>)
 800196e:	69db      	ldr	r3, [r3, #28]
 8001970:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001974:	60fb      	str	r3, [r7, #12]
 8001976:	68fb      	ldr	r3, [r7, #12]
 8001978:	4b0e      	ldr	r3, [pc, #56]	; (80019b4 <HAL_UART_MspInit+0x74>)
 800197a:	699b      	ldr	r3, [r3, #24]
 800197c:	4a0d      	ldr	r2, [pc, #52]	; (80019b4 <HAL_UART_MspInit+0x74>)
 800197e:	f043 0304 	orr.w	r3, r3, #4
 8001982:	6193      	str	r3, [r2, #24]
 8001984:	4b0b      	ldr	r3, [pc, #44]	; (80019b4 <HAL_UART_MspInit+0x74>)
 8001986:	699b      	ldr	r3, [r3, #24]
 8001988:	f003 0304 	and.w	r3, r3, #4
 800198c:	60bb      	str	r3, [r7, #8]
 800198e:	68bb      	ldr	r3, [r7, #8]
 8001990:	230c      	movs	r3, #12
 8001992:	613b      	str	r3, [r7, #16]
 8001994:	2302      	movs	r3, #2
 8001996:	617b      	str	r3, [r7, #20]
 8001998:	2302      	movs	r3, #2
 800199a:	61fb      	str	r3, [r7, #28]
 800199c:	f107 0310 	add.w	r3, r7, #16
 80019a0:	4619      	mov	r1, r3
 80019a2:	4805      	ldr	r0, [pc, #20]	; (80019b8 <HAL_UART_MspInit+0x78>)
 80019a4:	f000 f9a0 	bl	8001ce8 <HAL_GPIO_Init>
 80019a8:	bf00      	nop
 80019aa:	3720      	adds	r7, #32
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bd80      	pop	{r7, pc}
 80019b0:	40004400 	.word	0x40004400
 80019b4:	40021000 	.word	0x40021000
 80019b8:	40010800 	.word	0x40010800

080019bc <Reset_Handler>:
 80019bc:	480c      	ldr	r0, [pc, #48]	; (80019f0 <LoopFillZerobss+0x12>)
 80019be:	490d      	ldr	r1, [pc, #52]	; (80019f4 <LoopFillZerobss+0x16>)
 80019c0:	4a0d      	ldr	r2, [pc, #52]	; (80019f8 <LoopFillZerobss+0x1a>)
 80019c2:	2300      	movs	r3, #0
 80019c4:	e002      	b.n	80019cc <LoopCopyDataInit>

080019c6 <CopyDataInit>:
 80019c6:	58d4      	ldr	r4, [r2, r3]
 80019c8:	50c4      	str	r4, [r0, r3]
 80019ca:	3304      	adds	r3, #4

080019cc <LoopCopyDataInit>:
 80019cc:	18c4      	adds	r4, r0, r3
 80019ce:	428c      	cmp	r4, r1
 80019d0:	d3f9      	bcc.n	80019c6 <CopyDataInit>
 80019d2:	4a0a      	ldr	r2, [pc, #40]	; (80019fc <LoopFillZerobss+0x1e>)
 80019d4:	4c0a      	ldr	r4, [pc, #40]	; (8001a00 <LoopFillZerobss+0x22>)
 80019d6:	2300      	movs	r3, #0
 80019d8:	e001      	b.n	80019de <LoopFillZerobss>

080019da <FillZerobss>:
 80019da:	6013      	str	r3, [r2, #0]
 80019dc:	3204      	adds	r2, #4

080019de <LoopFillZerobss>:
 80019de:	42a2      	cmp	r2, r4
 80019e0:	d3fb      	bcc.n	80019da <FillZerobss>
 80019e2:	f7ff fd77 	bl	80014d4 <SystemInit>
 80019e6:	f002 f8a3 	bl	8003b30 <__libc_init_array>
 80019ea:	f7ff f9f5 	bl	8000dd8 <main>
 80019ee:	4770      	bx	lr
 80019f0:	20000000 	.word	0x20000000
 80019f4:	20000390 	.word	0x20000390
 80019f8:	08004504 	.word	0x08004504
 80019fc:	20000390 	.word	0x20000390
 8001a00:	2000080c 	.word	0x2000080c

08001a04 <ADC1_2_IRQHandler>:
 8001a04:	e7fe      	b.n	8001a04 <ADC1_2_IRQHandler>
	...

08001a08 <HAL_Init>:
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	af00      	add	r7, sp, #0
 8001a0c:	4b08      	ldr	r3, [pc, #32]	; (8001a30 <HAL_Init+0x28>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	4a07      	ldr	r2, [pc, #28]	; (8001a30 <HAL_Init+0x28>)
 8001a12:	f043 0310 	orr.w	r3, r3, #16
 8001a16:	6013      	str	r3, [r2, #0]
 8001a18:	2003      	movs	r0, #3
 8001a1a:	f000 f923 	bl	8001c64 <HAL_NVIC_SetPriorityGrouping>
 8001a1e:	2000      	movs	r0, #0
 8001a20:	f000 f808 	bl	8001a34 <HAL_InitTick>
 8001a24:	f7ff fcb4 	bl	8001390 <HAL_MspInit>
 8001a28:	2300      	movs	r3, #0
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	bd80      	pop	{r7, pc}
 8001a2e:	bf00      	nop
 8001a30:	40022000 	.word	0x40022000

08001a34 <HAL_InitTick>:
 8001a34:	b580      	push	{r7, lr}
 8001a36:	b082      	sub	sp, #8
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	6078      	str	r0, [r7, #4]
 8001a3c:	4b12      	ldr	r3, [pc, #72]	; (8001a88 <HAL_InitTick+0x54>)
 8001a3e:	681a      	ldr	r2, [r3, #0]
 8001a40:	4b12      	ldr	r3, [pc, #72]	; (8001a8c <HAL_InitTick+0x58>)
 8001a42:	781b      	ldrb	r3, [r3, #0]
 8001a44:	4619      	mov	r1, r3
 8001a46:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001a4a:	fbb3 f3f1 	udiv	r3, r3, r1
 8001a4e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a52:	4618      	mov	r0, r3
 8001a54:	f000 f93b 	bl	8001cce <HAL_SYSTICK_Config>
 8001a58:	4603      	mov	r3, r0
 8001a5a:	2b00      	cmp	r3, #0
 8001a5c:	d001      	beq.n	8001a62 <HAL_InitTick+0x2e>
 8001a5e:	2301      	movs	r3, #1
 8001a60:	e00e      	b.n	8001a80 <HAL_InitTick+0x4c>
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	2b0f      	cmp	r3, #15
 8001a66:	d80a      	bhi.n	8001a7e <HAL_InitTick+0x4a>
 8001a68:	2200      	movs	r2, #0
 8001a6a:	6879      	ldr	r1, [r7, #4]
 8001a6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001a70:	f000 f903 	bl	8001c7a <HAL_NVIC_SetPriority>
 8001a74:	4a06      	ldr	r2, [pc, #24]	; (8001a90 <HAL_InitTick+0x5c>)
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	6013      	str	r3, [r2, #0]
 8001a7a:	2300      	movs	r3, #0
 8001a7c:	e000      	b.n	8001a80 <HAL_InitTick+0x4c>
 8001a7e:	2301      	movs	r3, #1
 8001a80:	4618      	mov	r0, r3
 8001a82:	3708      	adds	r7, #8
 8001a84:	46bd      	mov	sp, r7
 8001a86:	bd80      	pop	{r7, pc}
 8001a88:	20000308 	.word	0x20000308
 8001a8c:	20000328 	.word	0x20000328
 8001a90:	20000324 	.word	0x20000324

08001a94 <HAL_IncTick>:
 8001a94:	b480      	push	{r7}
 8001a96:	af00      	add	r7, sp, #0
 8001a98:	4b05      	ldr	r3, [pc, #20]	; (8001ab0 <HAL_IncTick+0x1c>)
 8001a9a:	781b      	ldrb	r3, [r3, #0]
 8001a9c:	461a      	mov	r2, r3
 8001a9e:	4b05      	ldr	r3, [pc, #20]	; (8001ab4 <HAL_IncTick+0x20>)
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	4413      	add	r3, r2
 8001aa4:	4a03      	ldr	r2, [pc, #12]	; (8001ab4 <HAL_IncTick+0x20>)
 8001aa6:	6013      	str	r3, [r2, #0]
 8001aa8:	bf00      	nop
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	bc80      	pop	{r7}
 8001aae:	4770      	bx	lr
 8001ab0:	20000328 	.word	0x20000328
 8001ab4:	200007f8 	.word	0x200007f8

08001ab8 <HAL_GetTick>:
 8001ab8:	b480      	push	{r7}
 8001aba:	af00      	add	r7, sp, #0
 8001abc:	4b02      	ldr	r3, [pc, #8]	; (8001ac8 <HAL_GetTick+0x10>)
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	4618      	mov	r0, r3
 8001ac2:	46bd      	mov	sp, r7
 8001ac4:	bc80      	pop	{r7}
 8001ac6:	4770      	bx	lr
 8001ac8:	200007f8 	.word	0x200007f8

08001acc <__NVIC_SetPriorityGrouping>:
 8001acc:	b480      	push	{r7}
 8001ace:	b085      	sub	sp, #20
 8001ad0:	af00      	add	r7, sp, #0
 8001ad2:	6078      	str	r0, [r7, #4]
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	f003 0307 	and.w	r3, r3, #7
 8001ada:	60fb      	str	r3, [r7, #12]
 8001adc:	4b0c      	ldr	r3, [pc, #48]	; (8001b10 <__NVIC_SetPriorityGrouping+0x44>)
 8001ade:	68db      	ldr	r3, [r3, #12]
 8001ae0:	60bb      	str	r3, [r7, #8]
 8001ae2:	68ba      	ldr	r2, [r7, #8]
 8001ae4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001ae8:	4013      	ands	r3, r2
 8001aea:	60bb      	str	r3, [r7, #8]
 8001aec:	68fb      	ldr	r3, [r7, #12]
 8001aee:	021a      	lsls	r2, r3, #8
 8001af0:	68bb      	ldr	r3, [r7, #8]
 8001af2:	4313      	orrs	r3, r2
 8001af4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001af8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001afc:	60bb      	str	r3, [r7, #8]
 8001afe:	4a04      	ldr	r2, [pc, #16]	; (8001b10 <__NVIC_SetPriorityGrouping+0x44>)
 8001b00:	68bb      	ldr	r3, [r7, #8]
 8001b02:	60d3      	str	r3, [r2, #12]
 8001b04:	bf00      	nop
 8001b06:	3714      	adds	r7, #20
 8001b08:	46bd      	mov	sp, r7
 8001b0a:	bc80      	pop	{r7}
 8001b0c:	4770      	bx	lr
 8001b0e:	bf00      	nop
 8001b10:	e000ed00 	.word	0xe000ed00

08001b14 <__NVIC_GetPriorityGrouping>:
 8001b14:	b480      	push	{r7}
 8001b16:	af00      	add	r7, sp, #0
 8001b18:	4b04      	ldr	r3, [pc, #16]	; (8001b2c <__NVIC_GetPriorityGrouping+0x18>)
 8001b1a:	68db      	ldr	r3, [r3, #12]
 8001b1c:	0a1b      	lsrs	r3, r3, #8
 8001b1e:	f003 0307 	and.w	r3, r3, #7
 8001b22:	4618      	mov	r0, r3
 8001b24:	46bd      	mov	sp, r7
 8001b26:	bc80      	pop	{r7}
 8001b28:	4770      	bx	lr
 8001b2a:	bf00      	nop
 8001b2c:	e000ed00 	.word	0xe000ed00

08001b30 <__NVIC_EnableIRQ>:
 8001b30:	b480      	push	{r7}
 8001b32:	b083      	sub	sp, #12
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	4603      	mov	r3, r0
 8001b38:	71fb      	strb	r3, [r7, #7]
 8001b3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	db0b      	blt.n	8001b5a <__NVIC_EnableIRQ+0x2a>
 8001b42:	79fb      	ldrb	r3, [r7, #7]
 8001b44:	f003 021f 	and.w	r2, r3, #31
 8001b48:	4906      	ldr	r1, [pc, #24]	; (8001b64 <__NVIC_EnableIRQ+0x34>)
 8001b4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b4e:	095b      	lsrs	r3, r3, #5
 8001b50:	2001      	movs	r0, #1
 8001b52:	fa00 f202 	lsl.w	r2, r0, r2
 8001b56:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001b5a:	bf00      	nop
 8001b5c:	370c      	adds	r7, #12
 8001b5e:	46bd      	mov	sp, r7
 8001b60:	bc80      	pop	{r7}
 8001b62:	4770      	bx	lr
 8001b64:	e000e100 	.word	0xe000e100

08001b68 <__NVIC_SetPriority>:
 8001b68:	b480      	push	{r7}
 8001b6a:	b083      	sub	sp, #12
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	4603      	mov	r3, r0
 8001b70:	6039      	str	r1, [r7, #0]
 8001b72:	71fb      	strb	r3, [r7, #7]
 8001b74:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b78:	2b00      	cmp	r3, #0
 8001b7a:	db0a      	blt.n	8001b92 <__NVIC_SetPriority+0x2a>
 8001b7c:	683b      	ldr	r3, [r7, #0]
 8001b7e:	b2da      	uxtb	r2, r3
 8001b80:	490c      	ldr	r1, [pc, #48]	; (8001bb4 <__NVIC_SetPriority+0x4c>)
 8001b82:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b86:	0112      	lsls	r2, r2, #4
 8001b88:	b2d2      	uxtb	r2, r2
 8001b8a:	440b      	add	r3, r1
 8001b8c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001b90:	e00a      	b.n	8001ba8 <__NVIC_SetPriority+0x40>
 8001b92:	683b      	ldr	r3, [r7, #0]
 8001b94:	b2da      	uxtb	r2, r3
 8001b96:	4908      	ldr	r1, [pc, #32]	; (8001bb8 <__NVIC_SetPriority+0x50>)
 8001b98:	79fb      	ldrb	r3, [r7, #7]
 8001b9a:	f003 030f 	and.w	r3, r3, #15
 8001b9e:	3b04      	subs	r3, #4
 8001ba0:	0112      	lsls	r2, r2, #4
 8001ba2:	b2d2      	uxtb	r2, r2
 8001ba4:	440b      	add	r3, r1
 8001ba6:	761a      	strb	r2, [r3, #24]
 8001ba8:	bf00      	nop
 8001baa:	370c      	adds	r7, #12
 8001bac:	46bd      	mov	sp, r7
 8001bae:	bc80      	pop	{r7}
 8001bb0:	4770      	bx	lr
 8001bb2:	bf00      	nop
 8001bb4:	e000e100 	.word	0xe000e100
 8001bb8:	e000ed00 	.word	0xe000ed00

08001bbc <NVIC_EncodePriority>:
 8001bbc:	b480      	push	{r7}
 8001bbe:	b089      	sub	sp, #36	; 0x24
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	60f8      	str	r0, [r7, #12]
 8001bc4:	60b9      	str	r1, [r7, #8]
 8001bc6:	607a      	str	r2, [r7, #4]
 8001bc8:	68fb      	ldr	r3, [r7, #12]
 8001bca:	f003 0307 	and.w	r3, r3, #7
 8001bce:	61fb      	str	r3, [r7, #28]
 8001bd0:	69fb      	ldr	r3, [r7, #28]
 8001bd2:	f1c3 0307 	rsb	r3, r3, #7
 8001bd6:	2b04      	cmp	r3, #4
 8001bd8:	bf28      	it	cs
 8001bda:	2304      	movcs	r3, #4
 8001bdc:	61bb      	str	r3, [r7, #24]
 8001bde:	69fb      	ldr	r3, [r7, #28]
 8001be0:	3304      	adds	r3, #4
 8001be2:	2b06      	cmp	r3, #6
 8001be4:	d902      	bls.n	8001bec <NVIC_EncodePriority+0x30>
 8001be6:	69fb      	ldr	r3, [r7, #28]
 8001be8:	3b03      	subs	r3, #3
 8001bea:	e000      	b.n	8001bee <NVIC_EncodePriority+0x32>
 8001bec:	2300      	movs	r3, #0
 8001bee:	617b      	str	r3, [r7, #20]
 8001bf0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001bf4:	69bb      	ldr	r3, [r7, #24]
 8001bf6:	fa02 f303 	lsl.w	r3, r2, r3
 8001bfa:	43da      	mvns	r2, r3
 8001bfc:	68bb      	ldr	r3, [r7, #8]
 8001bfe:	401a      	ands	r2, r3
 8001c00:	697b      	ldr	r3, [r7, #20]
 8001c02:	409a      	lsls	r2, r3
 8001c04:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001c08:	697b      	ldr	r3, [r7, #20]
 8001c0a:	fa01 f303 	lsl.w	r3, r1, r3
 8001c0e:	43d9      	mvns	r1, r3
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	400b      	ands	r3, r1
 8001c14:	4313      	orrs	r3, r2
 8001c16:	4618      	mov	r0, r3
 8001c18:	3724      	adds	r7, #36	; 0x24
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	bc80      	pop	{r7}
 8001c1e:	4770      	bx	lr

08001c20 <SysTick_Config>:
 8001c20:	b580      	push	{r7, lr}
 8001c22:	b082      	sub	sp, #8
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	3b01      	subs	r3, #1
 8001c2c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001c30:	d301      	bcc.n	8001c36 <SysTick_Config+0x16>
 8001c32:	2301      	movs	r3, #1
 8001c34:	e00f      	b.n	8001c56 <SysTick_Config+0x36>
 8001c36:	4a0a      	ldr	r2, [pc, #40]	; (8001c60 <SysTick_Config+0x40>)
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	3b01      	subs	r3, #1
 8001c3c:	6053      	str	r3, [r2, #4]
 8001c3e:	210f      	movs	r1, #15
 8001c40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c44:	f7ff ff90 	bl	8001b68 <__NVIC_SetPriority>
 8001c48:	4b05      	ldr	r3, [pc, #20]	; (8001c60 <SysTick_Config+0x40>)
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	609a      	str	r2, [r3, #8]
 8001c4e:	4b04      	ldr	r3, [pc, #16]	; (8001c60 <SysTick_Config+0x40>)
 8001c50:	2207      	movs	r2, #7
 8001c52:	601a      	str	r2, [r3, #0]
 8001c54:	2300      	movs	r3, #0
 8001c56:	4618      	mov	r0, r3
 8001c58:	3708      	adds	r7, #8
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	bd80      	pop	{r7, pc}
 8001c5e:	bf00      	nop
 8001c60:	e000e010 	.word	0xe000e010

08001c64 <HAL_NVIC_SetPriorityGrouping>:
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b082      	sub	sp, #8
 8001c68:	af00      	add	r7, sp, #0
 8001c6a:	6078      	str	r0, [r7, #4]
 8001c6c:	6878      	ldr	r0, [r7, #4]
 8001c6e:	f7ff ff2d 	bl	8001acc <__NVIC_SetPriorityGrouping>
 8001c72:	bf00      	nop
 8001c74:	3708      	adds	r7, #8
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bd80      	pop	{r7, pc}

08001c7a <HAL_NVIC_SetPriority>:
 8001c7a:	b580      	push	{r7, lr}
 8001c7c:	b086      	sub	sp, #24
 8001c7e:	af00      	add	r7, sp, #0
 8001c80:	4603      	mov	r3, r0
 8001c82:	60b9      	str	r1, [r7, #8]
 8001c84:	607a      	str	r2, [r7, #4]
 8001c86:	73fb      	strb	r3, [r7, #15]
 8001c88:	2300      	movs	r3, #0
 8001c8a:	617b      	str	r3, [r7, #20]
 8001c8c:	f7ff ff42 	bl	8001b14 <__NVIC_GetPriorityGrouping>
 8001c90:	6178      	str	r0, [r7, #20]
 8001c92:	687a      	ldr	r2, [r7, #4]
 8001c94:	68b9      	ldr	r1, [r7, #8]
 8001c96:	6978      	ldr	r0, [r7, #20]
 8001c98:	f7ff ff90 	bl	8001bbc <NVIC_EncodePriority>
 8001c9c:	4602      	mov	r2, r0
 8001c9e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ca2:	4611      	mov	r1, r2
 8001ca4:	4618      	mov	r0, r3
 8001ca6:	f7ff ff5f 	bl	8001b68 <__NVIC_SetPriority>
 8001caa:	bf00      	nop
 8001cac:	3718      	adds	r7, #24
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	bd80      	pop	{r7, pc}

08001cb2 <HAL_NVIC_EnableIRQ>:
 8001cb2:	b580      	push	{r7, lr}
 8001cb4:	b082      	sub	sp, #8
 8001cb6:	af00      	add	r7, sp, #0
 8001cb8:	4603      	mov	r3, r0
 8001cba:	71fb      	strb	r3, [r7, #7]
 8001cbc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	f7ff ff35 	bl	8001b30 <__NVIC_EnableIRQ>
 8001cc6:	bf00      	nop
 8001cc8:	3708      	adds	r7, #8
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	bd80      	pop	{r7, pc}

08001cce <HAL_SYSTICK_Config>:
 8001cce:	b580      	push	{r7, lr}
 8001cd0:	b082      	sub	sp, #8
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	6078      	str	r0, [r7, #4]
 8001cd6:	6878      	ldr	r0, [r7, #4]
 8001cd8:	f7ff ffa2 	bl	8001c20 <SysTick_Config>
 8001cdc:	4603      	mov	r3, r0
 8001cde:	4618      	mov	r0, r3
 8001ce0:	3708      	adds	r7, #8
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	bd80      	pop	{r7, pc}
	...

08001ce8 <HAL_GPIO_Init>:
 8001ce8:	b480      	push	{r7}
 8001cea:	b08b      	sub	sp, #44	; 0x2c
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
 8001cf0:	6039      	str	r1, [r7, #0]
 8001cf2:	2300      	movs	r3, #0
 8001cf4:	627b      	str	r3, [r7, #36]	; 0x24
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	623b      	str	r3, [r7, #32]
 8001cfa:	e169      	b.n	8001fd0 <HAL_GPIO_Init+0x2e8>
 8001cfc:	2201      	movs	r2, #1
 8001cfe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d00:	fa02 f303 	lsl.w	r3, r2, r3
 8001d04:	61fb      	str	r3, [r7, #28]
 8001d06:	683b      	ldr	r3, [r7, #0]
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	69fa      	ldr	r2, [r7, #28]
 8001d0c:	4013      	ands	r3, r2
 8001d0e:	61bb      	str	r3, [r7, #24]
 8001d10:	69ba      	ldr	r2, [r7, #24]
 8001d12:	69fb      	ldr	r3, [r7, #28]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	f040 8158 	bne.w	8001fca <HAL_GPIO_Init+0x2e2>
 8001d1a:	683b      	ldr	r3, [r7, #0]
 8001d1c:	685b      	ldr	r3, [r3, #4]
 8001d1e:	4a9a      	ldr	r2, [pc, #616]	; (8001f88 <HAL_GPIO_Init+0x2a0>)
 8001d20:	4293      	cmp	r3, r2
 8001d22:	d05e      	beq.n	8001de2 <HAL_GPIO_Init+0xfa>
 8001d24:	4a98      	ldr	r2, [pc, #608]	; (8001f88 <HAL_GPIO_Init+0x2a0>)
 8001d26:	4293      	cmp	r3, r2
 8001d28:	d875      	bhi.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001d2a:	4a98      	ldr	r2, [pc, #608]	; (8001f8c <HAL_GPIO_Init+0x2a4>)
 8001d2c:	4293      	cmp	r3, r2
 8001d2e:	d058      	beq.n	8001de2 <HAL_GPIO_Init+0xfa>
 8001d30:	4a96      	ldr	r2, [pc, #600]	; (8001f8c <HAL_GPIO_Init+0x2a4>)
 8001d32:	4293      	cmp	r3, r2
 8001d34:	d86f      	bhi.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001d36:	4a96      	ldr	r2, [pc, #600]	; (8001f90 <HAL_GPIO_Init+0x2a8>)
 8001d38:	4293      	cmp	r3, r2
 8001d3a:	d052      	beq.n	8001de2 <HAL_GPIO_Init+0xfa>
 8001d3c:	4a94      	ldr	r2, [pc, #592]	; (8001f90 <HAL_GPIO_Init+0x2a8>)
 8001d3e:	4293      	cmp	r3, r2
 8001d40:	d869      	bhi.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001d42:	4a94      	ldr	r2, [pc, #592]	; (8001f94 <HAL_GPIO_Init+0x2ac>)
 8001d44:	4293      	cmp	r3, r2
 8001d46:	d04c      	beq.n	8001de2 <HAL_GPIO_Init+0xfa>
 8001d48:	4a92      	ldr	r2, [pc, #584]	; (8001f94 <HAL_GPIO_Init+0x2ac>)
 8001d4a:	4293      	cmp	r3, r2
 8001d4c:	d863      	bhi.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001d4e:	4a92      	ldr	r2, [pc, #584]	; (8001f98 <HAL_GPIO_Init+0x2b0>)
 8001d50:	4293      	cmp	r3, r2
 8001d52:	d046      	beq.n	8001de2 <HAL_GPIO_Init+0xfa>
 8001d54:	4a90      	ldr	r2, [pc, #576]	; (8001f98 <HAL_GPIO_Init+0x2b0>)
 8001d56:	4293      	cmp	r3, r2
 8001d58:	d85d      	bhi.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001d5a:	2b12      	cmp	r3, #18
 8001d5c:	d82a      	bhi.n	8001db4 <HAL_GPIO_Init+0xcc>
 8001d5e:	2b12      	cmp	r3, #18
 8001d60:	d859      	bhi.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001d62:	a201      	add	r2, pc, #4	; (adr r2, 8001d68 <HAL_GPIO_Init+0x80>)
 8001d64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001d68:	08001de3 	.word	0x08001de3
 8001d6c:	08001dbd 	.word	0x08001dbd
 8001d70:	08001dcf 	.word	0x08001dcf
 8001d74:	08001e11 	.word	0x08001e11
 8001d78:	08001e17 	.word	0x08001e17
 8001d7c:	08001e17 	.word	0x08001e17
 8001d80:	08001e17 	.word	0x08001e17
 8001d84:	08001e17 	.word	0x08001e17
 8001d88:	08001e17 	.word	0x08001e17
 8001d8c:	08001e17 	.word	0x08001e17
 8001d90:	08001e17 	.word	0x08001e17
 8001d94:	08001e17 	.word	0x08001e17
 8001d98:	08001e17 	.word	0x08001e17
 8001d9c:	08001e17 	.word	0x08001e17
 8001da0:	08001e17 	.word	0x08001e17
 8001da4:	08001e17 	.word	0x08001e17
 8001da8:	08001e17 	.word	0x08001e17
 8001dac:	08001dc5 	.word	0x08001dc5
 8001db0:	08001dd9 	.word	0x08001dd9
 8001db4:	4a79      	ldr	r2, [pc, #484]	; (8001f9c <HAL_GPIO_Init+0x2b4>)
 8001db6:	4293      	cmp	r3, r2
 8001db8:	d013      	beq.n	8001de2 <HAL_GPIO_Init+0xfa>
 8001dba:	e02c      	b.n	8001e16 <HAL_GPIO_Init+0x12e>
 8001dbc:	683b      	ldr	r3, [r7, #0]
 8001dbe:	68db      	ldr	r3, [r3, #12]
 8001dc0:	623b      	str	r3, [r7, #32]
 8001dc2:	e029      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001dc4:	683b      	ldr	r3, [r7, #0]
 8001dc6:	68db      	ldr	r3, [r3, #12]
 8001dc8:	3304      	adds	r3, #4
 8001dca:	623b      	str	r3, [r7, #32]
 8001dcc:	e024      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001dce:	683b      	ldr	r3, [r7, #0]
 8001dd0:	68db      	ldr	r3, [r3, #12]
 8001dd2:	3308      	adds	r3, #8
 8001dd4:	623b      	str	r3, [r7, #32]
 8001dd6:	e01f      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001dd8:	683b      	ldr	r3, [r7, #0]
 8001dda:	68db      	ldr	r3, [r3, #12]
 8001ddc:	330c      	adds	r3, #12
 8001dde:	623b      	str	r3, [r7, #32]
 8001de0:	e01a      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001de2:	683b      	ldr	r3, [r7, #0]
 8001de4:	689b      	ldr	r3, [r3, #8]
 8001de6:	2b00      	cmp	r3, #0
 8001de8:	d102      	bne.n	8001df0 <HAL_GPIO_Init+0x108>
 8001dea:	2304      	movs	r3, #4
 8001dec:	623b      	str	r3, [r7, #32]
 8001dee:	e013      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001df0:	683b      	ldr	r3, [r7, #0]
 8001df2:	689b      	ldr	r3, [r3, #8]
 8001df4:	2b01      	cmp	r3, #1
 8001df6:	d105      	bne.n	8001e04 <HAL_GPIO_Init+0x11c>
 8001df8:	2308      	movs	r3, #8
 8001dfa:	623b      	str	r3, [r7, #32]
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	69fa      	ldr	r2, [r7, #28]
 8001e00:	611a      	str	r2, [r3, #16]
 8001e02:	e009      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001e04:	2308      	movs	r3, #8
 8001e06:	623b      	str	r3, [r7, #32]
 8001e08:	687b      	ldr	r3, [r7, #4]
 8001e0a:	69fa      	ldr	r2, [r7, #28]
 8001e0c:	615a      	str	r2, [r3, #20]
 8001e0e:	e003      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001e10:	2300      	movs	r3, #0
 8001e12:	623b      	str	r3, [r7, #32]
 8001e14:	e000      	b.n	8001e18 <HAL_GPIO_Init+0x130>
 8001e16:	bf00      	nop
 8001e18:	69bb      	ldr	r3, [r7, #24]
 8001e1a:	2bff      	cmp	r3, #255	; 0xff
 8001e1c:	d801      	bhi.n	8001e22 <HAL_GPIO_Init+0x13a>
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	e001      	b.n	8001e26 <HAL_GPIO_Init+0x13e>
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	3304      	adds	r3, #4
 8001e26:	617b      	str	r3, [r7, #20]
 8001e28:	69bb      	ldr	r3, [r7, #24]
 8001e2a:	2bff      	cmp	r3, #255	; 0xff
 8001e2c:	d802      	bhi.n	8001e34 <HAL_GPIO_Init+0x14c>
 8001e2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e30:	009b      	lsls	r3, r3, #2
 8001e32:	e002      	b.n	8001e3a <HAL_GPIO_Init+0x152>
 8001e34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e36:	3b08      	subs	r3, #8
 8001e38:	009b      	lsls	r3, r3, #2
 8001e3a:	613b      	str	r3, [r7, #16]
 8001e3c:	697b      	ldr	r3, [r7, #20]
 8001e3e:	681a      	ldr	r2, [r3, #0]
 8001e40:	210f      	movs	r1, #15
 8001e42:	693b      	ldr	r3, [r7, #16]
 8001e44:	fa01 f303 	lsl.w	r3, r1, r3
 8001e48:	43db      	mvns	r3, r3
 8001e4a:	401a      	ands	r2, r3
 8001e4c:	6a39      	ldr	r1, [r7, #32]
 8001e4e:	693b      	ldr	r3, [r7, #16]
 8001e50:	fa01 f303 	lsl.w	r3, r1, r3
 8001e54:	431a      	orrs	r2, r3
 8001e56:	697b      	ldr	r3, [r7, #20]
 8001e58:	601a      	str	r2, [r3, #0]
 8001e5a:	683b      	ldr	r3, [r7, #0]
 8001e5c:	685b      	ldr	r3, [r3, #4]
 8001e5e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	f000 80b1 	beq.w	8001fca <HAL_GPIO_Init+0x2e2>
 8001e68:	4b4d      	ldr	r3, [pc, #308]	; (8001fa0 <HAL_GPIO_Init+0x2b8>)
 8001e6a:	699b      	ldr	r3, [r3, #24]
 8001e6c:	4a4c      	ldr	r2, [pc, #304]	; (8001fa0 <HAL_GPIO_Init+0x2b8>)
 8001e6e:	f043 0301 	orr.w	r3, r3, #1
 8001e72:	6193      	str	r3, [r2, #24]
 8001e74:	4b4a      	ldr	r3, [pc, #296]	; (8001fa0 <HAL_GPIO_Init+0x2b8>)
 8001e76:	699b      	ldr	r3, [r3, #24]
 8001e78:	f003 0301 	and.w	r3, r3, #1
 8001e7c:	60bb      	str	r3, [r7, #8]
 8001e7e:	68bb      	ldr	r3, [r7, #8]
 8001e80:	4a48      	ldr	r2, [pc, #288]	; (8001fa4 <HAL_GPIO_Init+0x2bc>)
 8001e82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e84:	089b      	lsrs	r3, r3, #2
 8001e86:	3302      	adds	r3, #2
 8001e88:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e8c:	60fb      	str	r3, [r7, #12]
 8001e8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e90:	f003 0303 	and.w	r3, r3, #3
 8001e94:	009b      	lsls	r3, r3, #2
 8001e96:	220f      	movs	r2, #15
 8001e98:	fa02 f303 	lsl.w	r3, r2, r3
 8001e9c:	43db      	mvns	r3, r3
 8001e9e:	68fa      	ldr	r2, [r7, #12]
 8001ea0:	4013      	ands	r3, r2
 8001ea2:	60fb      	str	r3, [r7, #12]
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	4a40      	ldr	r2, [pc, #256]	; (8001fa8 <HAL_GPIO_Init+0x2c0>)
 8001ea8:	4293      	cmp	r3, r2
 8001eaa:	d013      	beq.n	8001ed4 <HAL_GPIO_Init+0x1ec>
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	4a3f      	ldr	r2, [pc, #252]	; (8001fac <HAL_GPIO_Init+0x2c4>)
 8001eb0:	4293      	cmp	r3, r2
 8001eb2:	d00d      	beq.n	8001ed0 <HAL_GPIO_Init+0x1e8>
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	4a3e      	ldr	r2, [pc, #248]	; (8001fb0 <HAL_GPIO_Init+0x2c8>)
 8001eb8:	4293      	cmp	r3, r2
 8001eba:	d007      	beq.n	8001ecc <HAL_GPIO_Init+0x1e4>
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	4a3d      	ldr	r2, [pc, #244]	; (8001fb4 <HAL_GPIO_Init+0x2cc>)
 8001ec0:	4293      	cmp	r3, r2
 8001ec2:	d101      	bne.n	8001ec8 <HAL_GPIO_Init+0x1e0>
 8001ec4:	2303      	movs	r3, #3
 8001ec6:	e006      	b.n	8001ed6 <HAL_GPIO_Init+0x1ee>
 8001ec8:	2304      	movs	r3, #4
 8001eca:	e004      	b.n	8001ed6 <HAL_GPIO_Init+0x1ee>
 8001ecc:	2302      	movs	r3, #2
 8001ece:	e002      	b.n	8001ed6 <HAL_GPIO_Init+0x1ee>
 8001ed0:	2301      	movs	r3, #1
 8001ed2:	e000      	b.n	8001ed6 <HAL_GPIO_Init+0x1ee>
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001ed8:	f002 0203 	and.w	r2, r2, #3
 8001edc:	0092      	lsls	r2, r2, #2
 8001ede:	4093      	lsls	r3, r2
 8001ee0:	68fa      	ldr	r2, [r7, #12]
 8001ee2:	4313      	orrs	r3, r2
 8001ee4:	60fb      	str	r3, [r7, #12]
 8001ee6:	492f      	ldr	r1, [pc, #188]	; (8001fa4 <HAL_GPIO_Init+0x2bc>)
 8001ee8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001eea:	089b      	lsrs	r3, r3, #2
 8001eec:	3302      	adds	r3, #2
 8001eee:	68fa      	ldr	r2, [r7, #12]
 8001ef0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001ef4:	683b      	ldr	r3, [r7, #0]
 8001ef6:	685b      	ldr	r3, [r3, #4]
 8001ef8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001efc:	2b00      	cmp	r3, #0
 8001efe:	d006      	beq.n	8001f0e <HAL_GPIO_Init+0x226>
 8001f00:	4b2d      	ldr	r3, [pc, #180]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f02:	681a      	ldr	r2, [r3, #0]
 8001f04:	492c      	ldr	r1, [pc, #176]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f06:	69bb      	ldr	r3, [r7, #24]
 8001f08:	4313      	orrs	r3, r2
 8001f0a:	600b      	str	r3, [r1, #0]
 8001f0c:	e006      	b.n	8001f1c <HAL_GPIO_Init+0x234>
 8001f0e:	4b2a      	ldr	r3, [pc, #168]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f10:	681a      	ldr	r2, [r3, #0]
 8001f12:	69bb      	ldr	r3, [r7, #24]
 8001f14:	43db      	mvns	r3, r3
 8001f16:	4928      	ldr	r1, [pc, #160]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f18:	4013      	ands	r3, r2
 8001f1a:	600b      	str	r3, [r1, #0]
 8001f1c:	683b      	ldr	r3, [r7, #0]
 8001f1e:	685b      	ldr	r3, [r3, #4]
 8001f20:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d006      	beq.n	8001f36 <HAL_GPIO_Init+0x24e>
 8001f28:	4b23      	ldr	r3, [pc, #140]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f2a:	685a      	ldr	r2, [r3, #4]
 8001f2c:	4922      	ldr	r1, [pc, #136]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f2e:	69bb      	ldr	r3, [r7, #24]
 8001f30:	4313      	orrs	r3, r2
 8001f32:	604b      	str	r3, [r1, #4]
 8001f34:	e006      	b.n	8001f44 <HAL_GPIO_Init+0x25c>
 8001f36:	4b20      	ldr	r3, [pc, #128]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f38:	685a      	ldr	r2, [r3, #4]
 8001f3a:	69bb      	ldr	r3, [r7, #24]
 8001f3c:	43db      	mvns	r3, r3
 8001f3e:	491e      	ldr	r1, [pc, #120]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f40:	4013      	ands	r3, r2
 8001f42:	604b      	str	r3, [r1, #4]
 8001f44:	683b      	ldr	r3, [r7, #0]
 8001f46:	685b      	ldr	r3, [r3, #4]
 8001f48:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001f4c:	2b00      	cmp	r3, #0
 8001f4e:	d006      	beq.n	8001f5e <HAL_GPIO_Init+0x276>
 8001f50:	4b19      	ldr	r3, [pc, #100]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f52:	689a      	ldr	r2, [r3, #8]
 8001f54:	4918      	ldr	r1, [pc, #96]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f56:	69bb      	ldr	r3, [r7, #24]
 8001f58:	4313      	orrs	r3, r2
 8001f5a:	608b      	str	r3, [r1, #8]
 8001f5c:	e006      	b.n	8001f6c <HAL_GPIO_Init+0x284>
 8001f5e:	4b16      	ldr	r3, [pc, #88]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f60:	689a      	ldr	r2, [r3, #8]
 8001f62:	69bb      	ldr	r3, [r7, #24]
 8001f64:	43db      	mvns	r3, r3
 8001f66:	4914      	ldr	r1, [pc, #80]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f68:	4013      	ands	r3, r2
 8001f6a:	608b      	str	r3, [r1, #8]
 8001f6c:	683b      	ldr	r3, [r7, #0]
 8001f6e:	685b      	ldr	r3, [r3, #4]
 8001f70:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001f74:	2b00      	cmp	r3, #0
 8001f76:	d021      	beq.n	8001fbc <HAL_GPIO_Init+0x2d4>
 8001f78:	4b0f      	ldr	r3, [pc, #60]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f7a:	68da      	ldr	r2, [r3, #12]
 8001f7c:	490e      	ldr	r1, [pc, #56]	; (8001fb8 <HAL_GPIO_Init+0x2d0>)
 8001f7e:	69bb      	ldr	r3, [r7, #24]
 8001f80:	4313      	orrs	r3, r2
 8001f82:	60cb      	str	r3, [r1, #12]
 8001f84:	e021      	b.n	8001fca <HAL_GPIO_Init+0x2e2>
 8001f86:	bf00      	nop
 8001f88:	10320000 	.word	0x10320000
 8001f8c:	10310000 	.word	0x10310000
 8001f90:	10220000 	.word	0x10220000
 8001f94:	10210000 	.word	0x10210000
 8001f98:	10120000 	.word	0x10120000
 8001f9c:	10110000 	.word	0x10110000
 8001fa0:	40021000 	.word	0x40021000
 8001fa4:	40010000 	.word	0x40010000
 8001fa8:	40010800 	.word	0x40010800
 8001fac:	40010c00 	.word	0x40010c00
 8001fb0:	40011000 	.word	0x40011000
 8001fb4:	40011400 	.word	0x40011400
 8001fb8:	40010400 	.word	0x40010400
 8001fbc:	4b0b      	ldr	r3, [pc, #44]	; (8001fec <HAL_GPIO_Init+0x304>)
 8001fbe:	68da      	ldr	r2, [r3, #12]
 8001fc0:	69bb      	ldr	r3, [r7, #24]
 8001fc2:	43db      	mvns	r3, r3
 8001fc4:	4909      	ldr	r1, [pc, #36]	; (8001fec <HAL_GPIO_Init+0x304>)
 8001fc6:	4013      	ands	r3, r2
 8001fc8:	60cb      	str	r3, [r1, #12]
 8001fca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fcc:	3301      	adds	r3, #1
 8001fce:	627b      	str	r3, [r7, #36]	; 0x24
 8001fd0:	683b      	ldr	r3, [r7, #0]
 8001fd2:	681a      	ldr	r2, [r3, #0]
 8001fd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fd6:	fa22 f303 	lsr.w	r3, r2, r3
 8001fda:	2b00      	cmp	r3, #0
 8001fdc:	f47f ae8e 	bne.w	8001cfc <HAL_GPIO_Init+0x14>
 8001fe0:	bf00      	nop
 8001fe2:	bf00      	nop
 8001fe4:	372c      	adds	r7, #44	; 0x2c
 8001fe6:	46bd      	mov	sp, r7
 8001fe8:	bc80      	pop	{r7}
 8001fea:	4770      	bx	lr
 8001fec:	40010400 	.word	0x40010400

08001ff0 <HAL_GPIO_ReadPin>:
 8001ff0:	b480      	push	{r7}
 8001ff2:	b085      	sub	sp, #20
 8001ff4:	af00      	add	r7, sp, #0
 8001ff6:	6078      	str	r0, [r7, #4]
 8001ff8:	460b      	mov	r3, r1
 8001ffa:	807b      	strh	r3, [r7, #2]
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	689a      	ldr	r2, [r3, #8]
 8002000:	887b      	ldrh	r3, [r7, #2]
 8002002:	4013      	ands	r3, r2
 8002004:	2b00      	cmp	r3, #0
 8002006:	d002      	beq.n	800200e <HAL_GPIO_ReadPin+0x1e>
 8002008:	2301      	movs	r3, #1
 800200a:	73fb      	strb	r3, [r7, #15]
 800200c:	e001      	b.n	8002012 <HAL_GPIO_ReadPin+0x22>
 800200e:	2300      	movs	r3, #0
 8002010:	73fb      	strb	r3, [r7, #15]
 8002012:	7bfb      	ldrb	r3, [r7, #15]
 8002014:	4618      	mov	r0, r3
 8002016:	3714      	adds	r7, #20
 8002018:	46bd      	mov	sp, r7
 800201a:	bc80      	pop	{r7}
 800201c:	4770      	bx	lr

0800201e <HAL_GPIO_WritePin>:
 800201e:	b480      	push	{r7}
 8002020:	b083      	sub	sp, #12
 8002022:	af00      	add	r7, sp, #0
 8002024:	6078      	str	r0, [r7, #4]
 8002026:	460b      	mov	r3, r1
 8002028:	807b      	strh	r3, [r7, #2]
 800202a:	4613      	mov	r3, r2
 800202c:	707b      	strb	r3, [r7, #1]
 800202e:	787b      	ldrb	r3, [r7, #1]
 8002030:	2b00      	cmp	r3, #0
 8002032:	d003      	beq.n	800203c <HAL_GPIO_WritePin+0x1e>
 8002034:	887a      	ldrh	r2, [r7, #2]
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	611a      	str	r2, [r3, #16]
 800203a:	e003      	b.n	8002044 <HAL_GPIO_WritePin+0x26>
 800203c:	887b      	ldrh	r3, [r7, #2]
 800203e:	041a      	lsls	r2, r3, #16
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	611a      	str	r2, [r3, #16]
 8002044:	bf00      	nop
 8002046:	370c      	adds	r7, #12
 8002048:	46bd      	mov	sp, r7
 800204a:	bc80      	pop	{r7}
 800204c:	4770      	bx	lr

0800204e <HAL_GPIO_TogglePin>:
 800204e:	b480      	push	{r7}
 8002050:	b085      	sub	sp, #20
 8002052:	af00      	add	r7, sp, #0
 8002054:	6078      	str	r0, [r7, #4]
 8002056:	460b      	mov	r3, r1
 8002058:	807b      	strh	r3, [r7, #2]
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	68db      	ldr	r3, [r3, #12]
 800205e:	60fb      	str	r3, [r7, #12]
 8002060:	887a      	ldrh	r2, [r7, #2]
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	4013      	ands	r3, r2
 8002066:	041a      	lsls	r2, r3, #16
 8002068:	68fb      	ldr	r3, [r7, #12]
 800206a:	43d9      	mvns	r1, r3
 800206c:	887b      	ldrh	r3, [r7, #2]
 800206e:	400b      	ands	r3, r1
 8002070:	431a      	orrs	r2, r3
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	611a      	str	r2, [r3, #16]
 8002076:	bf00      	nop
 8002078:	3714      	adds	r7, #20
 800207a:	46bd      	mov	sp, r7
 800207c:	bc80      	pop	{r7}
 800207e:	4770      	bx	lr

08002080 <HAL_GPIO_EXTI_IRQHandler>:
 8002080:	b580      	push	{r7, lr}
 8002082:	b082      	sub	sp, #8
 8002084:	af00      	add	r7, sp, #0
 8002086:	4603      	mov	r3, r0
 8002088:	80fb      	strh	r3, [r7, #6]
 800208a:	4b08      	ldr	r3, [pc, #32]	; (80020ac <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800208c:	695a      	ldr	r2, [r3, #20]
 800208e:	88fb      	ldrh	r3, [r7, #6]
 8002090:	4013      	ands	r3, r2
 8002092:	2b00      	cmp	r3, #0
 8002094:	d006      	beq.n	80020a4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8002096:	4a05      	ldr	r2, [pc, #20]	; (80020ac <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002098:	88fb      	ldrh	r3, [r7, #6]
 800209a:	6153      	str	r3, [r2, #20]
 800209c:	88fb      	ldrh	r3, [r7, #6]
 800209e:	4618      	mov	r0, r3
 80020a0:	f000 f806 	bl	80020b0 <HAL_GPIO_EXTI_Callback>
 80020a4:	bf00      	nop
 80020a6:	3708      	adds	r7, #8
 80020a8:	46bd      	mov	sp, r7
 80020aa:	bd80      	pop	{r7, pc}
 80020ac:	40010400 	.word	0x40010400

080020b0 <HAL_GPIO_EXTI_Callback>:
 80020b0:	b480      	push	{r7}
 80020b2:	b083      	sub	sp, #12
 80020b4:	af00      	add	r7, sp, #0
 80020b6:	4603      	mov	r3, r0
 80020b8:	80fb      	strh	r3, [r7, #6]
 80020ba:	bf00      	nop
 80020bc:	370c      	adds	r7, #12
 80020be:	46bd      	mov	sp, r7
 80020c0:	bc80      	pop	{r7}
 80020c2:	4770      	bx	lr

080020c4 <HAL_RCC_OscConfig>:
 80020c4:	b580      	push	{r7, lr}
 80020c6:	b086      	sub	sp, #24
 80020c8:	af00      	add	r7, sp, #0
 80020ca:	6078      	str	r0, [r7, #4]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d101      	bne.n	80020d6 <HAL_RCC_OscConfig+0x12>
 80020d2:	2301      	movs	r3, #1
 80020d4:	e272      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	f003 0301 	and.w	r3, r3, #1
 80020de:	2b00      	cmp	r3, #0
 80020e0:	f000 8087 	beq.w	80021f2 <HAL_RCC_OscConfig+0x12e>
 80020e4:	4b92      	ldr	r3, [pc, #584]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	f003 030c 	and.w	r3, r3, #12
 80020ec:	2b04      	cmp	r3, #4
 80020ee:	d00c      	beq.n	800210a <HAL_RCC_OscConfig+0x46>
 80020f0:	4b8f      	ldr	r3, [pc, #572]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80020f2:	685b      	ldr	r3, [r3, #4]
 80020f4:	f003 030c 	and.w	r3, r3, #12
 80020f8:	2b08      	cmp	r3, #8
 80020fa:	d112      	bne.n	8002122 <HAL_RCC_OscConfig+0x5e>
 80020fc:	4b8c      	ldr	r3, [pc, #560]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80020fe:	685b      	ldr	r3, [r3, #4]
 8002100:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002104:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002108:	d10b      	bne.n	8002122 <HAL_RCC_OscConfig+0x5e>
 800210a:	4b89      	ldr	r3, [pc, #548]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002112:	2b00      	cmp	r3, #0
 8002114:	d06c      	beq.n	80021f0 <HAL_RCC_OscConfig+0x12c>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	685b      	ldr	r3, [r3, #4]
 800211a:	2b00      	cmp	r3, #0
 800211c:	d168      	bne.n	80021f0 <HAL_RCC_OscConfig+0x12c>
 800211e:	2301      	movs	r3, #1
 8002120:	e24c      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	685b      	ldr	r3, [r3, #4]
 8002126:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800212a:	d106      	bne.n	800213a <HAL_RCC_OscConfig+0x76>
 800212c:	4b80      	ldr	r3, [pc, #512]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	4a7f      	ldr	r2, [pc, #508]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002132:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002136:	6013      	str	r3, [r2, #0]
 8002138:	e02e      	b.n	8002198 <HAL_RCC_OscConfig+0xd4>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	685b      	ldr	r3, [r3, #4]
 800213e:	2b00      	cmp	r3, #0
 8002140:	d10c      	bne.n	800215c <HAL_RCC_OscConfig+0x98>
 8002142:	4b7b      	ldr	r3, [pc, #492]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	4a7a      	ldr	r2, [pc, #488]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002148:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800214c:	6013      	str	r3, [r2, #0]
 800214e:	4b78      	ldr	r3, [pc, #480]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	4a77      	ldr	r2, [pc, #476]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002154:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002158:	6013      	str	r3, [r2, #0]
 800215a:	e01d      	b.n	8002198 <HAL_RCC_OscConfig+0xd4>
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	685b      	ldr	r3, [r3, #4]
 8002160:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002164:	d10c      	bne.n	8002180 <HAL_RCC_OscConfig+0xbc>
 8002166:	4b72      	ldr	r3, [pc, #456]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	4a71      	ldr	r2, [pc, #452]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800216c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002170:	6013      	str	r3, [r2, #0]
 8002172:	4b6f      	ldr	r3, [pc, #444]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002174:	681b      	ldr	r3, [r3, #0]
 8002176:	4a6e      	ldr	r2, [pc, #440]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002178:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800217c:	6013      	str	r3, [r2, #0]
 800217e:	e00b      	b.n	8002198 <HAL_RCC_OscConfig+0xd4>
 8002180:	4b6b      	ldr	r3, [pc, #428]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	4a6a      	ldr	r2, [pc, #424]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002186:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800218a:	6013      	str	r3, [r2, #0]
 800218c:	4b68      	ldr	r3, [pc, #416]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	4a67      	ldr	r2, [pc, #412]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002192:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002196:	6013      	str	r3, [r2, #0]
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	685b      	ldr	r3, [r3, #4]
 800219c:	2b00      	cmp	r3, #0
 800219e:	d013      	beq.n	80021c8 <HAL_RCC_OscConfig+0x104>
 80021a0:	f7ff fc8a 	bl	8001ab8 <HAL_GetTick>
 80021a4:	6138      	str	r0, [r7, #16]
 80021a6:	e008      	b.n	80021ba <HAL_RCC_OscConfig+0xf6>
 80021a8:	f7ff fc86 	bl	8001ab8 <HAL_GetTick>
 80021ac:	4602      	mov	r2, r0
 80021ae:	693b      	ldr	r3, [r7, #16]
 80021b0:	1ad3      	subs	r3, r2, r3
 80021b2:	2b64      	cmp	r3, #100	; 0x64
 80021b4:	d901      	bls.n	80021ba <HAL_RCC_OscConfig+0xf6>
 80021b6:	2303      	movs	r3, #3
 80021b8:	e200      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80021ba:	4b5d      	ldr	r3, [pc, #372]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	d0f0      	beq.n	80021a8 <HAL_RCC_OscConfig+0xe4>
 80021c6:	e014      	b.n	80021f2 <HAL_RCC_OscConfig+0x12e>
 80021c8:	f7ff fc76 	bl	8001ab8 <HAL_GetTick>
 80021cc:	6138      	str	r0, [r7, #16]
 80021ce:	e008      	b.n	80021e2 <HAL_RCC_OscConfig+0x11e>
 80021d0:	f7ff fc72 	bl	8001ab8 <HAL_GetTick>
 80021d4:	4602      	mov	r2, r0
 80021d6:	693b      	ldr	r3, [r7, #16]
 80021d8:	1ad3      	subs	r3, r2, r3
 80021da:	2b64      	cmp	r3, #100	; 0x64
 80021dc:	d901      	bls.n	80021e2 <HAL_RCC_OscConfig+0x11e>
 80021de:	2303      	movs	r3, #3
 80021e0:	e1ec      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80021e2:	4b53      	ldr	r3, [pc, #332]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d1f0      	bne.n	80021d0 <HAL_RCC_OscConfig+0x10c>
 80021ee:	e000      	b.n	80021f2 <HAL_RCC_OscConfig+0x12e>
 80021f0:	bf00      	nop
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	f003 0302 	and.w	r3, r3, #2
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d063      	beq.n	80022c6 <HAL_RCC_OscConfig+0x202>
 80021fe:	4b4c      	ldr	r3, [pc, #304]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002200:	685b      	ldr	r3, [r3, #4]
 8002202:	f003 030c 	and.w	r3, r3, #12
 8002206:	2b00      	cmp	r3, #0
 8002208:	d00b      	beq.n	8002222 <HAL_RCC_OscConfig+0x15e>
 800220a:	4b49      	ldr	r3, [pc, #292]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800220c:	685b      	ldr	r3, [r3, #4]
 800220e:	f003 030c 	and.w	r3, r3, #12
 8002212:	2b08      	cmp	r3, #8
 8002214:	d11c      	bne.n	8002250 <HAL_RCC_OscConfig+0x18c>
 8002216:	4b46      	ldr	r3, [pc, #280]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002218:	685b      	ldr	r3, [r3, #4]
 800221a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800221e:	2b00      	cmp	r3, #0
 8002220:	d116      	bne.n	8002250 <HAL_RCC_OscConfig+0x18c>
 8002222:	4b43      	ldr	r3, [pc, #268]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	f003 0302 	and.w	r3, r3, #2
 800222a:	2b00      	cmp	r3, #0
 800222c:	d005      	beq.n	800223a <HAL_RCC_OscConfig+0x176>
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	691b      	ldr	r3, [r3, #16]
 8002232:	2b01      	cmp	r3, #1
 8002234:	d001      	beq.n	800223a <HAL_RCC_OscConfig+0x176>
 8002236:	2301      	movs	r3, #1
 8002238:	e1c0      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 800223a:	4b3d      	ldr	r3, [pc, #244]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	695b      	ldr	r3, [r3, #20]
 8002246:	00db      	lsls	r3, r3, #3
 8002248:	4939      	ldr	r1, [pc, #228]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800224a:	4313      	orrs	r3, r2
 800224c:	600b      	str	r3, [r1, #0]
 800224e:	e03a      	b.n	80022c6 <HAL_RCC_OscConfig+0x202>
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	691b      	ldr	r3, [r3, #16]
 8002254:	2b00      	cmp	r3, #0
 8002256:	d020      	beq.n	800229a <HAL_RCC_OscConfig+0x1d6>
 8002258:	4b36      	ldr	r3, [pc, #216]	; (8002334 <HAL_RCC_OscConfig+0x270>)
 800225a:	2201      	movs	r2, #1
 800225c:	601a      	str	r2, [r3, #0]
 800225e:	f7ff fc2b 	bl	8001ab8 <HAL_GetTick>
 8002262:	6138      	str	r0, [r7, #16]
 8002264:	e008      	b.n	8002278 <HAL_RCC_OscConfig+0x1b4>
 8002266:	f7ff fc27 	bl	8001ab8 <HAL_GetTick>
 800226a:	4602      	mov	r2, r0
 800226c:	693b      	ldr	r3, [r7, #16]
 800226e:	1ad3      	subs	r3, r2, r3
 8002270:	2b02      	cmp	r3, #2
 8002272:	d901      	bls.n	8002278 <HAL_RCC_OscConfig+0x1b4>
 8002274:	2303      	movs	r3, #3
 8002276:	e1a1      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 8002278:	4b2d      	ldr	r3, [pc, #180]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f003 0302 	and.w	r3, r3, #2
 8002280:	2b00      	cmp	r3, #0
 8002282:	d0f0      	beq.n	8002266 <HAL_RCC_OscConfig+0x1a2>
 8002284:	4b2a      	ldr	r3, [pc, #168]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	695b      	ldr	r3, [r3, #20]
 8002290:	00db      	lsls	r3, r3, #3
 8002292:	4927      	ldr	r1, [pc, #156]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 8002294:	4313      	orrs	r3, r2
 8002296:	600b      	str	r3, [r1, #0]
 8002298:	e015      	b.n	80022c6 <HAL_RCC_OscConfig+0x202>
 800229a:	4b26      	ldr	r3, [pc, #152]	; (8002334 <HAL_RCC_OscConfig+0x270>)
 800229c:	2200      	movs	r2, #0
 800229e:	601a      	str	r2, [r3, #0]
 80022a0:	f7ff fc0a 	bl	8001ab8 <HAL_GetTick>
 80022a4:	6138      	str	r0, [r7, #16]
 80022a6:	e008      	b.n	80022ba <HAL_RCC_OscConfig+0x1f6>
 80022a8:	f7ff fc06 	bl	8001ab8 <HAL_GetTick>
 80022ac:	4602      	mov	r2, r0
 80022ae:	693b      	ldr	r3, [r7, #16]
 80022b0:	1ad3      	subs	r3, r2, r3
 80022b2:	2b02      	cmp	r3, #2
 80022b4:	d901      	bls.n	80022ba <HAL_RCC_OscConfig+0x1f6>
 80022b6:	2303      	movs	r3, #3
 80022b8:	e180      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80022ba:	4b1d      	ldr	r3, [pc, #116]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	f003 0302 	and.w	r3, r3, #2
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d1f0      	bne.n	80022a8 <HAL_RCC_OscConfig+0x1e4>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	f003 0308 	and.w	r3, r3, #8
 80022ce:	2b00      	cmp	r3, #0
 80022d0:	d03a      	beq.n	8002348 <HAL_RCC_OscConfig+0x284>
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	699b      	ldr	r3, [r3, #24]
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d019      	beq.n	800230e <HAL_RCC_OscConfig+0x24a>
 80022da:	4b17      	ldr	r3, [pc, #92]	; (8002338 <HAL_RCC_OscConfig+0x274>)
 80022dc:	2201      	movs	r2, #1
 80022de:	601a      	str	r2, [r3, #0]
 80022e0:	f7ff fbea 	bl	8001ab8 <HAL_GetTick>
 80022e4:	6138      	str	r0, [r7, #16]
 80022e6:	e008      	b.n	80022fa <HAL_RCC_OscConfig+0x236>
 80022e8:	f7ff fbe6 	bl	8001ab8 <HAL_GetTick>
 80022ec:	4602      	mov	r2, r0
 80022ee:	693b      	ldr	r3, [r7, #16]
 80022f0:	1ad3      	subs	r3, r2, r3
 80022f2:	2b02      	cmp	r3, #2
 80022f4:	d901      	bls.n	80022fa <HAL_RCC_OscConfig+0x236>
 80022f6:	2303      	movs	r3, #3
 80022f8:	e160      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80022fa:	4b0d      	ldr	r3, [pc, #52]	; (8002330 <HAL_RCC_OscConfig+0x26c>)
 80022fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022fe:	f003 0302 	and.w	r3, r3, #2
 8002302:	2b00      	cmp	r3, #0
 8002304:	d0f0      	beq.n	80022e8 <HAL_RCC_OscConfig+0x224>
 8002306:	2001      	movs	r0, #1
 8002308:	f000 fad8 	bl	80028bc <RCC_Delay>
 800230c:	e01c      	b.n	8002348 <HAL_RCC_OscConfig+0x284>
 800230e:	4b0a      	ldr	r3, [pc, #40]	; (8002338 <HAL_RCC_OscConfig+0x274>)
 8002310:	2200      	movs	r2, #0
 8002312:	601a      	str	r2, [r3, #0]
 8002314:	f7ff fbd0 	bl	8001ab8 <HAL_GetTick>
 8002318:	6138      	str	r0, [r7, #16]
 800231a:	e00f      	b.n	800233c <HAL_RCC_OscConfig+0x278>
 800231c:	f7ff fbcc 	bl	8001ab8 <HAL_GetTick>
 8002320:	4602      	mov	r2, r0
 8002322:	693b      	ldr	r3, [r7, #16]
 8002324:	1ad3      	subs	r3, r2, r3
 8002326:	2b02      	cmp	r3, #2
 8002328:	d908      	bls.n	800233c <HAL_RCC_OscConfig+0x278>
 800232a:	2303      	movs	r3, #3
 800232c:	e146      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 800232e:	bf00      	nop
 8002330:	40021000 	.word	0x40021000
 8002334:	42420000 	.word	0x42420000
 8002338:	42420480 	.word	0x42420480
 800233c:	4b92      	ldr	r3, [pc, #584]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800233e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002340:	f003 0302 	and.w	r3, r3, #2
 8002344:	2b00      	cmp	r3, #0
 8002346:	d1e9      	bne.n	800231c <HAL_RCC_OscConfig+0x258>
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	f003 0304 	and.w	r3, r3, #4
 8002350:	2b00      	cmp	r3, #0
 8002352:	f000 80a6 	beq.w	80024a2 <HAL_RCC_OscConfig+0x3de>
 8002356:	2300      	movs	r3, #0
 8002358:	75fb      	strb	r3, [r7, #23]
 800235a:	4b8b      	ldr	r3, [pc, #556]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800235c:	69db      	ldr	r3, [r3, #28]
 800235e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002362:	2b00      	cmp	r3, #0
 8002364:	d10d      	bne.n	8002382 <HAL_RCC_OscConfig+0x2be>
 8002366:	4b88      	ldr	r3, [pc, #544]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002368:	69db      	ldr	r3, [r3, #28]
 800236a:	4a87      	ldr	r2, [pc, #540]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800236c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002370:	61d3      	str	r3, [r2, #28]
 8002372:	4b85      	ldr	r3, [pc, #532]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002374:	69db      	ldr	r3, [r3, #28]
 8002376:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800237a:	60bb      	str	r3, [r7, #8]
 800237c:	68bb      	ldr	r3, [r7, #8]
 800237e:	2301      	movs	r3, #1
 8002380:	75fb      	strb	r3, [r7, #23]
 8002382:	4b82      	ldr	r3, [pc, #520]	; (800258c <HAL_RCC_OscConfig+0x4c8>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800238a:	2b00      	cmp	r3, #0
 800238c:	d118      	bne.n	80023c0 <HAL_RCC_OscConfig+0x2fc>
 800238e:	4b7f      	ldr	r3, [pc, #508]	; (800258c <HAL_RCC_OscConfig+0x4c8>)
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	4a7e      	ldr	r2, [pc, #504]	; (800258c <HAL_RCC_OscConfig+0x4c8>)
 8002394:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002398:	6013      	str	r3, [r2, #0]
 800239a:	f7ff fb8d 	bl	8001ab8 <HAL_GetTick>
 800239e:	6138      	str	r0, [r7, #16]
 80023a0:	e008      	b.n	80023b4 <HAL_RCC_OscConfig+0x2f0>
 80023a2:	f7ff fb89 	bl	8001ab8 <HAL_GetTick>
 80023a6:	4602      	mov	r2, r0
 80023a8:	693b      	ldr	r3, [r7, #16]
 80023aa:	1ad3      	subs	r3, r2, r3
 80023ac:	2b64      	cmp	r3, #100	; 0x64
 80023ae:	d901      	bls.n	80023b4 <HAL_RCC_OscConfig+0x2f0>
 80023b0:	2303      	movs	r3, #3
 80023b2:	e103      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80023b4:	4b75      	ldr	r3, [pc, #468]	; (800258c <HAL_RCC_OscConfig+0x4c8>)
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80023bc:	2b00      	cmp	r3, #0
 80023be:	d0f0      	beq.n	80023a2 <HAL_RCC_OscConfig+0x2de>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	68db      	ldr	r3, [r3, #12]
 80023c4:	2b01      	cmp	r3, #1
 80023c6:	d106      	bne.n	80023d6 <HAL_RCC_OscConfig+0x312>
 80023c8:	4b6f      	ldr	r3, [pc, #444]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80023ca:	6a1b      	ldr	r3, [r3, #32]
 80023cc:	4a6e      	ldr	r2, [pc, #440]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80023ce:	f043 0301 	orr.w	r3, r3, #1
 80023d2:	6213      	str	r3, [r2, #32]
 80023d4:	e02d      	b.n	8002432 <HAL_RCC_OscConfig+0x36e>
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	68db      	ldr	r3, [r3, #12]
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d10c      	bne.n	80023f8 <HAL_RCC_OscConfig+0x334>
 80023de:	4b6a      	ldr	r3, [pc, #424]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80023e0:	6a1b      	ldr	r3, [r3, #32]
 80023e2:	4a69      	ldr	r2, [pc, #420]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80023e4:	f023 0301 	bic.w	r3, r3, #1
 80023e8:	6213      	str	r3, [r2, #32]
 80023ea:	4b67      	ldr	r3, [pc, #412]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80023ec:	6a1b      	ldr	r3, [r3, #32]
 80023ee:	4a66      	ldr	r2, [pc, #408]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80023f0:	f023 0304 	bic.w	r3, r3, #4
 80023f4:	6213      	str	r3, [r2, #32]
 80023f6:	e01c      	b.n	8002432 <HAL_RCC_OscConfig+0x36e>
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	68db      	ldr	r3, [r3, #12]
 80023fc:	2b05      	cmp	r3, #5
 80023fe:	d10c      	bne.n	800241a <HAL_RCC_OscConfig+0x356>
 8002400:	4b61      	ldr	r3, [pc, #388]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002402:	6a1b      	ldr	r3, [r3, #32]
 8002404:	4a60      	ldr	r2, [pc, #384]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002406:	f043 0304 	orr.w	r3, r3, #4
 800240a:	6213      	str	r3, [r2, #32]
 800240c:	4b5e      	ldr	r3, [pc, #376]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800240e:	6a1b      	ldr	r3, [r3, #32]
 8002410:	4a5d      	ldr	r2, [pc, #372]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002412:	f043 0301 	orr.w	r3, r3, #1
 8002416:	6213      	str	r3, [r2, #32]
 8002418:	e00b      	b.n	8002432 <HAL_RCC_OscConfig+0x36e>
 800241a:	4b5b      	ldr	r3, [pc, #364]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800241c:	6a1b      	ldr	r3, [r3, #32]
 800241e:	4a5a      	ldr	r2, [pc, #360]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002420:	f023 0301 	bic.w	r3, r3, #1
 8002424:	6213      	str	r3, [r2, #32]
 8002426:	4b58      	ldr	r3, [pc, #352]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002428:	6a1b      	ldr	r3, [r3, #32]
 800242a:	4a57      	ldr	r2, [pc, #348]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800242c:	f023 0304 	bic.w	r3, r3, #4
 8002430:	6213      	str	r3, [r2, #32]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	68db      	ldr	r3, [r3, #12]
 8002436:	2b00      	cmp	r3, #0
 8002438:	d015      	beq.n	8002466 <HAL_RCC_OscConfig+0x3a2>
 800243a:	f7ff fb3d 	bl	8001ab8 <HAL_GetTick>
 800243e:	6138      	str	r0, [r7, #16]
 8002440:	e00a      	b.n	8002458 <HAL_RCC_OscConfig+0x394>
 8002442:	f7ff fb39 	bl	8001ab8 <HAL_GetTick>
 8002446:	4602      	mov	r2, r0
 8002448:	693b      	ldr	r3, [r7, #16]
 800244a:	1ad3      	subs	r3, r2, r3
 800244c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002450:	4293      	cmp	r3, r2
 8002452:	d901      	bls.n	8002458 <HAL_RCC_OscConfig+0x394>
 8002454:	2303      	movs	r3, #3
 8002456:	e0b1      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 8002458:	4b4b      	ldr	r3, [pc, #300]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800245a:	6a1b      	ldr	r3, [r3, #32]
 800245c:	f003 0302 	and.w	r3, r3, #2
 8002460:	2b00      	cmp	r3, #0
 8002462:	d0ee      	beq.n	8002442 <HAL_RCC_OscConfig+0x37e>
 8002464:	e014      	b.n	8002490 <HAL_RCC_OscConfig+0x3cc>
 8002466:	f7ff fb27 	bl	8001ab8 <HAL_GetTick>
 800246a:	6138      	str	r0, [r7, #16]
 800246c:	e00a      	b.n	8002484 <HAL_RCC_OscConfig+0x3c0>
 800246e:	f7ff fb23 	bl	8001ab8 <HAL_GetTick>
 8002472:	4602      	mov	r2, r0
 8002474:	693b      	ldr	r3, [r7, #16]
 8002476:	1ad3      	subs	r3, r2, r3
 8002478:	f241 3288 	movw	r2, #5000	; 0x1388
 800247c:	4293      	cmp	r3, r2
 800247e:	d901      	bls.n	8002484 <HAL_RCC_OscConfig+0x3c0>
 8002480:	2303      	movs	r3, #3
 8002482:	e09b      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 8002484:	4b40      	ldr	r3, [pc, #256]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002486:	6a1b      	ldr	r3, [r3, #32]
 8002488:	f003 0302 	and.w	r3, r3, #2
 800248c:	2b00      	cmp	r3, #0
 800248e:	d1ee      	bne.n	800246e <HAL_RCC_OscConfig+0x3aa>
 8002490:	7dfb      	ldrb	r3, [r7, #23]
 8002492:	2b01      	cmp	r3, #1
 8002494:	d105      	bne.n	80024a2 <HAL_RCC_OscConfig+0x3de>
 8002496:	4b3c      	ldr	r3, [pc, #240]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002498:	69db      	ldr	r3, [r3, #28]
 800249a:	4a3b      	ldr	r2, [pc, #236]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800249c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80024a0:	61d3      	str	r3, [r2, #28]
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	69db      	ldr	r3, [r3, #28]
 80024a6:	2b00      	cmp	r3, #0
 80024a8:	f000 8087 	beq.w	80025ba <HAL_RCC_OscConfig+0x4f6>
 80024ac:	4b36      	ldr	r3, [pc, #216]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80024ae:	685b      	ldr	r3, [r3, #4]
 80024b0:	f003 030c 	and.w	r3, r3, #12
 80024b4:	2b08      	cmp	r3, #8
 80024b6:	d061      	beq.n	800257c <HAL_RCC_OscConfig+0x4b8>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	69db      	ldr	r3, [r3, #28]
 80024bc:	2b02      	cmp	r3, #2
 80024be:	d146      	bne.n	800254e <HAL_RCC_OscConfig+0x48a>
 80024c0:	4b33      	ldr	r3, [pc, #204]	; (8002590 <HAL_RCC_OscConfig+0x4cc>)
 80024c2:	2200      	movs	r2, #0
 80024c4:	601a      	str	r2, [r3, #0]
 80024c6:	f7ff faf7 	bl	8001ab8 <HAL_GetTick>
 80024ca:	6138      	str	r0, [r7, #16]
 80024cc:	e008      	b.n	80024e0 <HAL_RCC_OscConfig+0x41c>
 80024ce:	f7ff faf3 	bl	8001ab8 <HAL_GetTick>
 80024d2:	4602      	mov	r2, r0
 80024d4:	693b      	ldr	r3, [r7, #16]
 80024d6:	1ad3      	subs	r3, r2, r3
 80024d8:	2b02      	cmp	r3, #2
 80024da:	d901      	bls.n	80024e0 <HAL_RCC_OscConfig+0x41c>
 80024dc:	2303      	movs	r3, #3
 80024de:	e06d      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80024e0:	4b29      	ldr	r3, [pc, #164]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d1f0      	bne.n	80024ce <HAL_RCC_OscConfig+0x40a>
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	6a1b      	ldr	r3, [r3, #32]
 80024f0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024f4:	d108      	bne.n	8002508 <HAL_RCC_OscConfig+0x444>
 80024f6:	4b24      	ldr	r3, [pc, #144]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 80024f8:	685b      	ldr	r3, [r3, #4]
 80024fa:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	689b      	ldr	r3, [r3, #8]
 8002502:	4921      	ldr	r1, [pc, #132]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002504:	4313      	orrs	r3, r2
 8002506:	604b      	str	r3, [r1, #4]
 8002508:	4b1f      	ldr	r3, [pc, #124]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800250a:	685b      	ldr	r3, [r3, #4]
 800250c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	6a19      	ldr	r1, [r3, #32]
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002518:	430b      	orrs	r3, r1
 800251a:	491b      	ldr	r1, [pc, #108]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 800251c:	4313      	orrs	r3, r2
 800251e:	604b      	str	r3, [r1, #4]
 8002520:	4b1b      	ldr	r3, [pc, #108]	; (8002590 <HAL_RCC_OscConfig+0x4cc>)
 8002522:	2201      	movs	r2, #1
 8002524:	601a      	str	r2, [r3, #0]
 8002526:	f7ff fac7 	bl	8001ab8 <HAL_GetTick>
 800252a:	6138      	str	r0, [r7, #16]
 800252c:	e008      	b.n	8002540 <HAL_RCC_OscConfig+0x47c>
 800252e:	f7ff fac3 	bl	8001ab8 <HAL_GetTick>
 8002532:	4602      	mov	r2, r0
 8002534:	693b      	ldr	r3, [r7, #16]
 8002536:	1ad3      	subs	r3, r2, r3
 8002538:	2b02      	cmp	r3, #2
 800253a:	d901      	bls.n	8002540 <HAL_RCC_OscConfig+0x47c>
 800253c:	2303      	movs	r3, #3
 800253e:	e03d      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 8002540:	4b11      	ldr	r3, [pc, #68]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002548:	2b00      	cmp	r3, #0
 800254a:	d0f0      	beq.n	800252e <HAL_RCC_OscConfig+0x46a>
 800254c:	e035      	b.n	80025ba <HAL_RCC_OscConfig+0x4f6>
 800254e:	4b10      	ldr	r3, [pc, #64]	; (8002590 <HAL_RCC_OscConfig+0x4cc>)
 8002550:	2200      	movs	r2, #0
 8002552:	601a      	str	r2, [r3, #0]
 8002554:	f7ff fab0 	bl	8001ab8 <HAL_GetTick>
 8002558:	6138      	str	r0, [r7, #16]
 800255a:	e008      	b.n	800256e <HAL_RCC_OscConfig+0x4aa>
 800255c:	f7ff faac 	bl	8001ab8 <HAL_GetTick>
 8002560:	4602      	mov	r2, r0
 8002562:	693b      	ldr	r3, [r7, #16]
 8002564:	1ad3      	subs	r3, r2, r3
 8002566:	2b02      	cmp	r3, #2
 8002568:	d901      	bls.n	800256e <HAL_RCC_OscConfig+0x4aa>
 800256a:	2303      	movs	r3, #3
 800256c:	e026      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 800256e:	4b06      	ldr	r3, [pc, #24]	; (8002588 <HAL_RCC_OscConfig+0x4c4>)
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002576:	2b00      	cmp	r3, #0
 8002578:	d1f0      	bne.n	800255c <HAL_RCC_OscConfig+0x498>
 800257a:	e01e      	b.n	80025ba <HAL_RCC_OscConfig+0x4f6>
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	69db      	ldr	r3, [r3, #28]
 8002580:	2b01      	cmp	r3, #1
 8002582:	d107      	bne.n	8002594 <HAL_RCC_OscConfig+0x4d0>
 8002584:	2301      	movs	r3, #1
 8002586:	e019      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 8002588:	40021000 	.word	0x40021000
 800258c:	40007000 	.word	0x40007000
 8002590:	42420060 	.word	0x42420060
 8002594:	4b0b      	ldr	r3, [pc, #44]	; (80025c4 <HAL_RCC_OscConfig+0x500>)
 8002596:	685b      	ldr	r3, [r3, #4]
 8002598:	60fb      	str	r3, [r7, #12]
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	6a1b      	ldr	r3, [r3, #32]
 80025a4:	429a      	cmp	r2, r3
 80025a6:	d106      	bne.n	80025b6 <HAL_RCC_OscConfig+0x4f2>
 80025a8:	68fb      	ldr	r3, [r7, #12]
 80025aa:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025b2:	429a      	cmp	r2, r3
 80025b4:	d001      	beq.n	80025ba <HAL_RCC_OscConfig+0x4f6>
 80025b6:	2301      	movs	r3, #1
 80025b8:	e000      	b.n	80025bc <HAL_RCC_OscConfig+0x4f8>
 80025ba:	2300      	movs	r3, #0
 80025bc:	4618      	mov	r0, r3
 80025be:	3718      	adds	r7, #24
 80025c0:	46bd      	mov	sp, r7
 80025c2:	bd80      	pop	{r7, pc}
 80025c4:	40021000 	.word	0x40021000

080025c8 <HAL_RCC_ClockConfig>:
 80025c8:	b580      	push	{r7, lr}
 80025ca:	b084      	sub	sp, #16
 80025cc:	af00      	add	r7, sp, #0
 80025ce:	6078      	str	r0, [r7, #4]
 80025d0:	6039      	str	r1, [r7, #0]
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d101      	bne.n	80025dc <HAL_RCC_ClockConfig+0x14>
 80025d8:	2301      	movs	r3, #1
 80025da:	e0d0      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 80025dc:	4b6a      	ldr	r3, [pc, #424]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	f003 0307 	and.w	r3, r3, #7
 80025e4:	683a      	ldr	r2, [r7, #0]
 80025e6:	429a      	cmp	r2, r3
 80025e8:	d910      	bls.n	800260c <HAL_RCC_ClockConfig+0x44>
 80025ea:	4b67      	ldr	r3, [pc, #412]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	f023 0207 	bic.w	r2, r3, #7
 80025f2:	4965      	ldr	r1, [pc, #404]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 80025f4:	683b      	ldr	r3, [r7, #0]
 80025f6:	4313      	orrs	r3, r2
 80025f8:	600b      	str	r3, [r1, #0]
 80025fa:	4b63      	ldr	r3, [pc, #396]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	f003 0307 	and.w	r3, r3, #7
 8002602:	683a      	ldr	r2, [r7, #0]
 8002604:	429a      	cmp	r2, r3
 8002606:	d001      	beq.n	800260c <HAL_RCC_ClockConfig+0x44>
 8002608:	2301      	movs	r3, #1
 800260a:	e0b8      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f003 0302 	and.w	r3, r3, #2
 8002614:	2b00      	cmp	r3, #0
 8002616:	d020      	beq.n	800265a <HAL_RCC_ClockConfig+0x92>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	f003 0304 	and.w	r3, r3, #4
 8002620:	2b00      	cmp	r3, #0
 8002622:	d005      	beq.n	8002630 <HAL_RCC_ClockConfig+0x68>
 8002624:	4b59      	ldr	r3, [pc, #356]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002626:	685b      	ldr	r3, [r3, #4]
 8002628:	4a58      	ldr	r2, [pc, #352]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 800262a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800262e:	6053      	str	r3, [r2, #4]
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	f003 0308 	and.w	r3, r3, #8
 8002638:	2b00      	cmp	r3, #0
 800263a:	d005      	beq.n	8002648 <HAL_RCC_ClockConfig+0x80>
 800263c:	4b53      	ldr	r3, [pc, #332]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 800263e:	685b      	ldr	r3, [r3, #4]
 8002640:	4a52      	ldr	r2, [pc, #328]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002642:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002646:	6053      	str	r3, [r2, #4]
 8002648:	4b50      	ldr	r3, [pc, #320]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 800264a:	685b      	ldr	r3, [r3, #4]
 800264c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	689b      	ldr	r3, [r3, #8]
 8002654:	494d      	ldr	r1, [pc, #308]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002656:	4313      	orrs	r3, r2
 8002658:	604b      	str	r3, [r1, #4]
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	f003 0301 	and.w	r3, r3, #1
 8002662:	2b00      	cmp	r3, #0
 8002664:	d040      	beq.n	80026e8 <HAL_RCC_ClockConfig+0x120>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	685b      	ldr	r3, [r3, #4]
 800266a:	2b01      	cmp	r3, #1
 800266c:	d107      	bne.n	800267e <HAL_RCC_ClockConfig+0xb6>
 800266e:	4b47      	ldr	r3, [pc, #284]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002670:	681b      	ldr	r3, [r3, #0]
 8002672:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002676:	2b00      	cmp	r3, #0
 8002678:	d115      	bne.n	80026a6 <HAL_RCC_ClockConfig+0xde>
 800267a:	2301      	movs	r3, #1
 800267c:	e07f      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	685b      	ldr	r3, [r3, #4]
 8002682:	2b02      	cmp	r3, #2
 8002684:	d107      	bne.n	8002696 <HAL_RCC_ClockConfig+0xce>
 8002686:	4b41      	ldr	r3, [pc, #260]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800268e:	2b00      	cmp	r3, #0
 8002690:	d109      	bne.n	80026a6 <HAL_RCC_ClockConfig+0xde>
 8002692:	2301      	movs	r3, #1
 8002694:	e073      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 8002696:	4b3d      	ldr	r3, [pc, #244]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	f003 0302 	and.w	r3, r3, #2
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d101      	bne.n	80026a6 <HAL_RCC_ClockConfig+0xde>
 80026a2:	2301      	movs	r3, #1
 80026a4:	e06b      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 80026a6:	4b39      	ldr	r3, [pc, #228]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 80026a8:	685b      	ldr	r3, [r3, #4]
 80026aa:	f023 0203 	bic.w	r2, r3, #3
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	685b      	ldr	r3, [r3, #4]
 80026b2:	4936      	ldr	r1, [pc, #216]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 80026b4:	4313      	orrs	r3, r2
 80026b6:	604b      	str	r3, [r1, #4]
 80026b8:	f7ff f9fe 	bl	8001ab8 <HAL_GetTick>
 80026bc:	60f8      	str	r0, [r7, #12]
 80026be:	e00a      	b.n	80026d6 <HAL_RCC_ClockConfig+0x10e>
 80026c0:	f7ff f9fa 	bl	8001ab8 <HAL_GetTick>
 80026c4:	4602      	mov	r2, r0
 80026c6:	68fb      	ldr	r3, [r7, #12]
 80026c8:	1ad3      	subs	r3, r2, r3
 80026ca:	f241 3288 	movw	r2, #5000	; 0x1388
 80026ce:	4293      	cmp	r3, r2
 80026d0:	d901      	bls.n	80026d6 <HAL_RCC_ClockConfig+0x10e>
 80026d2:	2303      	movs	r3, #3
 80026d4:	e053      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 80026d6:	4b2d      	ldr	r3, [pc, #180]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 80026d8:	685b      	ldr	r3, [r3, #4]
 80026da:	f003 020c 	and.w	r2, r3, #12
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	685b      	ldr	r3, [r3, #4]
 80026e2:	009b      	lsls	r3, r3, #2
 80026e4:	429a      	cmp	r2, r3
 80026e6:	d1eb      	bne.n	80026c0 <HAL_RCC_ClockConfig+0xf8>
 80026e8:	4b27      	ldr	r3, [pc, #156]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	f003 0307 	and.w	r3, r3, #7
 80026f0:	683a      	ldr	r2, [r7, #0]
 80026f2:	429a      	cmp	r2, r3
 80026f4:	d210      	bcs.n	8002718 <HAL_RCC_ClockConfig+0x150>
 80026f6:	4b24      	ldr	r3, [pc, #144]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	f023 0207 	bic.w	r2, r3, #7
 80026fe:	4922      	ldr	r1, [pc, #136]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 8002700:	683b      	ldr	r3, [r7, #0]
 8002702:	4313      	orrs	r3, r2
 8002704:	600b      	str	r3, [r1, #0]
 8002706:	4b20      	ldr	r3, [pc, #128]	; (8002788 <HAL_RCC_ClockConfig+0x1c0>)
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	f003 0307 	and.w	r3, r3, #7
 800270e:	683a      	ldr	r2, [r7, #0]
 8002710:	429a      	cmp	r2, r3
 8002712:	d001      	beq.n	8002718 <HAL_RCC_ClockConfig+0x150>
 8002714:	2301      	movs	r3, #1
 8002716:	e032      	b.n	800277e <HAL_RCC_ClockConfig+0x1b6>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	f003 0304 	and.w	r3, r3, #4
 8002720:	2b00      	cmp	r3, #0
 8002722:	d008      	beq.n	8002736 <HAL_RCC_ClockConfig+0x16e>
 8002724:	4b19      	ldr	r3, [pc, #100]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002726:	685b      	ldr	r3, [r3, #4]
 8002728:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	68db      	ldr	r3, [r3, #12]
 8002730:	4916      	ldr	r1, [pc, #88]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002732:	4313      	orrs	r3, r2
 8002734:	604b      	str	r3, [r1, #4]
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	681b      	ldr	r3, [r3, #0]
 800273a:	f003 0308 	and.w	r3, r3, #8
 800273e:	2b00      	cmp	r3, #0
 8002740:	d009      	beq.n	8002756 <HAL_RCC_ClockConfig+0x18e>
 8002742:	4b12      	ldr	r3, [pc, #72]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002744:	685b      	ldr	r3, [r3, #4]
 8002746:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	691b      	ldr	r3, [r3, #16]
 800274e:	00db      	lsls	r3, r3, #3
 8002750:	490e      	ldr	r1, [pc, #56]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 8002752:	4313      	orrs	r3, r2
 8002754:	604b      	str	r3, [r1, #4]
 8002756:	f000 f821 	bl	800279c <HAL_RCC_GetSysClockFreq>
 800275a:	4602      	mov	r2, r0
 800275c:	4b0b      	ldr	r3, [pc, #44]	; (800278c <HAL_RCC_ClockConfig+0x1c4>)
 800275e:	685b      	ldr	r3, [r3, #4]
 8002760:	091b      	lsrs	r3, r3, #4
 8002762:	f003 030f 	and.w	r3, r3, #15
 8002766:	490a      	ldr	r1, [pc, #40]	; (8002790 <HAL_RCC_ClockConfig+0x1c8>)
 8002768:	5ccb      	ldrb	r3, [r1, r3]
 800276a:	fa22 f303 	lsr.w	r3, r2, r3
 800276e:	4a09      	ldr	r2, [pc, #36]	; (8002794 <HAL_RCC_ClockConfig+0x1cc>)
 8002770:	6013      	str	r3, [r2, #0]
 8002772:	4b09      	ldr	r3, [pc, #36]	; (8002798 <HAL_RCC_ClockConfig+0x1d0>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	4618      	mov	r0, r3
 8002778:	f7ff f95c 	bl	8001a34 <HAL_InitTick>
 800277c:	2300      	movs	r3, #0
 800277e:	4618      	mov	r0, r3
 8002780:	3710      	adds	r7, #16
 8002782:	46bd      	mov	sp, r7
 8002784:	bd80      	pop	{r7, pc}
 8002786:	bf00      	nop
 8002788:	40022000 	.word	0x40022000
 800278c:	40021000 	.word	0x40021000
 8002790:	080044b0 	.word	0x080044b0
 8002794:	20000308 	.word	0x20000308
 8002798:	20000324 	.word	0x20000324

0800279c <HAL_RCC_GetSysClockFreq>:
 800279c:	b490      	push	{r4, r7}
 800279e:	b08a      	sub	sp, #40	; 0x28
 80027a0:	af00      	add	r7, sp, #0
 80027a2:	4b29      	ldr	r3, [pc, #164]	; (8002848 <HAL_RCC_GetSysClockFreq+0xac>)
 80027a4:	1d3c      	adds	r4, r7, #4
 80027a6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80027a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80027ac:	f240 2301 	movw	r3, #513	; 0x201
 80027b0:	803b      	strh	r3, [r7, #0]
 80027b2:	2300      	movs	r3, #0
 80027b4:	61fb      	str	r3, [r7, #28]
 80027b6:	2300      	movs	r3, #0
 80027b8:	61bb      	str	r3, [r7, #24]
 80027ba:	2300      	movs	r3, #0
 80027bc:	627b      	str	r3, [r7, #36]	; 0x24
 80027be:	2300      	movs	r3, #0
 80027c0:	617b      	str	r3, [r7, #20]
 80027c2:	2300      	movs	r3, #0
 80027c4:	623b      	str	r3, [r7, #32]
 80027c6:	4b21      	ldr	r3, [pc, #132]	; (800284c <HAL_RCC_GetSysClockFreq+0xb0>)
 80027c8:	685b      	ldr	r3, [r3, #4]
 80027ca:	61fb      	str	r3, [r7, #28]
 80027cc:	69fb      	ldr	r3, [r7, #28]
 80027ce:	f003 030c 	and.w	r3, r3, #12
 80027d2:	2b04      	cmp	r3, #4
 80027d4:	d002      	beq.n	80027dc <HAL_RCC_GetSysClockFreq+0x40>
 80027d6:	2b08      	cmp	r3, #8
 80027d8:	d003      	beq.n	80027e2 <HAL_RCC_GetSysClockFreq+0x46>
 80027da:	e02b      	b.n	8002834 <HAL_RCC_GetSysClockFreq+0x98>
 80027dc:	4b1c      	ldr	r3, [pc, #112]	; (8002850 <HAL_RCC_GetSysClockFreq+0xb4>)
 80027de:	623b      	str	r3, [r7, #32]
 80027e0:	e02b      	b.n	800283a <HAL_RCC_GetSysClockFreq+0x9e>
 80027e2:	69fb      	ldr	r3, [r7, #28]
 80027e4:	0c9b      	lsrs	r3, r3, #18
 80027e6:	f003 030f 	and.w	r3, r3, #15
 80027ea:	3328      	adds	r3, #40	; 0x28
 80027ec:	443b      	add	r3, r7
 80027ee:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80027f2:	617b      	str	r3, [r7, #20]
 80027f4:	69fb      	ldr	r3, [r7, #28]
 80027f6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d012      	beq.n	8002824 <HAL_RCC_GetSysClockFreq+0x88>
 80027fe:	4b13      	ldr	r3, [pc, #76]	; (800284c <HAL_RCC_GetSysClockFreq+0xb0>)
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	0c5b      	lsrs	r3, r3, #17
 8002804:	f003 0301 	and.w	r3, r3, #1
 8002808:	3328      	adds	r3, #40	; 0x28
 800280a:	443b      	add	r3, r7
 800280c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002810:	61bb      	str	r3, [r7, #24]
 8002812:	697b      	ldr	r3, [r7, #20]
 8002814:	4a0e      	ldr	r2, [pc, #56]	; (8002850 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002816:	fb03 f202 	mul.w	r2, r3, r2
 800281a:	69bb      	ldr	r3, [r7, #24]
 800281c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002820:	627b      	str	r3, [r7, #36]	; 0x24
 8002822:	e004      	b.n	800282e <HAL_RCC_GetSysClockFreq+0x92>
 8002824:	697b      	ldr	r3, [r7, #20]
 8002826:	4a0b      	ldr	r2, [pc, #44]	; (8002854 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002828:	fb02 f303 	mul.w	r3, r2, r3
 800282c:	627b      	str	r3, [r7, #36]	; 0x24
 800282e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002830:	623b      	str	r3, [r7, #32]
 8002832:	e002      	b.n	800283a <HAL_RCC_GetSysClockFreq+0x9e>
 8002834:	4b06      	ldr	r3, [pc, #24]	; (8002850 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002836:	623b      	str	r3, [r7, #32]
 8002838:	bf00      	nop
 800283a:	6a3b      	ldr	r3, [r7, #32]
 800283c:	4618      	mov	r0, r3
 800283e:	3728      	adds	r7, #40	; 0x28
 8002840:	46bd      	mov	sp, r7
 8002842:	bc90      	pop	{r4, r7}
 8002844:	4770      	bx	lr
 8002846:	bf00      	nop
 8002848:	080044a0 	.word	0x080044a0
 800284c:	40021000 	.word	0x40021000
 8002850:	007a1200 	.word	0x007a1200
 8002854:	003d0900 	.word	0x003d0900

08002858 <HAL_RCC_GetHCLKFreq>:
 8002858:	b480      	push	{r7}
 800285a:	af00      	add	r7, sp, #0
 800285c:	4b02      	ldr	r3, [pc, #8]	; (8002868 <HAL_RCC_GetHCLKFreq+0x10>)
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	4618      	mov	r0, r3
 8002862:	46bd      	mov	sp, r7
 8002864:	bc80      	pop	{r7}
 8002866:	4770      	bx	lr
 8002868:	20000308 	.word	0x20000308

0800286c <HAL_RCC_GetPCLK1Freq>:
 800286c:	b580      	push	{r7, lr}
 800286e:	af00      	add	r7, sp, #0
 8002870:	f7ff fff2 	bl	8002858 <HAL_RCC_GetHCLKFreq>
 8002874:	4602      	mov	r2, r0
 8002876:	4b05      	ldr	r3, [pc, #20]	; (800288c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002878:	685b      	ldr	r3, [r3, #4]
 800287a:	0a1b      	lsrs	r3, r3, #8
 800287c:	f003 0307 	and.w	r3, r3, #7
 8002880:	4903      	ldr	r1, [pc, #12]	; (8002890 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002882:	5ccb      	ldrb	r3, [r1, r3]
 8002884:	fa22 f303 	lsr.w	r3, r2, r3
 8002888:	4618      	mov	r0, r3
 800288a:	bd80      	pop	{r7, pc}
 800288c:	40021000 	.word	0x40021000
 8002890:	080044c0 	.word	0x080044c0

08002894 <HAL_RCC_GetPCLK2Freq>:
 8002894:	b580      	push	{r7, lr}
 8002896:	af00      	add	r7, sp, #0
 8002898:	f7ff ffde 	bl	8002858 <HAL_RCC_GetHCLKFreq>
 800289c:	4602      	mov	r2, r0
 800289e:	4b05      	ldr	r3, [pc, #20]	; (80028b4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80028a0:	685b      	ldr	r3, [r3, #4]
 80028a2:	0adb      	lsrs	r3, r3, #11
 80028a4:	f003 0307 	and.w	r3, r3, #7
 80028a8:	4903      	ldr	r1, [pc, #12]	; (80028b8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80028aa:	5ccb      	ldrb	r3, [r1, r3]
 80028ac:	fa22 f303 	lsr.w	r3, r2, r3
 80028b0:	4618      	mov	r0, r3
 80028b2:	bd80      	pop	{r7, pc}
 80028b4:	40021000 	.word	0x40021000
 80028b8:	080044c0 	.word	0x080044c0

080028bc <RCC_Delay>:
 80028bc:	b480      	push	{r7}
 80028be:	b085      	sub	sp, #20
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	6078      	str	r0, [r7, #4]
 80028c4:	4b0a      	ldr	r3, [pc, #40]	; (80028f0 <RCC_Delay+0x34>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	4a0a      	ldr	r2, [pc, #40]	; (80028f4 <RCC_Delay+0x38>)
 80028ca:	fba2 2303 	umull	r2, r3, r2, r3
 80028ce:	0a5b      	lsrs	r3, r3, #9
 80028d0:	687a      	ldr	r2, [r7, #4]
 80028d2:	fb02 f303 	mul.w	r3, r2, r3
 80028d6:	60fb      	str	r3, [r7, #12]
 80028d8:	bf00      	nop
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	1e5a      	subs	r2, r3, #1
 80028de:	60fa      	str	r2, [r7, #12]
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d1f9      	bne.n	80028d8 <RCC_Delay+0x1c>
 80028e4:	bf00      	nop
 80028e6:	bf00      	nop
 80028e8:	3714      	adds	r7, #20
 80028ea:	46bd      	mov	sp, r7
 80028ec:	bc80      	pop	{r7}
 80028ee:	4770      	bx	lr
 80028f0:	20000308 	.word	0x20000308
 80028f4:	10624dd3 	.word	0x10624dd3

080028f8 <HAL_TIM_Base_Init>:
 80028f8:	b580      	push	{r7, lr}
 80028fa:	b082      	sub	sp, #8
 80028fc:	af00      	add	r7, sp, #0
 80028fe:	6078      	str	r0, [r7, #4]
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	2b00      	cmp	r3, #0
 8002904:	d101      	bne.n	800290a <HAL_TIM_Base_Init+0x12>
 8002906:	2301      	movs	r3, #1
 8002908:	e041      	b.n	800298e <HAL_TIM_Base_Init+0x96>
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002910:	b2db      	uxtb	r3, r3
 8002912:	2b00      	cmp	r3, #0
 8002914:	d106      	bne.n	8002924 <HAL_TIM_Base_Init+0x2c>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	2200      	movs	r2, #0
 800291a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800291e:	6878      	ldr	r0, [r7, #4]
 8002920:	f7fe fea0 	bl	8001664 <HAL_TIM_Base_MspInit>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	2202      	movs	r2, #2
 8002928:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	681a      	ldr	r2, [r3, #0]
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	3304      	adds	r3, #4
 8002934:	4619      	mov	r1, r3
 8002936:	4610      	mov	r0, r2
 8002938:	f000 fc28 	bl	800318c <TIM_Base_SetConfig>
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	2201      	movs	r2, #1
 8002940:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	2201      	movs	r2, #1
 8002948:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	2201      	movs	r2, #1
 8002950:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2201      	movs	r2, #1
 8002958:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	2201      	movs	r2, #1
 8002960:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	2201      	movs	r2, #1
 8002968:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	2201      	movs	r2, #1
 8002970:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	2201      	movs	r2, #1
 8002978:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	2201      	movs	r2, #1
 8002980:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	2201      	movs	r2, #1
 8002988:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800298c:	2300      	movs	r3, #0
 800298e:	4618      	mov	r0, r3
 8002990:	3708      	adds	r7, #8
 8002992:	46bd      	mov	sp, r7
 8002994:	bd80      	pop	{r7, pc}
	...

08002998 <HAL_TIM_Base_Start_IT>:
 8002998:	b480      	push	{r7}
 800299a:	b085      	sub	sp, #20
 800299c:	af00      	add	r7, sp, #0
 800299e:	6078      	str	r0, [r7, #4]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80029a6:	b2db      	uxtb	r3, r3
 80029a8:	2b01      	cmp	r3, #1
 80029aa:	d001      	beq.n	80029b0 <HAL_TIM_Base_Start_IT+0x18>
 80029ac:	2301      	movs	r3, #1
 80029ae:	e03a      	b.n	8002a26 <HAL_TIM_Base_Start_IT+0x8e>
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	2202      	movs	r2, #2
 80029b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	68da      	ldr	r2, [r3, #12]
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	f042 0201 	orr.w	r2, r2, #1
 80029c6:	60da      	str	r2, [r3, #12]
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	4a18      	ldr	r2, [pc, #96]	; (8002a30 <HAL_TIM_Base_Start_IT+0x98>)
 80029ce:	4293      	cmp	r3, r2
 80029d0:	d00e      	beq.n	80029f0 <HAL_TIM_Base_Start_IT+0x58>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	681b      	ldr	r3, [r3, #0]
 80029d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80029da:	d009      	beq.n	80029f0 <HAL_TIM_Base_Start_IT+0x58>
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4a14      	ldr	r2, [pc, #80]	; (8002a34 <HAL_TIM_Base_Start_IT+0x9c>)
 80029e2:	4293      	cmp	r3, r2
 80029e4:	d004      	beq.n	80029f0 <HAL_TIM_Base_Start_IT+0x58>
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4a13      	ldr	r2, [pc, #76]	; (8002a38 <HAL_TIM_Base_Start_IT+0xa0>)
 80029ec:	4293      	cmp	r3, r2
 80029ee:	d111      	bne.n	8002a14 <HAL_TIM_Base_Start_IT+0x7c>
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	689b      	ldr	r3, [r3, #8]
 80029f6:	f003 0307 	and.w	r3, r3, #7
 80029fa:	60fb      	str	r3, [r7, #12]
 80029fc:	68fb      	ldr	r3, [r7, #12]
 80029fe:	2b06      	cmp	r3, #6
 8002a00:	d010      	beq.n	8002a24 <HAL_TIM_Base_Start_IT+0x8c>
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	681a      	ldr	r2, [r3, #0]
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	f042 0201 	orr.w	r2, r2, #1
 8002a10:	601a      	str	r2, [r3, #0]
 8002a12:	e007      	b.n	8002a24 <HAL_TIM_Base_Start_IT+0x8c>
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	681a      	ldr	r2, [r3, #0]
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	f042 0201 	orr.w	r2, r2, #1
 8002a22:	601a      	str	r2, [r3, #0]
 8002a24:	2300      	movs	r3, #0
 8002a26:	4618      	mov	r0, r3
 8002a28:	3714      	adds	r7, #20
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bc80      	pop	{r7}
 8002a2e:	4770      	bx	lr
 8002a30:	40012c00 	.word	0x40012c00
 8002a34:	40000400 	.word	0x40000400
 8002a38:	40000800 	.word	0x40000800

08002a3c <HAL_TIM_PWM_Init>:
 8002a3c:	b580      	push	{r7, lr}
 8002a3e:	b082      	sub	sp, #8
 8002a40:	af00      	add	r7, sp, #0
 8002a42:	6078      	str	r0, [r7, #4]
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d101      	bne.n	8002a4e <HAL_TIM_PWM_Init+0x12>
 8002a4a:	2301      	movs	r3, #1
 8002a4c:	e041      	b.n	8002ad2 <HAL_TIM_PWM_Init+0x96>
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a54:	b2db      	uxtb	r3, r3
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d106      	bne.n	8002a68 <HAL_TIM_PWM_Init+0x2c>
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	2200      	movs	r2, #0
 8002a5e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a62:	6878      	ldr	r0, [r7, #4]
 8002a64:	f000 f839 	bl	8002ada <HAL_TIM_PWM_MspInit>
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	2202      	movs	r2, #2
 8002a6c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	681a      	ldr	r2, [r3, #0]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	3304      	adds	r3, #4
 8002a78:	4619      	mov	r1, r3
 8002a7a:	4610      	mov	r0, r2
 8002a7c:	f000 fb86 	bl	800318c <TIM_Base_SetConfig>
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	2201      	movs	r2, #1
 8002a84:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	2201      	movs	r2, #1
 8002a8c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	2201      	movs	r2, #1
 8002a94:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	2201      	movs	r2, #1
 8002a9c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	2201      	movs	r2, #1
 8002aa4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	2201      	movs	r2, #1
 8002aac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	2201      	movs	r2, #1
 8002ab4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	2201      	movs	r2, #1
 8002abc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	2201      	movs	r2, #1
 8002ac4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	2201      	movs	r2, #1
 8002acc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ad0:	2300      	movs	r3, #0
 8002ad2:	4618      	mov	r0, r3
 8002ad4:	3708      	adds	r7, #8
 8002ad6:	46bd      	mov	sp, r7
 8002ad8:	bd80      	pop	{r7, pc}

08002ada <HAL_TIM_PWM_MspInit>:
 8002ada:	b480      	push	{r7}
 8002adc:	b083      	sub	sp, #12
 8002ade:	af00      	add	r7, sp, #0
 8002ae0:	6078      	str	r0, [r7, #4]
 8002ae2:	bf00      	nop
 8002ae4:	370c      	adds	r7, #12
 8002ae6:	46bd      	mov	sp, r7
 8002ae8:	bc80      	pop	{r7}
 8002aea:	4770      	bx	lr

08002aec <HAL_TIM_PWM_Start>:
 8002aec:	b580      	push	{r7, lr}
 8002aee:	b084      	sub	sp, #16
 8002af0:	af00      	add	r7, sp, #0
 8002af2:	6078      	str	r0, [r7, #4]
 8002af4:	6039      	str	r1, [r7, #0]
 8002af6:	683b      	ldr	r3, [r7, #0]
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d109      	bne.n	8002b10 <HAL_TIM_PWM_Start+0x24>
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002b02:	b2db      	uxtb	r3, r3
 8002b04:	2b01      	cmp	r3, #1
 8002b06:	bf14      	ite	ne
 8002b08:	2301      	movne	r3, #1
 8002b0a:	2300      	moveq	r3, #0
 8002b0c:	b2db      	uxtb	r3, r3
 8002b0e:	e022      	b.n	8002b56 <HAL_TIM_PWM_Start+0x6a>
 8002b10:	683b      	ldr	r3, [r7, #0]
 8002b12:	2b04      	cmp	r3, #4
 8002b14:	d109      	bne.n	8002b2a <HAL_TIM_PWM_Start+0x3e>
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8002b1c:	b2db      	uxtb	r3, r3
 8002b1e:	2b01      	cmp	r3, #1
 8002b20:	bf14      	ite	ne
 8002b22:	2301      	movne	r3, #1
 8002b24:	2300      	moveq	r3, #0
 8002b26:	b2db      	uxtb	r3, r3
 8002b28:	e015      	b.n	8002b56 <HAL_TIM_PWM_Start+0x6a>
 8002b2a:	683b      	ldr	r3, [r7, #0]
 8002b2c:	2b08      	cmp	r3, #8
 8002b2e:	d109      	bne.n	8002b44 <HAL_TIM_PWM_Start+0x58>
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002b36:	b2db      	uxtb	r3, r3
 8002b38:	2b01      	cmp	r3, #1
 8002b3a:	bf14      	ite	ne
 8002b3c:	2301      	movne	r3, #1
 8002b3e:	2300      	moveq	r3, #0
 8002b40:	b2db      	uxtb	r3, r3
 8002b42:	e008      	b.n	8002b56 <HAL_TIM_PWM_Start+0x6a>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002b4a:	b2db      	uxtb	r3, r3
 8002b4c:	2b01      	cmp	r3, #1
 8002b4e:	bf14      	ite	ne
 8002b50:	2301      	movne	r3, #1
 8002b52:	2300      	moveq	r3, #0
 8002b54:	b2db      	uxtb	r3, r3
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d001      	beq.n	8002b5e <HAL_TIM_PWM_Start+0x72>
 8002b5a:	2301      	movs	r3, #1
 8002b5c:	e05e      	b.n	8002c1c <HAL_TIM_PWM_Start+0x130>
 8002b5e:	683b      	ldr	r3, [r7, #0]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d104      	bne.n	8002b6e <HAL_TIM_PWM_Start+0x82>
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	2202      	movs	r2, #2
 8002b68:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b6c:	e013      	b.n	8002b96 <HAL_TIM_PWM_Start+0xaa>
 8002b6e:	683b      	ldr	r3, [r7, #0]
 8002b70:	2b04      	cmp	r3, #4
 8002b72:	d104      	bne.n	8002b7e <HAL_TIM_PWM_Start+0x92>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	2202      	movs	r2, #2
 8002b78:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002b7c:	e00b      	b.n	8002b96 <HAL_TIM_PWM_Start+0xaa>
 8002b7e:	683b      	ldr	r3, [r7, #0]
 8002b80:	2b08      	cmp	r3, #8
 8002b82:	d104      	bne.n	8002b8e <HAL_TIM_PWM_Start+0xa2>
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	2202      	movs	r2, #2
 8002b88:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002b8c:	e003      	b.n	8002b96 <HAL_TIM_PWM_Start+0xaa>
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	2202      	movs	r2, #2
 8002b92:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	2201      	movs	r2, #1
 8002b9c:	6839      	ldr	r1, [r7, #0]
 8002b9e:	4618      	mov	r0, r3
 8002ba0:	f000 fd74 	bl	800368c <TIM_CCxChannelCmd>
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	4a1e      	ldr	r2, [pc, #120]	; (8002c24 <HAL_TIM_PWM_Start+0x138>)
 8002baa:	4293      	cmp	r3, r2
 8002bac:	d107      	bne.n	8002bbe <HAL_TIM_PWM_Start+0xd2>
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002bbc:	645a      	str	r2, [r3, #68]	; 0x44
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	4a18      	ldr	r2, [pc, #96]	; (8002c24 <HAL_TIM_PWM_Start+0x138>)
 8002bc4:	4293      	cmp	r3, r2
 8002bc6:	d00e      	beq.n	8002be6 <HAL_TIM_PWM_Start+0xfa>
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bd0:	d009      	beq.n	8002be6 <HAL_TIM_PWM_Start+0xfa>
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	4a14      	ldr	r2, [pc, #80]	; (8002c28 <HAL_TIM_PWM_Start+0x13c>)
 8002bd8:	4293      	cmp	r3, r2
 8002bda:	d004      	beq.n	8002be6 <HAL_TIM_PWM_Start+0xfa>
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	4a12      	ldr	r2, [pc, #72]	; (8002c2c <HAL_TIM_PWM_Start+0x140>)
 8002be2:	4293      	cmp	r3, r2
 8002be4:	d111      	bne.n	8002c0a <HAL_TIM_PWM_Start+0x11e>
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	689b      	ldr	r3, [r3, #8]
 8002bec:	f003 0307 	and.w	r3, r3, #7
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	2b06      	cmp	r3, #6
 8002bf6:	d010      	beq.n	8002c1a <HAL_TIM_PWM_Start+0x12e>
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	681a      	ldr	r2, [r3, #0]
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	f042 0201 	orr.w	r2, r2, #1
 8002c06:	601a      	str	r2, [r3, #0]
 8002c08:	e007      	b.n	8002c1a <HAL_TIM_PWM_Start+0x12e>
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	681a      	ldr	r2, [r3, #0]
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f042 0201 	orr.w	r2, r2, #1
 8002c18:	601a      	str	r2, [r3, #0]
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	4618      	mov	r0, r3
 8002c1e:	3710      	adds	r7, #16
 8002c20:	46bd      	mov	sp, r7
 8002c22:	bd80      	pop	{r7, pc}
 8002c24:	40012c00 	.word	0x40012c00
 8002c28:	40000400 	.word	0x40000400
 8002c2c:	40000800 	.word	0x40000800

08002c30 <HAL_TIM_IRQHandler>:
 8002c30:	b580      	push	{r7, lr}
 8002c32:	b082      	sub	sp, #8
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	6078      	str	r0, [r7, #4]
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	691b      	ldr	r3, [r3, #16]
 8002c3e:	f003 0302 	and.w	r3, r3, #2
 8002c42:	2b02      	cmp	r3, #2
 8002c44:	d122      	bne.n	8002c8c <HAL_TIM_IRQHandler+0x5c>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	68db      	ldr	r3, [r3, #12]
 8002c4c:	f003 0302 	and.w	r3, r3, #2
 8002c50:	2b02      	cmp	r3, #2
 8002c52:	d11b      	bne.n	8002c8c <HAL_TIM_IRQHandler+0x5c>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	f06f 0202 	mvn.w	r2, #2
 8002c5c:	611a      	str	r2, [r3, #16]
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	2201      	movs	r2, #1
 8002c62:	771a      	strb	r2, [r3, #28]
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	699b      	ldr	r3, [r3, #24]
 8002c6a:	f003 0303 	and.w	r3, r3, #3
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d003      	beq.n	8002c7a <HAL_TIM_IRQHandler+0x4a>
 8002c72:	6878      	ldr	r0, [r7, #4]
 8002c74:	f000 fa6f 	bl	8003156 <HAL_TIM_IC_CaptureCallback>
 8002c78:	e005      	b.n	8002c86 <HAL_TIM_IRQHandler+0x56>
 8002c7a:	6878      	ldr	r0, [r7, #4]
 8002c7c:	f000 fa62 	bl	8003144 <HAL_TIM_OC_DelayElapsedCallback>
 8002c80:	6878      	ldr	r0, [r7, #4]
 8002c82:	f000 fa71 	bl	8003168 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	2200      	movs	r2, #0
 8002c8a:	771a      	strb	r2, [r3, #28]
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	691b      	ldr	r3, [r3, #16]
 8002c92:	f003 0304 	and.w	r3, r3, #4
 8002c96:	2b04      	cmp	r3, #4
 8002c98:	d122      	bne.n	8002ce0 <HAL_TIM_IRQHandler+0xb0>
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	68db      	ldr	r3, [r3, #12]
 8002ca0:	f003 0304 	and.w	r3, r3, #4
 8002ca4:	2b04      	cmp	r3, #4
 8002ca6:	d11b      	bne.n	8002ce0 <HAL_TIM_IRQHandler+0xb0>
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	f06f 0204 	mvn.w	r2, #4
 8002cb0:	611a      	str	r2, [r3, #16]
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	2202      	movs	r2, #2
 8002cb6:	771a      	strb	r2, [r3, #28]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	681b      	ldr	r3, [r3, #0]
 8002cbc:	699b      	ldr	r3, [r3, #24]
 8002cbe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	d003      	beq.n	8002cce <HAL_TIM_IRQHandler+0x9e>
 8002cc6:	6878      	ldr	r0, [r7, #4]
 8002cc8:	f000 fa45 	bl	8003156 <HAL_TIM_IC_CaptureCallback>
 8002ccc:	e005      	b.n	8002cda <HAL_TIM_IRQHandler+0xaa>
 8002cce:	6878      	ldr	r0, [r7, #4]
 8002cd0:	f000 fa38 	bl	8003144 <HAL_TIM_OC_DelayElapsedCallback>
 8002cd4:	6878      	ldr	r0, [r7, #4]
 8002cd6:	f000 fa47 	bl	8003168 <HAL_TIM_PWM_PulseFinishedCallback>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	2200      	movs	r2, #0
 8002cde:	771a      	strb	r2, [r3, #28]
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	691b      	ldr	r3, [r3, #16]
 8002ce6:	f003 0308 	and.w	r3, r3, #8
 8002cea:	2b08      	cmp	r3, #8
 8002cec:	d122      	bne.n	8002d34 <HAL_TIM_IRQHandler+0x104>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	68db      	ldr	r3, [r3, #12]
 8002cf4:	f003 0308 	and.w	r3, r3, #8
 8002cf8:	2b08      	cmp	r3, #8
 8002cfa:	d11b      	bne.n	8002d34 <HAL_TIM_IRQHandler+0x104>
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	f06f 0208 	mvn.w	r2, #8
 8002d04:	611a      	str	r2, [r3, #16]
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	2204      	movs	r2, #4
 8002d0a:	771a      	strb	r2, [r3, #28]
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	69db      	ldr	r3, [r3, #28]
 8002d12:	f003 0303 	and.w	r3, r3, #3
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d003      	beq.n	8002d22 <HAL_TIM_IRQHandler+0xf2>
 8002d1a:	6878      	ldr	r0, [r7, #4]
 8002d1c:	f000 fa1b 	bl	8003156 <HAL_TIM_IC_CaptureCallback>
 8002d20:	e005      	b.n	8002d2e <HAL_TIM_IRQHandler+0xfe>
 8002d22:	6878      	ldr	r0, [r7, #4]
 8002d24:	f000 fa0e 	bl	8003144 <HAL_TIM_OC_DelayElapsedCallback>
 8002d28:	6878      	ldr	r0, [r7, #4]
 8002d2a:	f000 fa1d 	bl	8003168 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	2200      	movs	r2, #0
 8002d32:	771a      	strb	r2, [r3, #28]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	691b      	ldr	r3, [r3, #16]
 8002d3a:	f003 0310 	and.w	r3, r3, #16
 8002d3e:	2b10      	cmp	r3, #16
 8002d40:	d122      	bne.n	8002d88 <HAL_TIM_IRQHandler+0x158>
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	68db      	ldr	r3, [r3, #12]
 8002d48:	f003 0310 	and.w	r3, r3, #16
 8002d4c:	2b10      	cmp	r3, #16
 8002d4e:	d11b      	bne.n	8002d88 <HAL_TIM_IRQHandler+0x158>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	f06f 0210 	mvn.w	r2, #16
 8002d58:	611a      	str	r2, [r3, #16]
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	2208      	movs	r2, #8
 8002d5e:	771a      	strb	r2, [r3, #28]
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	69db      	ldr	r3, [r3, #28]
 8002d66:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d003      	beq.n	8002d76 <HAL_TIM_IRQHandler+0x146>
 8002d6e:	6878      	ldr	r0, [r7, #4]
 8002d70:	f000 f9f1 	bl	8003156 <HAL_TIM_IC_CaptureCallback>
 8002d74:	e005      	b.n	8002d82 <HAL_TIM_IRQHandler+0x152>
 8002d76:	6878      	ldr	r0, [r7, #4]
 8002d78:	f000 f9e4 	bl	8003144 <HAL_TIM_OC_DelayElapsedCallback>
 8002d7c:	6878      	ldr	r0, [r7, #4]
 8002d7e:	f000 f9f3 	bl	8003168 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	2200      	movs	r2, #0
 8002d86:	771a      	strb	r2, [r3, #28]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	691b      	ldr	r3, [r3, #16]
 8002d8e:	f003 0301 	and.w	r3, r3, #1
 8002d92:	2b01      	cmp	r3, #1
 8002d94:	d10e      	bne.n	8002db4 <HAL_TIM_IRQHandler+0x184>
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	68db      	ldr	r3, [r3, #12]
 8002d9c:	f003 0301 	and.w	r3, r3, #1
 8002da0:	2b01      	cmp	r3, #1
 8002da2:	d107      	bne.n	8002db4 <HAL_TIM_IRQHandler+0x184>
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	f06f 0201 	mvn.w	r2, #1
 8002dac:	611a      	str	r2, [r3, #16]
 8002dae:	6878      	ldr	r0, [r7, #4]
 8002db0:	f7fe f89f 	bl	8000ef2 <HAL_TIM_PeriodElapsedCallback>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	691b      	ldr	r3, [r3, #16]
 8002dba:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002dbe:	2b80      	cmp	r3, #128	; 0x80
 8002dc0:	d10e      	bne.n	8002de0 <HAL_TIM_IRQHandler+0x1b0>
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	68db      	ldr	r3, [r3, #12]
 8002dc8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002dcc:	2b80      	cmp	r3, #128	; 0x80
 8002dce:	d107      	bne.n	8002de0 <HAL_TIM_IRQHandler+0x1b0>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002dd8:	611a      	str	r2, [r3, #16]
 8002dda:	6878      	ldr	r0, [r7, #4]
 8002ddc:	f000 fce1 	bl	80037a2 <HAL_TIMEx_BreakCallback>
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	691b      	ldr	r3, [r3, #16]
 8002de6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002dea:	2b40      	cmp	r3, #64	; 0x40
 8002dec:	d10e      	bne.n	8002e0c <HAL_TIM_IRQHandler+0x1dc>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	68db      	ldr	r3, [r3, #12]
 8002df4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002df8:	2b40      	cmp	r3, #64	; 0x40
 8002dfa:	d107      	bne.n	8002e0c <HAL_TIM_IRQHandler+0x1dc>
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002e04:	611a      	str	r2, [r3, #16]
 8002e06:	6878      	ldr	r0, [r7, #4]
 8002e08:	f000 f9b7 	bl	800317a <HAL_TIM_TriggerCallback>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	691b      	ldr	r3, [r3, #16]
 8002e12:	f003 0320 	and.w	r3, r3, #32
 8002e16:	2b20      	cmp	r3, #32
 8002e18:	d10e      	bne.n	8002e38 <HAL_TIM_IRQHandler+0x208>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	68db      	ldr	r3, [r3, #12]
 8002e20:	f003 0320 	and.w	r3, r3, #32
 8002e24:	2b20      	cmp	r3, #32
 8002e26:	d107      	bne.n	8002e38 <HAL_TIM_IRQHandler+0x208>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	f06f 0220 	mvn.w	r2, #32
 8002e30:	611a      	str	r2, [r3, #16]
 8002e32:	6878      	ldr	r0, [r7, #4]
 8002e34:	f000 fcac 	bl	8003790 <HAL_TIMEx_CommutCallback>
 8002e38:	bf00      	nop
 8002e3a:	3708      	adds	r7, #8
 8002e3c:	46bd      	mov	sp, r7
 8002e3e:	bd80      	pop	{r7, pc}

08002e40 <HAL_TIM_PWM_ConfigChannel>:
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b084      	sub	sp, #16
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	60f8      	str	r0, [r7, #12]
 8002e48:	60b9      	str	r1, [r7, #8]
 8002e4a:	607a      	str	r2, [r7, #4]
 8002e4c:	68fb      	ldr	r3, [r7, #12]
 8002e4e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002e52:	2b01      	cmp	r3, #1
 8002e54:	d101      	bne.n	8002e5a <HAL_TIM_PWM_ConfigChannel+0x1a>
 8002e56:	2302      	movs	r3, #2
 8002e58:	e0ac      	b.n	8002fb4 <HAL_TIM_PWM_ConfigChannel+0x174>
 8002e5a:	68fb      	ldr	r3, [r7, #12]
 8002e5c:	2201      	movs	r2, #1
 8002e5e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	2b0c      	cmp	r3, #12
 8002e66:	f200 809f 	bhi.w	8002fa8 <HAL_TIM_PWM_ConfigChannel+0x168>
 8002e6a:	a201      	add	r2, pc, #4	; (adr r2, 8002e70 <HAL_TIM_PWM_ConfigChannel+0x30>)
 8002e6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e70:	08002ea5 	.word	0x08002ea5
 8002e74:	08002fa9 	.word	0x08002fa9
 8002e78:	08002fa9 	.word	0x08002fa9
 8002e7c:	08002fa9 	.word	0x08002fa9
 8002e80:	08002ee5 	.word	0x08002ee5
 8002e84:	08002fa9 	.word	0x08002fa9
 8002e88:	08002fa9 	.word	0x08002fa9
 8002e8c:	08002fa9 	.word	0x08002fa9
 8002e90:	08002f27 	.word	0x08002f27
 8002e94:	08002fa9 	.word	0x08002fa9
 8002e98:	08002fa9 	.word	0x08002fa9
 8002e9c:	08002fa9 	.word	0x08002fa9
 8002ea0:	08002f67 	.word	0x08002f67
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	68b9      	ldr	r1, [r7, #8]
 8002eaa:	4618      	mov	r0, r3
 8002eac:	f000 f9d0 	bl	8003250 <TIM_OC1_SetConfig>
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	699a      	ldr	r2, [r3, #24]
 8002eb6:	68fb      	ldr	r3, [r7, #12]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	f042 0208 	orr.w	r2, r2, #8
 8002ebe:	619a      	str	r2, [r3, #24]
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	699a      	ldr	r2, [r3, #24]
 8002ec6:	68fb      	ldr	r3, [r7, #12]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f022 0204 	bic.w	r2, r2, #4
 8002ece:	619a      	str	r2, [r3, #24]
 8002ed0:	68fb      	ldr	r3, [r7, #12]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	6999      	ldr	r1, [r3, #24]
 8002ed6:	68bb      	ldr	r3, [r7, #8]
 8002ed8:	691a      	ldr	r2, [r3, #16]
 8002eda:	68fb      	ldr	r3, [r7, #12]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	430a      	orrs	r2, r1
 8002ee0:	619a      	str	r2, [r3, #24]
 8002ee2:	e062      	b.n	8002faa <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	68b9      	ldr	r1, [r7, #8]
 8002eea:	4618      	mov	r0, r3
 8002eec:	f000 fa16 	bl	800331c <TIM_OC2_SetConfig>
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	699a      	ldr	r2, [r3, #24]
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002efe:	619a      	str	r2, [r3, #24]
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	699a      	ldr	r2, [r3, #24]
 8002f06:	68fb      	ldr	r3, [r7, #12]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002f0e:	619a      	str	r2, [r3, #24]
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	6999      	ldr	r1, [r3, #24]
 8002f16:	68bb      	ldr	r3, [r7, #8]
 8002f18:	691b      	ldr	r3, [r3, #16]
 8002f1a:	021a      	lsls	r2, r3, #8
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	430a      	orrs	r2, r1
 8002f22:	619a      	str	r2, [r3, #24]
 8002f24:	e041      	b.n	8002faa <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	68b9      	ldr	r1, [r7, #8]
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	f000 fa5f 	bl	80033f0 <TIM_OC3_SetConfig>
 8002f32:	68fb      	ldr	r3, [r7, #12]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	69da      	ldr	r2, [r3, #28]
 8002f38:	68fb      	ldr	r3, [r7, #12]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	f042 0208 	orr.w	r2, r2, #8
 8002f40:	61da      	str	r2, [r3, #28]
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	69da      	ldr	r2, [r3, #28]
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	f022 0204 	bic.w	r2, r2, #4
 8002f50:	61da      	str	r2, [r3, #28]
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	69d9      	ldr	r1, [r3, #28]
 8002f58:	68bb      	ldr	r3, [r7, #8]
 8002f5a:	691a      	ldr	r2, [r3, #16]
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	430a      	orrs	r2, r1
 8002f62:	61da      	str	r2, [r3, #28]
 8002f64:	e021      	b.n	8002faa <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	68b9      	ldr	r1, [r7, #8]
 8002f6c:	4618      	mov	r0, r3
 8002f6e:	f000 faa9 	bl	80034c4 <TIM_OC4_SetConfig>
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	69da      	ldr	r2, [r3, #28]
 8002f78:	68fb      	ldr	r3, [r7, #12]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002f80:	61da      	str	r2, [r3, #28]
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	69da      	ldr	r2, [r3, #28]
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002f90:	61da      	str	r2, [r3, #28]
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	69d9      	ldr	r1, [r3, #28]
 8002f98:	68bb      	ldr	r3, [r7, #8]
 8002f9a:	691b      	ldr	r3, [r3, #16]
 8002f9c:	021a      	lsls	r2, r3, #8
 8002f9e:	68fb      	ldr	r3, [r7, #12]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	430a      	orrs	r2, r1
 8002fa4:	61da      	str	r2, [r3, #28]
 8002fa6:	e000      	b.n	8002faa <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002fa8:	bf00      	nop
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	2200      	movs	r2, #0
 8002fae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fb2:	2300      	movs	r3, #0
 8002fb4:	4618      	mov	r0, r3
 8002fb6:	3710      	adds	r7, #16
 8002fb8:	46bd      	mov	sp, r7
 8002fba:	bd80      	pop	{r7, pc}

08002fbc <HAL_TIM_ConfigClockSource>:
 8002fbc:	b580      	push	{r7, lr}
 8002fbe:	b084      	sub	sp, #16
 8002fc0:	af00      	add	r7, sp, #0
 8002fc2:	6078      	str	r0, [r7, #4]
 8002fc4:	6039      	str	r1, [r7, #0]
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002fcc:	2b01      	cmp	r3, #1
 8002fce:	d101      	bne.n	8002fd4 <HAL_TIM_ConfigClockSource+0x18>
 8002fd0:	2302      	movs	r3, #2
 8002fd2:	e0b3      	b.n	800313c <HAL_TIM_ConfigClockSource+0x180>
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	2201      	movs	r2, #1
 8002fd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	2202      	movs	r2, #2
 8002fe0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	689b      	ldr	r3, [r3, #8]
 8002fea:	60fb      	str	r3, [r7, #12]
 8002fec:	68fb      	ldr	r3, [r7, #12]
 8002fee:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002ff2:	60fb      	str	r3, [r7, #12]
 8002ff4:	68fb      	ldr	r3, [r7, #12]
 8002ff6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002ffa:	60fb      	str	r3, [r7, #12]
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	68fa      	ldr	r2, [r7, #12]
 8003002:	609a      	str	r2, [r3, #8]
 8003004:	683b      	ldr	r3, [r7, #0]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800300c:	d03e      	beq.n	800308c <HAL_TIM_ConfigClockSource+0xd0>
 800300e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003012:	f200 8087 	bhi.w	8003124 <HAL_TIM_ConfigClockSource+0x168>
 8003016:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800301a:	f000 8085 	beq.w	8003128 <HAL_TIM_ConfigClockSource+0x16c>
 800301e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003022:	d87f      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 8003024:	2b70      	cmp	r3, #112	; 0x70
 8003026:	d01a      	beq.n	800305e <HAL_TIM_ConfigClockSource+0xa2>
 8003028:	2b70      	cmp	r3, #112	; 0x70
 800302a:	d87b      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 800302c:	2b60      	cmp	r3, #96	; 0x60
 800302e:	d050      	beq.n	80030d2 <HAL_TIM_ConfigClockSource+0x116>
 8003030:	2b60      	cmp	r3, #96	; 0x60
 8003032:	d877      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 8003034:	2b50      	cmp	r3, #80	; 0x50
 8003036:	d03c      	beq.n	80030b2 <HAL_TIM_ConfigClockSource+0xf6>
 8003038:	2b50      	cmp	r3, #80	; 0x50
 800303a:	d873      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 800303c:	2b40      	cmp	r3, #64	; 0x40
 800303e:	d058      	beq.n	80030f2 <HAL_TIM_ConfigClockSource+0x136>
 8003040:	2b40      	cmp	r3, #64	; 0x40
 8003042:	d86f      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 8003044:	2b30      	cmp	r3, #48	; 0x30
 8003046:	d064      	beq.n	8003112 <HAL_TIM_ConfigClockSource+0x156>
 8003048:	2b30      	cmp	r3, #48	; 0x30
 800304a:	d86b      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 800304c:	2b20      	cmp	r3, #32
 800304e:	d060      	beq.n	8003112 <HAL_TIM_ConfigClockSource+0x156>
 8003050:	2b20      	cmp	r3, #32
 8003052:	d867      	bhi.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 8003054:	2b00      	cmp	r3, #0
 8003056:	d05c      	beq.n	8003112 <HAL_TIM_ConfigClockSource+0x156>
 8003058:	2b10      	cmp	r3, #16
 800305a:	d05a      	beq.n	8003112 <HAL_TIM_ConfigClockSource+0x156>
 800305c:	e062      	b.n	8003124 <HAL_TIM_ConfigClockSource+0x168>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6818      	ldr	r0, [r3, #0]
 8003062:	683b      	ldr	r3, [r7, #0]
 8003064:	6899      	ldr	r1, [r3, #8]
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	685a      	ldr	r2, [r3, #4]
 800306a:	683b      	ldr	r3, [r7, #0]
 800306c:	68db      	ldr	r3, [r3, #12]
 800306e:	f000 faee 	bl	800364e <TIM_ETR_SetConfig>
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	689b      	ldr	r3, [r3, #8]
 8003078:	60fb      	str	r3, [r7, #12]
 800307a:	68fb      	ldr	r3, [r7, #12]
 800307c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003080:	60fb      	str	r3, [r7, #12]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	68fa      	ldr	r2, [r7, #12]
 8003088:	609a      	str	r2, [r3, #8]
 800308a:	e04e      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	6818      	ldr	r0, [r3, #0]
 8003090:	683b      	ldr	r3, [r7, #0]
 8003092:	6899      	ldr	r1, [r3, #8]
 8003094:	683b      	ldr	r3, [r7, #0]
 8003096:	685a      	ldr	r2, [r3, #4]
 8003098:	683b      	ldr	r3, [r7, #0]
 800309a:	68db      	ldr	r3, [r3, #12]
 800309c:	f000 fad7 	bl	800364e <TIM_ETR_SetConfig>
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	689a      	ldr	r2, [r3, #8]
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80030ae:	609a      	str	r2, [r3, #8]
 80030b0:	e03b      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	6818      	ldr	r0, [r3, #0]
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	6859      	ldr	r1, [r3, #4]
 80030ba:	683b      	ldr	r3, [r7, #0]
 80030bc:	68db      	ldr	r3, [r3, #12]
 80030be:	461a      	mov	r2, r3
 80030c0:	f000 fa4e 	bl	8003560 <TIM_TI1_ConfigInputStage>
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	2150      	movs	r1, #80	; 0x50
 80030ca:	4618      	mov	r0, r3
 80030cc:	f000 faa5 	bl	800361a <TIM_ITRx_SetConfig>
 80030d0:	e02b      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	6818      	ldr	r0, [r3, #0]
 80030d6:	683b      	ldr	r3, [r7, #0]
 80030d8:	6859      	ldr	r1, [r3, #4]
 80030da:	683b      	ldr	r3, [r7, #0]
 80030dc:	68db      	ldr	r3, [r3, #12]
 80030de:	461a      	mov	r2, r3
 80030e0:	f000 fa6c 	bl	80035bc <TIM_TI2_ConfigInputStage>
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	2160      	movs	r1, #96	; 0x60
 80030ea:	4618      	mov	r0, r3
 80030ec:	f000 fa95 	bl	800361a <TIM_ITRx_SetConfig>
 80030f0:	e01b      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	6818      	ldr	r0, [r3, #0]
 80030f6:	683b      	ldr	r3, [r7, #0]
 80030f8:	6859      	ldr	r1, [r3, #4]
 80030fa:	683b      	ldr	r3, [r7, #0]
 80030fc:	68db      	ldr	r3, [r3, #12]
 80030fe:	461a      	mov	r2, r3
 8003100:	f000 fa2e 	bl	8003560 <TIM_TI1_ConfigInputStage>
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	2140      	movs	r1, #64	; 0x40
 800310a:	4618      	mov	r0, r3
 800310c:	f000 fa85 	bl	800361a <TIM_ITRx_SetConfig>
 8003110:	e00b      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681a      	ldr	r2, [r3, #0]
 8003116:	683b      	ldr	r3, [r7, #0]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	4619      	mov	r1, r3
 800311c:	4610      	mov	r0, r2
 800311e:	f000 fa7c 	bl	800361a <TIM_ITRx_SetConfig>
 8003122:	e002      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 8003124:	bf00      	nop
 8003126:	e000      	b.n	800312a <HAL_TIM_ConfigClockSource+0x16e>
 8003128:	bf00      	nop
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	2201      	movs	r2, #1
 800312e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	2200      	movs	r2, #0
 8003136:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800313a:	2300      	movs	r3, #0
 800313c:	4618      	mov	r0, r3
 800313e:	3710      	adds	r7, #16
 8003140:	46bd      	mov	sp, r7
 8003142:	bd80      	pop	{r7, pc}

08003144 <HAL_TIM_OC_DelayElapsedCallback>:
 8003144:	b480      	push	{r7}
 8003146:	b083      	sub	sp, #12
 8003148:	af00      	add	r7, sp, #0
 800314a:	6078      	str	r0, [r7, #4]
 800314c:	bf00      	nop
 800314e:	370c      	adds	r7, #12
 8003150:	46bd      	mov	sp, r7
 8003152:	bc80      	pop	{r7}
 8003154:	4770      	bx	lr

08003156 <HAL_TIM_IC_CaptureCallback>:
 8003156:	b480      	push	{r7}
 8003158:	b083      	sub	sp, #12
 800315a:	af00      	add	r7, sp, #0
 800315c:	6078      	str	r0, [r7, #4]
 800315e:	bf00      	nop
 8003160:	370c      	adds	r7, #12
 8003162:	46bd      	mov	sp, r7
 8003164:	bc80      	pop	{r7}
 8003166:	4770      	bx	lr

08003168 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003168:	b480      	push	{r7}
 800316a:	b083      	sub	sp, #12
 800316c:	af00      	add	r7, sp, #0
 800316e:	6078      	str	r0, [r7, #4]
 8003170:	bf00      	nop
 8003172:	370c      	adds	r7, #12
 8003174:	46bd      	mov	sp, r7
 8003176:	bc80      	pop	{r7}
 8003178:	4770      	bx	lr

0800317a <HAL_TIM_TriggerCallback>:
 800317a:	b480      	push	{r7}
 800317c:	b083      	sub	sp, #12
 800317e:	af00      	add	r7, sp, #0
 8003180:	6078      	str	r0, [r7, #4]
 8003182:	bf00      	nop
 8003184:	370c      	adds	r7, #12
 8003186:	46bd      	mov	sp, r7
 8003188:	bc80      	pop	{r7}
 800318a:	4770      	bx	lr

0800318c <TIM_Base_SetConfig>:
 800318c:	b480      	push	{r7}
 800318e:	b085      	sub	sp, #20
 8003190:	af00      	add	r7, sp, #0
 8003192:	6078      	str	r0, [r7, #4]
 8003194:	6039      	str	r1, [r7, #0]
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	60fb      	str	r3, [r7, #12]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	4a29      	ldr	r2, [pc, #164]	; (8003244 <TIM_Base_SetConfig+0xb8>)
 80031a0:	4293      	cmp	r3, r2
 80031a2:	d00b      	beq.n	80031bc <TIM_Base_SetConfig+0x30>
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80031aa:	d007      	beq.n	80031bc <TIM_Base_SetConfig+0x30>
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	4a26      	ldr	r2, [pc, #152]	; (8003248 <TIM_Base_SetConfig+0xbc>)
 80031b0:	4293      	cmp	r3, r2
 80031b2:	d003      	beq.n	80031bc <TIM_Base_SetConfig+0x30>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	4a25      	ldr	r2, [pc, #148]	; (800324c <TIM_Base_SetConfig+0xc0>)
 80031b8:	4293      	cmp	r3, r2
 80031ba:	d108      	bne.n	80031ce <TIM_Base_SetConfig+0x42>
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80031c2:	60fb      	str	r3, [r7, #12]
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	685b      	ldr	r3, [r3, #4]
 80031c8:	68fa      	ldr	r2, [r7, #12]
 80031ca:	4313      	orrs	r3, r2
 80031cc:	60fb      	str	r3, [r7, #12]
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	4a1c      	ldr	r2, [pc, #112]	; (8003244 <TIM_Base_SetConfig+0xb8>)
 80031d2:	4293      	cmp	r3, r2
 80031d4:	d00b      	beq.n	80031ee <TIM_Base_SetConfig+0x62>
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80031dc:	d007      	beq.n	80031ee <TIM_Base_SetConfig+0x62>
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	4a19      	ldr	r2, [pc, #100]	; (8003248 <TIM_Base_SetConfig+0xbc>)
 80031e2:	4293      	cmp	r3, r2
 80031e4:	d003      	beq.n	80031ee <TIM_Base_SetConfig+0x62>
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	4a18      	ldr	r2, [pc, #96]	; (800324c <TIM_Base_SetConfig+0xc0>)
 80031ea:	4293      	cmp	r3, r2
 80031ec:	d108      	bne.n	8003200 <TIM_Base_SetConfig+0x74>
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80031f4:	60fb      	str	r3, [r7, #12]
 80031f6:	683b      	ldr	r3, [r7, #0]
 80031f8:	68db      	ldr	r3, [r3, #12]
 80031fa:	68fa      	ldr	r2, [r7, #12]
 80031fc:	4313      	orrs	r3, r2
 80031fe:	60fb      	str	r3, [r7, #12]
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003206:	683b      	ldr	r3, [r7, #0]
 8003208:	695b      	ldr	r3, [r3, #20]
 800320a:	4313      	orrs	r3, r2
 800320c:	60fb      	str	r3, [r7, #12]
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	68fa      	ldr	r2, [r7, #12]
 8003212:	601a      	str	r2, [r3, #0]
 8003214:	683b      	ldr	r3, [r7, #0]
 8003216:	689a      	ldr	r2, [r3, #8]
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	62da      	str	r2, [r3, #44]	; 0x2c
 800321c:	683b      	ldr	r3, [r7, #0]
 800321e:	681a      	ldr	r2, [r3, #0]
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	629a      	str	r2, [r3, #40]	; 0x28
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	4a07      	ldr	r2, [pc, #28]	; (8003244 <TIM_Base_SetConfig+0xb8>)
 8003228:	4293      	cmp	r3, r2
 800322a:	d103      	bne.n	8003234 <TIM_Base_SetConfig+0xa8>
 800322c:	683b      	ldr	r3, [r7, #0]
 800322e:	691a      	ldr	r2, [r3, #16]
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	631a      	str	r2, [r3, #48]	; 0x30
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	2201      	movs	r2, #1
 8003238:	615a      	str	r2, [r3, #20]
 800323a:	bf00      	nop
 800323c:	3714      	adds	r7, #20
 800323e:	46bd      	mov	sp, r7
 8003240:	bc80      	pop	{r7}
 8003242:	4770      	bx	lr
 8003244:	40012c00 	.word	0x40012c00
 8003248:	40000400 	.word	0x40000400
 800324c:	40000800 	.word	0x40000800

08003250 <TIM_OC1_SetConfig>:
 8003250:	b480      	push	{r7}
 8003252:	b087      	sub	sp, #28
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
 8003258:	6039      	str	r1, [r7, #0]
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	6a1b      	ldr	r3, [r3, #32]
 800325e:	f023 0201 	bic.w	r2, r3, #1
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	621a      	str	r2, [r3, #32]
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	6a1b      	ldr	r3, [r3, #32]
 800326a:	617b      	str	r3, [r7, #20]
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	685b      	ldr	r3, [r3, #4]
 8003270:	613b      	str	r3, [r7, #16]
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	699b      	ldr	r3, [r3, #24]
 8003276:	60fb      	str	r3, [r7, #12]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800327e:	60fb      	str	r3, [r7, #12]
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	f023 0303 	bic.w	r3, r3, #3
 8003286:	60fb      	str	r3, [r7, #12]
 8003288:	683b      	ldr	r3, [r7, #0]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	68fa      	ldr	r2, [r7, #12]
 800328e:	4313      	orrs	r3, r2
 8003290:	60fb      	str	r3, [r7, #12]
 8003292:	697b      	ldr	r3, [r7, #20]
 8003294:	f023 0302 	bic.w	r3, r3, #2
 8003298:	617b      	str	r3, [r7, #20]
 800329a:	683b      	ldr	r3, [r7, #0]
 800329c:	689b      	ldr	r3, [r3, #8]
 800329e:	697a      	ldr	r2, [r7, #20]
 80032a0:	4313      	orrs	r3, r2
 80032a2:	617b      	str	r3, [r7, #20]
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	4a1c      	ldr	r2, [pc, #112]	; (8003318 <TIM_OC1_SetConfig+0xc8>)
 80032a8:	4293      	cmp	r3, r2
 80032aa:	d10c      	bne.n	80032c6 <TIM_OC1_SetConfig+0x76>
 80032ac:	697b      	ldr	r3, [r7, #20]
 80032ae:	f023 0308 	bic.w	r3, r3, #8
 80032b2:	617b      	str	r3, [r7, #20]
 80032b4:	683b      	ldr	r3, [r7, #0]
 80032b6:	68db      	ldr	r3, [r3, #12]
 80032b8:	697a      	ldr	r2, [r7, #20]
 80032ba:	4313      	orrs	r3, r2
 80032bc:	617b      	str	r3, [r7, #20]
 80032be:	697b      	ldr	r3, [r7, #20]
 80032c0:	f023 0304 	bic.w	r3, r3, #4
 80032c4:	617b      	str	r3, [r7, #20]
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	4a13      	ldr	r2, [pc, #76]	; (8003318 <TIM_OC1_SetConfig+0xc8>)
 80032ca:	4293      	cmp	r3, r2
 80032cc:	d111      	bne.n	80032f2 <TIM_OC1_SetConfig+0xa2>
 80032ce:	693b      	ldr	r3, [r7, #16]
 80032d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80032d4:	613b      	str	r3, [r7, #16]
 80032d6:	693b      	ldr	r3, [r7, #16]
 80032d8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80032dc:	613b      	str	r3, [r7, #16]
 80032de:	683b      	ldr	r3, [r7, #0]
 80032e0:	695b      	ldr	r3, [r3, #20]
 80032e2:	693a      	ldr	r2, [r7, #16]
 80032e4:	4313      	orrs	r3, r2
 80032e6:	613b      	str	r3, [r7, #16]
 80032e8:	683b      	ldr	r3, [r7, #0]
 80032ea:	699b      	ldr	r3, [r3, #24]
 80032ec:	693a      	ldr	r2, [r7, #16]
 80032ee:	4313      	orrs	r3, r2
 80032f0:	613b      	str	r3, [r7, #16]
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	693a      	ldr	r2, [r7, #16]
 80032f6:	605a      	str	r2, [r3, #4]
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	68fa      	ldr	r2, [r7, #12]
 80032fc:	619a      	str	r2, [r3, #24]
 80032fe:	683b      	ldr	r3, [r7, #0]
 8003300:	685a      	ldr	r2, [r3, #4]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	635a      	str	r2, [r3, #52]	; 0x34
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	697a      	ldr	r2, [r7, #20]
 800330a:	621a      	str	r2, [r3, #32]
 800330c:	bf00      	nop
 800330e:	371c      	adds	r7, #28
 8003310:	46bd      	mov	sp, r7
 8003312:	bc80      	pop	{r7}
 8003314:	4770      	bx	lr
 8003316:	bf00      	nop
 8003318:	40012c00 	.word	0x40012c00

0800331c <TIM_OC2_SetConfig>:
 800331c:	b480      	push	{r7}
 800331e:	b087      	sub	sp, #28
 8003320:	af00      	add	r7, sp, #0
 8003322:	6078      	str	r0, [r7, #4]
 8003324:	6039      	str	r1, [r7, #0]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	6a1b      	ldr	r3, [r3, #32]
 800332a:	f023 0210 	bic.w	r2, r3, #16
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	621a      	str	r2, [r3, #32]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	6a1b      	ldr	r3, [r3, #32]
 8003336:	617b      	str	r3, [r7, #20]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	685b      	ldr	r3, [r3, #4]
 800333c:	613b      	str	r3, [r7, #16]
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	699b      	ldr	r3, [r3, #24]
 8003342:	60fb      	str	r3, [r7, #12]
 8003344:	68fb      	ldr	r3, [r7, #12]
 8003346:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800334a:	60fb      	str	r3, [r7, #12]
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003352:	60fb      	str	r3, [r7, #12]
 8003354:	683b      	ldr	r3, [r7, #0]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	021b      	lsls	r3, r3, #8
 800335a:	68fa      	ldr	r2, [r7, #12]
 800335c:	4313      	orrs	r3, r2
 800335e:	60fb      	str	r3, [r7, #12]
 8003360:	697b      	ldr	r3, [r7, #20]
 8003362:	f023 0320 	bic.w	r3, r3, #32
 8003366:	617b      	str	r3, [r7, #20]
 8003368:	683b      	ldr	r3, [r7, #0]
 800336a:	689b      	ldr	r3, [r3, #8]
 800336c:	011b      	lsls	r3, r3, #4
 800336e:	697a      	ldr	r2, [r7, #20]
 8003370:	4313      	orrs	r3, r2
 8003372:	617b      	str	r3, [r7, #20]
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	4a1d      	ldr	r2, [pc, #116]	; (80033ec <TIM_OC2_SetConfig+0xd0>)
 8003378:	4293      	cmp	r3, r2
 800337a:	d10d      	bne.n	8003398 <TIM_OC2_SetConfig+0x7c>
 800337c:	697b      	ldr	r3, [r7, #20]
 800337e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003382:	617b      	str	r3, [r7, #20]
 8003384:	683b      	ldr	r3, [r7, #0]
 8003386:	68db      	ldr	r3, [r3, #12]
 8003388:	011b      	lsls	r3, r3, #4
 800338a:	697a      	ldr	r2, [r7, #20]
 800338c:	4313      	orrs	r3, r2
 800338e:	617b      	str	r3, [r7, #20]
 8003390:	697b      	ldr	r3, [r7, #20]
 8003392:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003396:	617b      	str	r3, [r7, #20]
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	4a14      	ldr	r2, [pc, #80]	; (80033ec <TIM_OC2_SetConfig+0xd0>)
 800339c:	4293      	cmp	r3, r2
 800339e:	d113      	bne.n	80033c8 <TIM_OC2_SetConfig+0xac>
 80033a0:	693b      	ldr	r3, [r7, #16]
 80033a2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80033a6:	613b      	str	r3, [r7, #16]
 80033a8:	693b      	ldr	r3, [r7, #16]
 80033aa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80033ae:	613b      	str	r3, [r7, #16]
 80033b0:	683b      	ldr	r3, [r7, #0]
 80033b2:	695b      	ldr	r3, [r3, #20]
 80033b4:	009b      	lsls	r3, r3, #2
 80033b6:	693a      	ldr	r2, [r7, #16]
 80033b8:	4313      	orrs	r3, r2
 80033ba:	613b      	str	r3, [r7, #16]
 80033bc:	683b      	ldr	r3, [r7, #0]
 80033be:	699b      	ldr	r3, [r3, #24]
 80033c0:	009b      	lsls	r3, r3, #2
 80033c2:	693a      	ldr	r2, [r7, #16]
 80033c4:	4313      	orrs	r3, r2
 80033c6:	613b      	str	r3, [r7, #16]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	693a      	ldr	r2, [r7, #16]
 80033cc:	605a      	str	r2, [r3, #4]
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	68fa      	ldr	r2, [r7, #12]
 80033d2:	619a      	str	r2, [r3, #24]
 80033d4:	683b      	ldr	r3, [r7, #0]
 80033d6:	685a      	ldr	r2, [r3, #4]
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	639a      	str	r2, [r3, #56]	; 0x38
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	697a      	ldr	r2, [r7, #20]
 80033e0:	621a      	str	r2, [r3, #32]
 80033e2:	bf00      	nop
 80033e4:	371c      	adds	r7, #28
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bc80      	pop	{r7}
 80033ea:	4770      	bx	lr
 80033ec:	40012c00 	.word	0x40012c00

080033f0 <TIM_OC3_SetConfig>:
 80033f0:	b480      	push	{r7}
 80033f2:	b087      	sub	sp, #28
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
 80033f8:	6039      	str	r1, [r7, #0]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	6a1b      	ldr	r3, [r3, #32]
 80033fe:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	621a      	str	r2, [r3, #32]
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	6a1b      	ldr	r3, [r3, #32]
 800340a:	617b      	str	r3, [r7, #20]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	685b      	ldr	r3, [r3, #4]
 8003410:	613b      	str	r3, [r7, #16]
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	69db      	ldr	r3, [r3, #28]
 8003416:	60fb      	str	r3, [r7, #12]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800341e:	60fb      	str	r3, [r7, #12]
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	f023 0303 	bic.w	r3, r3, #3
 8003426:	60fb      	str	r3, [r7, #12]
 8003428:	683b      	ldr	r3, [r7, #0]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	68fa      	ldr	r2, [r7, #12]
 800342e:	4313      	orrs	r3, r2
 8003430:	60fb      	str	r3, [r7, #12]
 8003432:	697b      	ldr	r3, [r7, #20]
 8003434:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003438:	617b      	str	r3, [r7, #20]
 800343a:	683b      	ldr	r3, [r7, #0]
 800343c:	689b      	ldr	r3, [r3, #8]
 800343e:	021b      	lsls	r3, r3, #8
 8003440:	697a      	ldr	r2, [r7, #20]
 8003442:	4313      	orrs	r3, r2
 8003444:	617b      	str	r3, [r7, #20]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	4a1d      	ldr	r2, [pc, #116]	; (80034c0 <TIM_OC3_SetConfig+0xd0>)
 800344a:	4293      	cmp	r3, r2
 800344c:	d10d      	bne.n	800346a <TIM_OC3_SetConfig+0x7a>
 800344e:	697b      	ldr	r3, [r7, #20]
 8003450:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003454:	617b      	str	r3, [r7, #20]
 8003456:	683b      	ldr	r3, [r7, #0]
 8003458:	68db      	ldr	r3, [r3, #12]
 800345a:	021b      	lsls	r3, r3, #8
 800345c:	697a      	ldr	r2, [r7, #20]
 800345e:	4313      	orrs	r3, r2
 8003460:	617b      	str	r3, [r7, #20]
 8003462:	697b      	ldr	r3, [r7, #20]
 8003464:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003468:	617b      	str	r3, [r7, #20]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	4a14      	ldr	r2, [pc, #80]	; (80034c0 <TIM_OC3_SetConfig+0xd0>)
 800346e:	4293      	cmp	r3, r2
 8003470:	d113      	bne.n	800349a <TIM_OC3_SetConfig+0xaa>
 8003472:	693b      	ldr	r3, [r7, #16]
 8003474:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003478:	613b      	str	r3, [r7, #16]
 800347a:	693b      	ldr	r3, [r7, #16]
 800347c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003480:	613b      	str	r3, [r7, #16]
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	695b      	ldr	r3, [r3, #20]
 8003486:	011b      	lsls	r3, r3, #4
 8003488:	693a      	ldr	r2, [r7, #16]
 800348a:	4313      	orrs	r3, r2
 800348c:	613b      	str	r3, [r7, #16]
 800348e:	683b      	ldr	r3, [r7, #0]
 8003490:	699b      	ldr	r3, [r3, #24]
 8003492:	011b      	lsls	r3, r3, #4
 8003494:	693a      	ldr	r2, [r7, #16]
 8003496:	4313      	orrs	r3, r2
 8003498:	613b      	str	r3, [r7, #16]
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	693a      	ldr	r2, [r7, #16]
 800349e:	605a      	str	r2, [r3, #4]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	68fa      	ldr	r2, [r7, #12]
 80034a4:	61da      	str	r2, [r3, #28]
 80034a6:	683b      	ldr	r3, [r7, #0]
 80034a8:	685a      	ldr	r2, [r3, #4]
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	63da      	str	r2, [r3, #60]	; 0x3c
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	697a      	ldr	r2, [r7, #20]
 80034b2:	621a      	str	r2, [r3, #32]
 80034b4:	bf00      	nop
 80034b6:	371c      	adds	r7, #28
 80034b8:	46bd      	mov	sp, r7
 80034ba:	bc80      	pop	{r7}
 80034bc:	4770      	bx	lr
 80034be:	bf00      	nop
 80034c0:	40012c00 	.word	0x40012c00

080034c4 <TIM_OC4_SetConfig>:
 80034c4:	b480      	push	{r7}
 80034c6:	b087      	sub	sp, #28
 80034c8:	af00      	add	r7, sp, #0
 80034ca:	6078      	str	r0, [r7, #4]
 80034cc:	6039      	str	r1, [r7, #0]
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	6a1b      	ldr	r3, [r3, #32]
 80034d2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	621a      	str	r2, [r3, #32]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	6a1b      	ldr	r3, [r3, #32]
 80034de:	613b      	str	r3, [r7, #16]
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	685b      	ldr	r3, [r3, #4]
 80034e4:	617b      	str	r3, [r7, #20]
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	69db      	ldr	r3, [r3, #28]
 80034ea:	60fb      	str	r3, [r7, #12]
 80034ec:	68fb      	ldr	r3, [r7, #12]
 80034ee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80034f2:	60fb      	str	r3, [r7, #12]
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80034fa:	60fb      	str	r3, [r7, #12]
 80034fc:	683b      	ldr	r3, [r7, #0]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	021b      	lsls	r3, r3, #8
 8003502:	68fa      	ldr	r2, [r7, #12]
 8003504:	4313      	orrs	r3, r2
 8003506:	60fb      	str	r3, [r7, #12]
 8003508:	693b      	ldr	r3, [r7, #16]
 800350a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800350e:	613b      	str	r3, [r7, #16]
 8003510:	683b      	ldr	r3, [r7, #0]
 8003512:	689b      	ldr	r3, [r3, #8]
 8003514:	031b      	lsls	r3, r3, #12
 8003516:	693a      	ldr	r2, [r7, #16]
 8003518:	4313      	orrs	r3, r2
 800351a:	613b      	str	r3, [r7, #16]
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	4a0f      	ldr	r2, [pc, #60]	; (800355c <TIM_OC4_SetConfig+0x98>)
 8003520:	4293      	cmp	r3, r2
 8003522:	d109      	bne.n	8003538 <TIM_OC4_SetConfig+0x74>
 8003524:	697b      	ldr	r3, [r7, #20]
 8003526:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800352a:	617b      	str	r3, [r7, #20]
 800352c:	683b      	ldr	r3, [r7, #0]
 800352e:	695b      	ldr	r3, [r3, #20]
 8003530:	019b      	lsls	r3, r3, #6
 8003532:	697a      	ldr	r2, [r7, #20]
 8003534:	4313      	orrs	r3, r2
 8003536:	617b      	str	r3, [r7, #20]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	697a      	ldr	r2, [r7, #20]
 800353c:	605a      	str	r2, [r3, #4]
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	68fa      	ldr	r2, [r7, #12]
 8003542:	61da      	str	r2, [r3, #28]
 8003544:	683b      	ldr	r3, [r7, #0]
 8003546:	685a      	ldr	r2, [r3, #4]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	641a      	str	r2, [r3, #64]	; 0x40
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	693a      	ldr	r2, [r7, #16]
 8003550:	621a      	str	r2, [r3, #32]
 8003552:	bf00      	nop
 8003554:	371c      	adds	r7, #28
 8003556:	46bd      	mov	sp, r7
 8003558:	bc80      	pop	{r7}
 800355a:	4770      	bx	lr
 800355c:	40012c00 	.word	0x40012c00

08003560 <TIM_TI1_ConfigInputStage>:
 8003560:	b480      	push	{r7}
 8003562:	b087      	sub	sp, #28
 8003564:	af00      	add	r7, sp, #0
 8003566:	60f8      	str	r0, [r7, #12]
 8003568:	60b9      	str	r1, [r7, #8]
 800356a:	607a      	str	r2, [r7, #4]
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	6a1b      	ldr	r3, [r3, #32]
 8003570:	617b      	str	r3, [r7, #20]
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	6a1b      	ldr	r3, [r3, #32]
 8003576:	f023 0201 	bic.w	r2, r3, #1
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	621a      	str	r2, [r3, #32]
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	699b      	ldr	r3, [r3, #24]
 8003582:	613b      	str	r3, [r7, #16]
 8003584:	693b      	ldr	r3, [r7, #16]
 8003586:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800358a:	613b      	str	r3, [r7, #16]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	011b      	lsls	r3, r3, #4
 8003590:	693a      	ldr	r2, [r7, #16]
 8003592:	4313      	orrs	r3, r2
 8003594:	613b      	str	r3, [r7, #16]
 8003596:	697b      	ldr	r3, [r7, #20]
 8003598:	f023 030a 	bic.w	r3, r3, #10
 800359c:	617b      	str	r3, [r7, #20]
 800359e:	697a      	ldr	r2, [r7, #20]
 80035a0:	68bb      	ldr	r3, [r7, #8]
 80035a2:	4313      	orrs	r3, r2
 80035a4:	617b      	str	r3, [r7, #20]
 80035a6:	68fb      	ldr	r3, [r7, #12]
 80035a8:	693a      	ldr	r2, [r7, #16]
 80035aa:	619a      	str	r2, [r3, #24]
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	697a      	ldr	r2, [r7, #20]
 80035b0:	621a      	str	r2, [r3, #32]
 80035b2:	bf00      	nop
 80035b4:	371c      	adds	r7, #28
 80035b6:	46bd      	mov	sp, r7
 80035b8:	bc80      	pop	{r7}
 80035ba:	4770      	bx	lr

080035bc <TIM_TI2_ConfigInputStage>:
 80035bc:	b480      	push	{r7}
 80035be:	b087      	sub	sp, #28
 80035c0:	af00      	add	r7, sp, #0
 80035c2:	60f8      	str	r0, [r7, #12]
 80035c4:	60b9      	str	r1, [r7, #8]
 80035c6:	607a      	str	r2, [r7, #4]
 80035c8:	68fb      	ldr	r3, [r7, #12]
 80035ca:	6a1b      	ldr	r3, [r3, #32]
 80035cc:	f023 0210 	bic.w	r2, r3, #16
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	621a      	str	r2, [r3, #32]
 80035d4:	68fb      	ldr	r3, [r7, #12]
 80035d6:	699b      	ldr	r3, [r3, #24]
 80035d8:	617b      	str	r3, [r7, #20]
 80035da:	68fb      	ldr	r3, [r7, #12]
 80035dc:	6a1b      	ldr	r3, [r3, #32]
 80035de:	613b      	str	r3, [r7, #16]
 80035e0:	697b      	ldr	r3, [r7, #20]
 80035e2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80035e6:	617b      	str	r3, [r7, #20]
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	031b      	lsls	r3, r3, #12
 80035ec:	697a      	ldr	r2, [r7, #20]
 80035ee:	4313      	orrs	r3, r2
 80035f0:	617b      	str	r3, [r7, #20]
 80035f2:	693b      	ldr	r3, [r7, #16]
 80035f4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80035f8:	613b      	str	r3, [r7, #16]
 80035fa:	68bb      	ldr	r3, [r7, #8]
 80035fc:	011b      	lsls	r3, r3, #4
 80035fe:	693a      	ldr	r2, [r7, #16]
 8003600:	4313      	orrs	r3, r2
 8003602:	613b      	str	r3, [r7, #16]
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	697a      	ldr	r2, [r7, #20]
 8003608:	619a      	str	r2, [r3, #24]
 800360a:	68fb      	ldr	r3, [r7, #12]
 800360c:	693a      	ldr	r2, [r7, #16]
 800360e:	621a      	str	r2, [r3, #32]
 8003610:	bf00      	nop
 8003612:	371c      	adds	r7, #28
 8003614:	46bd      	mov	sp, r7
 8003616:	bc80      	pop	{r7}
 8003618:	4770      	bx	lr

0800361a <TIM_ITRx_SetConfig>:
 800361a:	b480      	push	{r7}
 800361c:	b085      	sub	sp, #20
 800361e:	af00      	add	r7, sp, #0
 8003620:	6078      	str	r0, [r7, #4]
 8003622:	6039      	str	r1, [r7, #0]
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	689b      	ldr	r3, [r3, #8]
 8003628:	60fb      	str	r3, [r7, #12]
 800362a:	68fb      	ldr	r3, [r7, #12]
 800362c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003630:	60fb      	str	r3, [r7, #12]
 8003632:	683a      	ldr	r2, [r7, #0]
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	4313      	orrs	r3, r2
 8003638:	f043 0307 	orr.w	r3, r3, #7
 800363c:	60fb      	str	r3, [r7, #12]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	68fa      	ldr	r2, [r7, #12]
 8003642:	609a      	str	r2, [r3, #8]
 8003644:	bf00      	nop
 8003646:	3714      	adds	r7, #20
 8003648:	46bd      	mov	sp, r7
 800364a:	bc80      	pop	{r7}
 800364c:	4770      	bx	lr

0800364e <TIM_ETR_SetConfig>:
 800364e:	b480      	push	{r7}
 8003650:	b087      	sub	sp, #28
 8003652:	af00      	add	r7, sp, #0
 8003654:	60f8      	str	r0, [r7, #12]
 8003656:	60b9      	str	r1, [r7, #8]
 8003658:	607a      	str	r2, [r7, #4]
 800365a:	603b      	str	r3, [r7, #0]
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	689b      	ldr	r3, [r3, #8]
 8003660:	617b      	str	r3, [r7, #20]
 8003662:	697b      	ldr	r3, [r7, #20]
 8003664:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003668:	617b      	str	r3, [r7, #20]
 800366a:	683b      	ldr	r3, [r7, #0]
 800366c:	021a      	lsls	r2, r3, #8
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	431a      	orrs	r2, r3
 8003672:	68bb      	ldr	r3, [r7, #8]
 8003674:	4313      	orrs	r3, r2
 8003676:	697a      	ldr	r2, [r7, #20]
 8003678:	4313      	orrs	r3, r2
 800367a:	617b      	str	r3, [r7, #20]
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	697a      	ldr	r2, [r7, #20]
 8003680:	609a      	str	r2, [r3, #8]
 8003682:	bf00      	nop
 8003684:	371c      	adds	r7, #28
 8003686:	46bd      	mov	sp, r7
 8003688:	bc80      	pop	{r7}
 800368a:	4770      	bx	lr

0800368c <TIM_CCxChannelCmd>:
 800368c:	b480      	push	{r7}
 800368e:	b087      	sub	sp, #28
 8003690:	af00      	add	r7, sp, #0
 8003692:	60f8      	str	r0, [r7, #12]
 8003694:	60b9      	str	r1, [r7, #8]
 8003696:	607a      	str	r2, [r7, #4]
 8003698:	68bb      	ldr	r3, [r7, #8]
 800369a:	f003 031f 	and.w	r3, r3, #31
 800369e:	2201      	movs	r2, #1
 80036a0:	fa02 f303 	lsl.w	r3, r2, r3
 80036a4:	617b      	str	r3, [r7, #20]
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	6a1a      	ldr	r2, [r3, #32]
 80036aa:	697b      	ldr	r3, [r7, #20]
 80036ac:	43db      	mvns	r3, r3
 80036ae:	401a      	ands	r2, r3
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	621a      	str	r2, [r3, #32]
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	6a1a      	ldr	r2, [r3, #32]
 80036b8:	68bb      	ldr	r3, [r7, #8]
 80036ba:	f003 031f 	and.w	r3, r3, #31
 80036be:	6879      	ldr	r1, [r7, #4]
 80036c0:	fa01 f303 	lsl.w	r3, r1, r3
 80036c4:	431a      	orrs	r2, r3
 80036c6:	68fb      	ldr	r3, [r7, #12]
 80036c8:	621a      	str	r2, [r3, #32]
 80036ca:	bf00      	nop
 80036cc:	371c      	adds	r7, #28
 80036ce:	46bd      	mov	sp, r7
 80036d0:	bc80      	pop	{r7}
 80036d2:	4770      	bx	lr

080036d4 <HAL_TIMEx_MasterConfigSynchronization>:
 80036d4:	b480      	push	{r7}
 80036d6:	b085      	sub	sp, #20
 80036d8:	af00      	add	r7, sp, #0
 80036da:	6078      	str	r0, [r7, #4]
 80036dc:	6039      	str	r1, [r7, #0]
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80036e4:	2b01      	cmp	r3, #1
 80036e6:	d101      	bne.n	80036ec <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80036e8:	2302      	movs	r3, #2
 80036ea:	e046      	b.n	800377a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	2201      	movs	r2, #1
 80036f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	2202      	movs	r2, #2
 80036f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	685b      	ldr	r3, [r3, #4]
 8003702:	60fb      	str	r3, [r7, #12]
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	689b      	ldr	r3, [r3, #8]
 800370a:	60bb      	str	r3, [r7, #8]
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003712:	60fb      	str	r3, [r7, #12]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	68fa      	ldr	r2, [r7, #12]
 800371a:	4313      	orrs	r3, r2
 800371c:	60fb      	str	r3, [r7, #12]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	68fa      	ldr	r2, [r7, #12]
 8003724:	605a      	str	r2, [r3, #4]
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	681b      	ldr	r3, [r3, #0]
 800372a:	4a16      	ldr	r2, [pc, #88]	; (8003784 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 800372c:	4293      	cmp	r3, r2
 800372e:	d00e      	beq.n	800374e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	681b      	ldr	r3, [r3, #0]
 8003734:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003738:	d009      	beq.n	800374e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	4a12      	ldr	r2, [pc, #72]	; (8003788 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003740:	4293      	cmp	r3, r2
 8003742:	d004      	beq.n	800374e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	4a10      	ldr	r2, [pc, #64]	; (800378c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800374a:	4293      	cmp	r3, r2
 800374c:	d10c      	bne.n	8003768 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800374e:	68bb      	ldr	r3, [r7, #8]
 8003750:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003754:	60bb      	str	r3, [r7, #8]
 8003756:	683b      	ldr	r3, [r7, #0]
 8003758:	685b      	ldr	r3, [r3, #4]
 800375a:	68ba      	ldr	r2, [r7, #8]
 800375c:	4313      	orrs	r3, r2
 800375e:	60bb      	str	r3, [r7, #8]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	68ba      	ldr	r2, [r7, #8]
 8003766:	609a      	str	r2, [r3, #8]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	2201      	movs	r2, #1
 800376c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	2200      	movs	r2, #0
 8003774:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003778:	2300      	movs	r3, #0
 800377a:	4618      	mov	r0, r3
 800377c:	3714      	adds	r7, #20
 800377e:	46bd      	mov	sp, r7
 8003780:	bc80      	pop	{r7}
 8003782:	4770      	bx	lr
 8003784:	40012c00 	.word	0x40012c00
 8003788:	40000400 	.word	0x40000400
 800378c:	40000800 	.word	0x40000800

08003790 <HAL_TIMEx_CommutCallback>:
 8003790:	b480      	push	{r7}
 8003792:	b083      	sub	sp, #12
 8003794:	af00      	add	r7, sp, #0
 8003796:	6078      	str	r0, [r7, #4]
 8003798:	bf00      	nop
 800379a:	370c      	adds	r7, #12
 800379c:	46bd      	mov	sp, r7
 800379e:	bc80      	pop	{r7}
 80037a0:	4770      	bx	lr

080037a2 <HAL_TIMEx_BreakCallback>:
 80037a2:	b480      	push	{r7}
 80037a4:	b083      	sub	sp, #12
 80037a6:	af00      	add	r7, sp, #0
 80037a8:	6078      	str	r0, [r7, #4]
 80037aa:	bf00      	nop
 80037ac:	370c      	adds	r7, #12
 80037ae:	46bd      	mov	sp, r7
 80037b0:	bc80      	pop	{r7}
 80037b2:	4770      	bx	lr

080037b4 <HAL_UART_Init>:
 80037b4:	b580      	push	{r7, lr}
 80037b6:	b082      	sub	sp, #8
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	6078      	str	r0, [r7, #4]
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	2b00      	cmp	r3, #0
 80037c0:	d101      	bne.n	80037c6 <HAL_UART_Init+0x12>
 80037c2:	2301      	movs	r3, #1
 80037c4:	e03f      	b.n	8003846 <HAL_UART_Init+0x92>
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80037cc:	b2db      	uxtb	r3, r3
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d106      	bne.n	80037e0 <HAL_UART_Init+0x2c>
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	2200      	movs	r2, #0
 80037d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037da:	6878      	ldr	r0, [r7, #4]
 80037dc:	f7fe f8b0 	bl	8001940 <HAL_UART_MspInit>
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	2224      	movs	r2, #36	; 0x24
 80037e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	681b      	ldr	r3, [r3, #0]
 80037ec:	68da      	ldr	r2, [r3, #12]
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80037f6:	60da      	str	r2, [r3, #12]
 80037f8:	6878      	ldr	r0, [r7, #4]
 80037fa:	f000 f905 	bl	8003a08 <UART_SetConfig>
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	691a      	ldr	r2, [r3, #16]
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	681b      	ldr	r3, [r3, #0]
 8003808:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800380c:	611a      	str	r2, [r3, #16]
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	695a      	ldr	r2, [r3, #20]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800381c:	615a      	str	r2, [r3, #20]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	68da      	ldr	r2, [r3, #12]
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800382c:	60da      	str	r2, [r3, #12]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	2200      	movs	r2, #0
 8003832:	641a      	str	r2, [r3, #64]	; 0x40
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	2220      	movs	r2, #32
 8003838:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	2220      	movs	r2, #32
 8003840:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003844:	2300      	movs	r3, #0
 8003846:	4618      	mov	r0, r3
 8003848:	3708      	adds	r7, #8
 800384a:	46bd      	mov	sp, r7
 800384c:	bd80      	pop	{r7, pc}

0800384e <HAL_UART_Transmit>:
 800384e:	b580      	push	{r7, lr}
 8003850:	b08a      	sub	sp, #40	; 0x28
 8003852:	af02      	add	r7, sp, #8
 8003854:	60f8      	str	r0, [r7, #12]
 8003856:	60b9      	str	r1, [r7, #8]
 8003858:	603b      	str	r3, [r7, #0]
 800385a:	4613      	mov	r3, r2
 800385c:	80fb      	strh	r3, [r7, #6]
 800385e:	2300      	movs	r3, #0
 8003860:	617b      	str	r3, [r7, #20]
 8003862:	68fb      	ldr	r3, [r7, #12]
 8003864:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003868:	b2db      	uxtb	r3, r3
 800386a:	2b20      	cmp	r3, #32
 800386c:	d17c      	bne.n	8003968 <HAL_UART_Transmit+0x11a>
 800386e:	68bb      	ldr	r3, [r7, #8]
 8003870:	2b00      	cmp	r3, #0
 8003872:	d002      	beq.n	800387a <HAL_UART_Transmit+0x2c>
 8003874:	88fb      	ldrh	r3, [r7, #6]
 8003876:	2b00      	cmp	r3, #0
 8003878:	d101      	bne.n	800387e <HAL_UART_Transmit+0x30>
 800387a:	2301      	movs	r3, #1
 800387c:	e075      	b.n	800396a <HAL_UART_Transmit+0x11c>
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003884:	2b01      	cmp	r3, #1
 8003886:	d101      	bne.n	800388c <HAL_UART_Transmit+0x3e>
 8003888:	2302      	movs	r3, #2
 800388a:	e06e      	b.n	800396a <HAL_UART_Transmit+0x11c>
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	2201      	movs	r2, #1
 8003890:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	2200      	movs	r2, #0
 8003898:	641a      	str	r2, [r3, #64]	; 0x40
 800389a:	68fb      	ldr	r3, [r7, #12]
 800389c:	2221      	movs	r2, #33	; 0x21
 800389e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80038a2:	f7fe f909 	bl	8001ab8 <HAL_GetTick>
 80038a6:	6178      	str	r0, [r7, #20]
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	88fa      	ldrh	r2, [r7, #6]
 80038ac:	849a      	strh	r2, [r3, #36]	; 0x24
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	88fa      	ldrh	r2, [r7, #6]
 80038b2:	84da      	strh	r2, [r3, #38]	; 0x26
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	689b      	ldr	r3, [r3, #8]
 80038b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80038bc:	d108      	bne.n	80038d0 <HAL_UART_Transmit+0x82>
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	691b      	ldr	r3, [r3, #16]
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d104      	bne.n	80038d0 <HAL_UART_Transmit+0x82>
 80038c6:	2300      	movs	r3, #0
 80038c8:	61fb      	str	r3, [r7, #28]
 80038ca:	68bb      	ldr	r3, [r7, #8]
 80038cc:	61bb      	str	r3, [r7, #24]
 80038ce:	e003      	b.n	80038d8 <HAL_UART_Transmit+0x8a>
 80038d0:	68bb      	ldr	r3, [r7, #8]
 80038d2:	61fb      	str	r3, [r7, #28]
 80038d4:	2300      	movs	r3, #0
 80038d6:	61bb      	str	r3, [r7, #24]
 80038d8:	68fb      	ldr	r3, [r7, #12]
 80038da:	2200      	movs	r2, #0
 80038dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038e0:	e02a      	b.n	8003938 <HAL_UART_Transmit+0xea>
 80038e2:	683b      	ldr	r3, [r7, #0]
 80038e4:	9300      	str	r3, [sp, #0]
 80038e6:	697b      	ldr	r3, [r7, #20]
 80038e8:	2200      	movs	r2, #0
 80038ea:	2180      	movs	r1, #128	; 0x80
 80038ec:	68f8      	ldr	r0, [r7, #12]
 80038ee:	f000 f840 	bl	8003972 <UART_WaitOnFlagUntilTimeout>
 80038f2:	4603      	mov	r3, r0
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d001      	beq.n	80038fc <HAL_UART_Transmit+0xae>
 80038f8:	2303      	movs	r3, #3
 80038fa:	e036      	b.n	800396a <HAL_UART_Transmit+0x11c>
 80038fc:	69fb      	ldr	r3, [r7, #28]
 80038fe:	2b00      	cmp	r3, #0
 8003900:	d10b      	bne.n	800391a <HAL_UART_Transmit+0xcc>
 8003902:	69bb      	ldr	r3, [r7, #24]
 8003904:	881b      	ldrh	r3, [r3, #0]
 8003906:	461a      	mov	r2, r3
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003910:	605a      	str	r2, [r3, #4]
 8003912:	69bb      	ldr	r3, [r7, #24]
 8003914:	3302      	adds	r3, #2
 8003916:	61bb      	str	r3, [r7, #24]
 8003918:	e007      	b.n	800392a <HAL_UART_Transmit+0xdc>
 800391a:	69fb      	ldr	r3, [r7, #28]
 800391c:	781a      	ldrb	r2, [r3, #0]
 800391e:	68fb      	ldr	r3, [r7, #12]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	605a      	str	r2, [r3, #4]
 8003924:	69fb      	ldr	r3, [r7, #28]
 8003926:	3301      	adds	r3, #1
 8003928:	61fb      	str	r3, [r7, #28]
 800392a:	68fb      	ldr	r3, [r7, #12]
 800392c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800392e:	b29b      	uxth	r3, r3
 8003930:	3b01      	subs	r3, #1
 8003932:	b29a      	uxth	r2, r3
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	84da      	strh	r2, [r3, #38]	; 0x26
 8003938:	68fb      	ldr	r3, [r7, #12]
 800393a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800393c:	b29b      	uxth	r3, r3
 800393e:	2b00      	cmp	r3, #0
 8003940:	d1cf      	bne.n	80038e2 <HAL_UART_Transmit+0x94>
 8003942:	683b      	ldr	r3, [r7, #0]
 8003944:	9300      	str	r3, [sp, #0]
 8003946:	697b      	ldr	r3, [r7, #20]
 8003948:	2200      	movs	r2, #0
 800394a:	2140      	movs	r1, #64	; 0x40
 800394c:	68f8      	ldr	r0, [r7, #12]
 800394e:	f000 f810 	bl	8003972 <UART_WaitOnFlagUntilTimeout>
 8003952:	4603      	mov	r3, r0
 8003954:	2b00      	cmp	r3, #0
 8003956:	d001      	beq.n	800395c <HAL_UART_Transmit+0x10e>
 8003958:	2303      	movs	r3, #3
 800395a:	e006      	b.n	800396a <HAL_UART_Transmit+0x11c>
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	2220      	movs	r2, #32
 8003960:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003964:	2300      	movs	r3, #0
 8003966:	e000      	b.n	800396a <HAL_UART_Transmit+0x11c>
 8003968:	2302      	movs	r3, #2
 800396a:	4618      	mov	r0, r3
 800396c:	3720      	adds	r7, #32
 800396e:	46bd      	mov	sp, r7
 8003970:	bd80      	pop	{r7, pc}

08003972 <UART_WaitOnFlagUntilTimeout>:
 8003972:	b580      	push	{r7, lr}
 8003974:	b084      	sub	sp, #16
 8003976:	af00      	add	r7, sp, #0
 8003978:	60f8      	str	r0, [r7, #12]
 800397a:	60b9      	str	r1, [r7, #8]
 800397c:	603b      	str	r3, [r7, #0]
 800397e:	4613      	mov	r3, r2
 8003980:	71fb      	strb	r3, [r7, #7]
 8003982:	e02c      	b.n	80039de <UART_WaitOnFlagUntilTimeout+0x6c>
 8003984:	69bb      	ldr	r3, [r7, #24]
 8003986:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800398a:	d028      	beq.n	80039de <UART_WaitOnFlagUntilTimeout+0x6c>
 800398c:	69bb      	ldr	r3, [r7, #24]
 800398e:	2b00      	cmp	r3, #0
 8003990:	d007      	beq.n	80039a2 <UART_WaitOnFlagUntilTimeout+0x30>
 8003992:	f7fe f891 	bl	8001ab8 <HAL_GetTick>
 8003996:	4602      	mov	r2, r0
 8003998:	683b      	ldr	r3, [r7, #0]
 800399a:	1ad3      	subs	r3, r2, r3
 800399c:	69ba      	ldr	r2, [r7, #24]
 800399e:	429a      	cmp	r2, r3
 80039a0:	d21d      	bcs.n	80039de <UART_WaitOnFlagUntilTimeout+0x6c>
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	68da      	ldr	r2, [r3, #12]
 80039a8:	68fb      	ldr	r3, [r7, #12]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80039b0:	60da      	str	r2, [r3, #12]
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	695a      	ldr	r2, [r3, #20]
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	f022 0201 	bic.w	r2, r2, #1
 80039c0:	615a      	str	r2, [r3, #20]
 80039c2:	68fb      	ldr	r3, [r7, #12]
 80039c4:	2220      	movs	r2, #32
 80039c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	2220      	movs	r2, #32
 80039ce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	2200      	movs	r2, #0
 80039d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039da:	2303      	movs	r3, #3
 80039dc:	e00f      	b.n	80039fe <UART_WaitOnFlagUntilTimeout+0x8c>
 80039de:	68fb      	ldr	r3, [r7, #12]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	681a      	ldr	r2, [r3, #0]
 80039e4:	68bb      	ldr	r3, [r7, #8]
 80039e6:	4013      	ands	r3, r2
 80039e8:	68ba      	ldr	r2, [r7, #8]
 80039ea:	429a      	cmp	r2, r3
 80039ec:	bf0c      	ite	eq
 80039ee:	2301      	moveq	r3, #1
 80039f0:	2300      	movne	r3, #0
 80039f2:	b2db      	uxtb	r3, r3
 80039f4:	461a      	mov	r2, r3
 80039f6:	79fb      	ldrb	r3, [r7, #7]
 80039f8:	429a      	cmp	r2, r3
 80039fa:	d0c3      	beq.n	8003984 <UART_WaitOnFlagUntilTimeout+0x12>
 80039fc:	2300      	movs	r3, #0
 80039fe:	4618      	mov	r0, r3
 8003a00:	3710      	adds	r7, #16
 8003a02:	46bd      	mov	sp, r7
 8003a04:	bd80      	pop	{r7, pc}
	...

08003a08 <UART_SetConfig>:
 8003a08:	b580      	push	{r7, lr}
 8003a0a:	b084      	sub	sp, #16
 8003a0c:	af00      	add	r7, sp, #0
 8003a0e:	6078      	str	r0, [r7, #4]
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	691b      	ldr	r3, [r3, #16]
 8003a16:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	68da      	ldr	r2, [r3, #12]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	430a      	orrs	r2, r1
 8003a24:	611a      	str	r2, [r3, #16]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	689a      	ldr	r2, [r3, #8]
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	691b      	ldr	r3, [r3, #16]
 8003a2e:	431a      	orrs	r2, r3
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	695b      	ldr	r3, [r3, #20]
 8003a34:	4313      	orrs	r3, r2
 8003a36:	60bb      	str	r3, [r7, #8]
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	68db      	ldr	r3, [r3, #12]
 8003a3e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003a42:	f023 030c 	bic.w	r3, r3, #12
 8003a46:	687a      	ldr	r2, [r7, #4]
 8003a48:	6812      	ldr	r2, [r2, #0]
 8003a4a:	68b9      	ldr	r1, [r7, #8]
 8003a4c:	430b      	orrs	r3, r1
 8003a4e:	60d3      	str	r3, [r2, #12]
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	695b      	ldr	r3, [r3, #20]
 8003a56:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	699a      	ldr	r2, [r3, #24]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	430a      	orrs	r2, r1
 8003a64:	615a      	str	r2, [r3, #20]
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	4a2c      	ldr	r2, [pc, #176]	; (8003b1c <UART_SetConfig+0x114>)
 8003a6c:	4293      	cmp	r3, r2
 8003a6e:	d103      	bne.n	8003a78 <UART_SetConfig+0x70>
 8003a70:	f7fe ff10 	bl	8002894 <HAL_RCC_GetPCLK2Freq>
 8003a74:	60f8      	str	r0, [r7, #12]
 8003a76:	e002      	b.n	8003a7e <UART_SetConfig+0x76>
 8003a78:	f7fe fef8 	bl	800286c <HAL_RCC_GetPCLK1Freq>
 8003a7c:	60f8      	str	r0, [r7, #12]
 8003a7e:	68fa      	ldr	r2, [r7, #12]
 8003a80:	4613      	mov	r3, r2
 8003a82:	009b      	lsls	r3, r3, #2
 8003a84:	4413      	add	r3, r2
 8003a86:	009a      	lsls	r2, r3, #2
 8003a88:	441a      	add	r2, r3
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	685b      	ldr	r3, [r3, #4]
 8003a8e:	009b      	lsls	r3, r3, #2
 8003a90:	fbb2 f3f3 	udiv	r3, r2, r3
 8003a94:	4a22      	ldr	r2, [pc, #136]	; (8003b20 <UART_SetConfig+0x118>)
 8003a96:	fba2 2303 	umull	r2, r3, r2, r3
 8003a9a:	095b      	lsrs	r3, r3, #5
 8003a9c:	0119      	lsls	r1, r3, #4
 8003a9e:	68fa      	ldr	r2, [r7, #12]
 8003aa0:	4613      	mov	r3, r2
 8003aa2:	009b      	lsls	r3, r3, #2
 8003aa4:	4413      	add	r3, r2
 8003aa6:	009a      	lsls	r2, r3, #2
 8003aa8:	441a      	add	r2, r3
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	685b      	ldr	r3, [r3, #4]
 8003aae:	009b      	lsls	r3, r3, #2
 8003ab0:	fbb2 f2f3 	udiv	r2, r2, r3
 8003ab4:	4b1a      	ldr	r3, [pc, #104]	; (8003b20 <UART_SetConfig+0x118>)
 8003ab6:	fba3 0302 	umull	r0, r3, r3, r2
 8003aba:	095b      	lsrs	r3, r3, #5
 8003abc:	2064      	movs	r0, #100	; 0x64
 8003abe:	fb00 f303 	mul.w	r3, r0, r3
 8003ac2:	1ad3      	subs	r3, r2, r3
 8003ac4:	011b      	lsls	r3, r3, #4
 8003ac6:	3332      	adds	r3, #50	; 0x32
 8003ac8:	4a15      	ldr	r2, [pc, #84]	; (8003b20 <UART_SetConfig+0x118>)
 8003aca:	fba2 2303 	umull	r2, r3, r2, r3
 8003ace:	095b      	lsrs	r3, r3, #5
 8003ad0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003ad4:	4419      	add	r1, r3
 8003ad6:	68fa      	ldr	r2, [r7, #12]
 8003ad8:	4613      	mov	r3, r2
 8003ada:	009b      	lsls	r3, r3, #2
 8003adc:	4413      	add	r3, r2
 8003ade:	009a      	lsls	r2, r3, #2
 8003ae0:	441a      	add	r2, r3
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	685b      	ldr	r3, [r3, #4]
 8003ae6:	009b      	lsls	r3, r3, #2
 8003ae8:	fbb2 f2f3 	udiv	r2, r2, r3
 8003aec:	4b0c      	ldr	r3, [pc, #48]	; (8003b20 <UART_SetConfig+0x118>)
 8003aee:	fba3 0302 	umull	r0, r3, r3, r2
 8003af2:	095b      	lsrs	r3, r3, #5
 8003af4:	2064      	movs	r0, #100	; 0x64
 8003af6:	fb00 f303 	mul.w	r3, r0, r3
 8003afa:	1ad3      	subs	r3, r2, r3
 8003afc:	011b      	lsls	r3, r3, #4
 8003afe:	3332      	adds	r3, #50	; 0x32
 8003b00:	4a07      	ldr	r2, [pc, #28]	; (8003b20 <UART_SetConfig+0x118>)
 8003b02:	fba2 2303 	umull	r2, r3, r2, r3
 8003b06:	095b      	lsrs	r3, r3, #5
 8003b08:	f003 020f 	and.w	r2, r3, #15
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	440a      	add	r2, r1
 8003b12:	609a      	str	r2, [r3, #8]
 8003b14:	bf00      	nop
 8003b16:	3710      	adds	r7, #16
 8003b18:	46bd      	mov	sp, r7
 8003b1a:	bd80      	pop	{r7, pc}
 8003b1c:	40013800 	.word	0x40013800
 8003b20:	51eb851f 	.word	0x51eb851f

08003b24 <__errno>:
 8003b24:	4b01      	ldr	r3, [pc, #4]	; (8003b2c <__errno+0x8>)
 8003b26:	6818      	ldr	r0, [r3, #0]
 8003b28:	4770      	bx	lr
 8003b2a:	bf00      	nop
 8003b2c:	2000032c 	.word	0x2000032c

08003b30 <__libc_init_array>:
 8003b30:	b570      	push	{r4, r5, r6, lr}
 8003b32:	2600      	movs	r6, #0
 8003b34:	4d0c      	ldr	r5, [pc, #48]	; (8003b68 <__libc_init_array+0x38>)
 8003b36:	4c0d      	ldr	r4, [pc, #52]	; (8003b6c <__libc_init_array+0x3c>)
 8003b38:	1b64      	subs	r4, r4, r5
 8003b3a:	10a4      	asrs	r4, r4, #2
 8003b3c:	42a6      	cmp	r6, r4
 8003b3e:	d109      	bne.n	8003b54 <__libc_init_array+0x24>
 8003b40:	f000 fc9c 	bl	800447c <_init>
 8003b44:	2600      	movs	r6, #0
 8003b46:	4d0a      	ldr	r5, [pc, #40]	; (8003b70 <__libc_init_array+0x40>)
 8003b48:	4c0a      	ldr	r4, [pc, #40]	; (8003b74 <__libc_init_array+0x44>)
 8003b4a:	1b64      	subs	r4, r4, r5
 8003b4c:	10a4      	asrs	r4, r4, #2
 8003b4e:	42a6      	cmp	r6, r4
 8003b50:	d105      	bne.n	8003b5e <__libc_init_array+0x2e>
 8003b52:	bd70      	pop	{r4, r5, r6, pc}
 8003b54:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b58:	4798      	blx	r3
 8003b5a:	3601      	adds	r6, #1
 8003b5c:	e7ee      	b.n	8003b3c <__libc_init_array+0xc>
 8003b5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b62:	4798      	blx	r3
 8003b64:	3601      	adds	r6, #1
 8003b66:	e7f2      	b.n	8003b4e <__libc_init_array+0x1e>
 8003b68:	080044fc 	.word	0x080044fc
 8003b6c:	080044fc 	.word	0x080044fc
 8003b70:	080044fc 	.word	0x080044fc
 8003b74:	08004500 	.word	0x08004500

08003b78 <memset>:
 8003b78:	4603      	mov	r3, r0
 8003b7a:	4402      	add	r2, r0
 8003b7c:	4293      	cmp	r3, r2
 8003b7e:	d100      	bne.n	8003b82 <memset+0xa>
 8003b80:	4770      	bx	lr
 8003b82:	f803 1b01 	strb.w	r1, [r3], #1
 8003b86:	e7f9      	b.n	8003b7c <memset+0x4>

08003b88 <siprintf>:
 8003b88:	b40e      	push	{r1, r2, r3}
 8003b8a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003b8e:	b500      	push	{lr}
 8003b90:	b09c      	sub	sp, #112	; 0x70
 8003b92:	ab1d      	add	r3, sp, #116	; 0x74
 8003b94:	9002      	str	r0, [sp, #8]
 8003b96:	9006      	str	r0, [sp, #24]
 8003b98:	9107      	str	r1, [sp, #28]
 8003b9a:	9104      	str	r1, [sp, #16]
 8003b9c:	4808      	ldr	r0, [pc, #32]	; (8003bc0 <siprintf+0x38>)
 8003b9e:	4909      	ldr	r1, [pc, #36]	; (8003bc4 <siprintf+0x3c>)
 8003ba0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ba4:	9105      	str	r1, [sp, #20]
 8003ba6:	6800      	ldr	r0, [r0, #0]
 8003ba8:	a902      	add	r1, sp, #8
 8003baa:	9301      	str	r3, [sp, #4]
 8003bac:	f000 f868 	bl	8003c80 <_svfiprintf_r>
 8003bb0:	2200      	movs	r2, #0
 8003bb2:	9b02      	ldr	r3, [sp, #8]
 8003bb4:	701a      	strb	r2, [r3, #0]
 8003bb6:	b01c      	add	sp, #112	; 0x70
 8003bb8:	f85d eb04 	ldr.w	lr, [sp], #4
 8003bbc:	b003      	add	sp, #12
 8003bbe:	4770      	bx	lr
 8003bc0:	2000032c 	.word	0x2000032c
 8003bc4:	ffff0208 	.word	0xffff0208

08003bc8 <__ssputs_r>:
 8003bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bcc:	688e      	ldr	r6, [r1, #8]
 8003bce:	4682      	mov	sl, r0
 8003bd0:	429e      	cmp	r6, r3
 8003bd2:	460c      	mov	r4, r1
 8003bd4:	4690      	mov	r8, r2
 8003bd6:	461f      	mov	r7, r3
 8003bd8:	d838      	bhi.n	8003c4c <__ssputs_r+0x84>
 8003bda:	898a      	ldrh	r2, [r1, #12]
 8003bdc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003be0:	d032      	beq.n	8003c48 <__ssputs_r+0x80>
 8003be2:	6825      	ldr	r5, [r4, #0]
 8003be4:	6909      	ldr	r1, [r1, #16]
 8003be6:	3301      	adds	r3, #1
 8003be8:	eba5 0901 	sub.w	r9, r5, r1
 8003bec:	6965      	ldr	r5, [r4, #20]
 8003bee:	444b      	add	r3, r9
 8003bf0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003bf4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003bf8:	106d      	asrs	r5, r5, #1
 8003bfa:	429d      	cmp	r5, r3
 8003bfc:	bf38      	it	cc
 8003bfe:	461d      	movcc	r5, r3
 8003c00:	0553      	lsls	r3, r2, #21
 8003c02:	d531      	bpl.n	8003c68 <__ssputs_r+0xa0>
 8003c04:	4629      	mov	r1, r5
 8003c06:	f000 fb6f 	bl	80042e8 <_malloc_r>
 8003c0a:	4606      	mov	r6, r0
 8003c0c:	b950      	cbnz	r0, 8003c24 <__ssputs_r+0x5c>
 8003c0e:	230c      	movs	r3, #12
 8003c10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003c14:	f8ca 3000 	str.w	r3, [sl]
 8003c18:	89a3      	ldrh	r3, [r4, #12]
 8003c1a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003c1e:	81a3      	strh	r3, [r4, #12]
 8003c20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c24:	464a      	mov	r2, r9
 8003c26:	6921      	ldr	r1, [r4, #16]
 8003c28:	f000 face 	bl	80041c8 <memcpy>
 8003c2c:	89a3      	ldrh	r3, [r4, #12]
 8003c2e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003c32:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003c36:	81a3      	strh	r3, [r4, #12]
 8003c38:	6126      	str	r6, [r4, #16]
 8003c3a:	444e      	add	r6, r9
 8003c3c:	6026      	str	r6, [r4, #0]
 8003c3e:	463e      	mov	r6, r7
 8003c40:	6165      	str	r5, [r4, #20]
 8003c42:	eba5 0509 	sub.w	r5, r5, r9
 8003c46:	60a5      	str	r5, [r4, #8]
 8003c48:	42be      	cmp	r6, r7
 8003c4a:	d900      	bls.n	8003c4e <__ssputs_r+0x86>
 8003c4c:	463e      	mov	r6, r7
 8003c4e:	4632      	mov	r2, r6
 8003c50:	4641      	mov	r1, r8
 8003c52:	6820      	ldr	r0, [r4, #0]
 8003c54:	f000 fac6 	bl	80041e4 <memmove>
 8003c58:	68a3      	ldr	r3, [r4, #8]
 8003c5a:	2000      	movs	r0, #0
 8003c5c:	1b9b      	subs	r3, r3, r6
 8003c5e:	60a3      	str	r3, [r4, #8]
 8003c60:	6823      	ldr	r3, [r4, #0]
 8003c62:	4433      	add	r3, r6
 8003c64:	6023      	str	r3, [r4, #0]
 8003c66:	e7db      	b.n	8003c20 <__ssputs_r+0x58>
 8003c68:	462a      	mov	r2, r5
 8003c6a:	f000 fbb1 	bl	80043d0 <_realloc_r>
 8003c6e:	4606      	mov	r6, r0
 8003c70:	2800      	cmp	r0, #0
 8003c72:	d1e1      	bne.n	8003c38 <__ssputs_r+0x70>
 8003c74:	4650      	mov	r0, sl
 8003c76:	6921      	ldr	r1, [r4, #16]
 8003c78:	f000 face 	bl	8004218 <_free_r>
 8003c7c:	e7c7      	b.n	8003c0e <__ssputs_r+0x46>
	...

08003c80 <_svfiprintf_r>:
 8003c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c84:	4698      	mov	r8, r3
 8003c86:	898b      	ldrh	r3, [r1, #12]
 8003c88:	4607      	mov	r7, r0
 8003c8a:	061b      	lsls	r3, r3, #24
 8003c8c:	460d      	mov	r5, r1
 8003c8e:	4614      	mov	r4, r2
 8003c90:	b09d      	sub	sp, #116	; 0x74
 8003c92:	d50e      	bpl.n	8003cb2 <_svfiprintf_r+0x32>
 8003c94:	690b      	ldr	r3, [r1, #16]
 8003c96:	b963      	cbnz	r3, 8003cb2 <_svfiprintf_r+0x32>
 8003c98:	2140      	movs	r1, #64	; 0x40
 8003c9a:	f000 fb25 	bl	80042e8 <_malloc_r>
 8003c9e:	6028      	str	r0, [r5, #0]
 8003ca0:	6128      	str	r0, [r5, #16]
 8003ca2:	b920      	cbnz	r0, 8003cae <_svfiprintf_r+0x2e>
 8003ca4:	230c      	movs	r3, #12
 8003ca6:	603b      	str	r3, [r7, #0]
 8003ca8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003cac:	e0d1      	b.n	8003e52 <_svfiprintf_r+0x1d2>
 8003cae:	2340      	movs	r3, #64	; 0x40
 8003cb0:	616b      	str	r3, [r5, #20]
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	9309      	str	r3, [sp, #36]	; 0x24
 8003cb6:	2320      	movs	r3, #32
 8003cb8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003cbc:	2330      	movs	r3, #48	; 0x30
 8003cbe:	f04f 0901 	mov.w	r9, #1
 8003cc2:	f8cd 800c 	str.w	r8, [sp, #12]
 8003cc6:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003e6c <_svfiprintf_r+0x1ec>
 8003cca:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003cce:	4623      	mov	r3, r4
 8003cd0:	469a      	mov	sl, r3
 8003cd2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003cd6:	b10a      	cbz	r2, 8003cdc <_svfiprintf_r+0x5c>
 8003cd8:	2a25      	cmp	r2, #37	; 0x25
 8003cda:	d1f9      	bne.n	8003cd0 <_svfiprintf_r+0x50>
 8003cdc:	ebba 0b04 	subs.w	fp, sl, r4
 8003ce0:	d00b      	beq.n	8003cfa <_svfiprintf_r+0x7a>
 8003ce2:	465b      	mov	r3, fp
 8003ce4:	4622      	mov	r2, r4
 8003ce6:	4629      	mov	r1, r5
 8003ce8:	4638      	mov	r0, r7
 8003cea:	f7ff ff6d 	bl	8003bc8 <__ssputs_r>
 8003cee:	3001      	adds	r0, #1
 8003cf0:	f000 80aa 	beq.w	8003e48 <_svfiprintf_r+0x1c8>
 8003cf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003cf6:	445a      	add	r2, fp
 8003cf8:	9209      	str	r2, [sp, #36]	; 0x24
 8003cfa:	f89a 3000 	ldrb.w	r3, [sl]
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	f000 80a2 	beq.w	8003e48 <_svfiprintf_r+0x1c8>
 8003d04:	2300      	movs	r3, #0
 8003d06:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003d0a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003d0e:	f10a 0a01 	add.w	sl, sl, #1
 8003d12:	9304      	str	r3, [sp, #16]
 8003d14:	9307      	str	r3, [sp, #28]
 8003d16:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003d1a:	931a      	str	r3, [sp, #104]	; 0x68
 8003d1c:	4654      	mov	r4, sl
 8003d1e:	2205      	movs	r2, #5
 8003d20:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d24:	4851      	ldr	r0, [pc, #324]	; (8003e6c <_svfiprintf_r+0x1ec>)
 8003d26:	f000 fa41 	bl	80041ac <memchr>
 8003d2a:	9a04      	ldr	r2, [sp, #16]
 8003d2c:	b9d8      	cbnz	r0, 8003d66 <_svfiprintf_r+0xe6>
 8003d2e:	06d0      	lsls	r0, r2, #27
 8003d30:	bf44      	itt	mi
 8003d32:	2320      	movmi	r3, #32
 8003d34:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d38:	0711      	lsls	r1, r2, #28
 8003d3a:	bf44      	itt	mi
 8003d3c:	232b      	movmi	r3, #43	; 0x2b
 8003d3e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d42:	f89a 3000 	ldrb.w	r3, [sl]
 8003d46:	2b2a      	cmp	r3, #42	; 0x2a
 8003d48:	d015      	beq.n	8003d76 <_svfiprintf_r+0xf6>
 8003d4a:	4654      	mov	r4, sl
 8003d4c:	2000      	movs	r0, #0
 8003d4e:	f04f 0c0a 	mov.w	ip, #10
 8003d52:	9a07      	ldr	r2, [sp, #28]
 8003d54:	4621      	mov	r1, r4
 8003d56:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d5a:	3b30      	subs	r3, #48	; 0x30
 8003d5c:	2b09      	cmp	r3, #9
 8003d5e:	d94e      	bls.n	8003dfe <_svfiprintf_r+0x17e>
 8003d60:	b1b0      	cbz	r0, 8003d90 <_svfiprintf_r+0x110>
 8003d62:	9207      	str	r2, [sp, #28]
 8003d64:	e014      	b.n	8003d90 <_svfiprintf_r+0x110>
 8003d66:	eba0 0308 	sub.w	r3, r0, r8
 8003d6a:	fa09 f303 	lsl.w	r3, r9, r3
 8003d6e:	4313      	orrs	r3, r2
 8003d70:	46a2      	mov	sl, r4
 8003d72:	9304      	str	r3, [sp, #16]
 8003d74:	e7d2      	b.n	8003d1c <_svfiprintf_r+0x9c>
 8003d76:	9b03      	ldr	r3, [sp, #12]
 8003d78:	1d19      	adds	r1, r3, #4
 8003d7a:	681b      	ldr	r3, [r3, #0]
 8003d7c:	9103      	str	r1, [sp, #12]
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	bfbb      	ittet	lt
 8003d82:	425b      	neglt	r3, r3
 8003d84:	f042 0202 	orrlt.w	r2, r2, #2
 8003d88:	9307      	strge	r3, [sp, #28]
 8003d8a:	9307      	strlt	r3, [sp, #28]
 8003d8c:	bfb8      	it	lt
 8003d8e:	9204      	strlt	r2, [sp, #16]
 8003d90:	7823      	ldrb	r3, [r4, #0]
 8003d92:	2b2e      	cmp	r3, #46	; 0x2e
 8003d94:	d10c      	bne.n	8003db0 <_svfiprintf_r+0x130>
 8003d96:	7863      	ldrb	r3, [r4, #1]
 8003d98:	2b2a      	cmp	r3, #42	; 0x2a
 8003d9a:	d135      	bne.n	8003e08 <_svfiprintf_r+0x188>
 8003d9c:	9b03      	ldr	r3, [sp, #12]
 8003d9e:	3402      	adds	r4, #2
 8003da0:	1d1a      	adds	r2, r3, #4
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	9203      	str	r2, [sp, #12]
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	bfb8      	it	lt
 8003daa:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003dae:	9305      	str	r3, [sp, #20]
 8003db0:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8003e70 <_svfiprintf_r+0x1f0>
 8003db4:	2203      	movs	r2, #3
 8003db6:	4650      	mov	r0, sl
 8003db8:	7821      	ldrb	r1, [r4, #0]
 8003dba:	f000 f9f7 	bl	80041ac <memchr>
 8003dbe:	b140      	cbz	r0, 8003dd2 <_svfiprintf_r+0x152>
 8003dc0:	2340      	movs	r3, #64	; 0x40
 8003dc2:	eba0 000a 	sub.w	r0, r0, sl
 8003dc6:	fa03 f000 	lsl.w	r0, r3, r0
 8003dca:	9b04      	ldr	r3, [sp, #16]
 8003dcc:	3401      	adds	r4, #1
 8003dce:	4303      	orrs	r3, r0
 8003dd0:	9304      	str	r3, [sp, #16]
 8003dd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003dd6:	2206      	movs	r2, #6
 8003dd8:	4826      	ldr	r0, [pc, #152]	; (8003e74 <_svfiprintf_r+0x1f4>)
 8003dda:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003dde:	f000 f9e5 	bl	80041ac <memchr>
 8003de2:	2800      	cmp	r0, #0
 8003de4:	d038      	beq.n	8003e58 <_svfiprintf_r+0x1d8>
 8003de6:	4b24      	ldr	r3, [pc, #144]	; (8003e78 <_svfiprintf_r+0x1f8>)
 8003de8:	bb1b      	cbnz	r3, 8003e32 <_svfiprintf_r+0x1b2>
 8003dea:	9b03      	ldr	r3, [sp, #12]
 8003dec:	3307      	adds	r3, #7
 8003dee:	f023 0307 	bic.w	r3, r3, #7
 8003df2:	3308      	adds	r3, #8
 8003df4:	9303      	str	r3, [sp, #12]
 8003df6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003df8:	4433      	add	r3, r6
 8003dfa:	9309      	str	r3, [sp, #36]	; 0x24
 8003dfc:	e767      	b.n	8003cce <_svfiprintf_r+0x4e>
 8003dfe:	460c      	mov	r4, r1
 8003e00:	2001      	movs	r0, #1
 8003e02:	fb0c 3202 	mla	r2, ip, r2, r3
 8003e06:	e7a5      	b.n	8003d54 <_svfiprintf_r+0xd4>
 8003e08:	2300      	movs	r3, #0
 8003e0a:	f04f 0c0a 	mov.w	ip, #10
 8003e0e:	4619      	mov	r1, r3
 8003e10:	3401      	adds	r4, #1
 8003e12:	9305      	str	r3, [sp, #20]
 8003e14:	4620      	mov	r0, r4
 8003e16:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003e1a:	3a30      	subs	r2, #48	; 0x30
 8003e1c:	2a09      	cmp	r2, #9
 8003e1e:	d903      	bls.n	8003e28 <_svfiprintf_r+0x1a8>
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d0c5      	beq.n	8003db0 <_svfiprintf_r+0x130>
 8003e24:	9105      	str	r1, [sp, #20]
 8003e26:	e7c3      	b.n	8003db0 <_svfiprintf_r+0x130>
 8003e28:	4604      	mov	r4, r0
 8003e2a:	2301      	movs	r3, #1
 8003e2c:	fb0c 2101 	mla	r1, ip, r1, r2
 8003e30:	e7f0      	b.n	8003e14 <_svfiprintf_r+0x194>
 8003e32:	ab03      	add	r3, sp, #12
 8003e34:	9300      	str	r3, [sp, #0]
 8003e36:	462a      	mov	r2, r5
 8003e38:	4638      	mov	r0, r7
 8003e3a:	4b10      	ldr	r3, [pc, #64]	; (8003e7c <_svfiprintf_r+0x1fc>)
 8003e3c:	a904      	add	r1, sp, #16
 8003e3e:	f3af 8000 	nop.w
 8003e42:	1c42      	adds	r2, r0, #1
 8003e44:	4606      	mov	r6, r0
 8003e46:	d1d6      	bne.n	8003df6 <_svfiprintf_r+0x176>
 8003e48:	89ab      	ldrh	r3, [r5, #12]
 8003e4a:	065b      	lsls	r3, r3, #25
 8003e4c:	f53f af2c 	bmi.w	8003ca8 <_svfiprintf_r+0x28>
 8003e50:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e52:	b01d      	add	sp, #116	; 0x74
 8003e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e58:	ab03      	add	r3, sp, #12
 8003e5a:	9300      	str	r3, [sp, #0]
 8003e5c:	462a      	mov	r2, r5
 8003e5e:	4638      	mov	r0, r7
 8003e60:	4b06      	ldr	r3, [pc, #24]	; (8003e7c <_svfiprintf_r+0x1fc>)
 8003e62:	a904      	add	r1, sp, #16
 8003e64:	f000 f87c 	bl	8003f60 <_printf_i>
 8003e68:	e7eb      	b.n	8003e42 <_svfiprintf_r+0x1c2>
 8003e6a:	bf00      	nop
 8003e6c:	080044c8 	.word	0x080044c8
 8003e70:	080044ce 	.word	0x080044ce
 8003e74:	080044d2 	.word	0x080044d2
 8003e78:	00000000 	.word	0x00000000
 8003e7c:	08003bc9 	.word	0x08003bc9

08003e80 <_printf_common>:
 8003e80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e84:	4616      	mov	r6, r2
 8003e86:	4699      	mov	r9, r3
 8003e88:	688a      	ldr	r2, [r1, #8]
 8003e8a:	690b      	ldr	r3, [r1, #16]
 8003e8c:	4607      	mov	r7, r0
 8003e8e:	4293      	cmp	r3, r2
 8003e90:	bfb8      	it	lt
 8003e92:	4613      	movlt	r3, r2
 8003e94:	6033      	str	r3, [r6, #0]
 8003e96:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003e9a:	460c      	mov	r4, r1
 8003e9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003ea0:	b10a      	cbz	r2, 8003ea6 <_printf_common+0x26>
 8003ea2:	3301      	adds	r3, #1
 8003ea4:	6033      	str	r3, [r6, #0]
 8003ea6:	6823      	ldr	r3, [r4, #0]
 8003ea8:	0699      	lsls	r1, r3, #26
 8003eaa:	bf42      	ittt	mi
 8003eac:	6833      	ldrmi	r3, [r6, #0]
 8003eae:	3302      	addmi	r3, #2
 8003eb0:	6033      	strmi	r3, [r6, #0]
 8003eb2:	6825      	ldr	r5, [r4, #0]
 8003eb4:	f015 0506 	ands.w	r5, r5, #6
 8003eb8:	d106      	bne.n	8003ec8 <_printf_common+0x48>
 8003eba:	f104 0a19 	add.w	sl, r4, #25
 8003ebe:	68e3      	ldr	r3, [r4, #12]
 8003ec0:	6832      	ldr	r2, [r6, #0]
 8003ec2:	1a9b      	subs	r3, r3, r2
 8003ec4:	42ab      	cmp	r3, r5
 8003ec6:	dc28      	bgt.n	8003f1a <_printf_common+0x9a>
 8003ec8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003ecc:	1e13      	subs	r3, r2, #0
 8003ece:	6822      	ldr	r2, [r4, #0]
 8003ed0:	bf18      	it	ne
 8003ed2:	2301      	movne	r3, #1
 8003ed4:	0692      	lsls	r2, r2, #26
 8003ed6:	d42d      	bmi.n	8003f34 <_printf_common+0xb4>
 8003ed8:	4649      	mov	r1, r9
 8003eda:	4638      	mov	r0, r7
 8003edc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003ee0:	47c0      	blx	r8
 8003ee2:	3001      	adds	r0, #1
 8003ee4:	d020      	beq.n	8003f28 <_printf_common+0xa8>
 8003ee6:	6823      	ldr	r3, [r4, #0]
 8003ee8:	68e5      	ldr	r5, [r4, #12]
 8003eea:	f003 0306 	and.w	r3, r3, #6
 8003eee:	2b04      	cmp	r3, #4
 8003ef0:	bf18      	it	ne
 8003ef2:	2500      	movne	r5, #0
 8003ef4:	6832      	ldr	r2, [r6, #0]
 8003ef6:	f04f 0600 	mov.w	r6, #0
 8003efa:	68a3      	ldr	r3, [r4, #8]
 8003efc:	bf08      	it	eq
 8003efe:	1aad      	subeq	r5, r5, r2
 8003f00:	6922      	ldr	r2, [r4, #16]
 8003f02:	bf08      	it	eq
 8003f04:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003f08:	4293      	cmp	r3, r2
 8003f0a:	bfc4      	itt	gt
 8003f0c:	1a9b      	subgt	r3, r3, r2
 8003f0e:	18ed      	addgt	r5, r5, r3
 8003f10:	341a      	adds	r4, #26
 8003f12:	42b5      	cmp	r5, r6
 8003f14:	d11a      	bne.n	8003f4c <_printf_common+0xcc>
 8003f16:	2000      	movs	r0, #0
 8003f18:	e008      	b.n	8003f2c <_printf_common+0xac>
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	4652      	mov	r2, sl
 8003f1e:	4649      	mov	r1, r9
 8003f20:	4638      	mov	r0, r7
 8003f22:	47c0      	blx	r8
 8003f24:	3001      	adds	r0, #1
 8003f26:	d103      	bne.n	8003f30 <_printf_common+0xb0>
 8003f28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003f2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f30:	3501      	adds	r5, #1
 8003f32:	e7c4      	b.n	8003ebe <_printf_common+0x3e>
 8003f34:	2030      	movs	r0, #48	; 0x30
 8003f36:	18e1      	adds	r1, r4, r3
 8003f38:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003f3c:	1c5a      	adds	r2, r3, #1
 8003f3e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003f42:	4422      	add	r2, r4
 8003f44:	3302      	adds	r3, #2
 8003f46:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003f4a:	e7c5      	b.n	8003ed8 <_printf_common+0x58>
 8003f4c:	2301      	movs	r3, #1
 8003f4e:	4622      	mov	r2, r4
 8003f50:	4649      	mov	r1, r9
 8003f52:	4638      	mov	r0, r7
 8003f54:	47c0      	blx	r8
 8003f56:	3001      	adds	r0, #1
 8003f58:	d0e6      	beq.n	8003f28 <_printf_common+0xa8>
 8003f5a:	3601      	adds	r6, #1
 8003f5c:	e7d9      	b.n	8003f12 <_printf_common+0x92>
	...

08003f60 <_printf_i>:
 8003f60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f64:	7e0f      	ldrb	r7, [r1, #24]
 8003f66:	4691      	mov	r9, r2
 8003f68:	2f78      	cmp	r7, #120	; 0x78
 8003f6a:	4680      	mov	r8, r0
 8003f6c:	460c      	mov	r4, r1
 8003f6e:	469a      	mov	sl, r3
 8003f70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003f72:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003f76:	d807      	bhi.n	8003f88 <_printf_i+0x28>
 8003f78:	2f62      	cmp	r7, #98	; 0x62
 8003f7a:	d80a      	bhi.n	8003f92 <_printf_i+0x32>
 8003f7c:	2f00      	cmp	r7, #0
 8003f7e:	f000 80d9 	beq.w	8004134 <_printf_i+0x1d4>
 8003f82:	2f58      	cmp	r7, #88	; 0x58
 8003f84:	f000 80a4 	beq.w	80040d0 <_printf_i+0x170>
 8003f88:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003f8c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003f90:	e03a      	b.n	8004008 <_printf_i+0xa8>
 8003f92:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003f96:	2b15      	cmp	r3, #21
 8003f98:	d8f6      	bhi.n	8003f88 <_printf_i+0x28>
 8003f9a:	a101      	add	r1, pc, #4	; (adr r1, 8003fa0 <_printf_i+0x40>)
 8003f9c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003fa0:	08003ff9 	.word	0x08003ff9
 8003fa4:	0800400d 	.word	0x0800400d
 8003fa8:	08003f89 	.word	0x08003f89
 8003fac:	08003f89 	.word	0x08003f89
 8003fb0:	08003f89 	.word	0x08003f89
 8003fb4:	08003f89 	.word	0x08003f89
 8003fb8:	0800400d 	.word	0x0800400d
 8003fbc:	08003f89 	.word	0x08003f89
 8003fc0:	08003f89 	.word	0x08003f89
 8003fc4:	08003f89 	.word	0x08003f89
 8003fc8:	08003f89 	.word	0x08003f89
 8003fcc:	0800411b 	.word	0x0800411b
 8003fd0:	0800403d 	.word	0x0800403d
 8003fd4:	080040fd 	.word	0x080040fd
 8003fd8:	08003f89 	.word	0x08003f89
 8003fdc:	08003f89 	.word	0x08003f89
 8003fe0:	0800413d 	.word	0x0800413d
 8003fe4:	08003f89 	.word	0x08003f89
 8003fe8:	0800403d 	.word	0x0800403d
 8003fec:	08003f89 	.word	0x08003f89
 8003ff0:	08003f89 	.word	0x08003f89
 8003ff4:	08004105 	.word	0x08004105
 8003ff8:	682b      	ldr	r3, [r5, #0]
 8003ffa:	1d1a      	adds	r2, r3, #4
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	602a      	str	r2, [r5, #0]
 8004000:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004004:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004008:	2301      	movs	r3, #1
 800400a:	e0a4      	b.n	8004156 <_printf_i+0x1f6>
 800400c:	6820      	ldr	r0, [r4, #0]
 800400e:	6829      	ldr	r1, [r5, #0]
 8004010:	0606      	lsls	r6, r0, #24
 8004012:	f101 0304 	add.w	r3, r1, #4
 8004016:	d50a      	bpl.n	800402e <_printf_i+0xce>
 8004018:	680e      	ldr	r6, [r1, #0]
 800401a:	602b      	str	r3, [r5, #0]
 800401c:	2e00      	cmp	r6, #0
 800401e:	da03      	bge.n	8004028 <_printf_i+0xc8>
 8004020:	232d      	movs	r3, #45	; 0x2d
 8004022:	4276      	negs	r6, r6
 8004024:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004028:	230a      	movs	r3, #10
 800402a:	485e      	ldr	r0, [pc, #376]	; (80041a4 <_printf_i+0x244>)
 800402c:	e019      	b.n	8004062 <_printf_i+0x102>
 800402e:	680e      	ldr	r6, [r1, #0]
 8004030:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004034:	602b      	str	r3, [r5, #0]
 8004036:	bf18      	it	ne
 8004038:	b236      	sxthne	r6, r6
 800403a:	e7ef      	b.n	800401c <_printf_i+0xbc>
 800403c:	682b      	ldr	r3, [r5, #0]
 800403e:	6820      	ldr	r0, [r4, #0]
 8004040:	1d19      	adds	r1, r3, #4
 8004042:	6029      	str	r1, [r5, #0]
 8004044:	0601      	lsls	r1, r0, #24
 8004046:	d501      	bpl.n	800404c <_printf_i+0xec>
 8004048:	681e      	ldr	r6, [r3, #0]
 800404a:	e002      	b.n	8004052 <_printf_i+0xf2>
 800404c:	0646      	lsls	r6, r0, #25
 800404e:	d5fb      	bpl.n	8004048 <_printf_i+0xe8>
 8004050:	881e      	ldrh	r6, [r3, #0]
 8004052:	2f6f      	cmp	r7, #111	; 0x6f
 8004054:	bf0c      	ite	eq
 8004056:	2308      	moveq	r3, #8
 8004058:	230a      	movne	r3, #10
 800405a:	4852      	ldr	r0, [pc, #328]	; (80041a4 <_printf_i+0x244>)
 800405c:	2100      	movs	r1, #0
 800405e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004062:	6865      	ldr	r5, [r4, #4]
 8004064:	2d00      	cmp	r5, #0
 8004066:	bfa8      	it	ge
 8004068:	6821      	ldrge	r1, [r4, #0]
 800406a:	60a5      	str	r5, [r4, #8]
 800406c:	bfa4      	itt	ge
 800406e:	f021 0104 	bicge.w	r1, r1, #4
 8004072:	6021      	strge	r1, [r4, #0]
 8004074:	b90e      	cbnz	r6, 800407a <_printf_i+0x11a>
 8004076:	2d00      	cmp	r5, #0
 8004078:	d04d      	beq.n	8004116 <_printf_i+0x1b6>
 800407a:	4615      	mov	r5, r2
 800407c:	fbb6 f1f3 	udiv	r1, r6, r3
 8004080:	fb03 6711 	mls	r7, r3, r1, r6
 8004084:	5dc7      	ldrb	r7, [r0, r7]
 8004086:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800408a:	4637      	mov	r7, r6
 800408c:	42bb      	cmp	r3, r7
 800408e:	460e      	mov	r6, r1
 8004090:	d9f4      	bls.n	800407c <_printf_i+0x11c>
 8004092:	2b08      	cmp	r3, #8
 8004094:	d10b      	bne.n	80040ae <_printf_i+0x14e>
 8004096:	6823      	ldr	r3, [r4, #0]
 8004098:	07de      	lsls	r6, r3, #31
 800409a:	d508      	bpl.n	80040ae <_printf_i+0x14e>
 800409c:	6923      	ldr	r3, [r4, #16]
 800409e:	6861      	ldr	r1, [r4, #4]
 80040a0:	4299      	cmp	r1, r3
 80040a2:	bfde      	ittt	le
 80040a4:	2330      	movle	r3, #48	; 0x30
 80040a6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80040aa:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80040ae:	1b52      	subs	r2, r2, r5
 80040b0:	6122      	str	r2, [r4, #16]
 80040b2:	464b      	mov	r3, r9
 80040b4:	4621      	mov	r1, r4
 80040b6:	4640      	mov	r0, r8
 80040b8:	f8cd a000 	str.w	sl, [sp]
 80040bc:	aa03      	add	r2, sp, #12
 80040be:	f7ff fedf 	bl	8003e80 <_printf_common>
 80040c2:	3001      	adds	r0, #1
 80040c4:	d14c      	bne.n	8004160 <_printf_i+0x200>
 80040c6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80040ca:	b004      	add	sp, #16
 80040cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80040d0:	4834      	ldr	r0, [pc, #208]	; (80041a4 <_printf_i+0x244>)
 80040d2:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80040d6:	6829      	ldr	r1, [r5, #0]
 80040d8:	6823      	ldr	r3, [r4, #0]
 80040da:	f851 6b04 	ldr.w	r6, [r1], #4
 80040de:	6029      	str	r1, [r5, #0]
 80040e0:	061d      	lsls	r5, r3, #24
 80040e2:	d514      	bpl.n	800410e <_printf_i+0x1ae>
 80040e4:	07df      	lsls	r7, r3, #31
 80040e6:	bf44      	itt	mi
 80040e8:	f043 0320 	orrmi.w	r3, r3, #32
 80040ec:	6023      	strmi	r3, [r4, #0]
 80040ee:	b91e      	cbnz	r6, 80040f8 <_printf_i+0x198>
 80040f0:	6823      	ldr	r3, [r4, #0]
 80040f2:	f023 0320 	bic.w	r3, r3, #32
 80040f6:	6023      	str	r3, [r4, #0]
 80040f8:	2310      	movs	r3, #16
 80040fa:	e7af      	b.n	800405c <_printf_i+0xfc>
 80040fc:	6823      	ldr	r3, [r4, #0]
 80040fe:	f043 0320 	orr.w	r3, r3, #32
 8004102:	6023      	str	r3, [r4, #0]
 8004104:	2378      	movs	r3, #120	; 0x78
 8004106:	4828      	ldr	r0, [pc, #160]	; (80041a8 <_printf_i+0x248>)
 8004108:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800410c:	e7e3      	b.n	80040d6 <_printf_i+0x176>
 800410e:	0659      	lsls	r1, r3, #25
 8004110:	bf48      	it	mi
 8004112:	b2b6      	uxthmi	r6, r6
 8004114:	e7e6      	b.n	80040e4 <_printf_i+0x184>
 8004116:	4615      	mov	r5, r2
 8004118:	e7bb      	b.n	8004092 <_printf_i+0x132>
 800411a:	682b      	ldr	r3, [r5, #0]
 800411c:	6826      	ldr	r6, [r4, #0]
 800411e:	1d18      	adds	r0, r3, #4
 8004120:	6961      	ldr	r1, [r4, #20]
 8004122:	6028      	str	r0, [r5, #0]
 8004124:	0635      	lsls	r5, r6, #24
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	d501      	bpl.n	800412e <_printf_i+0x1ce>
 800412a:	6019      	str	r1, [r3, #0]
 800412c:	e002      	b.n	8004134 <_printf_i+0x1d4>
 800412e:	0670      	lsls	r0, r6, #25
 8004130:	d5fb      	bpl.n	800412a <_printf_i+0x1ca>
 8004132:	8019      	strh	r1, [r3, #0]
 8004134:	2300      	movs	r3, #0
 8004136:	4615      	mov	r5, r2
 8004138:	6123      	str	r3, [r4, #16]
 800413a:	e7ba      	b.n	80040b2 <_printf_i+0x152>
 800413c:	682b      	ldr	r3, [r5, #0]
 800413e:	2100      	movs	r1, #0
 8004140:	1d1a      	adds	r2, r3, #4
 8004142:	602a      	str	r2, [r5, #0]
 8004144:	681d      	ldr	r5, [r3, #0]
 8004146:	6862      	ldr	r2, [r4, #4]
 8004148:	4628      	mov	r0, r5
 800414a:	f000 f82f 	bl	80041ac <memchr>
 800414e:	b108      	cbz	r0, 8004154 <_printf_i+0x1f4>
 8004150:	1b40      	subs	r0, r0, r5
 8004152:	6060      	str	r0, [r4, #4]
 8004154:	6863      	ldr	r3, [r4, #4]
 8004156:	6123      	str	r3, [r4, #16]
 8004158:	2300      	movs	r3, #0
 800415a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800415e:	e7a8      	b.n	80040b2 <_printf_i+0x152>
 8004160:	462a      	mov	r2, r5
 8004162:	4649      	mov	r1, r9
 8004164:	4640      	mov	r0, r8
 8004166:	6923      	ldr	r3, [r4, #16]
 8004168:	47d0      	blx	sl
 800416a:	3001      	adds	r0, #1
 800416c:	d0ab      	beq.n	80040c6 <_printf_i+0x166>
 800416e:	6823      	ldr	r3, [r4, #0]
 8004170:	079b      	lsls	r3, r3, #30
 8004172:	d413      	bmi.n	800419c <_printf_i+0x23c>
 8004174:	68e0      	ldr	r0, [r4, #12]
 8004176:	9b03      	ldr	r3, [sp, #12]
 8004178:	4298      	cmp	r0, r3
 800417a:	bfb8      	it	lt
 800417c:	4618      	movlt	r0, r3
 800417e:	e7a4      	b.n	80040ca <_printf_i+0x16a>
 8004180:	2301      	movs	r3, #1
 8004182:	4632      	mov	r2, r6
 8004184:	4649      	mov	r1, r9
 8004186:	4640      	mov	r0, r8
 8004188:	47d0      	blx	sl
 800418a:	3001      	adds	r0, #1
 800418c:	d09b      	beq.n	80040c6 <_printf_i+0x166>
 800418e:	3501      	adds	r5, #1
 8004190:	68e3      	ldr	r3, [r4, #12]
 8004192:	9903      	ldr	r1, [sp, #12]
 8004194:	1a5b      	subs	r3, r3, r1
 8004196:	42ab      	cmp	r3, r5
 8004198:	dcf2      	bgt.n	8004180 <_printf_i+0x220>
 800419a:	e7eb      	b.n	8004174 <_printf_i+0x214>
 800419c:	2500      	movs	r5, #0
 800419e:	f104 0619 	add.w	r6, r4, #25
 80041a2:	e7f5      	b.n	8004190 <_printf_i+0x230>
 80041a4:	080044d9 	.word	0x080044d9
 80041a8:	080044ea 	.word	0x080044ea

080041ac <memchr>:
 80041ac:	4603      	mov	r3, r0
 80041ae:	b510      	push	{r4, lr}
 80041b0:	b2c9      	uxtb	r1, r1
 80041b2:	4402      	add	r2, r0
 80041b4:	4293      	cmp	r3, r2
 80041b6:	4618      	mov	r0, r3
 80041b8:	d101      	bne.n	80041be <memchr+0x12>
 80041ba:	2000      	movs	r0, #0
 80041bc:	e003      	b.n	80041c6 <memchr+0x1a>
 80041be:	7804      	ldrb	r4, [r0, #0]
 80041c0:	3301      	adds	r3, #1
 80041c2:	428c      	cmp	r4, r1
 80041c4:	d1f6      	bne.n	80041b4 <memchr+0x8>
 80041c6:	bd10      	pop	{r4, pc}

080041c8 <memcpy>:
 80041c8:	440a      	add	r2, r1
 80041ca:	4291      	cmp	r1, r2
 80041cc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80041d0:	d100      	bne.n	80041d4 <memcpy+0xc>
 80041d2:	4770      	bx	lr
 80041d4:	b510      	push	{r4, lr}
 80041d6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80041da:	4291      	cmp	r1, r2
 80041dc:	f803 4f01 	strb.w	r4, [r3, #1]!
 80041e0:	d1f9      	bne.n	80041d6 <memcpy+0xe>
 80041e2:	bd10      	pop	{r4, pc}

080041e4 <memmove>:
 80041e4:	4288      	cmp	r0, r1
 80041e6:	b510      	push	{r4, lr}
 80041e8:	eb01 0402 	add.w	r4, r1, r2
 80041ec:	d902      	bls.n	80041f4 <memmove+0x10>
 80041ee:	4284      	cmp	r4, r0
 80041f0:	4623      	mov	r3, r4
 80041f2:	d807      	bhi.n	8004204 <memmove+0x20>
 80041f4:	1e43      	subs	r3, r0, #1
 80041f6:	42a1      	cmp	r1, r4
 80041f8:	d008      	beq.n	800420c <memmove+0x28>
 80041fa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80041fe:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004202:	e7f8      	b.n	80041f6 <memmove+0x12>
 8004204:	4601      	mov	r1, r0
 8004206:	4402      	add	r2, r0
 8004208:	428a      	cmp	r2, r1
 800420a:	d100      	bne.n	800420e <memmove+0x2a>
 800420c:	bd10      	pop	{r4, pc}
 800420e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004212:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004216:	e7f7      	b.n	8004208 <memmove+0x24>

08004218 <_free_r>:
 8004218:	b538      	push	{r3, r4, r5, lr}
 800421a:	4605      	mov	r5, r0
 800421c:	2900      	cmp	r1, #0
 800421e:	d040      	beq.n	80042a2 <_free_r+0x8a>
 8004220:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004224:	1f0c      	subs	r4, r1, #4
 8004226:	2b00      	cmp	r3, #0
 8004228:	bfb8      	it	lt
 800422a:	18e4      	addlt	r4, r4, r3
 800422c:	f000 f910 	bl	8004450 <__malloc_lock>
 8004230:	4a1c      	ldr	r2, [pc, #112]	; (80042a4 <_free_r+0x8c>)
 8004232:	6813      	ldr	r3, [r2, #0]
 8004234:	b933      	cbnz	r3, 8004244 <_free_r+0x2c>
 8004236:	6063      	str	r3, [r4, #4]
 8004238:	6014      	str	r4, [r2, #0]
 800423a:	4628      	mov	r0, r5
 800423c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004240:	f000 b90c 	b.w	800445c <__malloc_unlock>
 8004244:	42a3      	cmp	r3, r4
 8004246:	d908      	bls.n	800425a <_free_r+0x42>
 8004248:	6820      	ldr	r0, [r4, #0]
 800424a:	1821      	adds	r1, r4, r0
 800424c:	428b      	cmp	r3, r1
 800424e:	bf01      	itttt	eq
 8004250:	6819      	ldreq	r1, [r3, #0]
 8004252:	685b      	ldreq	r3, [r3, #4]
 8004254:	1809      	addeq	r1, r1, r0
 8004256:	6021      	streq	r1, [r4, #0]
 8004258:	e7ed      	b.n	8004236 <_free_r+0x1e>
 800425a:	461a      	mov	r2, r3
 800425c:	685b      	ldr	r3, [r3, #4]
 800425e:	b10b      	cbz	r3, 8004264 <_free_r+0x4c>
 8004260:	42a3      	cmp	r3, r4
 8004262:	d9fa      	bls.n	800425a <_free_r+0x42>
 8004264:	6811      	ldr	r1, [r2, #0]
 8004266:	1850      	adds	r0, r2, r1
 8004268:	42a0      	cmp	r0, r4
 800426a:	d10b      	bne.n	8004284 <_free_r+0x6c>
 800426c:	6820      	ldr	r0, [r4, #0]
 800426e:	4401      	add	r1, r0
 8004270:	1850      	adds	r0, r2, r1
 8004272:	4283      	cmp	r3, r0
 8004274:	6011      	str	r1, [r2, #0]
 8004276:	d1e0      	bne.n	800423a <_free_r+0x22>
 8004278:	6818      	ldr	r0, [r3, #0]
 800427a:	685b      	ldr	r3, [r3, #4]
 800427c:	4401      	add	r1, r0
 800427e:	6011      	str	r1, [r2, #0]
 8004280:	6053      	str	r3, [r2, #4]
 8004282:	e7da      	b.n	800423a <_free_r+0x22>
 8004284:	d902      	bls.n	800428c <_free_r+0x74>
 8004286:	230c      	movs	r3, #12
 8004288:	602b      	str	r3, [r5, #0]
 800428a:	e7d6      	b.n	800423a <_free_r+0x22>
 800428c:	6820      	ldr	r0, [r4, #0]
 800428e:	1821      	adds	r1, r4, r0
 8004290:	428b      	cmp	r3, r1
 8004292:	bf01      	itttt	eq
 8004294:	6819      	ldreq	r1, [r3, #0]
 8004296:	685b      	ldreq	r3, [r3, #4]
 8004298:	1809      	addeq	r1, r1, r0
 800429a:	6021      	streq	r1, [r4, #0]
 800429c:	6063      	str	r3, [r4, #4]
 800429e:	6054      	str	r4, [r2, #4]
 80042a0:	e7cb      	b.n	800423a <_free_r+0x22>
 80042a2:	bd38      	pop	{r3, r4, r5, pc}
 80042a4:	200007fc 	.word	0x200007fc

080042a8 <sbrk_aligned>:
 80042a8:	b570      	push	{r4, r5, r6, lr}
 80042aa:	4e0e      	ldr	r6, [pc, #56]	; (80042e4 <sbrk_aligned+0x3c>)
 80042ac:	460c      	mov	r4, r1
 80042ae:	6831      	ldr	r1, [r6, #0]
 80042b0:	4605      	mov	r5, r0
 80042b2:	b911      	cbnz	r1, 80042ba <sbrk_aligned+0x12>
 80042b4:	f000 f8bc 	bl	8004430 <_sbrk_r>
 80042b8:	6030      	str	r0, [r6, #0]
 80042ba:	4621      	mov	r1, r4
 80042bc:	4628      	mov	r0, r5
 80042be:	f000 f8b7 	bl	8004430 <_sbrk_r>
 80042c2:	1c43      	adds	r3, r0, #1
 80042c4:	d00a      	beq.n	80042dc <sbrk_aligned+0x34>
 80042c6:	1cc4      	adds	r4, r0, #3
 80042c8:	f024 0403 	bic.w	r4, r4, #3
 80042cc:	42a0      	cmp	r0, r4
 80042ce:	d007      	beq.n	80042e0 <sbrk_aligned+0x38>
 80042d0:	1a21      	subs	r1, r4, r0
 80042d2:	4628      	mov	r0, r5
 80042d4:	f000 f8ac 	bl	8004430 <_sbrk_r>
 80042d8:	3001      	adds	r0, #1
 80042da:	d101      	bne.n	80042e0 <sbrk_aligned+0x38>
 80042dc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80042e0:	4620      	mov	r0, r4
 80042e2:	bd70      	pop	{r4, r5, r6, pc}
 80042e4:	20000800 	.word	0x20000800

080042e8 <_malloc_r>:
 80042e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042ec:	1ccd      	adds	r5, r1, #3
 80042ee:	f025 0503 	bic.w	r5, r5, #3
 80042f2:	3508      	adds	r5, #8
 80042f4:	2d0c      	cmp	r5, #12
 80042f6:	bf38      	it	cc
 80042f8:	250c      	movcc	r5, #12
 80042fa:	2d00      	cmp	r5, #0
 80042fc:	4607      	mov	r7, r0
 80042fe:	db01      	blt.n	8004304 <_malloc_r+0x1c>
 8004300:	42a9      	cmp	r1, r5
 8004302:	d905      	bls.n	8004310 <_malloc_r+0x28>
 8004304:	230c      	movs	r3, #12
 8004306:	2600      	movs	r6, #0
 8004308:	603b      	str	r3, [r7, #0]
 800430a:	4630      	mov	r0, r6
 800430c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004310:	4e2e      	ldr	r6, [pc, #184]	; (80043cc <_malloc_r+0xe4>)
 8004312:	f000 f89d 	bl	8004450 <__malloc_lock>
 8004316:	6833      	ldr	r3, [r6, #0]
 8004318:	461c      	mov	r4, r3
 800431a:	bb34      	cbnz	r4, 800436a <_malloc_r+0x82>
 800431c:	4629      	mov	r1, r5
 800431e:	4638      	mov	r0, r7
 8004320:	f7ff ffc2 	bl	80042a8 <sbrk_aligned>
 8004324:	1c43      	adds	r3, r0, #1
 8004326:	4604      	mov	r4, r0
 8004328:	d14d      	bne.n	80043c6 <_malloc_r+0xde>
 800432a:	6834      	ldr	r4, [r6, #0]
 800432c:	4626      	mov	r6, r4
 800432e:	2e00      	cmp	r6, #0
 8004330:	d140      	bne.n	80043b4 <_malloc_r+0xcc>
 8004332:	6823      	ldr	r3, [r4, #0]
 8004334:	4631      	mov	r1, r6
 8004336:	4638      	mov	r0, r7
 8004338:	eb04 0803 	add.w	r8, r4, r3
 800433c:	f000 f878 	bl	8004430 <_sbrk_r>
 8004340:	4580      	cmp	r8, r0
 8004342:	d13a      	bne.n	80043ba <_malloc_r+0xd2>
 8004344:	6821      	ldr	r1, [r4, #0]
 8004346:	3503      	adds	r5, #3
 8004348:	1a6d      	subs	r5, r5, r1
 800434a:	f025 0503 	bic.w	r5, r5, #3
 800434e:	3508      	adds	r5, #8
 8004350:	2d0c      	cmp	r5, #12
 8004352:	bf38      	it	cc
 8004354:	250c      	movcc	r5, #12
 8004356:	4638      	mov	r0, r7
 8004358:	4629      	mov	r1, r5
 800435a:	f7ff ffa5 	bl	80042a8 <sbrk_aligned>
 800435e:	3001      	adds	r0, #1
 8004360:	d02b      	beq.n	80043ba <_malloc_r+0xd2>
 8004362:	6823      	ldr	r3, [r4, #0]
 8004364:	442b      	add	r3, r5
 8004366:	6023      	str	r3, [r4, #0]
 8004368:	e00e      	b.n	8004388 <_malloc_r+0xa0>
 800436a:	6822      	ldr	r2, [r4, #0]
 800436c:	1b52      	subs	r2, r2, r5
 800436e:	d41e      	bmi.n	80043ae <_malloc_r+0xc6>
 8004370:	2a0b      	cmp	r2, #11
 8004372:	d916      	bls.n	80043a2 <_malloc_r+0xba>
 8004374:	1961      	adds	r1, r4, r5
 8004376:	42a3      	cmp	r3, r4
 8004378:	6025      	str	r5, [r4, #0]
 800437a:	bf18      	it	ne
 800437c:	6059      	strne	r1, [r3, #4]
 800437e:	6863      	ldr	r3, [r4, #4]
 8004380:	bf08      	it	eq
 8004382:	6031      	streq	r1, [r6, #0]
 8004384:	5162      	str	r2, [r4, r5]
 8004386:	604b      	str	r3, [r1, #4]
 8004388:	4638      	mov	r0, r7
 800438a:	f104 060b 	add.w	r6, r4, #11
 800438e:	f000 f865 	bl	800445c <__malloc_unlock>
 8004392:	f026 0607 	bic.w	r6, r6, #7
 8004396:	1d23      	adds	r3, r4, #4
 8004398:	1af2      	subs	r2, r6, r3
 800439a:	d0b6      	beq.n	800430a <_malloc_r+0x22>
 800439c:	1b9b      	subs	r3, r3, r6
 800439e:	50a3      	str	r3, [r4, r2]
 80043a0:	e7b3      	b.n	800430a <_malloc_r+0x22>
 80043a2:	6862      	ldr	r2, [r4, #4]
 80043a4:	42a3      	cmp	r3, r4
 80043a6:	bf0c      	ite	eq
 80043a8:	6032      	streq	r2, [r6, #0]
 80043aa:	605a      	strne	r2, [r3, #4]
 80043ac:	e7ec      	b.n	8004388 <_malloc_r+0xa0>
 80043ae:	4623      	mov	r3, r4
 80043b0:	6864      	ldr	r4, [r4, #4]
 80043b2:	e7b2      	b.n	800431a <_malloc_r+0x32>
 80043b4:	4634      	mov	r4, r6
 80043b6:	6876      	ldr	r6, [r6, #4]
 80043b8:	e7b9      	b.n	800432e <_malloc_r+0x46>
 80043ba:	230c      	movs	r3, #12
 80043bc:	4638      	mov	r0, r7
 80043be:	603b      	str	r3, [r7, #0]
 80043c0:	f000 f84c 	bl	800445c <__malloc_unlock>
 80043c4:	e7a1      	b.n	800430a <_malloc_r+0x22>
 80043c6:	6025      	str	r5, [r4, #0]
 80043c8:	e7de      	b.n	8004388 <_malloc_r+0xa0>
 80043ca:	bf00      	nop
 80043cc:	200007fc 	.word	0x200007fc

080043d0 <_realloc_r>:
 80043d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043d4:	4680      	mov	r8, r0
 80043d6:	4614      	mov	r4, r2
 80043d8:	460e      	mov	r6, r1
 80043da:	b921      	cbnz	r1, 80043e6 <_realloc_r+0x16>
 80043dc:	4611      	mov	r1, r2
 80043de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80043e2:	f7ff bf81 	b.w	80042e8 <_malloc_r>
 80043e6:	b92a      	cbnz	r2, 80043f4 <_realloc_r+0x24>
 80043e8:	f7ff ff16 	bl	8004218 <_free_r>
 80043ec:	4625      	mov	r5, r4
 80043ee:	4628      	mov	r0, r5
 80043f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043f4:	f000 f838 	bl	8004468 <_malloc_usable_size_r>
 80043f8:	4284      	cmp	r4, r0
 80043fa:	4607      	mov	r7, r0
 80043fc:	d802      	bhi.n	8004404 <_realloc_r+0x34>
 80043fe:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004402:	d812      	bhi.n	800442a <_realloc_r+0x5a>
 8004404:	4621      	mov	r1, r4
 8004406:	4640      	mov	r0, r8
 8004408:	f7ff ff6e 	bl	80042e8 <_malloc_r>
 800440c:	4605      	mov	r5, r0
 800440e:	2800      	cmp	r0, #0
 8004410:	d0ed      	beq.n	80043ee <_realloc_r+0x1e>
 8004412:	42bc      	cmp	r4, r7
 8004414:	4622      	mov	r2, r4
 8004416:	4631      	mov	r1, r6
 8004418:	bf28      	it	cs
 800441a:	463a      	movcs	r2, r7
 800441c:	f7ff fed4 	bl	80041c8 <memcpy>
 8004420:	4631      	mov	r1, r6
 8004422:	4640      	mov	r0, r8
 8004424:	f7ff fef8 	bl	8004218 <_free_r>
 8004428:	e7e1      	b.n	80043ee <_realloc_r+0x1e>
 800442a:	4635      	mov	r5, r6
 800442c:	e7df      	b.n	80043ee <_realloc_r+0x1e>
	...

08004430 <_sbrk_r>:
 8004430:	b538      	push	{r3, r4, r5, lr}
 8004432:	2300      	movs	r3, #0
 8004434:	4d05      	ldr	r5, [pc, #20]	; (800444c <_sbrk_r+0x1c>)
 8004436:	4604      	mov	r4, r0
 8004438:	4608      	mov	r0, r1
 800443a:	602b      	str	r3, [r5, #0]
 800443c:	f7fd f814 	bl	8001468 <_sbrk>
 8004440:	1c43      	adds	r3, r0, #1
 8004442:	d102      	bne.n	800444a <_sbrk_r+0x1a>
 8004444:	682b      	ldr	r3, [r5, #0]
 8004446:	b103      	cbz	r3, 800444a <_sbrk_r+0x1a>
 8004448:	6023      	str	r3, [r4, #0]
 800444a:	bd38      	pop	{r3, r4, r5, pc}
 800444c:	20000804 	.word	0x20000804

08004450 <__malloc_lock>:
 8004450:	4801      	ldr	r0, [pc, #4]	; (8004458 <__malloc_lock+0x8>)
 8004452:	f000 b811 	b.w	8004478 <__retarget_lock_acquire_recursive>
 8004456:	bf00      	nop
 8004458:	20000808 	.word	0x20000808

0800445c <__malloc_unlock>:
 800445c:	4801      	ldr	r0, [pc, #4]	; (8004464 <__malloc_unlock+0x8>)
 800445e:	f000 b80c 	b.w	800447a <__retarget_lock_release_recursive>
 8004462:	bf00      	nop
 8004464:	20000808 	.word	0x20000808

08004468 <_malloc_usable_size_r>:
 8004468:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800446c:	1f18      	subs	r0, r3, #4
 800446e:	2b00      	cmp	r3, #0
 8004470:	bfbc      	itt	lt
 8004472:	580b      	ldrlt	r3, [r1, r0]
 8004474:	18c0      	addlt	r0, r0, r3
 8004476:	4770      	bx	lr

08004478 <__retarget_lock_acquire_recursive>:
 8004478:	4770      	bx	lr

0800447a <__retarget_lock_release_recursive>:
 800447a:	4770      	bx	lr

0800447c <_init>:
 800447c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800447e:	bf00      	nop
 8004480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004482:	bc08      	pop	{r3}
 8004484:	469e      	mov	lr, r3
 8004486:	4770      	bx	lr

08004488 <_fini>:
 8004488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800448a:	bf00      	nop
 800448c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800448e:	bc08      	pop	{r3}
 8004490:	469e      	mov	lr, r3
 8004492:	4770      	bx	lr
