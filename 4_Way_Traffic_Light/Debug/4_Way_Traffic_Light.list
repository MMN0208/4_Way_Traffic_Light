
4_Way_Traffic_Light.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000433c  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000068  08004448  08004448  00014448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080044b0  080044b0  00020390  2**0
                  CONTENTS
  4 .ARM          00000000  080044b0  080044b0  00020390  2**0
                  CONTENTS
  5 .preinit_array 00000000  080044b0  080044b0  00020390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080044b0  080044b0  000144b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080044b4  080044b4  000144b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000390  20000000  080044b8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000047c  20000390  08004848  00020390  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000080c  08004848  0002080c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020390  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c366  00000000  00000000  000203b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002759  00000000  00000000  0002c71f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000db0  00000000  00000000  0002ee78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c40  00000000  00000000  0002fc28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a7cf  00000000  00000000  00030868  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013132  00000000  00000000  0004b037  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b690  00000000  00000000  0005e169  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e97f9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003928  00000000  00000000  000e984c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000390 	.word	0x20000390
 8000128:	00000000 	.word	0x00000000
 800012c:	08004430 	.word	0x08004430

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000394 	.word	0x20000394
 8000148:	08004430 	.word	0x08004430

0800014c <grnBuzzer>:
  4,16,4,
  4,8,4,4,4,
  4,20,
};

void grnBuzzer(void) {
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
	int counter = sizeof(music1)/sizeof(music1[0]);
 8000152:	234e      	movs	r3, #78	; 0x4e
 8000154:	607b      	str	r3, [r7, #4]
//		grnBuzzerCounter++;
//	}
//	else {
//		grnBuzzerCounter = 10;
//	}
	if (grnBuzzerCounter < counter){
 8000156:	4b16      	ldr	r3, [pc, #88]	; (80001b0 <grnBuzzer+0x64>)
 8000158:	681b      	ldr	r3, [r3, #0]
 800015a:	687a      	ldr	r2, [r7, #4]
 800015c:	429a      	cmp	r2, r3
 800015e:	dd1f      	ble.n	80001a0 <grnBuzzer+0x54>
		__HAL_TIM_SET_AUTORELOAD(&htim3, 1000000/music1[grnBuzzerCounter]);
 8000160:	4b13      	ldr	r3, [pc, #76]	; (80001b0 <grnBuzzer+0x64>)
 8000162:	681b      	ldr	r3, [r3, #0]
 8000164:	4a13      	ldr	r2, [pc, #76]	; (80001b4 <grnBuzzer+0x68>)
 8000166:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800016a:	4a13      	ldr	r2, [pc, #76]	; (80001b8 <grnBuzzer+0x6c>)
 800016c:	fb92 f2f3 	sdiv	r2, r2, r3
 8000170:	4b12      	ldr	r3, [pc, #72]	; (80001bc <grnBuzzer+0x70>)
 8000172:	681b      	ldr	r3, [r3, #0]
 8000174:	62da      	str	r2, [r3, #44]	; 0x2c
 8000176:	4b0e      	ldr	r3, [pc, #56]	; (80001b0 <grnBuzzer+0x64>)
 8000178:	681b      	ldr	r3, [r3, #0]
 800017a:	4a0e      	ldr	r2, [pc, #56]	; (80001b4 <grnBuzzer+0x68>)
 800017c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000180:	4a0d      	ldr	r2, [pc, #52]	; (80001b8 <grnBuzzer+0x6c>)
 8000182:	fb92 f3f3 	sdiv	r3, r2, r3
 8000186:	461a      	mov	r2, r3
 8000188:	4b0c      	ldr	r3, [pc, #48]	; (80001bc <grnBuzzer+0x70>)
 800018a:	60da      	str	r2, [r3, #12]
		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 15);
 800018c:	4b0b      	ldr	r3, [pc, #44]	; (80001bc <grnBuzzer+0x70>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	220f      	movs	r2, #15
 8000192:	635a      	str	r2, [r3, #52]	; 0x34
		grnBuzzerCounter++;
 8000194:	4b06      	ldr	r3, [pc, #24]	; (80001b0 <grnBuzzer+0x64>)
 8000196:	681b      	ldr	r3, [r3, #0]
 8000198:	3301      	adds	r3, #1
 800019a:	4a05      	ldr	r2, [pc, #20]	; (80001b0 <grnBuzzer+0x64>)
 800019c:	6013      	str	r3, [r2, #0]
	} else {
		grnBuzzerCounter = 0;
	}
}
 800019e:	e002      	b.n	80001a6 <grnBuzzer+0x5a>
		grnBuzzerCounter = 0;
 80001a0:	4b03      	ldr	r3, [pc, #12]	; (80001b0 <grnBuzzer+0x64>)
 80001a2:	2200      	movs	r2, #0
 80001a4:	601a      	str	r2, [r3, #0]
}
 80001a6:	bf00      	nop
 80001a8:	370c      	adds	r7, #12
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bc80      	pop	{r7}
 80001ae:	4770      	bx	lr
 80001b0:	200003ac 	.word	0x200003ac
 80001b4:	20000000 	.word	0x20000000
 80001b8:	000f4240 	.word	0x000f4240
 80001bc:	2000076c 	.word	0x2000076c

080001c0 <redBuzzer>:

void redBuzzer(void) {
 80001c0:	b480      	push	{r7}
 80001c2:	b083      	sub	sp, #12
 80001c4:	af00      	add	r7, sp, #0
	int counter = sizeof(music2)/sizeof(music2[0]);
 80001c6:	2363      	movs	r3, #99	; 0x63
 80001c8:	607b      	str	r3, [r7, #4]
	if(redBuzzerCounter < counter) {
 80001ca:	4b13      	ldr	r3, [pc, #76]	; (8000218 <redBuzzer+0x58>)
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	687a      	ldr	r2, [r7, #4]
 80001d0:	429a      	cmp	r2, r3
 80001d2:	dd19      	ble.n	8000208 <redBuzzer+0x48>
		__HAL_TIM_SET_AUTORELOAD(&htim3, music2[redBuzzerCounter]);
 80001d4:	4b10      	ldr	r3, [pc, #64]	; (8000218 <redBuzzer+0x58>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a10      	ldr	r2, [pc, #64]	; (800021c <redBuzzer+0x5c>)
 80001da:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001de:	4b10      	ldr	r3, [pc, #64]	; (8000220 <redBuzzer+0x60>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	62da      	str	r2, [r3, #44]	; 0x2c
 80001e4:	4b0c      	ldr	r3, [pc, #48]	; (8000218 <redBuzzer+0x58>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a0c      	ldr	r2, [pc, #48]	; (800021c <redBuzzer+0x5c>)
 80001ea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80001ee:	461a      	mov	r2, r3
 80001f0:	4b0b      	ldr	r3, [pc, #44]	; (8000220 <redBuzzer+0x60>)
 80001f2:	60da      	str	r2, [r3, #12]
		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 15);
 80001f4:	4b0a      	ldr	r3, [pc, #40]	; (8000220 <redBuzzer+0x60>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	220f      	movs	r2, #15
 80001fa:	635a      	str	r2, [r3, #52]	; 0x34
//		__HAL_TIM_SET_PRESCALER(&htim3,music2[redBuzzerCounter]);
		redBuzzerCounter ++;
 80001fc:	4b06      	ldr	r3, [pc, #24]	; (8000218 <redBuzzer+0x58>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	3301      	adds	r3, #1
 8000202:	4a05      	ldr	r2, [pc, #20]	; (8000218 <redBuzzer+0x58>)
 8000204:	6013      	str	r3, [r2, #0]
	}
	else {
		redBuzzerCounter  = 0;
	}
}
 8000206:	e002      	b.n	800020e <redBuzzer+0x4e>
		redBuzzerCounter  = 0;
 8000208:	4b03      	ldr	r3, [pc, #12]	; (8000218 <redBuzzer+0x58>)
 800020a:	2200      	movs	r2, #0
 800020c:	601a      	str	r2, [r3, #0]
}
 800020e:	bf00      	nop
 8000210:	370c      	adds	r7, #12
 8000212:	46bd      	mov	sp, r7
 8000214:	bc80      	pop	{r7}
 8000216:	4770      	bx	lr
 8000218:	200003b0 	.word	0x200003b0
 800021c:	20000138 	.word	0x20000138
 8000220:	2000076c 	.word	0x2000076c

08000224 <stopBuzzer>:

void stopBuzzer(void) {
 8000224:	b480      	push	{r7}
 8000226:	af00      	add	r7, sp, #0
	__HAL_TIM_SET_AUTORELOAD(&htim3, 0);
 8000228:	4b07      	ldr	r3, [pc, #28]	; (8000248 <stopBuzzer+0x24>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	2200      	movs	r2, #0
 800022e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000230:	4b05      	ldr	r3, [pc, #20]	; (8000248 <stopBuzzer+0x24>)
 8000232:	2200      	movs	r2, #0
 8000234:	60da      	str	r2, [r3, #12]
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 0);
 8000236:	4b04      	ldr	r3, [pc, #16]	; (8000248 <stopBuzzer+0x24>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	2200      	movs	r2, #0
 800023c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800023e:	bf00      	nop
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop
 8000248:	2000076c 	.word	0x2000076c

0800024c <fsm_multi_mode_run>:
#include "fsm_for_multi_mode.h"

int newGrnTime = 0;
int newYelTime = 0;

void fsm_multi_mode_run(void) {
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
	switch(sysStatus) {
 8000250:	4ba6      	ldr	r3, [pc, #664]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 8000252:	781b      	ldrb	r3, [r3, #0]
 8000254:	2b06      	cmp	r3, #6
 8000256:	f200 8252 	bhi.w	80006fe <fsm_multi_mode_run+0x4b2>
 800025a:	a201      	add	r2, pc, #4	; (adr r2, 8000260 <fsm_multi_mode_run+0x14>)
 800025c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000260:	0800027d 	.word	0x0800027d
 8000264:	080002b1 	.word	0x080002b1
 8000268:	0800036f 	.word	0x0800036f
 800026c:	0800042d 	.word	0x0800042d
 8000270:	08000509 	.word	0x08000509
 8000274:	0800065f 	.word	0x0800065f
 8000278:	080005c7 	.word	0x080005c7
	case INIT:
		//init timer 1 for countdown updating
		setTimer1(SECOND);
 800027c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000280:	f000 ffca 	bl	8001218 <setTimer1>

		//init countdown
		countdown = grnTime;
 8000284:	4b9a      	ldr	r3, [pc, #616]	; (80004f0 <fsm_multi_mode_run+0x2a4>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a9a      	ldr	r2, [pc, #616]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 800028a:	6013      	str	r3, [r2, #0]

		auto_mode = 1;
 800028c:	4b9a      	ldr	r3, [pc, #616]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800028e:	2201      	movs	r2, #1
 8000290:	601a      	str	r2, [r3, #0]

		sysStatus = RED__GRN;
 8000292:	4b96      	ldr	r3, [pc, #600]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 8000294:	2201      	movs	r2, #1
 8000296:	701a      	strb	r2, [r3, #0]
		trafficLightRed(TRAFFIC_LIGHT_1);
 8000298:	2000      	movs	r0, #0
 800029a:	f001 fabf 	bl	800181c <trafficLightRed>
		trafficLightGrn(TRAFFIC_LIGHT_2);
 800029e:	2001      	movs	r0, #1
 80002a0:	f001 fa70 	bl	8001784 <trafficLightGrn>
		displayCountdown(countdown);
 80002a4:	4b93      	ldr	r3, [pc, #588]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	4618      	mov	r0, r3
 80002aa:	f001 fadd 	bl	8001868 <displayCountdown>
		break;
 80002ae:	e233      	b.n	8000718 <fsm_multi_mode_run+0x4cc>

	case RED__GRN:
		if(auto_mode == 1) {
 80002b0:	4b91      	ldr	r3, [pc, #580]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	2b01      	cmp	r3, #1
 80002b6:	d12d      	bne.n	8000314 <fsm_multi_mode_run+0xc8>
			if(timer1_flag == 1) {
 80002b8:	4b90      	ldr	r3, [pc, #576]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	2b01      	cmp	r3, #1
 80002be:	d11e      	bne.n	80002fe <fsm_multi_mode_run+0xb2>
				setTimer1(SECOND);
 80002c0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002c4:	f000 ffa8 	bl	8001218 <setTimer1>
				countdown -= 1;
 80002c8:	4b8a      	ldr	r3, [pc, #552]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	3b01      	subs	r3, #1
 80002ce:	4a89      	ldr	r2, [pc, #548]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002d0:	6013      	str	r3, [r2, #0]
				if(countdown == 0) {
 80002d2:	4b88      	ldr	r3, [pc, #544]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d10c      	bne.n	80002f4 <fsm_multi_mode_run+0xa8>
					countdown = yelTime;
 80002da:	4b89      	ldr	r3, [pc, #548]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a85      	ldr	r2, [pc, #532]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002e0:	6013      	str	r3, [r2, #0]
					sysStatus = RED__YEL;
 80002e2:	4b82      	ldr	r3, [pc, #520]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 80002e4:	2202      	movs	r2, #2
 80002e6:	701a      	strb	r2, [r3, #0]
					trafficLightRed(TRAFFIC_LIGHT_1);
 80002e8:	2000      	movs	r0, #0
 80002ea:	f001 fa97 	bl	800181c <trafficLightRed>
					trafficLightYel(TRAFFIC_LIGHT_2);
 80002ee:	2001      	movs	r0, #1
 80002f0:	f001 fa6e 	bl	80017d0 <trafficLightYel>
				}
				displayCountdown(countdown);
 80002f4:	4b7f      	ldr	r3, [pc, #508]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4618      	mov	r0, r3
 80002fa:	f001 fab5 	bl	8001868 <displayCountdown>
			}

			if(isButtonPressed(BUTTON_1)) {
 80002fe:	2001      	movs	r0, #1
 8000300:	f000 fcd4 	bl	8000cac <isButtonPressed>
 8000304:	4603      	mov	r3, r0
 8000306:	2b00      	cmp	r3, #0
 8000308:	f000 81fb 	beq.w	8000702 <fsm_multi_mode_run+0x4b6>
				auto_mode = 0;
 800030c:	4b7a      	ldr	r3, [pc, #488]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800030e:	2200      	movs	r2, #0
 8000310:	601a      	str	r2, [r3, #0]
				trafficLightRed(TRAFFIC_LIGHT_1);
				trafficLightYel(TRAFFIC_LIGHT_2);
			}
		}

		break;
 8000312:	e1f6      	b.n	8000702 <fsm_multi_mode_run+0x4b6>
			if(isButtonPressed(BUTTON_1)) {
 8000314:	2001      	movs	r0, #1
 8000316:	f000 fcc9 	bl	8000cac <isButtonPressed>
 800031a:	4603      	mov	r3, r0
 800031c:	2b00      	cmp	r3, #0
 800031e:	d015      	beq.n	800034c <fsm_multi_mode_run+0x100>
				setTimer1(LED_BLINK);
 8000320:	2064      	movs	r0, #100	; 0x64
 8000322:	f000 ff79 	bl	8001218 <setTimer1>
				newGrnTime = grnTime;
 8000326:	4b72      	ldr	r3, [pc, #456]	; (80004f0 <fsm_multi_mode_run+0x2a4>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	4a76      	ldr	r2, [pc, #472]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 800032c:	6013      	str	r3, [r2, #0]
				sysStatus = SET_GRN;
 800032e:	4b6f      	ldr	r3, [pc, #444]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 8000330:	2206      	movs	r2, #6
 8000332:	701a      	strb	r2, [r3, #0]
				trafficLightGrn(TRAFFIC_LIGHT_1);
 8000334:	2000      	movs	r0, #0
 8000336:	f001 fa25 	bl	8001784 <trafficLightGrn>
				trafficLightGrn(TRAFFIC_LIGHT_2);
 800033a:	2001      	movs	r0, #1
 800033c:	f001 fa22 	bl	8001784 <trafficLightGrn>
				displayCountdown(newGrnTime);
 8000340:	4b70      	ldr	r3, [pc, #448]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	4618      	mov	r0, r3
 8000346:	f001 fa8f 	bl	8001868 <displayCountdown>
		break;
 800034a:	e1da      	b.n	8000702 <fsm_multi_mode_run+0x4b6>
			else if(isButtonPressed(BUTTON_2)) {
 800034c:	2002      	movs	r0, #2
 800034e:	f000 fcad 	bl	8000cac <isButtonPressed>
 8000352:	4603      	mov	r3, r0
 8000354:	2b00      	cmp	r3, #0
 8000356:	f000 81d4 	beq.w	8000702 <fsm_multi_mode_run+0x4b6>
				sysStatus = RED__YEL;
 800035a:	4b64      	ldr	r3, [pc, #400]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 800035c:	2202      	movs	r2, #2
 800035e:	701a      	strb	r2, [r3, #0]
				trafficLightRed(TRAFFIC_LIGHT_1);
 8000360:	2000      	movs	r0, #0
 8000362:	f001 fa5b 	bl	800181c <trafficLightRed>
				trafficLightYel(TRAFFIC_LIGHT_2);
 8000366:	2001      	movs	r0, #1
 8000368:	f001 fa32 	bl	80017d0 <trafficLightYel>
		break;
 800036c:	e1c9      	b.n	8000702 <fsm_multi_mode_run+0x4b6>

	case RED__YEL:
		if(auto_mode == 1) {
 800036e:	4b62      	ldr	r3, [pc, #392]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	2b01      	cmp	r3, #1
 8000374:	d12d      	bne.n	80003d2 <fsm_multi_mode_run+0x186>
			if(timer1_flag == 1) {
 8000376:	4b61      	ldr	r3, [pc, #388]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	2b01      	cmp	r3, #1
 800037c:	d11e      	bne.n	80003bc <fsm_multi_mode_run+0x170>
				setTimer1(SECOND);
 800037e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000382:	f000 ff49 	bl	8001218 <setTimer1>
				countdown--;
 8000386:	4b5b      	ldr	r3, [pc, #364]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	3b01      	subs	r3, #1
 800038c:	4a59      	ldr	r2, [pc, #356]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 800038e:	6013      	str	r3, [r2, #0]
				if(countdown == 0) {
 8000390:	4b58      	ldr	r3, [pc, #352]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	2b00      	cmp	r3, #0
 8000396:	d10c      	bne.n	80003b2 <fsm_multi_mode_run+0x166>
					countdown = grnTime;
 8000398:	4b55      	ldr	r3, [pc, #340]	; (80004f0 <fsm_multi_mode_run+0x2a4>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	4a55      	ldr	r2, [pc, #340]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 800039e:	6013      	str	r3, [r2, #0]
					sysStatus = GRN__RED;
 80003a0:	4b52      	ldr	r3, [pc, #328]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 80003a2:	2203      	movs	r2, #3
 80003a4:	701a      	strb	r2, [r3, #0]
					trafficLightGrn(TRAFFIC_LIGHT_1);
 80003a6:	2000      	movs	r0, #0
 80003a8:	f001 f9ec 	bl	8001784 <trafficLightGrn>
					trafficLightRed(TRAFFIC_LIGHT_2);
 80003ac:	2001      	movs	r0, #1
 80003ae:	f001 fa35 	bl	800181c <trafficLightRed>
				}
				displayCountdown(countdown);
 80003b2:	4b50      	ldr	r3, [pc, #320]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	4618      	mov	r0, r3
 80003b8:	f001 fa56 	bl	8001868 <displayCountdown>
			}

			if(isButtonPressed(BUTTON_1)) {
 80003bc:	2001      	movs	r0, #1
 80003be:	f000 fc75 	bl	8000cac <isButtonPressed>
 80003c2:	4603      	mov	r3, r0
 80003c4:	2b00      	cmp	r3, #0
 80003c6:	f000 819e 	beq.w	8000706 <fsm_multi_mode_run+0x4ba>
				auto_mode = 0;
 80003ca:	4b4b      	ldr	r3, [pc, #300]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80003cc:	2200      	movs	r2, #0
 80003ce:	601a      	str	r2, [r3, #0]
				sysStatus = GRN__RED;
				trafficLightGrn(TRAFFIC_LIGHT_1);
				trafficLightRed(TRAFFIC_LIGHT_2);
			}
		}
		break;
 80003d0:	e199      	b.n	8000706 <fsm_multi_mode_run+0x4ba>
			if(isButtonPressed(BUTTON_1)) {
 80003d2:	2001      	movs	r0, #1
 80003d4:	f000 fc6a 	bl	8000cac <isButtonPressed>
 80003d8:	4603      	mov	r3, r0
 80003da:	2b00      	cmp	r3, #0
 80003dc:	d015      	beq.n	800040a <fsm_multi_mode_run+0x1be>
				setTimer1(LED_BLINK);
 80003de:	2064      	movs	r0, #100	; 0x64
 80003e0:	f000 ff1a 	bl	8001218 <setTimer1>
				newGrnTime = grnTime;
 80003e4:	4b42      	ldr	r3, [pc, #264]	; (80004f0 <fsm_multi_mode_run+0x2a4>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a46      	ldr	r2, [pc, #280]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80003ea:	6013      	str	r3, [r2, #0]
				sysStatus = SET_GRN;
 80003ec:	4b3f      	ldr	r3, [pc, #252]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 80003ee:	2206      	movs	r2, #6
 80003f0:	701a      	strb	r2, [r3, #0]
				trafficLightGrn(TRAFFIC_LIGHT_1);
 80003f2:	2000      	movs	r0, #0
 80003f4:	f001 f9c6 	bl	8001784 <trafficLightGrn>
				trafficLightGrn(TRAFFIC_LIGHT_2);
 80003f8:	2001      	movs	r0, #1
 80003fa:	f001 f9c3 	bl	8001784 <trafficLightGrn>
				displayCountdown(newGrnTime);
 80003fe:	4b41      	ldr	r3, [pc, #260]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	4618      	mov	r0, r3
 8000404:	f001 fa30 	bl	8001868 <displayCountdown>
		break;
 8000408:	e17d      	b.n	8000706 <fsm_multi_mode_run+0x4ba>
			else if(isButtonPressed(BUTTON_2)) {
 800040a:	2002      	movs	r0, #2
 800040c:	f000 fc4e 	bl	8000cac <isButtonPressed>
 8000410:	4603      	mov	r3, r0
 8000412:	2b00      	cmp	r3, #0
 8000414:	f000 8177 	beq.w	8000706 <fsm_multi_mode_run+0x4ba>
				sysStatus = GRN__RED;
 8000418:	4b34      	ldr	r3, [pc, #208]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 800041a:	2203      	movs	r2, #3
 800041c:	701a      	strb	r2, [r3, #0]
				trafficLightGrn(TRAFFIC_LIGHT_1);
 800041e:	2000      	movs	r0, #0
 8000420:	f001 f9b0 	bl	8001784 <trafficLightGrn>
				trafficLightRed(TRAFFIC_LIGHT_2);
 8000424:	2001      	movs	r0, #1
 8000426:	f001 f9f9 	bl	800181c <trafficLightRed>
		break;
 800042a:	e16c      	b.n	8000706 <fsm_multi_mode_run+0x4ba>

	case GRN__RED:
		if(auto_mode == 1) {
 800042c:	4b32      	ldr	r3, [pc, #200]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	2b01      	cmp	r3, #1
 8000432:	d12d      	bne.n	8000490 <fsm_multi_mode_run+0x244>
			if(timer1_flag == 1) {
 8000434:	4b31      	ldr	r3, [pc, #196]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	2b01      	cmp	r3, #1
 800043a:	d11e      	bne.n	800047a <fsm_multi_mode_run+0x22e>
				setTimer1(SECOND);
 800043c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000440:	f000 feea 	bl	8001218 <setTimer1>
				countdown--;
 8000444:	4b2b      	ldr	r3, [pc, #172]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	3b01      	subs	r3, #1
 800044a:	4a2a      	ldr	r2, [pc, #168]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 800044c:	6013      	str	r3, [r2, #0]
				if(countdown == 0) {
 800044e:	4b29      	ldr	r3, [pc, #164]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	2b00      	cmp	r3, #0
 8000454:	d10c      	bne.n	8000470 <fsm_multi_mode_run+0x224>
					countdown = yelTime;
 8000456:	4b2a      	ldr	r3, [pc, #168]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	4a26      	ldr	r2, [pc, #152]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 800045c:	6013      	str	r3, [r2, #0]
					sysStatus = YEL__RED;
 800045e:	4b23      	ldr	r3, [pc, #140]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 8000460:	2204      	movs	r2, #4
 8000462:	701a      	strb	r2, [r3, #0]
					trafficLightYel(TRAFFIC_LIGHT_1);
 8000464:	2000      	movs	r0, #0
 8000466:	f001 f9b3 	bl	80017d0 <trafficLightYel>
					trafficLightRed(TRAFFIC_LIGHT_2);
 800046a:	2001      	movs	r0, #1
 800046c:	f001 f9d6 	bl	800181c <trafficLightRed>
				}
				displayCountdown(countdown);
 8000470:	4b20      	ldr	r3, [pc, #128]	; (80004f4 <fsm_multi_mode_run+0x2a8>)
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	4618      	mov	r0, r3
 8000476:	f001 f9f7 	bl	8001868 <displayCountdown>
			}

			if(isButtonPressed(BUTTON_1)) {
 800047a:	2001      	movs	r0, #1
 800047c:	f000 fc16 	bl	8000cac <isButtonPressed>
 8000480:	4603      	mov	r3, r0
 8000482:	2b00      	cmp	r3, #0
 8000484:	f000 8141 	beq.w	800070a <fsm_multi_mode_run+0x4be>
				auto_mode = 0;
 8000488:	4b1b      	ldr	r3, [pc, #108]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800048a:	2200      	movs	r2, #0
 800048c:	601a      	str	r2, [r3, #0]
				sysStatus = YEL__RED;
				trafficLightYel(TRAFFIC_LIGHT_1);
				trafficLightRed(TRAFFIC_LIGHT_2);
			}
		}
		break;
 800048e:	e13c      	b.n	800070a <fsm_multi_mode_run+0x4be>
			if(isButtonPressed(BUTTON_1)) {
 8000490:	2001      	movs	r0, #1
 8000492:	f000 fc0b 	bl	8000cac <isButtonPressed>
 8000496:	4603      	mov	r3, r0
 8000498:	2b00      	cmp	r3, #0
 800049a:	d015      	beq.n	80004c8 <fsm_multi_mode_run+0x27c>
				setTimer1(LED_BLINK);
 800049c:	2064      	movs	r0, #100	; 0x64
 800049e:	f000 febb 	bl	8001218 <setTimer1>
				newGrnTime = grnTime;
 80004a2:	4b13      	ldr	r3, [pc, #76]	; (80004f0 <fsm_multi_mode_run+0x2a4>)
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	4a17      	ldr	r2, [pc, #92]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80004a8:	6013      	str	r3, [r2, #0]
				sysStatus = SET_GRN;
 80004aa:	4b10      	ldr	r3, [pc, #64]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 80004ac:	2206      	movs	r2, #6
 80004ae:	701a      	strb	r2, [r3, #0]
				trafficLightGrn(TRAFFIC_LIGHT_1);
 80004b0:	2000      	movs	r0, #0
 80004b2:	f001 f967 	bl	8001784 <trafficLightGrn>
				trafficLightGrn(TRAFFIC_LIGHT_2);
 80004b6:	2001      	movs	r0, #1
 80004b8:	f001 f964 	bl	8001784 <trafficLightGrn>
				displayCountdown(newGrnTime);
 80004bc:	4b11      	ldr	r3, [pc, #68]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	4618      	mov	r0, r3
 80004c2:	f001 f9d1 	bl	8001868 <displayCountdown>
		break;
 80004c6:	e120      	b.n	800070a <fsm_multi_mode_run+0x4be>
			else if(isButtonPressed(BUTTON_2)) {
 80004c8:	2002      	movs	r0, #2
 80004ca:	f000 fbef 	bl	8000cac <isButtonPressed>
 80004ce:	4603      	mov	r3, r0
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	f000 811a 	beq.w	800070a <fsm_multi_mode_run+0x4be>
				sysStatus = YEL__RED;
 80004d6:	4b05      	ldr	r3, [pc, #20]	; (80004ec <fsm_multi_mode_run+0x2a0>)
 80004d8:	2204      	movs	r2, #4
 80004da:	701a      	strb	r2, [r3, #0]
				trafficLightYel(TRAFFIC_LIGHT_1);
 80004dc:	2000      	movs	r0, #0
 80004de:	f001 f977 	bl	80017d0 <trafficLightYel>
				trafficLightRed(TRAFFIC_LIGHT_2);
 80004e2:	2001      	movs	r0, #1
 80004e4:	f001 f99a 	bl	800181c <trafficLightRed>
		break;
 80004e8:	e10f      	b.n	800070a <fsm_multi_mode_run+0x4be>
 80004ea:	bf00      	nop
 80004ec:	200003c0 	.word	0x200003c0
 80004f0:	200002cc 	.word	0x200002cc
 80004f4:	200003c4 	.word	0x200003c4
 80004f8:	200002d0 	.word	0x200002d0
 80004fc:	2000070c 	.word	0x2000070c
 8000500:	200002c8 	.word	0x200002c8
 8000504:	200003b4 	.word	0x200003b4

	case YEL__RED:
		if(auto_mode == 1) {
 8000508:	4b84      	ldr	r3, [pc, #528]	; (800071c <fsm_multi_mode_run+0x4d0>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	2b01      	cmp	r3, #1
 800050e:	d12d      	bne.n	800056c <fsm_multi_mode_run+0x320>
			if(timer1_flag == 1) {
 8000510:	4b83      	ldr	r3, [pc, #524]	; (8000720 <fsm_multi_mode_run+0x4d4>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	2b01      	cmp	r3, #1
 8000516:	d11e      	bne.n	8000556 <fsm_multi_mode_run+0x30a>
				setTimer1(SECOND);
 8000518:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800051c:	f000 fe7c 	bl	8001218 <setTimer1>
				countdown--;
 8000520:	4b80      	ldr	r3, [pc, #512]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	3b01      	subs	r3, #1
 8000526:	4a7f      	ldr	r2, [pc, #508]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 8000528:	6013      	str	r3, [r2, #0]
				if(countdown == 0) {
 800052a:	4b7e      	ldr	r3, [pc, #504]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	2b00      	cmp	r3, #0
 8000530:	d10c      	bne.n	800054c <fsm_multi_mode_run+0x300>
					countdown = grnTime;
 8000532:	4b7d      	ldr	r3, [pc, #500]	; (8000728 <fsm_multi_mode_run+0x4dc>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4a7b      	ldr	r2, [pc, #492]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 8000538:	6013      	str	r3, [r2, #0]
					sysStatus = RED__GRN;
 800053a:	4b7c      	ldr	r3, [pc, #496]	; (800072c <fsm_multi_mode_run+0x4e0>)
 800053c:	2201      	movs	r2, #1
 800053e:	701a      	strb	r2, [r3, #0]
					trafficLightRed(TRAFFIC_LIGHT_1);
 8000540:	2000      	movs	r0, #0
 8000542:	f001 f96b 	bl	800181c <trafficLightRed>
					trafficLightGrn(TRAFFIC_LIGHT_2);
 8000546:	2001      	movs	r0, #1
 8000548:	f001 f91c 	bl	8001784 <trafficLightGrn>
				}
				displayCountdown(countdown);
 800054c:	4b75      	ldr	r3, [pc, #468]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4618      	mov	r0, r3
 8000552:	f001 f989 	bl	8001868 <displayCountdown>
			}

			if(isButtonPressed(BUTTON_1)) {
 8000556:	2001      	movs	r0, #1
 8000558:	f000 fba8 	bl	8000cac <isButtonPressed>
 800055c:	4603      	mov	r3, r0
 800055e:	2b00      	cmp	r3, #0
 8000560:	f000 80d5 	beq.w	800070e <fsm_multi_mode_run+0x4c2>
				auto_mode = 0;
 8000564:	4b6d      	ldr	r3, [pc, #436]	; (800071c <fsm_multi_mode_run+0x4d0>)
 8000566:	2200      	movs	r2, #0
 8000568:	601a      	str	r2, [r3, #0]
				sysStatus = RED__GRN;
				trafficLightRed(TRAFFIC_LIGHT_1);
				trafficLightGrn(TRAFFIC_LIGHT_2);
			}
		}
		break;
 800056a:	e0d0      	b.n	800070e <fsm_multi_mode_run+0x4c2>
			if(isButtonPressed(BUTTON_1)) {
 800056c:	2001      	movs	r0, #1
 800056e:	f000 fb9d 	bl	8000cac <isButtonPressed>
 8000572:	4603      	mov	r3, r0
 8000574:	2b00      	cmp	r3, #0
 8000576:	d015      	beq.n	80005a4 <fsm_multi_mode_run+0x358>
				setTimer1(LED_BLINK);
 8000578:	2064      	movs	r0, #100	; 0x64
 800057a:	f000 fe4d 	bl	8001218 <setTimer1>
				newGrnTime = grnTime;
 800057e:	4b6a      	ldr	r3, [pc, #424]	; (8000728 <fsm_multi_mode_run+0x4dc>)
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	4a6b      	ldr	r2, [pc, #428]	; (8000730 <fsm_multi_mode_run+0x4e4>)
 8000584:	6013      	str	r3, [r2, #0]
				sysStatus = SET_GRN;
 8000586:	4b69      	ldr	r3, [pc, #420]	; (800072c <fsm_multi_mode_run+0x4e0>)
 8000588:	2206      	movs	r2, #6
 800058a:	701a      	strb	r2, [r3, #0]
				trafficLightGrn(TRAFFIC_LIGHT_1);
 800058c:	2000      	movs	r0, #0
 800058e:	f001 f8f9 	bl	8001784 <trafficLightGrn>
				trafficLightGrn(TRAFFIC_LIGHT_2);
 8000592:	2001      	movs	r0, #1
 8000594:	f001 f8f6 	bl	8001784 <trafficLightGrn>
				displayCountdown(newGrnTime);
 8000598:	4b65      	ldr	r3, [pc, #404]	; (8000730 <fsm_multi_mode_run+0x4e4>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	4618      	mov	r0, r3
 800059e:	f001 f963 	bl	8001868 <displayCountdown>
		break;
 80005a2:	e0b4      	b.n	800070e <fsm_multi_mode_run+0x4c2>
			else if(isButtonPressed(BUTTON_2)) {
 80005a4:	2002      	movs	r0, #2
 80005a6:	f000 fb81 	bl	8000cac <isButtonPressed>
 80005aa:	4603      	mov	r3, r0
 80005ac:	2b00      	cmp	r3, #0
 80005ae:	f000 80ae 	beq.w	800070e <fsm_multi_mode_run+0x4c2>
				sysStatus = RED__GRN;
 80005b2:	4b5e      	ldr	r3, [pc, #376]	; (800072c <fsm_multi_mode_run+0x4e0>)
 80005b4:	2201      	movs	r2, #1
 80005b6:	701a      	strb	r2, [r3, #0]
				trafficLightRed(TRAFFIC_LIGHT_1);
 80005b8:	2000      	movs	r0, #0
 80005ba:	f001 f92f 	bl	800181c <trafficLightRed>
				trafficLightGrn(TRAFFIC_LIGHT_2);
 80005be:	2001      	movs	r0, #1
 80005c0:	f001 f8e0 	bl	8001784 <trafficLightGrn>
		break;
 80005c4:	e0a3      	b.n	800070e <fsm_multi_mode_run+0x4c2>

	case SET_GRN:
		if(isButtonPressed(BUTTON_1)) {
 80005c6:	2001      	movs	r0, #1
 80005c8:	f000 fb70 	bl	8000cac <isButtonPressed>
 80005cc:	4603      	mov	r3, r0
 80005ce:	2b00      	cmp	r3, #0
 80005d0:	d015      	beq.n	80005fe <fsm_multi_mode_run+0x3b2>
			setTimer1(LED_BLINK);
 80005d2:	2064      	movs	r0, #100	; 0x64
 80005d4:	f000 fe20 	bl	8001218 <setTimer1>
			newYelTime = yelTime;
 80005d8:	4b56      	ldr	r3, [pc, #344]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a56      	ldr	r2, [pc, #344]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80005de:	6013      	str	r3, [r2, #0]
			sysStatus = SET_YEL;
 80005e0:	4b52      	ldr	r3, [pc, #328]	; (800072c <fsm_multi_mode_run+0x4e0>)
 80005e2:	2205      	movs	r2, #5
 80005e4:	701a      	strb	r2, [r3, #0]
			trafficLightYel(TRAFFIC_LIGHT_1);
 80005e6:	2000      	movs	r0, #0
 80005e8:	f001 f8f2 	bl	80017d0 <trafficLightYel>
			trafficLightYel(TRAFFIC_LIGHT_2);
 80005ec:	2001      	movs	r0, #1
 80005ee:	f001 f8ef 	bl	80017d0 <trafficLightYel>
			displayCountdown(newYelTime);
 80005f2:	4b51      	ldr	r3, [pc, #324]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	4618      	mov	r0, r3
 80005f8:	f001 f936 	bl	8001868 <displayCountdown>
 80005fc:	e021      	b.n	8000642 <fsm_multi_mode_run+0x3f6>
		}
		else if(isButtonPressed(BUTTON_2)) {
 80005fe:	2002      	movs	r0, #2
 8000600:	f000 fb54 	bl	8000cac <isButtonPressed>
 8000604:	4603      	mov	r3, r0
 8000606:	2b00      	cmp	r3, #0
 8000608:	d00a      	beq.n	8000620 <fsm_multi_mode_run+0x3d4>
			newGrnTime++;
 800060a:	4b49      	ldr	r3, [pc, #292]	; (8000730 <fsm_multi_mode_run+0x4e4>)
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	3301      	adds	r3, #1
 8000610:	4a47      	ldr	r2, [pc, #284]	; (8000730 <fsm_multi_mode_run+0x4e4>)
 8000612:	6013      	str	r3, [r2, #0]
			displayCountdown(newGrnTime);
 8000614:	4b46      	ldr	r3, [pc, #280]	; (8000730 <fsm_multi_mode_run+0x4e4>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	4618      	mov	r0, r3
 800061a:	f001 f925 	bl	8001868 <displayCountdown>
 800061e:	e010      	b.n	8000642 <fsm_multi_mode_run+0x3f6>
		}
		else if(isButtonPressed(BUTTON_3)) {
 8000620:	2003      	movs	r0, #3
 8000622:	f000 fb43 	bl	8000cac <isButtonPressed>
 8000626:	4603      	mov	r3, r0
 8000628:	2b00      	cmp	r3, #0
 800062a:	d00a      	beq.n	8000642 <fsm_multi_mode_run+0x3f6>
			grnTime = newGrnTime;
 800062c:	4b40      	ldr	r3, [pc, #256]	; (8000730 <fsm_multi_mode_run+0x4e4>)
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a3d      	ldr	r2, [pc, #244]	; (8000728 <fsm_multi_mode_run+0x4dc>)
 8000632:	6013      	str	r3, [r2, #0]
			redTime = grnTime + yelTime;
 8000634:	4b3c      	ldr	r3, [pc, #240]	; (8000728 <fsm_multi_mode_run+0x4dc>)
 8000636:	681a      	ldr	r2, [r3, #0]
 8000638:	4b3e      	ldr	r3, [pc, #248]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4413      	add	r3, r2
 800063e:	4a3f      	ldr	r2, [pc, #252]	; (800073c <fsm_multi_mode_run+0x4f0>)
 8000640:	6013      	str	r3, [r2, #0]
		}

		if(timer1_flag == 1) {
 8000642:	4b37      	ldr	r3, [pc, #220]	; (8000720 <fsm_multi_mode_run+0x4d4>)
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	2b01      	cmp	r3, #1
 8000648:	d163      	bne.n	8000712 <fsm_multi_mode_run+0x4c6>
			setTimer1(LED_BLINK);
 800064a:	2064      	movs	r0, #100	; 0x64
 800064c:	f000 fde4 	bl	8001218 <setTimer1>
			trafficLightBlinkGrn(TRAFFIC_LIGHT_1);
 8000650:	2000      	movs	r0, #0
 8000652:	f001 f84b 	bl	80016ec <trafficLightBlinkGrn>
			trafficLightBlinkGrn(TRAFFIC_LIGHT_2);
 8000656:	2001      	movs	r0, #1
 8000658:	f001 f848 	bl	80016ec <trafficLightBlinkGrn>
		}
		break;
 800065c:	e059      	b.n	8000712 <fsm_multi_mode_run+0x4c6>

	case SET_YEL:
		if(isButtonPressed(BUTTON_1)) {
 800065e:	2001      	movs	r0, #1
 8000660:	f000 fb24 	bl	8000cac <isButtonPressed>
 8000664:	4603      	mov	r3, r0
 8000666:	2b00      	cmp	r3, #0
 8000668:	d019      	beq.n	800069e <fsm_multi_mode_run+0x452>
			setTimer1(SECOND);
 800066a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800066e:	f000 fdd3 	bl	8001218 <setTimer1>
			countdown = grnTime;
 8000672:	4b2d      	ldr	r3, [pc, #180]	; (8000728 <fsm_multi_mode_run+0x4dc>)
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	4a2b      	ldr	r2, [pc, #172]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 8000678:	6013      	str	r3, [r2, #0]
			auto_mode = 1;
 800067a:	4b28      	ldr	r3, [pc, #160]	; (800071c <fsm_multi_mode_run+0x4d0>)
 800067c:	2201      	movs	r2, #1
 800067e:	601a      	str	r2, [r3, #0]
			sysStatus = RED__GRN;
 8000680:	4b2a      	ldr	r3, [pc, #168]	; (800072c <fsm_multi_mode_run+0x4e0>)
 8000682:	2201      	movs	r2, #1
 8000684:	701a      	strb	r2, [r3, #0]
			trafficLightRed(TRAFFIC_LIGHT_1);
 8000686:	2000      	movs	r0, #0
 8000688:	f001 f8c8 	bl	800181c <trafficLightRed>
			trafficLightGrn(TRAFFIC_LIGHT_2);
 800068c:	2001      	movs	r0, #1
 800068e:	f001 f879 	bl	8001784 <trafficLightGrn>
			displayCountdown(countdown);
 8000692:	4b24      	ldr	r3, [pc, #144]	; (8000724 <fsm_multi_mode_run+0x4d8>)
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	4618      	mov	r0, r3
 8000698:	f001 f8e6 	bl	8001868 <displayCountdown>
 800069c:	e021      	b.n	80006e2 <fsm_multi_mode_run+0x496>
		}
		else if(isButtonPressed(BUTTON_2)) {
 800069e:	2002      	movs	r0, #2
 80006a0:	f000 fb04 	bl	8000cac <isButtonPressed>
 80006a4:	4603      	mov	r3, r0
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	d00a      	beq.n	80006c0 <fsm_multi_mode_run+0x474>
			newYelTime++;
 80006aa:	4b23      	ldr	r3, [pc, #140]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	3301      	adds	r3, #1
 80006b0:	4a21      	ldr	r2, [pc, #132]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80006b2:	6013      	str	r3, [r2, #0]
			displayCountdown(newYelTime);
 80006b4:	4b20      	ldr	r3, [pc, #128]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	4618      	mov	r0, r3
 80006ba:	f001 f8d5 	bl	8001868 <displayCountdown>
 80006be:	e010      	b.n	80006e2 <fsm_multi_mode_run+0x496>
		}
		else if(isButtonPressed(BUTTON_3)) {
 80006c0:	2003      	movs	r0, #3
 80006c2:	f000 faf3 	bl	8000cac <isButtonPressed>
 80006c6:	4603      	mov	r3, r0
 80006c8:	2b00      	cmp	r3, #0
 80006ca:	d00a      	beq.n	80006e2 <fsm_multi_mode_run+0x496>
			yelTime = newYelTime;
 80006cc:	4b1a      	ldr	r3, [pc, #104]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	4a18      	ldr	r2, [pc, #96]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 80006d2:	6013      	str	r3, [r2, #0]
			redTime = grnTime + yelTime;
 80006d4:	4b14      	ldr	r3, [pc, #80]	; (8000728 <fsm_multi_mode_run+0x4dc>)
 80006d6:	681a      	ldr	r2, [r3, #0]
 80006d8:	4b16      	ldr	r3, [pc, #88]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	4413      	add	r3, r2
 80006de:	4a17      	ldr	r2, [pc, #92]	; (800073c <fsm_multi_mode_run+0x4f0>)
 80006e0:	6013      	str	r3, [r2, #0]
		}

		if(timer1_flag == 1) {
 80006e2:	4b0f      	ldr	r3, [pc, #60]	; (8000720 <fsm_multi_mode_run+0x4d4>)
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	2b01      	cmp	r3, #1
 80006e8:	d115      	bne.n	8000716 <fsm_multi_mode_run+0x4ca>
			setTimer1(LED_BLINK);
 80006ea:	2064      	movs	r0, #100	; 0x64
 80006ec:	f000 fd94 	bl	8001218 <setTimer1>
			trafficLightBlinkYel(TRAFFIC_LIGHT_1);
 80006f0:	2000      	movs	r0, #0
 80006f2:	f001 f821 	bl	8001738 <trafficLightBlinkYel>
			trafficLightBlinkYel(TRAFFIC_LIGHT_2);
 80006f6:	2001      	movs	r0, #1
 80006f8:	f001 f81e 	bl	8001738 <trafficLightBlinkYel>
		}
		break;
 80006fc:	e00b      	b.n	8000716 <fsm_multi_mode_run+0x4ca>

	default: break;
 80006fe:	bf00      	nop
 8000700:	e00a      	b.n	8000718 <fsm_multi_mode_run+0x4cc>
		break;
 8000702:	bf00      	nop
 8000704:	e008      	b.n	8000718 <fsm_multi_mode_run+0x4cc>
		break;
 8000706:	bf00      	nop
 8000708:	e006      	b.n	8000718 <fsm_multi_mode_run+0x4cc>
		break;
 800070a:	bf00      	nop
 800070c:	e004      	b.n	8000718 <fsm_multi_mode_run+0x4cc>
		break;
 800070e:	bf00      	nop
 8000710:	e002      	b.n	8000718 <fsm_multi_mode_run+0x4cc>
		break;
 8000712:	bf00      	nop
 8000714:	e000      	b.n	8000718 <fsm_multi_mode_run+0x4cc>
		break;
 8000716:	bf00      	nop
	}
}
 8000718:	bf00      	nop
 800071a:	bd80      	pop	{r7, pc}
 800071c:	200002d0 	.word	0x200002d0
 8000720:	2000070c 	.word	0x2000070c
 8000724:	200003c4 	.word	0x200003c4
 8000728:	200002cc 	.word	0x200002cc
 800072c:	200003c0 	.word	0x200003c0
 8000730:	200003b4 	.word	0x200003b4
 8000734:	200002c8 	.word	0x200002c8
 8000738:	200003b8 	.word	0x200003b8
 800073c:	200002c4 	.word	0x200002c4

08000740 <fsm_for_pedestrian>:

#include "fsm_for_pedestrian.h"

int timeOut;

void fsm_for_pedestrian(void) {
 8000740:	b580      	push	{r7, lr}
 8000742:	af00      	add	r7, sp, #0
	switch(pedestrianStatus) {
 8000744:	4b82      	ldr	r3, [pc, #520]	; (8000950 <fsm_for_pedestrian+0x210>)
 8000746:	781b      	ldrb	r3, [r3, #0]
 8000748:	2b02      	cmp	r3, #2
 800074a:	f000 80a0 	beq.w	800088e <fsm_for_pedestrian+0x14e>
 800074e:	2b02      	cmp	r3, #2
 8000750:	f300 80fc 	bgt.w	800094c <fsm_for_pedestrian+0x20c>
 8000754:	2b00      	cmp	r3, #0
 8000756:	d002      	beq.n	800075e <fsm_for_pedestrian+0x1e>
 8000758:	2b01      	cmp	r3, #1
 800075a:	d03e      	beq.n	80007da <fsm_for_pedestrian+0x9a>
			}
		}

		break;
	}
}
 800075c:	e0f6      	b.n	800094c <fsm_for_pedestrian+0x20c>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 800075e:	2000      	movs	r0, #0
 8000760:	f000 faa4 	bl	8000cac <isButtonPressed>
 8000764:	4603      	mov	r3, r0
 8000766:	2b00      	cmp	r3, #0
 8000768:	f000 80eb 	beq.w	8000942 <fsm_for_pedestrian+0x202>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 800076c:	4b79      	ldr	r3, [pc, #484]	; (8000954 <fsm_for_pedestrian+0x214>)
 800076e:	681a      	ldr	r2, [r3, #0]
 8000770:	4b79      	ldr	r3, [pc, #484]	; (8000958 <fsm_for_pedestrian+0x218>)
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	441a      	add	r2, r3
 8000776:	4b79      	ldr	r3, [pc, #484]	; (800095c <fsm_for_pedestrian+0x21c>)
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	4413      	add	r3, r2
 800077c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000780:	fb02 f303 	mul.w	r3, r2, r3
 8000784:	4a76      	ldr	r2, [pc, #472]	; (8000960 <fsm_for_pedestrian+0x220>)
 8000786:	6013      	str	r3, [r2, #0]
			setTimer2(timeOut);
 8000788:	4b75      	ldr	r3, [pc, #468]	; (8000960 <fsm_for_pedestrian+0x220>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	4618      	mov	r0, r3
 800078e:	f000 fd5f 	bl	8001250 <setTimer2>
			setTimer3(TIMER_INIT);
 8000792:	200a      	movs	r0, #10
 8000794:	f000 fd78 	bl	8001288 <setTimer3>
			if(sysStatus == RED__GRN || sysStatus == RED__YEL) {
 8000798:	4b72      	ldr	r3, [pc, #456]	; (8000964 <fsm_for_pedestrian+0x224>)
 800079a:	781b      	ldrb	r3, [r3, #0]
 800079c:	2b01      	cmp	r3, #1
 800079e:	d003      	beq.n	80007a8 <fsm_for_pedestrian+0x68>
 80007a0:	4b70      	ldr	r3, [pc, #448]	; (8000964 <fsm_for_pedestrian+0x224>)
 80007a2:	781b      	ldrb	r3, [r3, #0]
 80007a4:	2b02      	cmp	r3, #2
 80007a6:	d107      	bne.n	80007b8 <fsm_for_pedestrian+0x78>
				pedestrianStatus = GRN;
 80007a8:	4b69      	ldr	r3, [pc, #420]	; (8000950 <fsm_for_pedestrian+0x210>)
 80007aa:	2201      	movs	r2, #1
 80007ac:	701a      	strb	r2, [r3, #0]
				pedestrianLightGrn();
 80007ae:	f000 fb57 	bl	8000e60 <pedestrianLightGrn>
				grnBuzzer();
 80007b2:	f7ff fccb 	bl	800014c <grnBuzzer>
		break;
 80007b6:	e0c4      	b.n	8000942 <fsm_for_pedestrian+0x202>
			else if(sysStatus == GRN__RED || sysStatus == YEL__RED) {
 80007b8:	4b6a      	ldr	r3, [pc, #424]	; (8000964 <fsm_for_pedestrian+0x224>)
 80007ba:	781b      	ldrb	r3, [r3, #0]
 80007bc:	2b03      	cmp	r3, #3
 80007be:	d004      	beq.n	80007ca <fsm_for_pedestrian+0x8a>
 80007c0:	4b68      	ldr	r3, [pc, #416]	; (8000964 <fsm_for_pedestrian+0x224>)
 80007c2:	781b      	ldrb	r3, [r3, #0]
 80007c4:	2b04      	cmp	r3, #4
 80007c6:	f040 80bc 	bne.w	8000942 <fsm_for_pedestrian+0x202>
				pedestrianStatus = RED;
 80007ca:	4b61      	ldr	r3, [pc, #388]	; (8000950 <fsm_for_pedestrian+0x210>)
 80007cc:	2202      	movs	r2, #2
 80007ce:	701a      	strb	r2, [r3, #0]
				pedestrianLightRed();
 80007d0:	f000 fb5e 	bl	8000e90 <pedestrianLightRed>
				redBuzzer();
 80007d4:	f7ff fcf4 	bl	80001c0 <redBuzzer>
		break;
 80007d8:	e0b3      	b.n	8000942 <fsm_for_pedestrian+0x202>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 80007da:	2000      	movs	r0, #0
 80007dc:	f000 fa66 	bl	8000cac <isButtonPressed>
 80007e0:	4603      	mov	r3, r0
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d012      	beq.n	800080c <fsm_for_pedestrian+0xcc>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 80007e6:	4b5b      	ldr	r3, [pc, #364]	; (8000954 <fsm_for_pedestrian+0x214>)
 80007e8:	681a      	ldr	r2, [r3, #0]
 80007ea:	4b5b      	ldr	r3, [pc, #364]	; (8000958 <fsm_for_pedestrian+0x218>)
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	441a      	add	r2, r3
 80007f0:	4b5a      	ldr	r3, [pc, #360]	; (800095c <fsm_for_pedestrian+0x21c>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	4413      	add	r3, r2
 80007f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80007fa:	fb02 f303 	mul.w	r3, r2, r3
 80007fe:	4a58      	ldr	r2, [pc, #352]	; (8000960 <fsm_for_pedestrian+0x220>)
 8000800:	6013      	str	r3, [r2, #0]
			setTimer2(timeOut);
 8000802:	4b57      	ldr	r3, [pc, #348]	; (8000960 <fsm_for_pedestrian+0x220>)
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	4618      	mov	r0, r3
 8000808:	f000 fd22 	bl	8001250 <setTimer2>
		if(sysStatus == SET_GRN || sysStatus == SET_YEL) {
 800080c:	4b55      	ldr	r3, [pc, #340]	; (8000964 <fsm_for_pedestrian+0x224>)
 800080e:	781b      	ldrb	r3, [r3, #0]
 8000810:	2b06      	cmp	r3, #6
 8000812:	d003      	beq.n	800081c <fsm_for_pedestrian+0xdc>
 8000814:	4b53      	ldr	r3, [pc, #332]	; (8000964 <fsm_for_pedestrian+0x224>)
 8000816:	781b      	ldrb	r3, [r3, #0]
 8000818:	2b05      	cmp	r3, #5
 800081a:	d109      	bne.n	8000830 <fsm_for_pedestrian+0xf0>
			setTimer2(0);
 800081c:	2000      	movs	r0, #0
 800081e:	f000 fd17 	bl	8001250 <setTimer2>
			pedestrianStatus = WAIT;
 8000822:	4b4b      	ldr	r3, [pc, #300]	; (8000950 <fsm_for_pedestrian+0x210>)
 8000824:	2200      	movs	r2, #0
 8000826:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000828:	f000 fb4a 	bl	8000ec0 <pedestrianLightOff>
			stopBuzzer();
 800082c:	f7ff fcfa 	bl	8000224 <stopBuzzer>
		if(timer2_flag == 1) {
 8000830:	4b4d      	ldr	r3, [pc, #308]	; (8000968 <fsm_for_pedestrian+0x228>)
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	2b01      	cmp	r3, #1
 8000836:	d109      	bne.n	800084c <fsm_for_pedestrian+0x10c>
			setTimer2(0);
 8000838:	2000      	movs	r0, #0
 800083a:	f000 fd09 	bl	8001250 <setTimer2>
			pedestrianStatus = WAIT;
 800083e:	4b44      	ldr	r3, [pc, #272]	; (8000950 <fsm_for_pedestrian+0x210>)
 8000840:	2200      	movs	r2, #0
 8000842:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000844:	f000 fb3c 	bl	8000ec0 <pedestrianLightOff>
			stopBuzzer();
 8000848:	f7ff fcec 	bl	8000224 <stopBuzzer>
		if(sysStatus == GRN__RED) {
 800084c:	4b45      	ldr	r3, [pc, #276]	; (8000964 <fsm_for_pedestrian+0x224>)
 800084e:	781b      	ldrb	r3, [r3, #0]
 8000850:	2b03      	cmp	r3, #3
 8000852:	d106      	bne.n	8000862 <fsm_for_pedestrian+0x122>
			pedestrianStatus = RED;
 8000854:	4b3e      	ldr	r3, [pc, #248]	; (8000950 <fsm_for_pedestrian+0x210>)
 8000856:	2202      	movs	r2, #2
 8000858:	701a      	strb	r2, [r3, #0]
			pedestrianLightRed();
 800085a:	f000 fb19 	bl	8000e90 <pedestrianLightRed>
			redBuzzer();
 800085e:	f7ff fcaf 	bl	80001c0 <redBuzzer>
		if(timer3_flag == 1) {
 8000862:	4b42      	ldr	r3, [pc, #264]	; (800096c <fsm_for_pedestrian+0x22c>)
 8000864:	681b      	ldr	r3, [r3, #0]
 8000866:	2b01      	cmp	r3, #1
 8000868:	d16d      	bne.n	8000946 <fsm_for_pedestrian+0x206>
			if(sysStatus == RED__YEL) {
 800086a:	4b3e      	ldr	r3, [pc, #248]	; (8000964 <fsm_for_pedestrian+0x224>)
 800086c:	781b      	ldrb	r3, [r3, #0]
 800086e:	2b02      	cmp	r3, #2
 8000870:	d107      	bne.n	8000882 <fsm_for_pedestrian+0x142>
				setTimer3(LED_BLINK);
 8000872:	2064      	movs	r0, #100	; 0x64
 8000874:	f000 fd08 	bl	8001288 <setTimer3>
				pedestrianLightBlinkGrn();
 8000878:	f000 fac2 	bl	8000e00 <pedestrianLightBlinkGrn>
				grnBuzzer();
 800087c:	f7ff fc66 	bl	800014c <grnBuzzer>
		break;
 8000880:	e061      	b.n	8000946 <fsm_for_pedestrian+0x206>
				setTimer3(200);
 8000882:	20c8      	movs	r0, #200	; 0xc8
 8000884:	f000 fd00 	bl	8001288 <setTimer3>
				grnBuzzer();
 8000888:	f7ff fc60 	bl	800014c <grnBuzzer>
		break;
 800088c:	e05b      	b.n	8000946 <fsm_for_pedestrian+0x206>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 800088e:	2000      	movs	r0, #0
 8000890:	f000 fa0c 	bl	8000cac <isButtonPressed>
 8000894:	4603      	mov	r3, r0
 8000896:	2b00      	cmp	r3, #0
 8000898:	d012      	beq.n	80008c0 <fsm_for_pedestrian+0x180>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 800089a:	4b2e      	ldr	r3, [pc, #184]	; (8000954 <fsm_for_pedestrian+0x214>)
 800089c:	681a      	ldr	r2, [r3, #0]
 800089e:	4b2e      	ldr	r3, [pc, #184]	; (8000958 <fsm_for_pedestrian+0x218>)
 80008a0:	681b      	ldr	r3, [r3, #0]
 80008a2:	441a      	add	r2, r3
 80008a4:	4b2d      	ldr	r3, [pc, #180]	; (800095c <fsm_for_pedestrian+0x21c>)
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	4413      	add	r3, r2
 80008aa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80008ae:	fb02 f303 	mul.w	r3, r2, r3
 80008b2:	4a2b      	ldr	r2, [pc, #172]	; (8000960 <fsm_for_pedestrian+0x220>)
 80008b4:	6013      	str	r3, [r2, #0]
			setTimer2(timeOut);
 80008b6:	4b2a      	ldr	r3, [pc, #168]	; (8000960 <fsm_for_pedestrian+0x220>)
 80008b8:	681b      	ldr	r3, [r3, #0]
 80008ba:	4618      	mov	r0, r3
 80008bc:	f000 fcc8 	bl	8001250 <setTimer2>
		if(sysStatus == SET_GRN || sysStatus == SET_YEL) {
 80008c0:	4b28      	ldr	r3, [pc, #160]	; (8000964 <fsm_for_pedestrian+0x224>)
 80008c2:	781b      	ldrb	r3, [r3, #0]
 80008c4:	2b06      	cmp	r3, #6
 80008c6:	d003      	beq.n	80008d0 <fsm_for_pedestrian+0x190>
 80008c8:	4b26      	ldr	r3, [pc, #152]	; (8000964 <fsm_for_pedestrian+0x224>)
 80008ca:	781b      	ldrb	r3, [r3, #0]
 80008cc:	2b05      	cmp	r3, #5
 80008ce:	d109      	bne.n	80008e4 <fsm_for_pedestrian+0x1a4>
			setTimer2(0);
 80008d0:	2000      	movs	r0, #0
 80008d2:	f000 fcbd 	bl	8001250 <setTimer2>
			pedestrianStatus = WAIT;
 80008d6:	4b1e      	ldr	r3, [pc, #120]	; (8000950 <fsm_for_pedestrian+0x210>)
 80008d8:	2200      	movs	r2, #0
 80008da:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 80008dc:	f000 faf0 	bl	8000ec0 <pedestrianLightOff>
			stopBuzzer();
 80008e0:	f7ff fca0 	bl	8000224 <stopBuzzer>
		if(timer2_flag == 1) {
 80008e4:	4b20      	ldr	r3, [pc, #128]	; (8000968 <fsm_for_pedestrian+0x228>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	2b01      	cmp	r3, #1
 80008ea:	d109      	bne.n	8000900 <fsm_for_pedestrian+0x1c0>
			setTimer2(0);
 80008ec:	2000      	movs	r0, #0
 80008ee:	f000 fcaf 	bl	8001250 <setTimer2>
			pedestrianStatus = WAIT;
 80008f2:	4b17      	ldr	r3, [pc, #92]	; (8000950 <fsm_for_pedestrian+0x210>)
 80008f4:	2200      	movs	r2, #0
 80008f6:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 80008f8:	f000 fae2 	bl	8000ec0 <pedestrianLightOff>
			stopBuzzer();
 80008fc:	f7ff fc92 	bl	8000224 <stopBuzzer>
		if(sysStatus == RED__GRN) {
 8000900:	4b18      	ldr	r3, [pc, #96]	; (8000964 <fsm_for_pedestrian+0x224>)
 8000902:	781b      	ldrb	r3, [r3, #0]
 8000904:	2b01      	cmp	r3, #1
 8000906:	d106      	bne.n	8000916 <fsm_for_pedestrian+0x1d6>
			pedestrianStatus = GRN;
 8000908:	4b11      	ldr	r3, [pc, #68]	; (8000950 <fsm_for_pedestrian+0x210>)
 800090a:	2201      	movs	r2, #1
 800090c:	701a      	strb	r2, [r3, #0]
			pedestrianLightGrn();
 800090e:	f000 faa7 	bl	8000e60 <pedestrianLightGrn>
			grnBuzzer();
 8000912:	f7ff fc1b 	bl	800014c <grnBuzzer>
		if(timer3_flag == 1) {
 8000916:	4b15      	ldr	r3, [pc, #84]	; (800096c <fsm_for_pedestrian+0x22c>)
 8000918:	681b      	ldr	r3, [r3, #0]
 800091a:	2b01      	cmp	r3, #1
 800091c:	d115      	bne.n	800094a <fsm_for_pedestrian+0x20a>
			if(sysStatus == YEL__RED) {
 800091e:	4b11      	ldr	r3, [pc, #68]	; (8000964 <fsm_for_pedestrian+0x224>)
 8000920:	781b      	ldrb	r3, [r3, #0]
 8000922:	2b04      	cmp	r3, #4
 8000924:	d107      	bne.n	8000936 <fsm_for_pedestrian+0x1f6>
				setTimer3(LED_BLINK);
 8000926:	2064      	movs	r0, #100	; 0x64
 8000928:	f000 fcae 	bl	8001288 <setTimer3>
				pedestrianLightBlinkRed();
 800092c:	f000 fa80 	bl	8000e30 <pedestrianLightBlinkRed>
				redBuzzer();
 8000930:	f7ff fc46 	bl	80001c0 <redBuzzer>
		break;
 8000934:	e009      	b.n	800094a <fsm_for_pedestrian+0x20a>
				setTimer3(200);
 8000936:	20c8      	movs	r0, #200	; 0xc8
 8000938:	f000 fca6 	bl	8001288 <setTimer3>
				redBuzzer();
 800093c:	f7ff fc40 	bl	80001c0 <redBuzzer>
		break;
 8000940:	e003      	b.n	800094a <fsm_for_pedestrian+0x20a>
		break;
 8000942:	bf00      	nop
 8000944:	e002      	b.n	800094c <fsm_for_pedestrian+0x20c>
		break;
 8000946:	bf00      	nop
 8000948:	e000      	b.n	800094c <fsm_for_pedestrian+0x20c>
		break;
 800094a:	bf00      	nop
}
 800094c:	bf00      	nop
 800094e:	bd80      	pop	{r7, pc}
 8000950:	200003c1 	.word	0x200003c1
 8000954:	200002c4 	.word	0x200002c4
 8000958:	200002c8 	.word	0x200002c8
 800095c:	200002cc 	.word	0x200002cc
 8000960:	200003bc 	.word	0x200003bc
 8000964:	200003c0 	.word	0x200003c0
 8000968:	20000714 	.word	0x20000714
 800096c:	2000071c 	.word	0x2000071c

08000970 <MX_GPIO_Init>:
 8000970:	b580      	push	{r7, lr}
 8000972:	b088      	sub	sp, #32
 8000974:	af00      	add	r7, sp, #0
 8000976:	f107 0310 	add.w	r3, r7, #16
 800097a:	2200      	movs	r2, #0
 800097c:	601a      	str	r2, [r3, #0]
 800097e:	605a      	str	r2, [r3, #4]
 8000980:	609a      	str	r2, [r3, #8]
 8000982:	60da      	str	r2, [r3, #12]
 8000984:	4b45      	ldr	r3, [pc, #276]	; (8000a9c <MX_GPIO_Init+0x12c>)
 8000986:	699b      	ldr	r3, [r3, #24]
 8000988:	4a44      	ldr	r2, [pc, #272]	; (8000a9c <MX_GPIO_Init+0x12c>)
 800098a:	f043 0310 	orr.w	r3, r3, #16
 800098e:	6193      	str	r3, [r2, #24]
 8000990:	4b42      	ldr	r3, [pc, #264]	; (8000a9c <MX_GPIO_Init+0x12c>)
 8000992:	699b      	ldr	r3, [r3, #24]
 8000994:	f003 0310 	and.w	r3, r3, #16
 8000998:	60fb      	str	r3, [r7, #12]
 800099a:	68fb      	ldr	r3, [r7, #12]
 800099c:	4b3f      	ldr	r3, [pc, #252]	; (8000a9c <MX_GPIO_Init+0x12c>)
 800099e:	699b      	ldr	r3, [r3, #24]
 80009a0:	4a3e      	ldr	r2, [pc, #248]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009a2:	f043 0320 	orr.w	r3, r3, #32
 80009a6:	6193      	str	r3, [r2, #24]
 80009a8:	4b3c      	ldr	r3, [pc, #240]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009aa:	699b      	ldr	r3, [r3, #24]
 80009ac:	f003 0320 	and.w	r3, r3, #32
 80009b0:	60bb      	str	r3, [r7, #8]
 80009b2:	68bb      	ldr	r3, [r7, #8]
 80009b4:	4b39      	ldr	r3, [pc, #228]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009b6:	699b      	ldr	r3, [r3, #24]
 80009b8:	4a38      	ldr	r2, [pc, #224]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009ba:	f043 0304 	orr.w	r3, r3, #4
 80009be:	6193      	str	r3, [r2, #24]
 80009c0:	4b36      	ldr	r3, [pc, #216]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009c2:	699b      	ldr	r3, [r3, #24]
 80009c4:	f003 0304 	and.w	r3, r3, #4
 80009c8:	607b      	str	r3, [r7, #4]
 80009ca:	687b      	ldr	r3, [r7, #4]
 80009cc:	4b33      	ldr	r3, [pc, #204]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009ce:	699b      	ldr	r3, [r3, #24]
 80009d0:	4a32      	ldr	r2, [pc, #200]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009d2:	f043 0308 	orr.w	r3, r3, #8
 80009d6:	6193      	str	r3, [r2, #24]
 80009d8:	4b30      	ldr	r3, [pc, #192]	; (8000a9c <MX_GPIO_Init+0x12c>)
 80009da:	699b      	ldr	r3, [r3, #24]
 80009dc:	f003 0308 	and.w	r3, r3, #8
 80009e0:	603b      	str	r3, [r7, #0]
 80009e2:	683b      	ldr	r3, [r7, #0]
 80009e4:	2200      	movs	r2, #0
 80009e6:	f44f 61a4 	mov.w	r1, #1312	; 0x520
 80009ea:	482d      	ldr	r0, [pc, #180]	; (8000aa0 <MX_GPIO_Init+0x130>)
 80009ec:	f001 faf1 	bl	8001fd2 <HAL_GPIO_WritePin>
 80009f0:	2200      	movs	r2, #0
 80009f2:	f44f 6187 	mov.w	r1, #1080	; 0x438
 80009f6:	482b      	ldr	r0, [pc, #172]	; (8000aa4 <MX_GPIO_Init+0x134>)
 80009f8:	f001 faeb 	bl	8001fd2 <HAL_GPIO_WritePin>
 80009fc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000a00:	613b      	str	r3, [r7, #16]
 8000a02:	4b29      	ldr	r3, [pc, #164]	; (8000aa8 <MX_GPIO_Init+0x138>)
 8000a04:	617b      	str	r3, [r7, #20]
 8000a06:	2300      	movs	r3, #0
 8000a08:	61bb      	str	r3, [r7, #24]
 8000a0a:	f107 0310 	add.w	r3, r7, #16
 8000a0e:	4619      	mov	r1, r3
 8000a10:	4826      	ldr	r0, [pc, #152]	; (8000aac <MX_GPIO_Init+0x13c>)
 8000a12:	f001 f943 	bl	8001c9c <HAL_GPIO_Init>
 8000a16:	2313      	movs	r3, #19
 8000a18:	613b      	str	r3, [r7, #16]
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	617b      	str	r3, [r7, #20]
 8000a1e:	2300      	movs	r3, #0
 8000a20:	61bb      	str	r3, [r7, #24]
 8000a22:	f107 0310 	add.w	r3, r7, #16
 8000a26:	4619      	mov	r1, r3
 8000a28:	481d      	ldr	r0, [pc, #116]	; (8000aa0 <MX_GPIO_Init+0x130>)
 8000a2a:	f001 f937 	bl	8001c9c <HAL_GPIO_Init>
 8000a2e:	f44f 63a4 	mov.w	r3, #1312	; 0x520
 8000a32:	613b      	str	r3, [r7, #16]
 8000a34:	2301      	movs	r3, #1
 8000a36:	617b      	str	r3, [r7, #20]
 8000a38:	2300      	movs	r3, #0
 8000a3a:	61bb      	str	r3, [r7, #24]
 8000a3c:	2302      	movs	r3, #2
 8000a3e:	61fb      	str	r3, [r7, #28]
 8000a40:	f107 0310 	add.w	r3, r7, #16
 8000a44:	4619      	mov	r1, r3
 8000a46:	4816      	ldr	r0, [pc, #88]	; (8000aa0 <MX_GPIO_Init+0x130>)
 8000a48:	f001 f928 	bl	8001c9c <HAL_GPIO_Init>
 8000a4c:	2301      	movs	r3, #1
 8000a4e:	613b      	str	r3, [r7, #16]
 8000a50:	2300      	movs	r3, #0
 8000a52:	617b      	str	r3, [r7, #20]
 8000a54:	2300      	movs	r3, #0
 8000a56:	61bb      	str	r3, [r7, #24]
 8000a58:	f107 0310 	add.w	r3, r7, #16
 8000a5c:	4619      	mov	r1, r3
 8000a5e:	4811      	ldr	r0, [pc, #68]	; (8000aa4 <MX_GPIO_Init+0x134>)
 8000a60:	f001 f91c 	bl	8001c9c <HAL_GPIO_Init>
 8000a64:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000a68:	613b      	str	r3, [r7, #16]
 8000a6a:	2301      	movs	r3, #1
 8000a6c:	617b      	str	r3, [r7, #20]
 8000a6e:	2300      	movs	r3, #0
 8000a70:	61bb      	str	r3, [r7, #24]
 8000a72:	2302      	movs	r3, #2
 8000a74:	61fb      	str	r3, [r7, #28]
 8000a76:	f107 0310 	add.w	r3, r7, #16
 8000a7a:	4619      	mov	r1, r3
 8000a7c:	4809      	ldr	r0, [pc, #36]	; (8000aa4 <MX_GPIO_Init+0x134>)
 8000a7e:	f001 f90d 	bl	8001c9c <HAL_GPIO_Init>
 8000a82:	2200      	movs	r2, #0
 8000a84:	2100      	movs	r1, #0
 8000a86:	2028      	movs	r0, #40	; 0x28
 8000a88:	f001 f8d1 	bl	8001c2e <HAL_NVIC_SetPriority>
 8000a8c:	2028      	movs	r0, #40	; 0x28
 8000a8e:	f001 f8ea 	bl	8001c66 <HAL_NVIC_EnableIRQ>
 8000a92:	bf00      	nop
 8000a94:	3720      	adds	r7, #32
 8000a96:	46bd      	mov	sp, r7
 8000a98:	bd80      	pop	{r7, pc}
 8000a9a:	bf00      	nop
 8000a9c:	40021000 	.word	0x40021000
 8000aa0:	40010800 	.word	0x40010800
 8000aa4:	40010c00 	.word	0x40010c00
 8000aa8:	10110000 	.word	0x10110000
 8000aac:	40011000 	.word	0x40011000

08000ab0 <buttonRead>:
//we define counter for automatically increasing the value
//after the button is pressed more than 1 second.
static uint16_t counterForButtonHold[NO_OF_BUTTONS] = {0, 0, 0, 0};
static uint16_t counterForButtonDoublePressed[NO_OF_BUTTONS] = {0, 0, 0, 0};

void buttonRead(void){
 8000ab0:	b580      	push	{r7, lr}
 8000ab2:	b082      	sub	sp, #8
 8000ab4:	af00      	add	r7, sp, #0
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	607b      	str	r3, [r7, #4]
 8000aba:	e0d5      	b.n	8000c68 <buttonRead+0x1b8>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000abc:	4a6f      	ldr	r2, [pc, #444]	; (8000c7c <buttonRead+0x1cc>)
 8000abe:	687b      	ldr	r3, [r7, #4]
 8000ac0:	4413      	add	r3, r2
 8000ac2:	7819      	ldrb	r1, [r3, #0]
 8000ac4:	4a6e      	ldr	r2, [pc, #440]	; (8000c80 <buttonRead+0x1d0>)
 8000ac6:	687b      	ldr	r3, [r7, #4]
 8000ac8:	4413      	add	r3, r2
 8000aca:	460a      	mov	r2, r1
 8000acc:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 8000ace:	4a6d      	ldr	r2, [pc, #436]	; (8000c84 <buttonRead+0x1d4>)
 8000ad0:	687b      	ldr	r3, [r7, #4]
 8000ad2:	4413      	add	r3, r2
 8000ad4:	7819      	ldrb	r1, [r3, #0]
 8000ad6:	4a69      	ldr	r2, [pc, #420]	; (8000c7c <buttonRead+0x1cc>)
 8000ad8:	687b      	ldr	r3, [r7, #4]
 8000ada:	4413      	add	r3, r2
 8000adc:	460a      	mov	r2, r1
 8000ade:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(buttonPort[i], buttonPin[i]);
 8000ae0:	4a69      	ldr	r2, [pc, #420]	; (8000c88 <buttonRead+0x1d8>)
 8000ae2:	687b      	ldr	r3, [r7, #4]
 8000ae4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000ae8:	4968      	ldr	r1, [pc, #416]	; (8000c8c <buttonRead+0x1dc>)
 8000aea:	687b      	ldr	r3, [r7, #4]
 8000aec:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000af0:	4619      	mov	r1, r3
 8000af2:	4610      	mov	r0, r2
 8000af4:	f001 fa56 	bl	8001fa4 <HAL_GPIO_ReadPin>
 8000af8:	4603      	mov	r3, r0
 8000afa:	4619      	mov	r1, r3
 8000afc:	4a61      	ldr	r2, [pc, #388]	; (8000c84 <buttonRead+0x1d4>)
 8000afe:	687b      	ldr	r3, [r7, #4]
 8000b00:	4413      	add	r3, r2
 8000b02:	460a      	mov	r2, r1
 8000b04:	701a      	strb	r2, [r3, #0]
		if((debounceButtonBuffer2[i] == debounceButtonBuffer1[i]) && (debounceButtonBuffer1[i] == debounceButtonBuffer0[i])) {
 8000b06:	4a5e      	ldr	r2, [pc, #376]	; (8000c80 <buttonRead+0x1d0>)
 8000b08:	687b      	ldr	r3, [r7, #4]
 8000b0a:	4413      	add	r3, r2
 8000b0c:	781a      	ldrb	r2, [r3, #0]
 8000b0e:	495b      	ldr	r1, [pc, #364]	; (8000c7c <buttonRead+0x1cc>)
 8000b10:	687b      	ldr	r3, [r7, #4]
 8000b12:	440b      	add	r3, r1
 8000b14:	781b      	ldrb	r3, [r3, #0]
 8000b16:	429a      	cmp	r2, r3
 8000b18:	f040 80a3 	bne.w	8000c62 <buttonRead+0x1b2>
 8000b1c:	4a57      	ldr	r2, [pc, #348]	; (8000c7c <buttonRead+0x1cc>)
 8000b1e:	687b      	ldr	r3, [r7, #4]
 8000b20:	4413      	add	r3, r2
 8000b22:	781a      	ldrb	r2, [r3, #0]
 8000b24:	4957      	ldr	r1, [pc, #348]	; (8000c84 <buttonRead+0x1d4>)
 8000b26:	687b      	ldr	r3, [r7, #4]
 8000b28:	440b      	add	r3, r1
 8000b2a:	781b      	ldrb	r3, [r3, #0]
 8000b2c:	429a      	cmp	r2, r3
 8000b2e:	f040 8098 	bne.w	8000c62 <buttonRead+0x1b2>
			if(buttonBuffer[i] != debounceButtonBuffer0[i]) {
 8000b32:	4a57      	ldr	r2, [pc, #348]	; (8000c90 <buttonRead+0x1e0>)
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	4413      	add	r3, r2
 8000b38:	781a      	ldrb	r2, [r3, #0]
 8000b3a:	4952      	ldr	r1, [pc, #328]	; (8000c84 <buttonRead+0x1d4>)
 8000b3c:	687b      	ldr	r3, [r7, #4]
 8000b3e:	440b      	add	r3, r1
 8000b40:	781b      	ldrb	r3, [r3, #0]
 8000b42:	429a      	cmp	r2, r3
 8000b44:	d050      	beq.n	8000be8 <buttonRead+0x138>
				buttonBuffer[i] = debounceButtonBuffer0[i];
 8000b46:	4a4f      	ldr	r2, [pc, #316]	; (8000c84 <buttonRead+0x1d4>)
 8000b48:	687b      	ldr	r3, [r7, #4]
 8000b4a:	4413      	add	r3, r2
 8000b4c:	7819      	ldrb	r1, [r3, #0]
 8000b4e:	4a50      	ldr	r2, [pc, #320]	; (8000c90 <buttonRead+0x1e0>)
 8000b50:	687b      	ldr	r3, [r7, #4]
 8000b52:	4413      	add	r3, r2
 8000b54:	460a      	mov	r2, r1
 8000b56:	701a      	strb	r2, [r3, #0]
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000b58:	4a4d      	ldr	r2, [pc, #308]	; (8000c90 <buttonRead+0x1e0>)
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	4413      	add	r3, r2
 8000b5e:	781b      	ldrb	r3, [r3, #0]
 8000b60:	2b00      	cmp	r3, #0
 8000b62:	d131      	bne.n	8000bc8 <buttonRead+0x118>
					counterForButtonHold[i] = DURATION_FOR_BUTTON_HOLD;
 8000b64:	4a4b      	ldr	r2, [pc, #300]	; (8000c94 <buttonRead+0x1e4>)
 8000b66:	687b      	ldr	r3, [r7, #4]
 8000b68:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000b6c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

					if(counterForButtonDoublePressed[i] > 0) flagForButtonDoublePressed[i] = 1;
 8000b70:	4a49      	ldr	r2, [pc, #292]	; (8000c98 <buttonRead+0x1e8>)
 8000b72:	687b      	ldr	r3, [r7, #4]
 8000b74:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	d004      	beq.n	8000b86 <buttonRead+0xd6>
 8000b7c:	4a47      	ldr	r2, [pc, #284]	; (8000c9c <buttonRead+0x1ec>)
 8000b7e:	687b      	ldr	r3, [r7, #4]
 8000b80:	4413      	add	r3, r2
 8000b82:	2201      	movs	r2, #1
 8000b84:	701a      	strb	r2, [r3, #0]

					counterForButtonDoublePressed[i] = WAIT_FOR_DOUBLE_PRESS;
 8000b86:	4a44      	ldr	r2, [pc, #272]	; (8000c98 <buttonRead+0x1e8>)
 8000b88:	687b      	ldr	r3, [r7, #4]
 8000b8a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000b8e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

					if(SYSTEM_DELAY > 0) {
						counterForButtonHold[i] /= SYSTEM_DELAY;
 8000b92:	4a40      	ldr	r2, [pc, #256]	; (8000c94 <buttonRead+0x1e4>)
 8000b94:	687b      	ldr	r3, [r7, #4]
 8000b96:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b9a:	4a41      	ldr	r2, [pc, #260]	; (8000ca0 <buttonRead+0x1f0>)
 8000b9c:	fba2 2303 	umull	r2, r3, r2, r3
 8000ba0:	08db      	lsrs	r3, r3, #3
 8000ba2:	b299      	uxth	r1, r3
 8000ba4:	4a3b      	ldr	r2, [pc, #236]	; (8000c94 <buttonRead+0x1e4>)
 8000ba6:	687b      	ldr	r3, [r7, #4]
 8000ba8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
						counterForButtonDoublePressed[i] /= SYSTEM_DELAY;
 8000bac:	4a3a      	ldr	r2, [pc, #232]	; (8000c98 <buttonRead+0x1e8>)
 8000bae:	687b      	ldr	r3, [r7, #4]
 8000bb0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000bb4:	4a3a      	ldr	r2, [pc, #232]	; (8000ca0 <buttonRead+0x1f0>)
 8000bb6:	fba2 2303 	umull	r2, r3, r2, r3
 8000bba:	08db      	lsrs	r3, r3, #3
 8000bbc:	b299      	uxth	r1, r3
 8000bbe:	4a36      	ldr	r2, [pc, #216]	; (8000c98 <buttonRead+0x1e8>)
 8000bc0:	687b      	ldr	r3, [r7, #4]
 8000bc2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000bc6:	e04c      	b.n	8000c62 <buttonRead+0x1b2>
					}
				}
				else {
					flagForButtonHold[i] = 0;
 8000bc8:	4a36      	ldr	r2, [pc, #216]	; (8000ca4 <buttonRead+0x1f4>)
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	4413      	add	r3, r2
 8000bce:	2200      	movs	r2, #0
 8000bd0:	701a      	strb	r2, [r3, #0]
					counterForButtonDoublePressed[i]--;
 8000bd2:	4a31      	ldr	r2, [pc, #196]	; (8000c98 <buttonRead+0x1e8>)
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000bda:	3b01      	subs	r3, #1
 8000bdc:	b299      	uxth	r1, r3
 8000bde:	4a2e      	ldr	r2, [pc, #184]	; (8000c98 <buttonRead+0x1e8>)
 8000be0:	687b      	ldr	r3, [r7, #4]
 8000be2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000be6:	e03c      	b.n	8000c62 <buttonRead+0x1b2>
				}
			}
			else {
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000be8:	4a29      	ldr	r2, [pc, #164]	; (8000c90 <buttonRead+0x1e0>)
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	4413      	add	r3, r2
 8000bee:	781b      	ldrb	r3, [r3, #0]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d11b      	bne.n	8000c2c <buttonRead+0x17c>
					if(counterForButtonHold[i] > 0) {
 8000bf4:	4a27      	ldr	r2, [pc, #156]	; (8000c94 <buttonRead+0x1e4>)
 8000bf6:	687b      	ldr	r3, [r7, #4]
 8000bf8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d030      	beq.n	8000c62 <buttonRead+0x1b2>
						counterForButtonHold[i]--;
 8000c00:	4a24      	ldr	r2, [pc, #144]	; (8000c94 <buttonRead+0x1e4>)
 8000c02:	687b      	ldr	r3, [r7, #4]
 8000c04:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c08:	3b01      	subs	r3, #1
 8000c0a:	b299      	uxth	r1, r3
 8000c0c:	4a21      	ldr	r2, [pc, #132]	; (8000c94 <buttonRead+0x1e4>)
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
						if(counterForButtonHold[i] == 0) flagForButtonHold[i] = 1;
 8000c14:	4a1f      	ldr	r2, [pc, #124]	; (8000c94 <buttonRead+0x1e4>)
 8000c16:	687b      	ldr	r3, [r7, #4]
 8000c18:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	d120      	bne.n	8000c62 <buttonRead+0x1b2>
 8000c20:	4a20      	ldr	r2, [pc, #128]	; (8000ca4 <buttonRead+0x1f4>)
 8000c22:	687b      	ldr	r3, [r7, #4]
 8000c24:	4413      	add	r3, r2
 8000c26:	2201      	movs	r2, #1
 8000c28:	701a      	strb	r2, [r3, #0]
 8000c2a:	e01a      	b.n	8000c62 <buttonRead+0x1b2>
					}
				}
				else {
					if(counterForButtonDoublePressed[i] > 0) {
 8000c2c:	4a1a      	ldr	r2, [pc, #104]	; (8000c98 <buttonRead+0x1e8>)
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d014      	beq.n	8000c62 <buttonRead+0x1b2>
						counterForButtonDoublePressed[i]--;
 8000c38:	4a17      	ldr	r2, [pc, #92]	; (8000c98 <buttonRead+0x1e8>)
 8000c3a:	687b      	ldr	r3, [r7, #4]
 8000c3c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c40:	3b01      	subs	r3, #1
 8000c42:	b299      	uxth	r1, r3
 8000c44:	4a14      	ldr	r2, [pc, #80]	; (8000c98 <buttonRead+0x1e8>)
 8000c46:	687b      	ldr	r3, [r7, #4]
 8000c48:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
						if(counterForButtonDoublePressed[i] == 0) flagForButtonPressed[i] = 1;
 8000c4c:	4a12      	ldr	r2, [pc, #72]	; (8000c98 <buttonRead+0x1e8>)
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d104      	bne.n	8000c62 <buttonRead+0x1b2>
 8000c58:	4a13      	ldr	r2, [pc, #76]	; (8000ca8 <buttonRead+0x1f8>)
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	4413      	add	r3, r2
 8000c5e:	2201      	movs	r2, #1
 8000c60:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000c62:	687b      	ldr	r3, [r7, #4]
 8000c64:	3301      	adds	r3, #1
 8000c66:	607b      	str	r3, [r7, #4]
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	2b03      	cmp	r3, #3
 8000c6c:	f77f af26 	ble.w	8000abc <buttonRead+0xc>
					}
				}
			}
		}
	}
}
 8000c70:	bf00      	nop
 8000c72:	bf00      	nop
 8000c74:	3708      	adds	r7, #8
 8000c76:	46bd      	mov	sp, r7
 8000c78:	bd80      	pop	{r7, pc}
 8000c7a:	bf00      	nop
 8000c7c:	200002f4 	.word	0x200002f4
 8000c80:	200002f8 	.word	0x200002f8
 8000c84:	200002f0 	.word	0x200002f0
 8000c88:	200002d4 	.word	0x200002d4
 8000c8c:	200002e4 	.word	0x200002e4
 8000c90:	200002ec 	.word	0x200002ec
 8000c94:	200003d4 	.word	0x200003d4
 8000c98:	200003dc 	.word	0x200003dc
 8000c9c:	200003d0 	.word	0x200003d0
 8000ca0:	cccccccd 	.word	0xcccccccd
 8000ca4:	200003cc 	.word	0x200003cc
 8000ca8:	200003c8 	.word	0x200003c8

08000cac <isButtonPressed>:

int isButtonPressed(int index) {
 8000cac:	b480      	push	{r7}
 8000cae:	b083      	sub	sp, #12
 8000cb0:	af00      	add	r7, sp, #0
 8000cb2:	6078      	str	r0, [r7, #4]
	if(index < 0 || index > NO_OF_BUTTONS) return 0;
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	db02      	blt.n	8000cc0 <isButtonPressed+0x14>
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	2b04      	cmp	r3, #4
 8000cbe:	dd01      	ble.n	8000cc4 <isButtonPressed+0x18>
 8000cc0:	2300      	movs	r3, #0
 8000cc2:	e00d      	b.n	8000ce0 <isButtonPressed+0x34>
	if(flagForButtonPressed[index] == 1) {
 8000cc4:	4a09      	ldr	r2, [pc, #36]	; (8000cec <isButtonPressed+0x40>)
 8000cc6:	687b      	ldr	r3, [r7, #4]
 8000cc8:	4413      	add	r3, r2
 8000cca:	781b      	ldrb	r3, [r3, #0]
 8000ccc:	2b01      	cmp	r3, #1
 8000cce:	d106      	bne.n	8000cde <isButtonPressed+0x32>
		flagForButtonPressed[index] = 0;
 8000cd0:	4a06      	ldr	r2, [pc, #24]	; (8000cec <isButtonPressed+0x40>)
 8000cd2:	687b      	ldr	r3, [r7, #4]
 8000cd4:	4413      	add	r3, r2
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	701a      	strb	r2, [r3, #0]
		return 1;
 8000cda:	2301      	movs	r3, #1
 8000cdc:	e000      	b.n	8000ce0 <isButtonPressed+0x34>
	}
	return 0;
 8000cde:	2300      	movs	r3, #0
}
 8000ce0:	4618      	mov	r0, r3
 8000ce2:	370c      	adds	r7, #12
 8000ce4:	46bd      	mov	sp, r7
 8000ce6:	bc80      	pop	{r7}
 8000ce8:	4770      	bx	lr
 8000cea:	bf00      	nop
 8000cec:	200003c8 	.word	0x200003c8

08000cf0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000cf0:	b580      	push	{r7, lr}
 8000cf2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000cf4:	f000 fe62 	bl	80019bc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000cf8:	f000 f832 	bl	8000d60 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000cfc:	f7ff fe38 	bl	8000970 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000d00:	f000 fdce 	bl	80018a0 <MX_USART2_UART_Init>
  MX_TIM3_Init();
 8000d04:	f000 fc12 	bl	800152c <MX_TIM3_Init>
  MX_TIM2_Init();
 8000d08:	f000 fbc4 	bl	8001494 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000d0c:	480e      	ldr	r0, [pc, #56]	; (8000d48 <main+0x58>)
 8000d0e:	f001 fe1d 	bl	800294c <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000d12:	2100      	movs	r1, #0
 8000d14:	480d      	ldr	r0, [pc, #52]	; (8000d4c <main+0x5c>)
 8000d16:	f001 fec3 	bl	8002aa0 <HAL_TIM_PWM_Start>

  SCH_Add_Task(&timerRun, 0, 10);
 8000d1a:	220a      	movs	r2, #10
 8000d1c:	2100      	movs	r1, #0
 8000d1e:	480c      	ldr	r0, [pc, #48]	; (8000d50 <main+0x60>)
 8000d20:	f000 f8e6 	bl	8000ef0 <SCH_Add_Task>
  SCH_Add_Task(&buttonRead, 10, 10);
 8000d24:	220a      	movs	r2, #10
 8000d26:	210a      	movs	r1, #10
 8000d28:	480a      	ldr	r0, [pc, #40]	; (8000d54 <main+0x64>)
 8000d2a:	f000 f8e1 	bl	8000ef0 <SCH_Add_Task>
  SCH_Add_Task(&fsm_multi_mode_run, 20, 10);
 8000d2e:	220a      	movs	r2, #10
 8000d30:	2114      	movs	r1, #20
 8000d32:	4809      	ldr	r0, [pc, #36]	; (8000d58 <main+0x68>)
 8000d34:	f000 f8dc 	bl	8000ef0 <SCH_Add_Task>
  SCH_Add_Task(&fsm_for_pedestrian, 30, 10);
 8000d38:	220a      	movs	r2, #10
 8000d3a:	211e      	movs	r1, #30
 8000d3c:	4807      	ldr	r0, [pc, #28]	; (8000d5c <main+0x6c>)
 8000d3e:	f000 f8d7 	bl	8000ef0 <SCH_Add_Task>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	SCH_Dispatch_Tasks();
 8000d42:	f000 fa2d 	bl	80011a0 <SCH_Dispatch_Tasks>
 8000d46:	e7fc      	b.n	8000d42 <main+0x52>
 8000d48:	20000724 	.word	0x20000724
 8000d4c:	2000076c 	.word	0x2000076c
 8000d50:	080012c1 	.word	0x080012c1
 8000d54:	08000ab1 	.word	0x08000ab1
 8000d58:	0800024d 	.word	0x0800024d
 8000d5c:	08000741 	.word	0x08000741

08000d60 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000d60:	b580      	push	{r7, lr}
 8000d62:	b090      	sub	sp, #64	; 0x40
 8000d64:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000d66:	f107 0318 	add.w	r3, r7, #24
 8000d6a:	2228      	movs	r2, #40	; 0x28
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4618      	mov	r0, r3
 8000d70:	f002 fedc 	bl	8003b2c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000d74:	1d3b      	adds	r3, r7, #4
 8000d76:	2200      	movs	r2, #0
 8000d78:	601a      	str	r2, [r3, #0]
 8000d7a:	605a      	str	r2, [r3, #4]
 8000d7c:	609a      	str	r2, [r3, #8]
 8000d7e:	60da      	str	r2, [r3, #12]
 8000d80:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000d82:	2302      	movs	r3, #2
 8000d84:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000d86:	2301      	movs	r3, #1
 8000d88:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000d8a:	2310      	movs	r3, #16
 8000d8c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000d8e:	2302      	movs	r3, #2
 8000d90:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000d92:	2300      	movs	r3, #0
 8000d94:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000d96:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000d9a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000d9c:	f107 0318 	add.w	r3, r7, #24
 8000da0:	4618      	mov	r0, r3
 8000da2:	f001 f969 	bl	8002078 <HAL_RCC_OscConfig>
 8000da6:	4603      	mov	r3, r0
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	d001      	beq.n	8000db0 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000dac:	f000 f823 	bl	8000df6 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000db0:	230f      	movs	r3, #15
 8000db2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000db4:	2302      	movs	r3, #2
 8000db6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000db8:	2300      	movs	r3, #0
 8000dba:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000dbc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000dc0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000dc6:	1d3b      	adds	r3, r7, #4
 8000dc8:	2102      	movs	r1, #2
 8000dca:	4618      	mov	r0, r3
 8000dcc:	f001 fbd6 	bl	800257c <HAL_RCC_ClockConfig>
 8000dd0:	4603      	mov	r3, r0
 8000dd2:	2b00      	cmp	r3, #0
 8000dd4:	d001      	beq.n	8000dda <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000dd6:	f000 f80e 	bl	8000df6 <Error_Handler>
  }
}
 8000dda:	bf00      	nop
 8000ddc:	3740      	adds	r7, #64	; 0x40
 8000dde:	46bd      	mov	sp, r7
 8000de0:	bd80      	pop	{r7, pc}

08000de2 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
{
 8000de2:	b580      	push	{r7, lr}
 8000de4:	b082      	sub	sp, #8
 8000de6:	af00      	add	r7, sp, #0
 8000de8:	6078      	str	r0, [r7, #4]
	SCH_Update();
 8000dea:	f000 f9fd 	bl	80011e8 <SCH_Update>
}
 8000dee:	bf00      	nop
 8000df0:	3708      	adds	r7, #8
 8000df2:	46bd      	mov	sp, r7
 8000df4:	bd80      	pop	{r7, pc}

08000df6 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000df6:	b480      	push	{r7}
 8000df8:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000dfa:	b672      	cpsid	i
}
 8000dfc:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000dfe:	e7fe      	b.n	8000dfe <Error_Handler+0x8>

08000e00 <pedestrianLightBlinkGrn>:
uint16_t pedestrianLightPin[NUM_OF_PORTS] = {
		D6_Pin,
		D7_Pin
};

void pedestrianLightBlinkGrn(void) {
 8000e00:	b580      	push	{r7, lr}
 8000e02:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT]);
 8000e04:	4b08      	ldr	r3, [pc, #32]	; (8000e28 <pedestrianLightBlinkGrn+0x28>)
 8000e06:	685b      	ldr	r3, [r3, #4]
 8000e08:	4a08      	ldr	r2, [pc, #32]	; (8000e2c <pedestrianLightBlinkGrn+0x2c>)
 8000e0a:	8852      	ldrh	r2, [r2, #2]
 8000e0c:	4611      	mov	r1, r2
 8000e0e:	4618      	mov	r0, r3
 8000e10:	f001 f8f7 	bl	8002002 <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000e14:	4b04      	ldr	r3, [pc, #16]	; (8000e28 <pedestrianLightBlinkGrn+0x28>)
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	4a04      	ldr	r2, [pc, #16]	; (8000e2c <pedestrianLightBlinkGrn+0x2c>)
 8000e1a:	8811      	ldrh	r1, [r2, #0]
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	4618      	mov	r0, r3
 8000e20:	f001 f8d7 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8000e24:	bf00      	nop
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	200002fc 	.word	0x200002fc
 8000e2c:	20000304 	.word	0x20000304

08000e30 <pedestrianLightBlinkRed>:

void pedestrianLightBlinkRed(void) {
 8000e30:	b580      	push	{r7, lr}
 8000e32:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT]);
 8000e34:	4b08      	ldr	r3, [pc, #32]	; (8000e58 <pedestrianLightBlinkRed+0x28>)
 8000e36:	681b      	ldr	r3, [r3, #0]
 8000e38:	4a08      	ldr	r2, [pc, #32]	; (8000e5c <pedestrianLightBlinkRed+0x2c>)
 8000e3a:	8812      	ldrh	r2, [r2, #0]
 8000e3c:	4611      	mov	r1, r2
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f001 f8df 	bl	8002002 <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000e44:	4b04      	ldr	r3, [pc, #16]	; (8000e58 <pedestrianLightBlinkRed+0x28>)
 8000e46:	685b      	ldr	r3, [r3, #4]
 8000e48:	4a04      	ldr	r2, [pc, #16]	; (8000e5c <pedestrianLightBlinkRed+0x2c>)
 8000e4a:	8851      	ldrh	r1, [r2, #2]
 8000e4c:	2200      	movs	r2, #0
 8000e4e:	4618      	mov	r0, r3
 8000e50:	f001 f8bf 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8000e54:	bf00      	nop
 8000e56:	bd80      	pop	{r7, pc}
 8000e58:	200002fc 	.word	0x200002fc
 8000e5c:	20000304 	.word	0x20000304

08000e60 <pedestrianLightGrn>:

void pedestrianLightGrn(void) {
 8000e60:	b580      	push	{r7, lr}
 8000e62:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], ON);
 8000e64:	4b08      	ldr	r3, [pc, #32]	; (8000e88 <pedestrianLightGrn+0x28>)
 8000e66:	685b      	ldr	r3, [r3, #4]
 8000e68:	4a08      	ldr	r2, [pc, #32]	; (8000e8c <pedestrianLightGrn+0x2c>)
 8000e6a:	8851      	ldrh	r1, [r2, #2]
 8000e6c:	2201      	movs	r2, #1
 8000e6e:	4618      	mov	r0, r3
 8000e70:	f001 f8af 	bl	8001fd2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000e74:	4b04      	ldr	r3, [pc, #16]	; (8000e88 <pedestrianLightGrn+0x28>)
 8000e76:	681b      	ldr	r3, [r3, #0]
 8000e78:	4a04      	ldr	r2, [pc, #16]	; (8000e8c <pedestrianLightGrn+0x2c>)
 8000e7a:	8811      	ldrh	r1, [r2, #0]
 8000e7c:	2200      	movs	r2, #0
 8000e7e:	4618      	mov	r0, r3
 8000e80:	f001 f8a7 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8000e84:	bf00      	nop
 8000e86:	bd80      	pop	{r7, pc}
 8000e88:	200002fc 	.word	0x200002fc
 8000e8c:	20000304 	.word	0x20000304

08000e90 <pedestrianLightRed>:

void pedestrianLightRed(void) {
 8000e90:	b580      	push	{r7, lr}
 8000e92:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], ON);
 8000e94:	4b08      	ldr	r3, [pc, #32]	; (8000eb8 <pedestrianLightRed+0x28>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	4a08      	ldr	r2, [pc, #32]	; (8000ebc <pedestrianLightRed+0x2c>)
 8000e9a:	8811      	ldrh	r1, [r2, #0]
 8000e9c:	2201      	movs	r2, #1
 8000e9e:	4618      	mov	r0, r3
 8000ea0:	f001 f897 	bl	8001fd2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000ea4:	4b04      	ldr	r3, [pc, #16]	; (8000eb8 <pedestrianLightRed+0x28>)
 8000ea6:	685b      	ldr	r3, [r3, #4]
 8000ea8:	4a04      	ldr	r2, [pc, #16]	; (8000ebc <pedestrianLightRed+0x2c>)
 8000eaa:	8851      	ldrh	r1, [r2, #2]
 8000eac:	2200      	movs	r2, #0
 8000eae:	4618      	mov	r0, r3
 8000eb0:	f001 f88f 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8000eb4:	bf00      	nop
 8000eb6:	bd80      	pop	{r7, pc}
 8000eb8:	200002fc 	.word	0x200002fc
 8000ebc:	20000304 	.word	0x20000304

08000ec0 <pedestrianLightOff>:

void pedestrianLightOff(void) {
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <pedestrianLightOff+0x28>)
 8000ec6:	685b      	ldr	r3, [r3, #4]
 8000ec8:	4a08      	ldr	r2, [pc, #32]	; (8000eec <pedestrianLightOff+0x2c>)
 8000eca:	8851      	ldrh	r1, [r2, #2]
 8000ecc:	2200      	movs	r2, #0
 8000ece:	4618      	mov	r0, r3
 8000ed0:	f001 f87f 	bl	8001fd2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000ed4:	4b04      	ldr	r3, [pc, #16]	; (8000ee8 <pedestrianLightOff+0x28>)
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	4a04      	ldr	r2, [pc, #16]	; (8000eec <pedestrianLightOff+0x2c>)
 8000eda:	8811      	ldrh	r1, [r2, #0]
 8000edc:	2200      	movs	r2, #0
 8000ede:	4618      	mov	r0, r3
 8000ee0:	f001 f877 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8000ee4:	bf00      	nop
 8000ee6:	bd80      	pop	{r7, pc}
 8000ee8:	200002fc 	.word	0x200002fc
 8000eec:	20000304 	.word	0x20000304

08000ef0 <SCH_Add_Task>:
		SCH_tasks_G[Index].Period = 0;
		SCH_tasks_G[Index].RunMe = 0;
	}
}

uint32_t SCH_Add_Task(void (* pFunction)(void), uint32_t DELAY, uint32_t PERIOD) {
 8000ef0:	b4b0      	push	{r4, r5, r7}
 8000ef2:	b089      	sub	sp, #36	; 0x24
 8000ef4:	af00      	add	r7, sp, #0
 8000ef6:	60f8      	str	r0, [r7, #12]
 8000ef8:	60b9      	str	r1, [r7, #8]
 8000efa:	607a      	str	r2, [r7, #4]
	if(Size == SCH_MAX_TASKS - 1) return SCH_MAX_TASKS;
 8000efc:	4b6d      	ldr	r3, [pc, #436]	; (80010b4 <SCH_Add_Task+0x1c4>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	2b27      	cmp	r3, #39	; 0x27
 8000f02:	d101      	bne.n	8000f08 <SCH_Add_Task+0x18>
 8000f04:	2328      	movs	r3, #40	; 0x28
 8000f06:	e0d0      	b.n	80010aa <SCH_Add_Task+0x1ba>

	uint8_t flag = 0;
 8000f08:	2300      	movs	r3, #0
 8000f0a:	77fb      	strb	r3, [r7, #31]
	uint32_t Index = 0;
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	61bb      	str	r3, [r7, #24]
	if(SYSTEM_DELAY > 0) {
		DELAY /= SYSTEM_DELAY;
 8000f10:	68bb      	ldr	r3, [r7, #8]
 8000f12:	4a69      	ldr	r2, [pc, #420]	; (80010b8 <SCH_Add_Task+0x1c8>)
 8000f14:	fba2 2303 	umull	r2, r3, r2, r3
 8000f18:	08db      	lsrs	r3, r3, #3
 8000f1a:	60bb      	str	r3, [r7, #8]
	}

	for(; Index < Size && flag == 0; Index++) {
 8000f1c:	e046      	b.n	8000fac <SCH_Add_Task+0xbc>
		if(DELAY > SCH_tasks_G[Index].Delay) {
 8000f1e:	4967      	ldr	r1, [pc, #412]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000f20:	69ba      	ldr	r2, [r7, #24]
 8000f22:	4613      	mov	r3, r2
 8000f24:	009b      	lsls	r3, r3, #2
 8000f26:	4413      	add	r3, r2
 8000f28:	009b      	lsls	r3, r3, #2
 8000f2a:	440b      	add	r3, r1
 8000f2c:	3304      	adds	r3, #4
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	68ba      	ldr	r2, [r7, #8]
 8000f32:	429a      	cmp	r2, r3
 8000f34:	d90c      	bls.n	8000f50 <SCH_Add_Task+0x60>
			DELAY -= SCH_tasks_G[Index].Delay;
 8000f36:	4961      	ldr	r1, [pc, #388]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000f38:	69ba      	ldr	r2, [r7, #24]
 8000f3a:	4613      	mov	r3, r2
 8000f3c:	009b      	lsls	r3, r3, #2
 8000f3e:	4413      	add	r3, r2
 8000f40:	009b      	lsls	r3, r3, #2
 8000f42:	440b      	add	r3, r1
 8000f44:	3304      	adds	r3, #4
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	68ba      	ldr	r2, [r7, #8]
 8000f4a:	1ad3      	subs	r3, r2, r3
 8000f4c:	60bb      	str	r3, [r7, #8]
 8000f4e:	e02a      	b.n	8000fa6 <SCH_Add_Task+0xb6>
		}
		else {
			flag = 1;
 8000f50:	2301      	movs	r3, #1
 8000f52:	77fb      	strb	r3, [r7, #31]
			SCH_tasks_G[Index].Delay -= DELAY;
 8000f54:	4959      	ldr	r1, [pc, #356]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000f56:	69ba      	ldr	r2, [r7, #24]
 8000f58:	4613      	mov	r3, r2
 8000f5a:	009b      	lsls	r3, r3, #2
 8000f5c:	4413      	add	r3, r2
 8000f5e:	009b      	lsls	r3, r3, #2
 8000f60:	440b      	add	r3, r1
 8000f62:	3304      	adds	r3, #4
 8000f64:	681a      	ldr	r2, [r3, #0]
 8000f66:	68bb      	ldr	r3, [r7, #8]
 8000f68:	1ad1      	subs	r1, r2, r3
 8000f6a:	4854      	ldr	r0, [pc, #336]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000f6c:	69ba      	ldr	r2, [r7, #24]
 8000f6e:	4613      	mov	r3, r2
 8000f70:	009b      	lsls	r3, r3, #2
 8000f72:	4413      	add	r3, r2
 8000f74:	009b      	lsls	r3, r3, #2
 8000f76:	4403      	add	r3, r0
 8000f78:	3304      	adds	r3, #4
 8000f7a:	6019      	str	r1, [r3, #0]
			if(SCH_tasks_G[Index].Delay == 0) {
 8000f7c:	494f      	ldr	r1, [pc, #316]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000f7e:	69ba      	ldr	r2, [r7, #24]
 8000f80:	4613      	mov	r3, r2
 8000f82:	009b      	lsls	r3, r3, #2
 8000f84:	4413      	add	r3, r2
 8000f86:	009b      	lsls	r3, r3, #2
 8000f88:	440b      	add	r3, r1
 8000f8a:	3304      	adds	r3, #4
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	2b00      	cmp	r3, #0
 8000f90:	d109      	bne.n	8000fa6 <SCH_Add_Task+0xb6>
				SCH_tasks_G[Index].RunMe = 1;
 8000f92:	494a      	ldr	r1, [pc, #296]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000f94:	69ba      	ldr	r2, [r7, #24]
 8000f96:	4613      	mov	r3, r2
 8000f98:	009b      	lsls	r3, r3, #2
 8000f9a:	4413      	add	r3, r2
 8000f9c:	009b      	lsls	r3, r3, #2
 8000f9e:	440b      	add	r3, r1
 8000fa0:	330c      	adds	r3, #12
 8000fa2:	2201      	movs	r2, #1
 8000fa4:	701a      	strb	r2, [r3, #0]
	for(; Index < Size && flag == 0; Index++) {
 8000fa6:	69bb      	ldr	r3, [r7, #24]
 8000fa8:	3301      	adds	r3, #1
 8000faa:	61bb      	str	r3, [r7, #24]
 8000fac:	4b41      	ldr	r3, [pc, #260]	; (80010b4 <SCH_Add_Task+0x1c4>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	69ba      	ldr	r2, [r7, #24]
 8000fb2:	429a      	cmp	r2, r3
 8000fb4:	d202      	bcs.n	8000fbc <SCH_Add_Task+0xcc>
 8000fb6:	7ffb      	ldrb	r3, [r7, #31]
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d0b0      	beq.n	8000f1e <SCH_Add_Task+0x2e>
			}
		}
	}

	if(flag == 1) {
 8000fbc:	7ffb      	ldrb	r3, [r7, #31]
 8000fbe:	2b01      	cmp	r3, #1
 8000fc0:	d135      	bne.n	800102e <SCH_Add_Task+0x13e>
		Index -= 1;
 8000fc2:	69bb      	ldr	r3, [r7, #24]
 8000fc4:	3b01      	subs	r3, #1
 8000fc6:	61bb      	str	r3, [r7, #24]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 8000fc8:	4b3a      	ldr	r3, [pc, #232]	; (80010b4 <SCH_Add_Task+0x1c4>)
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	617b      	str	r3, [r7, #20]
 8000fce:	e02a      	b.n	8001026 <SCH_Add_Task+0x136>
			SCH_tasks_G[Temp] = SCH_tasks_G[Temp - 1];
 8000fd0:	697b      	ldr	r3, [r7, #20]
 8000fd2:	1e5a      	subs	r2, r3, #1
 8000fd4:	4839      	ldr	r0, [pc, #228]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000fd6:	6979      	ldr	r1, [r7, #20]
 8000fd8:	460b      	mov	r3, r1
 8000fda:	009b      	lsls	r3, r3, #2
 8000fdc:	440b      	add	r3, r1
 8000fde:	009b      	lsls	r3, r3, #2
 8000fe0:	4418      	add	r0, r3
 8000fe2:	4936      	ldr	r1, [pc, #216]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000fe4:	4613      	mov	r3, r2
 8000fe6:	009b      	lsls	r3, r3, #2
 8000fe8:	4413      	add	r3, r2
 8000fea:	009b      	lsls	r3, r3, #2
 8000fec:	440b      	add	r3, r1
 8000fee:	4604      	mov	r4, r0
 8000ff0:	461d      	mov	r5, r3
 8000ff2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000ff4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000ff6:	682b      	ldr	r3, [r5, #0]
 8000ff8:	6023      	str	r3, [r4, #0]
			SCH_tasks_G[Temp].TaskID += 1;
 8000ffa:	4930      	ldr	r1, [pc, #192]	; (80010bc <SCH_Add_Task+0x1cc>)
 8000ffc:	697a      	ldr	r2, [r7, #20]
 8000ffe:	4613      	mov	r3, r2
 8001000:	009b      	lsls	r3, r3, #2
 8001002:	4413      	add	r3, r2
 8001004:	009b      	lsls	r3, r3, #2
 8001006:	440b      	add	r3, r1
 8001008:	3310      	adds	r3, #16
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	1c59      	adds	r1, r3, #1
 800100e:	482b      	ldr	r0, [pc, #172]	; (80010bc <SCH_Add_Task+0x1cc>)
 8001010:	697a      	ldr	r2, [r7, #20]
 8001012:	4613      	mov	r3, r2
 8001014:	009b      	lsls	r3, r3, #2
 8001016:	4413      	add	r3, r2
 8001018:	009b      	lsls	r3, r3, #2
 800101a:	4403      	add	r3, r0
 800101c:	3310      	adds	r3, #16
 800101e:	6019      	str	r1, [r3, #0]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 8001020:	697b      	ldr	r3, [r7, #20]
 8001022:	3b01      	subs	r3, #1
 8001024:	617b      	str	r3, [r7, #20]
 8001026:	697a      	ldr	r2, [r7, #20]
 8001028:	69bb      	ldr	r3, [r7, #24]
 800102a:	429a      	cmp	r2, r3
 800102c:	d8d0      	bhi.n	8000fd0 <SCH_Add_Task+0xe0>
		}
	}
	SCH_tasks_G[Index].pTask = pFunction;
 800102e:	4923      	ldr	r1, [pc, #140]	; (80010bc <SCH_Add_Task+0x1cc>)
 8001030:	69ba      	ldr	r2, [r7, #24]
 8001032:	4613      	mov	r3, r2
 8001034:	009b      	lsls	r3, r3, #2
 8001036:	4413      	add	r3, r2
 8001038:	009b      	lsls	r3, r3, #2
 800103a:	440b      	add	r3, r1
 800103c:	68fa      	ldr	r2, [r7, #12]
 800103e:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Delay = DELAY;
 8001040:	491e      	ldr	r1, [pc, #120]	; (80010bc <SCH_Add_Task+0x1cc>)
 8001042:	69ba      	ldr	r2, [r7, #24]
 8001044:	4613      	mov	r3, r2
 8001046:	009b      	lsls	r3, r3, #2
 8001048:	4413      	add	r3, r2
 800104a:	009b      	lsls	r3, r3, #2
 800104c:	440b      	add	r3, r1
 800104e:	3304      	adds	r3, #4
 8001050:	68ba      	ldr	r2, [r7, #8]
 8001052:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Period = PERIOD;
 8001054:	4919      	ldr	r1, [pc, #100]	; (80010bc <SCH_Add_Task+0x1cc>)
 8001056:	69ba      	ldr	r2, [r7, #24]
 8001058:	4613      	mov	r3, r2
 800105a:	009b      	lsls	r3, r3, #2
 800105c:	4413      	add	r3, r2
 800105e:	009b      	lsls	r3, r3, #2
 8001060:	440b      	add	r3, r1
 8001062:	3308      	adds	r3, #8
 8001064:	687a      	ldr	r2, [r7, #4]
 8001066:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].RunMe = (DELAY == 0) ? 1 : 0;
 8001068:	68bb      	ldr	r3, [r7, #8]
 800106a:	2b00      	cmp	r3, #0
 800106c:	bf0c      	ite	eq
 800106e:	2301      	moveq	r3, #1
 8001070:	2300      	movne	r3, #0
 8001072:	b2db      	uxtb	r3, r3
 8001074:	4618      	mov	r0, r3
 8001076:	4911      	ldr	r1, [pc, #68]	; (80010bc <SCH_Add_Task+0x1cc>)
 8001078:	69ba      	ldr	r2, [r7, #24]
 800107a:	4613      	mov	r3, r2
 800107c:	009b      	lsls	r3, r3, #2
 800107e:	4413      	add	r3, r2
 8001080:	009b      	lsls	r3, r3, #2
 8001082:	440b      	add	r3, r1
 8001084:	330c      	adds	r3, #12
 8001086:	4602      	mov	r2, r0
 8001088:	701a      	strb	r2, [r3, #0]
	SCH_tasks_G[Index].TaskID = Index;
 800108a:	490c      	ldr	r1, [pc, #48]	; (80010bc <SCH_Add_Task+0x1cc>)
 800108c:	69ba      	ldr	r2, [r7, #24]
 800108e:	4613      	mov	r3, r2
 8001090:	009b      	lsls	r3, r3, #2
 8001092:	4413      	add	r3, r2
 8001094:	009b      	lsls	r3, r3, #2
 8001096:	440b      	add	r3, r1
 8001098:	3310      	adds	r3, #16
 800109a:	69ba      	ldr	r2, [r7, #24]
 800109c:	601a      	str	r2, [r3, #0]

	Size += 1;
 800109e:	4b05      	ldr	r3, [pc, #20]	; (80010b4 <SCH_Add_Task+0x1c4>)
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	3301      	adds	r3, #1
 80010a4:	4a03      	ldr	r2, [pc, #12]	; (80010b4 <SCH_Add_Task+0x1c4>)
 80010a6:	6013      	str	r3, [r2, #0]

	return Index;
 80010a8:	69bb      	ldr	r3, [r7, #24]
}
 80010aa:	4618      	mov	r0, r3
 80010ac:	3724      	adds	r7, #36	; 0x24
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bcb0      	pop	{r4, r5, r7}
 80010b2:	4770      	bx	lr
 80010b4:	20000704 	.word	0x20000704
 80010b8:	cccccccd 	.word	0xcccccccd
 80010bc:	200003e4 	.word	0x200003e4

080010c0 <SCH_Delete_Task>:

void SCH_Delete_Task(uint32_t TASK_INDEX) {
 80010c0:	b4b0      	push	{r4, r5, r7}
 80010c2:	b085      	sub	sp, #20
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	6078      	str	r0, [r7, #4]
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 80010c8:	4933      	ldr	r1, [pc, #204]	; (8001198 <SCH_Delete_Task+0xd8>)
 80010ca:	687a      	ldr	r2, [r7, #4]
 80010cc:	4613      	mov	r3, r2
 80010ce:	009b      	lsls	r3, r3, #2
 80010d0:	4413      	add	r3, r2
 80010d2:	009b      	lsls	r3, r3, #2
 80010d4:	440b      	add	r3, r1
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d057      	beq.n	800118c <SCH_Delete_Task+0xcc>

	SCH_tasks_G[TASK_INDEX + 1].Delay += SCH_tasks_G[TASK_INDEX].Delay;
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	1c5a      	adds	r2, r3, #1
 80010e0:	492d      	ldr	r1, [pc, #180]	; (8001198 <SCH_Delete_Task+0xd8>)
 80010e2:	4613      	mov	r3, r2
 80010e4:	009b      	lsls	r3, r3, #2
 80010e6:	4413      	add	r3, r2
 80010e8:	009b      	lsls	r3, r3, #2
 80010ea:	440b      	add	r3, r1
 80010ec:	3304      	adds	r3, #4
 80010ee:	6819      	ldr	r1, [r3, #0]
 80010f0:	4829      	ldr	r0, [pc, #164]	; (8001198 <SCH_Delete_Task+0xd8>)
 80010f2:	687a      	ldr	r2, [r7, #4]
 80010f4:	4613      	mov	r3, r2
 80010f6:	009b      	lsls	r3, r3, #2
 80010f8:	4413      	add	r3, r2
 80010fa:	009b      	lsls	r3, r3, #2
 80010fc:	4403      	add	r3, r0
 80010fe:	3304      	adds	r3, #4
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	687a      	ldr	r2, [r7, #4]
 8001104:	3201      	adds	r2, #1
 8001106:	4419      	add	r1, r3
 8001108:	4823      	ldr	r0, [pc, #140]	; (8001198 <SCH_Delete_Task+0xd8>)
 800110a:	4613      	mov	r3, r2
 800110c:	009b      	lsls	r3, r3, #2
 800110e:	4413      	add	r3, r2
 8001110:	009b      	lsls	r3, r3, #2
 8001112:	4403      	add	r3, r0
 8001114:	3304      	adds	r3, #4
 8001116:	6019      	str	r1, [r3, #0]

	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	60fb      	str	r3, [r7, #12]
 800111c:	e02a      	b.n	8001174 <SCH_Delete_Task+0xb4>
		SCH_tasks_G[Temp] = SCH_tasks_G[Temp + 1];
 800111e:	68fb      	ldr	r3, [r7, #12]
 8001120:	1c5a      	adds	r2, r3, #1
 8001122:	481d      	ldr	r0, [pc, #116]	; (8001198 <SCH_Delete_Task+0xd8>)
 8001124:	68f9      	ldr	r1, [r7, #12]
 8001126:	460b      	mov	r3, r1
 8001128:	009b      	lsls	r3, r3, #2
 800112a:	440b      	add	r3, r1
 800112c:	009b      	lsls	r3, r3, #2
 800112e:	4418      	add	r0, r3
 8001130:	4919      	ldr	r1, [pc, #100]	; (8001198 <SCH_Delete_Task+0xd8>)
 8001132:	4613      	mov	r3, r2
 8001134:	009b      	lsls	r3, r3, #2
 8001136:	4413      	add	r3, r2
 8001138:	009b      	lsls	r3, r3, #2
 800113a:	440b      	add	r3, r1
 800113c:	4604      	mov	r4, r0
 800113e:	461d      	mov	r5, r3
 8001140:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001142:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001144:	682b      	ldr	r3, [r5, #0]
 8001146:	6023      	str	r3, [r4, #0]
		SCH_tasks_G[Temp].TaskID -= 1;
 8001148:	4913      	ldr	r1, [pc, #76]	; (8001198 <SCH_Delete_Task+0xd8>)
 800114a:	68fa      	ldr	r2, [r7, #12]
 800114c:	4613      	mov	r3, r2
 800114e:	009b      	lsls	r3, r3, #2
 8001150:	4413      	add	r3, r2
 8001152:	009b      	lsls	r3, r3, #2
 8001154:	440b      	add	r3, r1
 8001156:	3310      	adds	r3, #16
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	1e59      	subs	r1, r3, #1
 800115c:	480e      	ldr	r0, [pc, #56]	; (8001198 <SCH_Delete_Task+0xd8>)
 800115e:	68fa      	ldr	r2, [r7, #12]
 8001160:	4613      	mov	r3, r2
 8001162:	009b      	lsls	r3, r3, #2
 8001164:	4413      	add	r3, r2
 8001166:	009b      	lsls	r3, r3, #2
 8001168:	4403      	add	r3, r0
 800116a:	3310      	adds	r3, #16
 800116c:	6019      	str	r1, [r3, #0]
	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 800116e:	68fb      	ldr	r3, [r7, #12]
 8001170:	3301      	adds	r3, #1
 8001172:	60fb      	str	r3, [r7, #12]
 8001174:	4b09      	ldr	r3, [pc, #36]	; (800119c <SCH_Delete_Task+0xdc>)
 8001176:	681b      	ldr	r3, [r3, #0]
 8001178:	3b01      	subs	r3, #1
 800117a:	68fa      	ldr	r2, [r7, #12]
 800117c:	429a      	cmp	r2, r3
 800117e:	d3ce      	bcc.n	800111e <SCH_Delete_Task+0x5e>
	}

	Size -= 1;
 8001180:	4b06      	ldr	r3, [pc, #24]	; (800119c <SCH_Delete_Task+0xdc>)
 8001182:	681b      	ldr	r3, [r3, #0]
 8001184:	3b01      	subs	r3, #1
 8001186:	4a05      	ldr	r2, [pc, #20]	; (800119c <SCH_Delete_Task+0xdc>)
 8001188:	6013      	str	r3, [r2, #0]
 800118a:	e000      	b.n	800118e <SCH_Delete_Task+0xce>
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 800118c:	bf00      	nop
}
 800118e:	3714      	adds	r7, #20
 8001190:	46bd      	mov	sp, r7
 8001192:	bcb0      	pop	{r4, r5, r7}
 8001194:	4770      	bx	lr
 8001196:	bf00      	nop
 8001198:	200003e4 	.word	0x200003e4
 800119c:	20000704 	.word	0x20000704

080011a0 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void) {
 80011a0:	b5b0      	push	{r4, r5, r7, lr}
 80011a2:	b086      	sub	sp, #24
 80011a4:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[HEAD].RunMe == 1) {
 80011a6:	4b0f      	ldr	r3, [pc, #60]	; (80011e4 <SCH_Dispatch_Tasks+0x44>)
 80011a8:	7b1b      	ldrb	r3, [r3, #12]
 80011aa:	2b01      	cmp	r3, #1
 80011ac:	d115      	bne.n	80011da <SCH_Dispatch_Tasks+0x3a>
		(*SCH_tasks_G[HEAD].pTask)();
 80011ae:	4b0d      	ldr	r3, [pc, #52]	; (80011e4 <SCH_Dispatch_Tasks+0x44>)
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	4798      	blx	r3

		sTask temp = SCH_tasks_G[HEAD];
 80011b4:	4b0b      	ldr	r3, [pc, #44]	; (80011e4 <SCH_Dispatch_Tasks+0x44>)
 80011b6:	1d3c      	adds	r4, r7, #4
 80011b8:	461d      	mov	r5, r3
 80011ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80011bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80011be:	682b      	ldr	r3, [r5, #0]
 80011c0:	6023      	str	r3, [r4, #0]

		SCH_Delete_Task(HEAD);
 80011c2:	2000      	movs	r0, #0
 80011c4:	f7ff ff7c 	bl	80010c0 <SCH_Delete_Task>

		if(temp.Period > 0) {
 80011c8:	68fb      	ldr	r3, [r7, #12]
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d005      	beq.n	80011da <SCH_Dispatch_Tasks+0x3a>
			SCH_Add_Task(temp.pTask, temp.Period, temp.Period);
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	68f9      	ldr	r1, [r7, #12]
 80011d2:	68fa      	ldr	r2, [r7, #12]
 80011d4:	4618      	mov	r0, r3
 80011d6:	f7ff fe8b 	bl	8000ef0 <SCH_Add_Task>
		}
	}
}
 80011da:	bf00      	nop
 80011dc:	3718      	adds	r7, #24
 80011de:	46bd      	mov	sp, r7
 80011e0:	bdb0      	pop	{r4, r5, r7, pc}
 80011e2:	bf00      	nop
 80011e4:	200003e4 	.word	0x200003e4

080011e8 <SCH_Update>:

void SCH_Update(void) {
 80011e8:	b480      	push	{r7}
 80011ea:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[HEAD].Delay > 0) SCH_tasks_G[HEAD].Delay--;
 80011ec:	4b09      	ldr	r3, [pc, #36]	; (8001214 <SCH_Update+0x2c>)
 80011ee:	685b      	ldr	r3, [r3, #4]
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	d004      	beq.n	80011fe <SCH_Update+0x16>
 80011f4:	4b07      	ldr	r3, [pc, #28]	; (8001214 <SCH_Update+0x2c>)
 80011f6:	685b      	ldr	r3, [r3, #4]
 80011f8:	3b01      	subs	r3, #1
 80011fa:	4a06      	ldr	r2, [pc, #24]	; (8001214 <SCH_Update+0x2c>)
 80011fc:	6053      	str	r3, [r2, #4]

	if(SCH_tasks_G[HEAD].Delay == 0) {
 80011fe:	4b05      	ldr	r3, [pc, #20]	; (8001214 <SCH_Update+0x2c>)
 8001200:	685b      	ldr	r3, [r3, #4]
 8001202:	2b00      	cmp	r3, #0
 8001204:	d102      	bne.n	800120c <SCH_Update+0x24>
		SCH_tasks_G[HEAD].RunMe = 1;
 8001206:	4b03      	ldr	r3, [pc, #12]	; (8001214 <SCH_Update+0x2c>)
 8001208:	2201      	movs	r2, #1
 800120a:	731a      	strb	r2, [r3, #12]
	}
}
 800120c:	bf00      	nop
 800120e:	46bd      	mov	sp, r7
 8001210:	bc80      	pop	{r7}
 8001212:	4770      	bx	lr
 8001214:	200003e4 	.word	0x200003e4

08001218 <setTimer1>:
int timer2_flag = 0;

int timer3_counter = 0;
int timer3_flag = 0;

void setTimer1(int duration) {
 8001218:	b480      	push	{r7}
 800121a:	b083      	sub	sp, #12
 800121c:	af00      	add	r7, sp, #0
 800121e:	6078      	str	r0, [r7, #4]
	if(SYSTEM_DELAY > 0) {
		timer1_counter = duration / SYSTEM_DELAY;
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	4a08      	ldr	r2, [pc, #32]	; (8001244 <setTimer1+0x2c>)
 8001224:	fb82 1203 	smull	r1, r2, r2, r3
 8001228:	1092      	asrs	r2, r2, #2
 800122a:	17db      	asrs	r3, r3, #31
 800122c:	1ad3      	subs	r3, r2, r3
 800122e:	4a06      	ldr	r2, [pc, #24]	; (8001248 <setTimer1+0x30>)
 8001230:	6013      	str	r3, [r2, #0]
	} else timer1_counter = duration;
	timer1_flag = 0;
 8001232:	4b06      	ldr	r3, [pc, #24]	; (800124c <setTimer1+0x34>)
 8001234:	2200      	movs	r2, #0
 8001236:	601a      	str	r2, [r3, #0]
}
 8001238:	bf00      	nop
 800123a:	370c      	adds	r7, #12
 800123c:	46bd      	mov	sp, r7
 800123e:	bc80      	pop	{r7}
 8001240:	4770      	bx	lr
 8001242:	bf00      	nop
 8001244:	66666667 	.word	0x66666667
 8001248:	20000708 	.word	0x20000708
 800124c:	2000070c 	.word	0x2000070c

08001250 <setTimer2>:

void setTimer2(int duration) {
 8001250:	b480      	push	{r7}
 8001252:	b083      	sub	sp, #12
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
	if(SYSTEM_DELAY > 0) {
		timer2_counter = duration / SYSTEM_DELAY;
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	4a08      	ldr	r2, [pc, #32]	; (800127c <setTimer2+0x2c>)
 800125c:	fb82 1203 	smull	r1, r2, r2, r3
 8001260:	1092      	asrs	r2, r2, #2
 8001262:	17db      	asrs	r3, r3, #31
 8001264:	1ad3      	subs	r3, r2, r3
 8001266:	4a06      	ldr	r2, [pc, #24]	; (8001280 <setTimer2+0x30>)
 8001268:	6013      	str	r3, [r2, #0]
	} else timer2_counter = duration;
	timer2_flag = 0;
 800126a:	4b06      	ldr	r3, [pc, #24]	; (8001284 <setTimer2+0x34>)
 800126c:	2200      	movs	r2, #0
 800126e:	601a      	str	r2, [r3, #0]
}
 8001270:	bf00      	nop
 8001272:	370c      	adds	r7, #12
 8001274:	46bd      	mov	sp, r7
 8001276:	bc80      	pop	{r7}
 8001278:	4770      	bx	lr
 800127a:	bf00      	nop
 800127c:	66666667 	.word	0x66666667
 8001280:	20000710 	.word	0x20000710
 8001284:	20000714 	.word	0x20000714

08001288 <setTimer3>:


void setTimer3(int duration) {
 8001288:	b480      	push	{r7}
 800128a:	b083      	sub	sp, #12
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
	if(SYSTEM_DELAY > 0) {
		timer3_counter = duration / SYSTEM_DELAY;
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	4a08      	ldr	r2, [pc, #32]	; (80012b4 <setTimer3+0x2c>)
 8001294:	fb82 1203 	smull	r1, r2, r2, r3
 8001298:	1092      	asrs	r2, r2, #2
 800129a:	17db      	asrs	r3, r3, #31
 800129c:	1ad3      	subs	r3, r2, r3
 800129e:	4a06      	ldr	r2, [pc, #24]	; (80012b8 <setTimer3+0x30>)
 80012a0:	6013      	str	r3, [r2, #0]
	} else timer3_counter = duration;
	timer3_flag = 0;
 80012a2:	4b06      	ldr	r3, [pc, #24]	; (80012bc <setTimer3+0x34>)
 80012a4:	2200      	movs	r2, #0
 80012a6:	601a      	str	r2, [r3, #0]
}
 80012a8:	bf00      	nop
 80012aa:	370c      	adds	r7, #12
 80012ac:	46bd      	mov	sp, r7
 80012ae:	bc80      	pop	{r7}
 80012b0:	4770      	bx	lr
 80012b2:	bf00      	nop
 80012b4:	66666667 	.word	0x66666667
 80012b8:	20000718 	.word	0x20000718
 80012bc:	2000071c 	.word	0x2000071c

080012c0 <timerRun>:

void timerRun(void) {
 80012c0:	b480      	push	{r7}
 80012c2:	af00      	add	r7, sp, #0
	if(timer1_counter > 0) {
 80012c4:	4b19      	ldr	r3, [pc, #100]	; (800132c <timerRun+0x6c>)
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	dd0b      	ble.n	80012e4 <timerRun+0x24>
		timer1_counter--;
 80012cc:	4b17      	ldr	r3, [pc, #92]	; (800132c <timerRun+0x6c>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	3b01      	subs	r3, #1
 80012d2:	4a16      	ldr	r2, [pc, #88]	; (800132c <timerRun+0x6c>)
 80012d4:	6013      	str	r3, [r2, #0]
		if(timer1_counter <= 0) {
 80012d6:	4b15      	ldr	r3, [pc, #84]	; (800132c <timerRun+0x6c>)
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	2b00      	cmp	r3, #0
 80012dc:	dc02      	bgt.n	80012e4 <timerRun+0x24>
			timer1_flag = 1;
 80012de:	4b14      	ldr	r3, [pc, #80]	; (8001330 <timerRun+0x70>)
 80012e0:	2201      	movs	r2, #1
 80012e2:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer2_counter > 0) {
 80012e4:	4b13      	ldr	r3, [pc, #76]	; (8001334 <timerRun+0x74>)
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	dd0b      	ble.n	8001304 <timerRun+0x44>
		timer2_counter--;
 80012ec:	4b11      	ldr	r3, [pc, #68]	; (8001334 <timerRun+0x74>)
 80012ee:	681b      	ldr	r3, [r3, #0]
 80012f0:	3b01      	subs	r3, #1
 80012f2:	4a10      	ldr	r2, [pc, #64]	; (8001334 <timerRun+0x74>)
 80012f4:	6013      	str	r3, [r2, #0]
		if(timer2_counter <= 0) {
 80012f6:	4b0f      	ldr	r3, [pc, #60]	; (8001334 <timerRun+0x74>)
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	2b00      	cmp	r3, #0
 80012fc:	dc02      	bgt.n	8001304 <timerRun+0x44>
			timer2_flag = 1;
 80012fe:	4b0e      	ldr	r3, [pc, #56]	; (8001338 <timerRun+0x78>)
 8001300:	2201      	movs	r2, #1
 8001302:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer3_counter > 0) {
 8001304:	4b0d      	ldr	r3, [pc, #52]	; (800133c <timerRun+0x7c>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	2b00      	cmp	r3, #0
 800130a:	dd0b      	ble.n	8001324 <timerRun+0x64>
		timer3_counter--;
 800130c:	4b0b      	ldr	r3, [pc, #44]	; (800133c <timerRun+0x7c>)
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	3b01      	subs	r3, #1
 8001312:	4a0a      	ldr	r2, [pc, #40]	; (800133c <timerRun+0x7c>)
 8001314:	6013      	str	r3, [r2, #0]
		if(timer3_counter <= 0) {
 8001316:	4b09      	ldr	r3, [pc, #36]	; (800133c <timerRun+0x7c>)
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	2b00      	cmp	r3, #0
 800131c:	dc02      	bgt.n	8001324 <timerRun+0x64>
			timer3_flag = 1;
 800131e:	4b08      	ldr	r3, [pc, #32]	; (8001340 <timerRun+0x80>)
 8001320:	2201      	movs	r2, #1
 8001322:	601a      	str	r2, [r3, #0]
		}
	}
}
 8001324:	bf00      	nop
 8001326:	46bd      	mov	sp, r7
 8001328:	bc80      	pop	{r7}
 800132a:	4770      	bx	lr
 800132c:	20000708 	.word	0x20000708
 8001330:	2000070c 	.word	0x2000070c
 8001334:	20000710 	.word	0x20000710
 8001338:	20000714 	.word	0x20000714
 800133c:	20000718 	.word	0x20000718
 8001340:	2000071c 	.word	0x2000071c

08001344 <HAL_MspInit>:
 8001344:	b480      	push	{r7}
 8001346:	b085      	sub	sp, #20
 8001348:	af00      	add	r7, sp, #0
 800134a:	4b15      	ldr	r3, [pc, #84]	; (80013a0 <HAL_MspInit+0x5c>)
 800134c:	699b      	ldr	r3, [r3, #24]
 800134e:	4a14      	ldr	r2, [pc, #80]	; (80013a0 <HAL_MspInit+0x5c>)
 8001350:	f043 0301 	orr.w	r3, r3, #1
 8001354:	6193      	str	r3, [r2, #24]
 8001356:	4b12      	ldr	r3, [pc, #72]	; (80013a0 <HAL_MspInit+0x5c>)
 8001358:	699b      	ldr	r3, [r3, #24]
 800135a:	f003 0301 	and.w	r3, r3, #1
 800135e:	60bb      	str	r3, [r7, #8]
 8001360:	68bb      	ldr	r3, [r7, #8]
 8001362:	4b0f      	ldr	r3, [pc, #60]	; (80013a0 <HAL_MspInit+0x5c>)
 8001364:	69db      	ldr	r3, [r3, #28]
 8001366:	4a0e      	ldr	r2, [pc, #56]	; (80013a0 <HAL_MspInit+0x5c>)
 8001368:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800136c:	61d3      	str	r3, [r2, #28]
 800136e:	4b0c      	ldr	r3, [pc, #48]	; (80013a0 <HAL_MspInit+0x5c>)
 8001370:	69db      	ldr	r3, [r3, #28]
 8001372:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001376:	607b      	str	r3, [r7, #4]
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	4b0a      	ldr	r3, [pc, #40]	; (80013a4 <HAL_MspInit+0x60>)
 800137c:	685b      	ldr	r3, [r3, #4]
 800137e:	60fb      	str	r3, [r7, #12]
 8001380:	68fb      	ldr	r3, [r7, #12]
 8001382:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001386:	60fb      	str	r3, [r7, #12]
 8001388:	68fb      	ldr	r3, [r7, #12]
 800138a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800138e:	60fb      	str	r3, [r7, #12]
 8001390:	4a04      	ldr	r2, [pc, #16]	; (80013a4 <HAL_MspInit+0x60>)
 8001392:	68fb      	ldr	r3, [r7, #12]
 8001394:	6053      	str	r3, [r2, #4]
 8001396:	bf00      	nop
 8001398:	3714      	adds	r7, #20
 800139a:	46bd      	mov	sp, r7
 800139c:	bc80      	pop	{r7}
 800139e:	4770      	bx	lr
 80013a0:	40021000 	.word	0x40021000
 80013a4:	40010000 	.word	0x40010000

080013a8 <NMI_Handler>:
 80013a8:	b480      	push	{r7}
 80013aa:	af00      	add	r7, sp, #0
 80013ac:	e7fe      	b.n	80013ac <NMI_Handler+0x4>

080013ae <HardFault_Handler>:
 80013ae:	b480      	push	{r7}
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	e7fe      	b.n	80013b2 <HardFault_Handler+0x4>

080013b4 <MemManage_Handler>:
 80013b4:	b480      	push	{r7}
 80013b6:	af00      	add	r7, sp, #0
 80013b8:	e7fe      	b.n	80013b8 <MemManage_Handler+0x4>

080013ba <BusFault_Handler>:
 80013ba:	b480      	push	{r7}
 80013bc:	af00      	add	r7, sp, #0
 80013be:	e7fe      	b.n	80013be <BusFault_Handler+0x4>

080013c0 <UsageFault_Handler>:
 80013c0:	b480      	push	{r7}
 80013c2:	af00      	add	r7, sp, #0
 80013c4:	e7fe      	b.n	80013c4 <UsageFault_Handler+0x4>

080013c6 <SVC_Handler>:
 80013c6:	b480      	push	{r7}
 80013c8:	af00      	add	r7, sp, #0
 80013ca:	bf00      	nop
 80013cc:	46bd      	mov	sp, r7
 80013ce:	bc80      	pop	{r7}
 80013d0:	4770      	bx	lr

080013d2 <DebugMon_Handler>:
 80013d2:	b480      	push	{r7}
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	bf00      	nop
 80013d8:	46bd      	mov	sp, r7
 80013da:	bc80      	pop	{r7}
 80013dc:	4770      	bx	lr

080013de <PendSV_Handler>:
 80013de:	b480      	push	{r7}
 80013e0:	af00      	add	r7, sp, #0
 80013e2:	bf00      	nop
 80013e4:	46bd      	mov	sp, r7
 80013e6:	bc80      	pop	{r7}
 80013e8:	4770      	bx	lr

080013ea <SysTick_Handler>:
 80013ea:	b580      	push	{r7, lr}
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	f000 fb2b 	bl	8001a48 <HAL_IncTick>
 80013f2:	bf00      	nop
 80013f4:	bd80      	pop	{r7, pc}
	...

080013f8 <TIM2_IRQHandler>:
 80013f8:	b580      	push	{r7, lr}
 80013fa:	af00      	add	r7, sp, #0
 80013fc:	4802      	ldr	r0, [pc, #8]	; (8001408 <TIM2_IRQHandler+0x10>)
 80013fe:	f001 fbf1 	bl	8002be4 <HAL_TIM_IRQHandler>
 8001402:	bf00      	nop
 8001404:	bd80      	pop	{r7, pc}
 8001406:	bf00      	nop
 8001408:	20000724 	.word	0x20000724

0800140c <EXTI15_10_IRQHandler>:
 800140c:	b580      	push	{r7, lr}
 800140e:	af00      	add	r7, sp, #0
 8001410:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001414:	f000 fe0e 	bl	8002034 <HAL_GPIO_EXTI_IRQHandler>
 8001418:	bf00      	nop
 800141a:	bd80      	pop	{r7, pc}

0800141c <_sbrk>:
 800141c:	b580      	push	{r7, lr}
 800141e:	b086      	sub	sp, #24
 8001420:	af00      	add	r7, sp, #0
 8001422:	6078      	str	r0, [r7, #4]
 8001424:	4a14      	ldr	r2, [pc, #80]	; (8001478 <_sbrk+0x5c>)
 8001426:	4b15      	ldr	r3, [pc, #84]	; (800147c <_sbrk+0x60>)
 8001428:	1ad3      	subs	r3, r2, r3
 800142a:	617b      	str	r3, [r7, #20]
 800142c:	697b      	ldr	r3, [r7, #20]
 800142e:	613b      	str	r3, [r7, #16]
 8001430:	4b13      	ldr	r3, [pc, #76]	; (8001480 <_sbrk+0x64>)
 8001432:	681b      	ldr	r3, [r3, #0]
 8001434:	2b00      	cmp	r3, #0
 8001436:	d102      	bne.n	800143e <_sbrk+0x22>
 8001438:	4b11      	ldr	r3, [pc, #68]	; (8001480 <_sbrk+0x64>)
 800143a:	4a12      	ldr	r2, [pc, #72]	; (8001484 <_sbrk+0x68>)
 800143c:	601a      	str	r2, [r3, #0]
 800143e:	4b10      	ldr	r3, [pc, #64]	; (8001480 <_sbrk+0x64>)
 8001440:	681a      	ldr	r2, [r3, #0]
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	4413      	add	r3, r2
 8001446:	693a      	ldr	r2, [r7, #16]
 8001448:	429a      	cmp	r2, r3
 800144a:	d207      	bcs.n	800145c <_sbrk+0x40>
 800144c:	f002 fb44 	bl	8003ad8 <__errno>
 8001450:	4603      	mov	r3, r0
 8001452:	220c      	movs	r2, #12
 8001454:	601a      	str	r2, [r3, #0]
 8001456:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800145a:	e009      	b.n	8001470 <_sbrk+0x54>
 800145c:	4b08      	ldr	r3, [pc, #32]	; (8001480 <_sbrk+0x64>)
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	60fb      	str	r3, [r7, #12]
 8001462:	4b07      	ldr	r3, [pc, #28]	; (8001480 <_sbrk+0x64>)
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	4413      	add	r3, r2
 800146a:	4a05      	ldr	r2, [pc, #20]	; (8001480 <_sbrk+0x64>)
 800146c:	6013      	str	r3, [r2, #0]
 800146e:	68fb      	ldr	r3, [r7, #12]
 8001470:	4618      	mov	r0, r3
 8001472:	3718      	adds	r7, #24
 8001474:	46bd      	mov	sp, r7
 8001476:	bd80      	pop	{r7, pc}
 8001478:	20005000 	.word	0x20005000
 800147c:	00000400 	.word	0x00000400
 8001480:	20000720 	.word	0x20000720
 8001484:	20000810 	.word	0x20000810

08001488 <SystemInit>:
 8001488:	b480      	push	{r7}
 800148a:	af00      	add	r7, sp, #0
 800148c:	bf00      	nop
 800148e:	46bd      	mov	sp, r7
 8001490:	bc80      	pop	{r7}
 8001492:	4770      	bx	lr

08001494 <MX_TIM2_Init>:
 8001494:	b580      	push	{r7, lr}
 8001496:	b086      	sub	sp, #24
 8001498:	af00      	add	r7, sp, #0
 800149a:	f107 0308 	add.w	r3, r7, #8
 800149e:	2200      	movs	r2, #0
 80014a0:	601a      	str	r2, [r3, #0]
 80014a2:	605a      	str	r2, [r3, #4]
 80014a4:	609a      	str	r2, [r3, #8]
 80014a6:	60da      	str	r2, [r3, #12]
 80014a8:	463b      	mov	r3, r7
 80014aa:	2200      	movs	r2, #0
 80014ac:	601a      	str	r2, [r3, #0]
 80014ae:	605a      	str	r2, [r3, #4]
 80014b0:	4b1d      	ldr	r3, [pc, #116]	; (8001528 <MX_TIM2_Init+0x94>)
 80014b2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80014b6:	601a      	str	r2, [r3, #0]
 80014b8:	4b1b      	ldr	r3, [pc, #108]	; (8001528 <MX_TIM2_Init+0x94>)
 80014ba:	223f      	movs	r2, #63	; 0x3f
 80014bc:	605a      	str	r2, [r3, #4]
 80014be:	4b1a      	ldr	r3, [pc, #104]	; (8001528 <MX_TIM2_Init+0x94>)
 80014c0:	2200      	movs	r2, #0
 80014c2:	609a      	str	r2, [r3, #8]
 80014c4:	4b18      	ldr	r3, [pc, #96]	; (8001528 <MX_TIM2_Init+0x94>)
 80014c6:	f242 720f 	movw	r2, #9999	; 0x270f
 80014ca:	60da      	str	r2, [r3, #12]
 80014cc:	4b16      	ldr	r3, [pc, #88]	; (8001528 <MX_TIM2_Init+0x94>)
 80014ce:	2200      	movs	r2, #0
 80014d0:	611a      	str	r2, [r3, #16]
 80014d2:	4b15      	ldr	r3, [pc, #84]	; (8001528 <MX_TIM2_Init+0x94>)
 80014d4:	2200      	movs	r2, #0
 80014d6:	619a      	str	r2, [r3, #24]
 80014d8:	4813      	ldr	r0, [pc, #76]	; (8001528 <MX_TIM2_Init+0x94>)
 80014da:	f001 f9e7 	bl	80028ac <HAL_TIM_Base_Init>
 80014de:	4603      	mov	r3, r0
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d001      	beq.n	80014e8 <MX_TIM2_Init+0x54>
 80014e4:	f7ff fc87 	bl	8000df6 <Error_Handler>
 80014e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014ec:	60bb      	str	r3, [r7, #8]
 80014ee:	f107 0308 	add.w	r3, r7, #8
 80014f2:	4619      	mov	r1, r3
 80014f4:	480c      	ldr	r0, [pc, #48]	; (8001528 <MX_TIM2_Init+0x94>)
 80014f6:	f001 fd3b 	bl	8002f70 <HAL_TIM_ConfigClockSource>
 80014fa:	4603      	mov	r3, r0
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d001      	beq.n	8001504 <MX_TIM2_Init+0x70>
 8001500:	f7ff fc79 	bl	8000df6 <Error_Handler>
 8001504:	2300      	movs	r3, #0
 8001506:	603b      	str	r3, [r7, #0]
 8001508:	2300      	movs	r3, #0
 800150a:	607b      	str	r3, [r7, #4]
 800150c:	463b      	mov	r3, r7
 800150e:	4619      	mov	r1, r3
 8001510:	4805      	ldr	r0, [pc, #20]	; (8001528 <MX_TIM2_Init+0x94>)
 8001512:	f002 f8b9 	bl	8003688 <HAL_TIMEx_MasterConfigSynchronization>
 8001516:	4603      	mov	r3, r0
 8001518:	2b00      	cmp	r3, #0
 800151a:	d001      	beq.n	8001520 <MX_TIM2_Init+0x8c>
 800151c:	f7ff fc6b 	bl	8000df6 <Error_Handler>
 8001520:	bf00      	nop
 8001522:	3718      	adds	r7, #24
 8001524:	46bd      	mov	sp, r7
 8001526:	bd80      	pop	{r7, pc}
 8001528:	20000724 	.word	0x20000724

0800152c <MX_TIM3_Init>:
 800152c:	b580      	push	{r7, lr}
 800152e:	b08e      	sub	sp, #56	; 0x38
 8001530:	af00      	add	r7, sp, #0
 8001532:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001536:	2200      	movs	r2, #0
 8001538:	601a      	str	r2, [r3, #0]
 800153a:	605a      	str	r2, [r3, #4]
 800153c:	609a      	str	r2, [r3, #8]
 800153e:	60da      	str	r2, [r3, #12]
 8001540:	f107 0320 	add.w	r3, r7, #32
 8001544:	2200      	movs	r2, #0
 8001546:	601a      	str	r2, [r3, #0]
 8001548:	605a      	str	r2, [r3, #4]
 800154a:	1d3b      	adds	r3, r7, #4
 800154c:	2200      	movs	r2, #0
 800154e:	601a      	str	r2, [r3, #0]
 8001550:	605a      	str	r2, [r3, #4]
 8001552:	609a      	str	r2, [r3, #8]
 8001554:	60da      	str	r2, [r3, #12]
 8001556:	611a      	str	r2, [r3, #16]
 8001558:	615a      	str	r2, [r3, #20]
 800155a:	619a      	str	r2, [r3, #24]
 800155c:	4b2c      	ldr	r3, [pc, #176]	; (8001610 <MX_TIM3_Init+0xe4>)
 800155e:	4a2d      	ldr	r2, [pc, #180]	; (8001614 <MX_TIM3_Init+0xe8>)
 8001560:	601a      	str	r2, [r3, #0]
 8001562:	4b2b      	ldr	r3, [pc, #172]	; (8001610 <MX_TIM3_Init+0xe4>)
 8001564:	223f      	movs	r2, #63	; 0x3f
 8001566:	605a      	str	r2, [r3, #4]
 8001568:	4b29      	ldr	r3, [pc, #164]	; (8001610 <MX_TIM3_Init+0xe4>)
 800156a:	2200      	movs	r2, #0
 800156c:	609a      	str	r2, [r3, #8]
 800156e:	4b28      	ldr	r3, [pc, #160]	; (8001610 <MX_TIM3_Init+0xe4>)
 8001570:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001574:	60da      	str	r2, [r3, #12]
 8001576:	4b26      	ldr	r3, [pc, #152]	; (8001610 <MX_TIM3_Init+0xe4>)
 8001578:	2200      	movs	r2, #0
 800157a:	611a      	str	r2, [r3, #16]
 800157c:	4b24      	ldr	r3, [pc, #144]	; (8001610 <MX_TIM3_Init+0xe4>)
 800157e:	2200      	movs	r2, #0
 8001580:	619a      	str	r2, [r3, #24]
 8001582:	4823      	ldr	r0, [pc, #140]	; (8001610 <MX_TIM3_Init+0xe4>)
 8001584:	f001 f992 	bl	80028ac <HAL_TIM_Base_Init>
 8001588:	4603      	mov	r3, r0
 800158a:	2b00      	cmp	r3, #0
 800158c:	d001      	beq.n	8001592 <MX_TIM3_Init+0x66>
 800158e:	f7ff fc32 	bl	8000df6 <Error_Handler>
 8001592:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001596:	62bb      	str	r3, [r7, #40]	; 0x28
 8001598:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800159c:	4619      	mov	r1, r3
 800159e:	481c      	ldr	r0, [pc, #112]	; (8001610 <MX_TIM3_Init+0xe4>)
 80015a0:	f001 fce6 	bl	8002f70 <HAL_TIM_ConfigClockSource>
 80015a4:	4603      	mov	r3, r0
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d001      	beq.n	80015ae <MX_TIM3_Init+0x82>
 80015aa:	f7ff fc24 	bl	8000df6 <Error_Handler>
 80015ae:	4818      	ldr	r0, [pc, #96]	; (8001610 <MX_TIM3_Init+0xe4>)
 80015b0:	f001 fa1e 	bl	80029f0 <HAL_TIM_PWM_Init>
 80015b4:	4603      	mov	r3, r0
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d001      	beq.n	80015be <MX_TIM3_Init+0x92>
 80015ba:	f7ff fc1c 	bl	8000df6 <Error_Handler>
 80015be:	2300      	movs	r3, #0
 80015c0:	623b      	str	r3, [r7, #32]
 80015c2:	2300      	movs	r3, #0
 80015c4:	627b      	str	r3, [r7, #36]	; 0x24
 80015c6:	f107 0320 	add.w	r3, r7, #32
 80015ca:	4619      	mov	r1, r3
 80015cc:	4810      	ldr	r0, [pc, #64]	; (8001610 <MX_TIM3_Init+0xe4>)
 80015ce:	f002 f85b 	bl	8003688 <HAL_TIMEx_MasterConfigSynchronization>
 80015d2:	4603      	mov	r3, r0
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d001      	beq.n	80015dc <MX_TIM3_Init+0xb0>
 80015d8:	f7ff fc0d 	bl	8000df6 <Error_Handler>
 80015dc:	2360      	movs	r3, #96	; 0x60
 80015de:	607b      	str	r3, [r7, #4]
 80015e0:	2300      	movs	r3, #0
 80015e2:	60bb      	str	r3, [r7, #8]
 80015e4:	2300      	movs	r3, #0
 80015e6:	60fb      	str	r3, [r7, #12]
 80015e8:	2300      	movs	r3, #0
 80015ea:	617b      	str	r3, [r7, #20]
 80015ec:	1d3b      	adds	r3, r7, #4
 80015ee:	2200      	movs	r2, #0
 80015f0:	4619      	mov	r1, r3
 80015f2:	4807      	ldr	r0, [pc, #28]	; (8001610 <MX_TIM3_Init+0xe4>)
 80015f4:	f001 fbfe 	bl	8002df4 <HAL_TIM_PWM_ConfigChannel>
 80015f8:	4603      	mov	r3, r0
 80015fa:	2b00      	cmp	r3, #0
 80015fc:	d001      	beq.n	8001602 <MX_TIM3_Init+0xd6>
 80015fe:	f7ff fbfa 	bl	8000df6 <Error_Handler>
 8001602:	4803      	ldr	r0, [pc, #12]	; (8001610 <MX_TIM3_Init+0xe4>)
 8001604:	f000 f840 	bl	8001688 <HAL_TIM_MspPostInit>
 8001608:	bf00      	nop
 800160a:	3738      	adds	r7, #56	; 0x38
 800160c:	46bd      	mov	sp, r7
 800160e:	bd80      	pop	{r7, pc}
 8001610:	2000076c 	.word	0x2000076c
 8001614:	40000400 	.word	0x40000400

08001618 <HAL_TIM_Base_MspInit>:
 8001618:	b580      	push	{r7, lr}
 800161a:	b084      	sub	sp, #16
 800161c:	af00      	add	r7, sp, #0
 800161e:	6078      	str	r0, [r7, #4]
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001628:	d114      	bne.n	8001654 <HAL_TIM_Base_MspInit+0x3c>
 800162a:	4b15      	ldr	r3, [pc, #84]	; (8001680 <HAL_TIM_Base_MspInit+0x68>)
 800162c:	69db      	ldr	r3, [r3, #28]
 800162e:	4a14      	ldr	r2, [pc, #80]	; (8001680 <HAL_TIM_Base_MspInit+0x68>)
 8001630:	f043 0301 	orr.w	r3, r3, #1
 8001634:	61d3      	str	r3, [r2, #28]
 8001636:	4b12      	ldr	r3, [pc, #72]	; (8001680 <HAL_TIM_Base_MspInit+0x68>)
 8001638:	69db      	ldr	r3, [r3, #28]
 800163a:	f003 0301 	and.w	r3, r3, #1
 800163e:	60fb      	str	r3, [r7, #12]
 8001640:	68fb      	ldr	r3, [r7, #12]
 8001642:	2200      	movs	r2, #0
 8001644:	2100      	movs	r1, #0
 8001646:	201c      	movs	r0, #28
 8001648:	f000 faf1 	bl	8001c2e <HAL_NVIC_SetPriority>
 800164c:	201c      	movs	r0, #28
 800164e:	f000 fb0a 	bl	8001c66 <HAL_NVIC_EnableIRQ>
 8001652:	e010      	b.n	8001676 <HAL_TIM_Base_MspInit+0x5e>
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	681b      	ldr	r3, [r3, #0]
 8001658:	4a0a      	ldr	r2, [pc, #40]	; (8001684 <HAL_TIM_Base_MspInit+0x6c>)
 800165a:	4293      	cmp	r3, r2
 800165c:	d10b      	bne.n	8001676 <HAL_TIM_Base_MspInit+0x5e>
 800165e:	4b08      	ldr	r3, [pc, #32]	; (8001680 <HAL_TIM_Base_MspInit+0x68>)
 8001660:	69db      	ldr	r3, [r3, #28]
 8001662:	4a07      	ldr	r2, [pc, #28]	; (8001680 <HAL_TIM_Base_MspInit+0x68>)
 8001664:	f043 0302 	orr.w	r3, r3, #2
 8001668:	61d3      	str	r3, [r2, #28]
 800166a:	4b05      	ldr	r3, [pc, #20]	; (8001680 <HAL_TIM_Base_MspInit+0x68>)
 800166c:	69db      	ldr	r3, [r3, #28]
 800166e:	f003 0302 	and.w	r3, r3, #2
 8001672:	60bb      	str	r3, [r7, #8]
 8001674:	68bb      	ldr	r3, [r7, #8]
 8001676:	bf00      	nop
 8001678:	3710      	adds	r7, #16
 800167a:	46bd      	mov	sp, r7
 800167c:	bd80      	pop	{r7, pc}
 800167e:	bf00      	nop
 8001680:	40021000 	.word	0x40021000
 8001684:	40000400 	.word	0x40000400

08001688 <HAL_TIM_MspPostInit>:
 8001688:	b580      	push	{r7, lr}
 800168a:	b088      	sub	sp, #32
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
 8001690:	f107 0310 	add.w	r3, r7, #16
 8001694:	2200      	movs	r2, #0
 8001696:	601a      	str	r2, [r3, #0]
 8001698:	605a      	str	r2, [r3, #4]
 800169a:	609a      	str	r2, [r3, #8]
 800169c:	60da      	str	r2, [r3, #12]
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	4a0f      	ldr	r2, [pc, #60]	; (80016e0 <HAL_TIM_MspPostInit+0x58>)
 80016a4:	4293      	cmp	r3, r2
 80016a6:	d117      	bne.n	80016d8 <HAL_TIM_MspPostInit+0x50>
 80016a8:	4b0e      	ldr	r3, [pc, #56]	; (80016e4 <HAL_TIM_MspPostInit+0x5c>)
 80016aa:	699b      	ldr	r3, [r3, #24]
 80016ac:	4a0d      	ldr	r2, [pc, #52]	; (80016e4 <HAL_TIM_MspPostInit+0x5c>)
 80016ae:	f043 0304 	orr.w	r3, r3, #4
 80016b2:	6193      	str	r3, [r2, #24]
 80016b4:	4b0b      	ldr	r3, [pc, #44]	; (80016e4 <HAL_TIM_MspPostInit+0x5c>)
 80016b6:	699b      	ldr	r3, [r3, #24]
 80016b8:	f003 0304 	and.w	r3, r3, #4
 80016bc:	60fb      	str	r3, [r7, #12]
 80016be:	68fb      	ldr	r3, [r7, #12]
 80016c0:	2340      	movs	r3, #64	; 0x40
 80016c2:	613b      	str	r3, [r7, #16]
 80016c4:	2302      	movs	r3, #2
 80016c6:	617b      	str	r3, [r7, #20]
 80016c8:	2302      	movs	r3, #2
 80016ca:	61fb      	str	r3, [r7, #28]
 80016cc:	f107 0310 	add.w	r3, r7, #16
 80016d0:	4619      	mov	r1, r3
 80016d2:	4805      	ldr	r0, [pc, #20]	; (80016e8 <HAL_TIM_MspPostInit+0x60>)
 80016d4:	f000 fae2 	bl	8001c9c <HAL_GPIO_Init>
 80016d8:	bf00      	nop
 80016da:	3720      	adds	r7, #32
 80016dc:	46bd      	mov	sp, r7
 80016de:	bd80      	pop	{r7, pc}
 80016e0:	40000400 	.word	0x40000400
 80016e4:	40021000 	.word	0x40021000
 80016e8:	40010800 	.word	0x40010800

080016ec <trafficLightBlinkGrn>:
uint16_t trafficLightPin[NUM_OF_TRAFFIC_LIGHTS][NUM_OF_PORTS] = {
		{D2_Pin, D3_Pin},
		{D4_Pin, D5_Pin}
};

void trafficLightBlinkGrn(int index) {
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b082      	sub	sp, #8
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 80016f4:	4a0e      	ldr	r2, [pc, #56]	; (8001730 <trafficLightBlinkGrn+0x44>)
 80016f6:	687b      	ldr	r3, [r7, #4]
 80016f8:	00db      	lsls	r3, r3, #3
 80016fa:	4413      	add	r3, r2
 80016fc:	685a      	ldr	r2, [r3, #4]
 80016fe:	490d      	ldr	r1, [pc, #52]	; (8001734 <trafficLightBlinkGrn+0x48>)
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	009b      	lsls	r3, r3, #2
 8001704:	440b      	add	r3, r1
 8001706:	885b      	ldrh	r3, [r3, #2]
 8001708:	4619      	mov	r1, r3
 800170a:	4610      	mov	r0, r2
 800170c:	f000 fc79 	bl	8002002 <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
 8001710:	4a07      	ldr	r2, [pc, #28]	; (8001730 <trafficLightBlinkGrn+0x44>)
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001718:	4a06      	ldr	r2, [pc, #24]	; (8001734 <trafficLightBlinkGrn+0x48>)
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001720:	2200      	movs	r2, #0
 8001722:	4619      	mov	r1, r3
 8001724:	f000 fc55 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8001728:	bf00      	nop
 800172a:	3708      	adds	r7, #8
 800172c:	46bd      	mov	sp, r7
 800172e:	bd80      	pop	{r7, pc}
 8001730:	2000030c 	.word	0x2000030c
 8001734:	2000031c 	.word	0x2000031c

08001738 <trafficLightBlinkYel>:

void trafficLightBlinkYel(int index) {
 8001738:	b580      	push	{r7, lr}
 800173a:	b082      	sub	sp, #8
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 8001740:	4a0e      	ldr	r2, [pc, #56]	; (800177c <trafficLightBlinkYel+0x44>)
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	00db      	lsls	r3, r3, #3
 8001746:	4413      	add	r3, r2
 8001748:	685a      	ldr	r2, [r3, #4]
 800174a:	490d      	ldr	r1, [pc, #52]	; (8001780 <trafficLightBlinkYel+0x48>)
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	009b      	lsls	r3, r3, #2
 8001750:	440b      	add	r3, r1
 8001752:	885b      	ldrh	r3, [r3, #2]
 8001754:	4619      	mov	r1, r3
 8001756:	4610      	mov	r0, r2
 8001758:	f000 fc53 	bl	8002002 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
 800175c:	4a07      	ldr	r2, [pc, #28]	; (800177c <trafficLightBlinkYel+0x44>)
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8001764:	4906      	ldr	r1, [pc, #24]	; (8001780 <trafficLightBlinkYel+0x48>)
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	f831 3023 	ldrh.w	r3, [r1, r3, lsl #2]
 800176c:	4619      	mov	r1, r3
 800176e:	4610      	mov	r0, r2
 8001770:	f000 fc47 	bl	8002002 <HAL_GPIO_TogglePin>
}
 8001774:	bf00      	nop
 8001776:	3708      	adds	r7, #8
 8001778:	46bd      	mov	sp, r7
 800177a:	bd80      	pop	{r7, pc}
 800177c:	2000030c 	.word	0x2000030c
 8001780:	2000031c 	.word	0x2000031c

08001784 <trafficLightGrn>:
void trafficLightBlinkRed(int index) {
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
}

void trafficLightGrn(int index) {
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], ON);
 800178c:	4a0e      	ldr	r2, [pc, #56]	; (80017c8 <trafficLightGrn+0x44>)
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	00db      	lsls	r3, r3, #3
 8001792:	4413      	add	r3, r2
 8001794:	6858      	ldr	r0, [r3, #4]
 8001796:	4a0d      	ldr	r2, [pc, #52]	; (80017cc <trafficLightGrn+0x48>)
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	009b      	lsls	r3, r3, #2
 800179c:	4413      	add	r3, r2
 800179e:	885b      	ldrh	r3, [r3, #2]
 80017a0:	2201      	movs	r2, #1
 80017a2:	4619      	mov	r1, r3
 80017a4:	f000 fc15 	bl	8001fd2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
 80017a8:	4a07      	ldr	r2, [pc, #28]	; (80017c8 <trafficLightGrn+0x44>)
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80017b0:	4a06      	ldr	r2, [pc, #24]	; (80017cc <trafficLightGrn+0x48>)
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 80017b8:	2200      	movs	r2, #0
 80017ba:	4619      	mov	r1, r3
 80017bc:	f000 fc09 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 80017c0:	bf00      	nop
 80017c2:	3708      	adds	r7, #8
 80017c4:	46bd      	mov	sp, r7
 80017c6:	bd80      	pop	{r7, pc}
 80017c8:	2000030c 	.word	0x2000030c
 80017cc:	2000031c 	.word	0x2000031c

080017d0 <trafficLightYel>:

void trafficLightYel(int index) {
 80017d0:	b580      	push	{r7, lr}
 80017d2:	b082      	sub	sp, #8
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], ON);
 80017d8:	4a0e      	ldr	r2, [pc, #56]	; (8001814 <trafficLightYel+0x44>)
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	00db      	lsls	r3, r3, #3
 80017de:	4413      	add	r3, r2
 80017e0:	6858      	ldr	r0, [r3, #4]
 80017e2:	4a0d      	ldr	r2, [pc, #52]	; (8001818 <trafficLightYel+0x48>)
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	009b      	lsls	r3, r3, #2
 80017e8:	4413      	add	r3, r2
 80017ea:	885b      	ldrh	r3, [r3, #2]
 80017ec:	2201      	movs	r2, #1
 80017ee:	4619      	mov	r1, r3
 80017f0:	f000 fbef 	bl	8001fd2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], ON);
 80017f4:	4a07      	ldr	r2, [pc, #28]	; (8001814 <trafficLightYel+0x44>)
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80017fc:	4a06      	ldr	r2, [pc, #24]	; (8001818 <trafficLightYel+0x48>)
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001804:	2201      	movs	r2, #1
 8001806:	4619      	mov	r1, r3
 8001808:	f000 fbe3 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 800180c:	bf00      	nop
 800180e:	3708      	adds	r7, #8
 8001810:	46bd      	mov	sp, r7
 8001812:	bd80      	pop	{r7, pc}
 8001814:	2000030c 	.word	0x2000030c
 8001818:	2000031c 	.word	0x2000031c

0800181c <trafficLightRed>:

void trafficLightRed(int index) {
 800181c:	b580      	push	{r7, lr}
 800181e:	b082      	sub	sp, #8
 8001820:	af00      	add	r7, sp, #0
 8001822:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], ON);
 8001824:	4a0e      	ldr	r2, [pc, #56]	; (8001860 <trafficLightRed+0x44>)
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 800182c:	4a0d      	ldr	r2, [pc, #52]	; (8001864 <trafficLightRed+0x48>)
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001834:	2201      	movs	r2, #1
 8001836:	4619      	mov	r1, r3
 8001838:	f000 fbcb 	bl	8001fd2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
 800183c:	4a08      	ldr	r2, [pc, #32]	; (8001860 <trafficLightRed+0x44>)
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	00db      	lsls	r3, r3, #3
 8001842:	4413      	add	r3, r2
 8001844:	6858      	ldr	r0, [r3, #4]
 8001846:	4a07      	ldr	r2, [pc, #28]	; (8001864 <trafficLightRed+0x48>)
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	009b      	lsls	r3, r3, #2
 800184c:	4413      	add	r3, r2
 800184e:	885b      	ldrh	r3, [r3, #2]
 8001850:	2200      	movs	r2, #0
 8001852:	4619      	mov	r1, r3
 8001854:	f000 fbbd 	bl	8001fd2 <HAL_GPIO_WritePin>
}
 8001858:	bf00      	nop
 800185a:	3708      	adds	r7, #8
 800185c:	46bd      	mov	sp, r7
 800185e:	bd80      	pop	{r7, pc}
 8001860:	2000030c 	.word	0x2000030c
 8001864:	2000031c 	.word	0x2000031c

08001868 <displayCountdown>:
 */


#include "uart_communication.h"

void displayCountdown(int value) {
 8001868:	b580      	push	{r7, lr}
 800186a:	b090      	sub	sp, #64	; 0x40
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
	char str[50];
	HAL_UART_Transmit(&huart2, (uint8_t *)str, sprintf(str, "!7SEG=%d#\r\n", value), 1000);
 8001870:	f107 030c 	add.w	r3, r7, #12
 8001874:	687a      	ldr	r2, [r7, #4]
 8001876:	4908      	ldr	r1, [pc, #32]	; (8001898 <displayCountdown+0x30>)
 8001878:	4618      	mov	r0, r3
 800187a:	f002 f95f 	bl	8003b3c <siprintf>
 800187e:	4603      	mov	r3, r0
 8001880:	b29a      	uxth	r2, r3
 8001882:	f107 010c 	add.w	r1, r7, #12
 8001886:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800188a:	4804      	ldr	r0, [pc, #16]	; (800189c <displayCountdown+0x34>)
 800188c:	f001 ffb9 	bl	8003802 <HAL_UART_Transmit>
}
 8001890:	bf00      	nop
 8001892:	3740      	adds	r7, #64	; 0x40
 8001894:	46bd      	mov	sp, r7
 8001896:	bd80      	pop	{r7, pc}
 8001898:	08004448 	.word	0x08004448
 800189c:	200007b4 	.word	0x200007b4

080018a0 <MX_USART2_UART_Init>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	af00      	add	r7, sp, #0
 80018a4:	4b11      	ldr	r3, [pc, #68]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018a6:	4a12      	ldr	r2, [pc, #72]	; (80018f0 <MX_USART2_UART_Init+0x50>)
 80018a8:	601a      	str	r2, [r3, #0]
 80018aa:	4b10      	ldr	r3, [pc, #64]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018ac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80018b0:	605a      	str	r2, [r3, #4]
 80018b2:	4b0e      	ldr	r3, [pc, #56]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018b4:	2200      	movs	r2, #0
 80018b6:	609a      	str	r2, [r3, #8]
 80018b8:	4b0c      	ldr	r3, [pc, #48]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018ba:	2200      	movs	r2, #0
 80018bc:	60da      	str	r2, [r3, #12]
 80018be:	4b0b      	ldr	r3, [pc, #44]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018c0:	2200      	movs	r2, #0
 80018c2:	611a      	str	r2, [r3, #16]
 80018c4:	4b09      	ldr	r3, [pc, #36]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018c6:	220c      	movs	r2, #12
 80018c8:	615a      	str	r2, [r3, #20]
 80018ca:	4b08      	ldr	r3, [pc, #32]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018cc:	2200      	movs	r2, #0
 80018ce:	619a      	str	r2, [r3, #24]
 80018d0:	4b06      	ldr	r3, [pc, #24]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018d2:	2200      	movs	r2, #0
 80018d4:	61da      	str	r2, [r3, #28]
 80018d6:	4805      	ldr	r0, [pc, #20]	; (80018ec <MX_USART2_UART_Init+0x4c>)
 80018d8:	f001 ff46 	bl	8003768 <HAL_UART_Init>
 80018dc:	4603      	mov	r3, r0
 80018de:	2b00      	cmp	r3, #0
 80018e0:	d001      	beq.n	80018e6 <MX_USART2_UART_Init+0x46>
 80018e2:	f7ff fa88 	bl	8000df6 <Error_Handler>
 80018e6:	bf00      	nop
 80018e8:	bd80      	pop	{r7, pc}
 80018ea:	bf00      	nop
 80018ec:	200007b4 	.word	0x200007b4
 80018f0:	40004400 	.word	0x40004400

080018f4 <HAL_UART_MspInit>:
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b088      	sub	sp, #32
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	6078      	str	r0, [r7, #4]
 80018fc:	f107 0310 	add.w	r3, r7, #16
 8001900:	2200      	movs	r2, #0
 8001902:	601a      	str	r2, [r3, #0]
 8001904:	605a      	str	r2, [r3, #4]
 8001906:	609a      	str	r2, [r3, #8]
 8001908:	60da      	str	r2, [r3, #12]
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	4a15      	ldr	r2, [pc, #84]	; (8001964 <HAL_UART_MspInit+0x70>)
 8001910:	4293      	cmp	r3, r2
 8001912:	d123      	bne.n	800195c <HAL_UART_MspInit+0x68>
 8001914:	4b14      	ldr	r3, [pc, #80]	; (8001968 <HAL_UART_MspInit+0x74>)
 8001916:	69db      	ldr	r3, [r3, #28]
 8001918:	4a13      	ldr	r2, [pc, #76]	; (8001968 <HAL_UART_MspInit+0x74>)
 800191a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800191e:	61d3      	str	r3, [r2, #28]
 8001920:	4b11      	ldr	r3, [pc, #68]	; (8001968 <HAL_UART_MspInit+0x74>)
 8001922:	69db      	ldr	r3, [r3, #28]
 8001924:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001928:	60fb      	str	r3, [r7, #12]
 800192a:	68fb      	ldr	r3, [r7, #12]
 800192c:	4b0e      	ldr	r3, [pc, #56]	; (8001968 <HAL_UART_MspInit+0x74>)
 800192e:	699b      	ldr	r3, [r3, #24]
 8001930:	4a0d      	ldr	r2, [pc, #52]	; (8001968 <HAL_UART_MspInit+0x74>)
 8001932:	f043 0304 	orr.w	r3, r3, #4
 8001936:	6193      	str	r3, [r2, #24]
 8001938:	4b0b      	ldr	r3, [pc, #44]	; (8001968 <HAL_UART_MspInit+0x74>)
 800193a:	699b      	ldr	r3, [r3, #24]
 800193c:	f003 0304 	and.w	r3, r3, #4
 8001940:	60bb      	str	r3, [r7, #8]
 8001942:	68bb      	ldr	r3, [r7, #8]
 8001944:	230c      	movs	r3, #12
 8001946:	613b      	str	r3, [r7, #16]
 8001948:	2302      	movs	r3, #2
 800194a:	617b      	str	r3, [r7, #20]
 800194c:	2302      	movs	r3, #2
 800194e:	61fb      	str	r3, [r7, #28]
 8001950:	f107 0310 	add.w	r3, r7, #16
 8001954:	4619      	mov	r1, r3
 8001956:	4805      	ldr	r0, [pc, #20]	; (800196c <HAL_UART_MspInit+0x78>)
 8001958:	f000 f9a0 	bl	8001c9c <HAL_GPIO_Init>
 800195c:	bf00      	nop
 800195e:	3720      	adds	r7, #32
 8001960:	46bd      	mov	sp, r7
 8001962:	bd80      	pop	{r7, pc}
 8001964:	40004400 	.word	0x40004400
 8001968:	40021000 	.word	0x40021000
 800196c:	40010800 	.word	0x40010800

08001970 <Reset_Handler>:
 8001970:	480c      	ldr	r0, [pc, #48]	; (80019a4 <LoopFillZerobss+0x12>)
 8001972:	490d      	ldr	r1, [pc, #52]	; (80019a8 <LoopFillZerobss+0x16>)
 8001974:	4a0d      	ldr	r2, [pc, #52]	; (80019ac <LoopFillZerobss+0x1a>)
 8001976:	2300      	movs	r3, #0
 8001978:	e002      	b.n	8001980 <LoopCopyDataInit>

0800197a <CopyDataInit>:
 800197a:	58d4      	ldr	r4, [r2, r3]
 800197c:	50c4      	str	r4, [r0, r3]
 800197e:	3304      	adds	r3, #4

08001980 <LoopCopyDataInit>:
 8001980:	18c4      	adds	r4, r0, r3
 8001982:	428c      	cmp	r4, r1
 8001984:	d3f9      	bcc.n	800197a <CopyDataInit>
 8001986:	4a0a      	ldr	r2, [pc, #40]	; (80019b0 <LoopFillZerobss+0x1e>)
 8001988:	4c0a      	ldr	r4, [pc, #40]	; (80019b4 <LoopFillZerobss+0x22>)
 800198a:	2300      	movs	r3, #0
 800198c:	e001      	b.n	8001992 <LoopFillZerobss>

0800198e <FillZerobss>:
 800198e:	6013      	str	r3, [r2, #0]
 8001990:	3204      	adds	r2, #4

08001992 <LoopFillZerobss>:
 8001992:	42a2      	cmp	r2, r4
 8001994:	d3fb      	bcc.n	800198e <FillZerobss>
 8001996:	f7ff fd77 	bl	8001488 <SystemInit>
 800199a:	f002 f8a3 	bl	8003ae4 <__libc_init_array>
 800199e:	f7ff f9a7 	bl	8000cf0 <main>
 80019a2:	4770      	bx	lr
 80019a4:	20000000 	.word	0x20000000
 80019a8:	20000390 	.word	0x20000390
 80019ac:	080044b8 	.word	0x080044b8
 80019b0:	20000390 	.word	0x20000390
 80019b4:	2000080c 	.word	0x2000080c

080019b8 <ADC1_2_IRQHandler>:
 80019b8:	e7fe      	b.n	80019b8 <ADC1_2_IRQHandler>
	...

080019bc <HAL_Init>:
 80019bc:	b580      	push	{r7, lr}
 80019be:	af00      	add	r7, sp, #0
 80019c0:	4b08      	ldr	r3, [pc, #32]	; (80019e4 <HAL_Init+0x28>)
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	4a07      	ldr	r2, [pc, #28]	; (80019e4 <HAL_Init+0x28>)
 80019c6:	f043 0310 	orr.w	r3, r3, #16
 80019ca:	6013      	str	r3, [r2, #0]
 80019cc:	2003      	movs	r0, #3
 80019ce:	f000 f923 	bl	8001c18 <HAL_NVIC_SetPriorityGrouping>
 80019d2:	2000      	movs	r0, #0
 80019d4:	f000 f808 	bl	80019e8 <HAL_InitTick>
 80019d8:	f7ff fcb4 	bl	8001344 <HAL_MspInit>
 80019dc:	2300      	movs	r3, #0
 80019de:	4618      	mov	r0, r3
 80019e0:	bd80      	pop	{r7, pc}
 80019e2:	bf00      	nop
 80019e4:	40022000 	.word	0x40022000

080019e8 <HAL_InitTick>:
 80019e8:	b580      	push	{r7, lr}
 80019ea:	b082      	sub	sp, #8
 80019ec:	af00      	add	r7, sp, #0
 80019ee:	6078      	str	r0, [r7, #4]
 80019f0:	4b12      	ldr	r3, [pc, #72]	; (8001a3c <HAL_InitTick+0x54>)
 80019f2:	681a      	ldr	r2, [r3, #0]
 80019f4:	4b12      	ldr	r3, [pc, #72]	; (8001a40 <HAL_InitTick+0x58>)
 80019f6:	781b      	ldrb	r3, [r3, #0]
 80019f8:	4619      	mov	r1, r3
 80019fa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80019fe:	fbb3 f3f1 	udiv	r3, r3, r1
 8001a02:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a06:	4618      	mov	r0, r3
 8001a08:	f000 f93b 	bl	8001c82 <HAL_SYSTICK_Config>
 8001a0c:	4603      	mov	r3, r0
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	d001      	beq.n	8001a16 <HAL_InitTick+0x2e>
 8001a12:	2301      	movs	r3, #1
 8001a14:	e00e      	b.n	8001a34 <HAL_InitTick+0x4c>
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	2b0f      	cmp	r3, #15
 8001a1a:	d80a      	bhi.n	8001a32 <HAL_InitTick+0x4a>
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	6879      	ldr	r1, [r7, #4]
 8001a20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001a24:	f000 f903 	bl	8001c2e <HAL_NVIC_SetPriority>
 8001a28:	4a06      	ldr	r2, [pc, #24]	; (8001a44 <HAL_InitTick+0x5c>)
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	6013      	str	r3, [r2, #0]
 8001a2e:	2300      	movs	r3, #0
 8001a30:	e000      	b.n	8001a34 <HAL_InitTick+0x4c>
 8001a32:	2301      	movs	r3, #1
 8001a34:	4618      	mov	r0, r3
 8001a36:	3708      	adds	r7, #8
 8001a38:	46bd      	mov	sp, r7
 8001a3a:	bd80      	pop	{r7, pc}
 8001a3c:	20000308 	.word	0x20000308
 8001a40:	20000328 	.word	0x20000328
 8001a44:	20000324 	.word	0x20000324

08001a48 <HAL_IncTick>:
 8001a48:	b480      	push	{r7}
 8001a4a:	af00      	add	r7, sp, #0
 8001a4c:	4b05      	ldr	r3, [pc, #20]	; (8001a64 <HAL_IncTick+0x1c>)
 8001a4e:	781b      	ldrb	r3, [r3, #0]
 8001a50:	461a      	mov	r2, r3
 8001a52:	4b05      	ldr	r3, [pc, #20]	; (8001a68 <HAL_IncTick+0x20>)
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	4413      	add	r3, r2
 8001a58:	4a03      	ldr	r2, [pc, #12]	; (8001a68 <HAL_IncTick+0x20>)
 8001a5a:	6013      	str	r3, [r2, #0]
 8001a5c:	bf00      	nop
 8001a5e:	46bd      	mov	sp, r7
 8001a60:	bc80      	pop	{r7}
 8001a62:	4770      	bx	lr
 8001a64:	20000328 	.word	0x20000328
 8001a68:	200007f8 	.word	0x200007f8

08001a6c <HAL_GetTick>:
 8001a6c:	b480      	push	{r7}
 8001a6e:	af00      	add	r7, sp, #0
 8001a70:	4b02      	ldr	r3, [pc, #8]	; (8001a7c <HAL_GetTick+0x10>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	4618      	mov	r0, r3
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bc80      	pop	{r7}
 8001a7a:	4770      	bx	lr
 8001a7c:	200007f8 	.word	0x200007f8

08001a80 <__NVIC_SetPriorityGrouping>:
 8001a80:	b480      	push	{r7}
 8001a82:	b085      	sub	sp, #20
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	f003 0307 	and.w	r3, r3, #7
 8001a8e:	60fb      	str	r3, [r7, #12]
 8001a90:	4b0c      	ldr	r3, [pc, #48]	; (8001ac4 <__NVIC_SetPriorityGrouping+0x44>)
 8001a92:	68db      	ldr	r3, [r3, #12]
 8001a94:	60bb      	str	r3, [r7, #8]
 8001a96:	68ba      	ldr	r2, [r7, #8]
 8001a98:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001a9c:	4013      	ands	r3, r2
 8001a9e:	60bb      	str	r3, [r7, #8]
 8001aa0:	68fb      	ldr	r3, [r7, #12]
 8001aa2:	021a      	lsls	r2, r3, #8
 8001aa4:	68bb      	ldr	r3, [r7, #8]
 8001aa6:	4313      	orrs	r3, r2
 8001aa8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001aac:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001ab0:	60bb      	str	r3, [r7, #8]
 8001ab2:	4a04      	ldr	r2, [pc, #16]	; (8001ac4 <__NVIC_SetPriorityGrouping+0x44>)
 8001ab4:	68bb      	ldr	r3, [r7, #8]
 8001ab6:	60d3      	str	r3, [r2, #12]
 8001ab8:	bf00      	nop
 8001aba:	3714      	adds	r7, #20
 8001abc:	46bd      	mov	sp, r7
 8001abe:	bc80      	pop	{r7}
 8001ac0:	4770      	bx	lr
 8001ac2:	bf00      	nop
 8001ac4:	e000ed00 	.word	0xe000ed00

08001ac8 <__NVIC_GetPriorityGrouping>:
 8001ac8:	b480      	push	{r7}
 8001aca:	af00      	add	r7, sp, #0
 8001acc:	4b04      	ldr	r3, [pc, #16]	; (8001ae0 <__NVIC_GetPriorityGrouping+0x18>)
 8001ace:	68db      	ldr	r3, [r3, #12]
 8001ad0:	0a1b      	lsrs	r3, r3, #8
 8001ad2:	f003 0307 	and.w	r3, r3, #7
 8001ad6:	4618      	mov	r0, r3
 8001ad8:	46bd      	mov	sp, r7
 8001ada:	bc80      	pop	{r7}
 8001adc:	4770      	bx	lr
 8001ade:	bf00      	nop
 8001ae0:	e000ed00 	.word	0xe000ed00

08001ae4 <__NVIC_EnableIRQ>:
 8001ae4:	b480      	push	{r7}
 8001ae6:	b083      	sub	sp, #12
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	4603      	mov	r3, r0
 8001aec:	71fb      	strb	r3, [r7, #7]
 8001aee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	db0b      	blt.n	8001b0e <__NVIC_EnableIRQ+0x2a>
 8001af6:	79fb      	ldrb	r3, [r7, #7]
 8001af8:	f003 021f 	and.w	r2, r3, #31
 8001afc:	4906      	ldr	r1, [pc, #24]	; (8001b18 <__NVIC_EnableIRQ+0x34>)
 8001afe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b02:	095b      	lsrs	r3, r3, #5
 8001b04:	2001      	movs	r0, #1
 8001b06:	fa00 f202 	lsl.w	r2, r0, r2
 8001b0a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001b0e:	bf00      	nop
 8001b10:	370c      	adds	r7, #12
 8001b12:	46bd      	mov	sp, r7
 8001b14:	bc80      	pop	{r7}
 8001b16:	4770      	bx	lr
 8001b18:	e000e100 	.word	0xe000e100

08001b1c <__NVIC_SetPriority>:
 8001b1c:	b480      	push	{r7}
 8001b1e:	b083      	sub	sp, #12
 8001b20:	af00      	add	r7, sp, #0
 8001b22:	4603      	mov	r3, r0
 8001b24:	6039      	str	r1, [r7, #0]
 8001b26:	71fb      	strb	r3, [r7, #7]
 8001b28:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	db0a      	blt.n	8001b46 <__NVIC_SetPriority+0x2a>
 8001b30:	683b      	ldr	r3, [r7, #0]
 8001b32:	b2da      	uxtb	r2, r3
 8001b34:	490c      	ldr	r1, [pc, #48]	; (8001b68 <__NVIC_SetPriority+0x4c>)
 8001b36:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b3a:	0112      	lsls	r2, r2, #4
 8001b3c:	b2d2      	uxtb	r2, r2
 8001b3e:	440b      	add	r3, r1
 8001b40:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001b44:	e00a      	b.n	8001b5c <__NVIC_SetPriority+0x40>
 8001b46:	683b      	ldr	r3, [r7, #0]
 8001b48:	b2da      	uxtb	r2, r3
 8001b4a:	4908      	ldr	r1, [pc, #32]	; (8001b6c <__NVIC_SetPriority+0x50>)
 8001b4c:	79fb      	ldrb	r3, [r7, #7]
 8001b4e:	f003 030f 	and.w	r3, r3, #15
 8001b52:	3b04      	subs	r3, #4
 8001b54:	0112      	lsls	r2, r2, #4
 8001b56:	b2d2      	uxtb	r2, r2
 8001b58:	440b      	add	r3, r1
 8001b5a:	761a      	strb	r2, [r3, #24]
 8001b5c:	bf00      	nop
 8001b5e:	370c      	adds	r7, #12
 8001b60:	46bd      	mov	sp, r7
 8001b62:	bc80      	pop	{r7}
 8001b64:	4770      	bx	lr
 8001b66:	bf00      	nop
 8001b68:	e000e100 	.word	0xe000e100
 8001b6c:	e000ed00 	.word	0xe000ed00

08001b70 <NVIC_EncodePriority>:
 8001b70:	b480      	push	{r7}
 8001b72:	b089      	sub	sp, #36	; 0x24
 8001b74:	af00      	add	r7, sp, #0
 8001b76:	60f8      	str	r0, [r7, #12]
 8001b78:	60b9      	str	r1, [r7, #8]
 8001b7a:	607a      	str	r2, [r7, #4]
 8001b7c:	68fb      	ldr	r3, [r7, #12]
 8001b7e:	f003 0307 	and.w	r3, r3, #7
 8001b82:	61fb      	str	r3, [r7, #28]
 8001b84:	69fb      	ldr	r3, [r7, #28]
 8001b86:	f1c3 0307 	rsb	r3, r3, #7
 8001b8a:	2b04      	cmp	r3, #4
 8001b8c:	bf28      	it	cs
 8001b8e:	2304      	movcs	r3, #4
 8001b90:	61bb      	str	r3, [r7, #24]
 8001b92:	69fb      	ldr	r3, [r7, #28]
 8001b94:	3304      	adds	r3, #4
 8001b96:	2b06      	cmp	r3, #6
 8001b98:	d902      	bls.n	8001ba0 <NVIC_EncodePriority+0x30>
 8001b9a:	69fb      	ldr	r3, [r7, #28]
 8001b9c:	3b03      	subs	r3, #3
 8001b9e:	e000      	b.n	8001ba2 <NVIC_EncodePriority+0x32>
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	617b      	str	r3, [r7, #20]
 8001ba4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001ba8:	69bb      	ldr	r3, [r7, #24]
 8001baa:	fa02 f303 	lsl.w	r3, r2, r3
 8001bae:	43da      	mvns	r2, r3
 8001bb0:	68bb      	ldr	r3, [r7, #8]
 8001bb2:	401a      	ands	r2, r3
 8001bb4:	697b      	ldr	r3, [r7, #20]
 8001bb6:	409a      	lsls	r2, r3
 8001bb8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001bbc:	697b      	ldr	r3, [r7, #20]
 8001bbe:	fa01 f303 	lsl.w	r3, r1, r3
 8001bc2:	43d9      	mvns	r1, r3
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	400b      	ands	r3, r1
 8001bc8:	4313      	orrs	r3, r2
 8001bca:	4618      	mov	r0, r3
 8001bcc:	3724      	adds	r7, #36	; 0x24
 8001bce:	46bd      	mov	sp, r7
 8001bd0:	bc80      	pop	{r7}
 8001bd2:	4770      	bx	lr

08001bd4 <SysTick_Config>:
 8001bd4:	b580      	push	{r7, lr}
 8001bd6:	b082      	sub	sp, #8
 8001bd8:	af00      	add	r7, sp, #0
 8001bda:	6078      	str	r0, [r7, #4]
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	3b01      	subs	r3, #1
 8001be0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001be4:	d301      	bcc.n	8001bea <SysTick_Config+0x16>
 8001be6:	2301      	movs	r3, #1
 8001be8:	e00f      	b.n	8001c0a <SysTick_Config+0x36>
 8001bea:	4a0a      	ldr	r2, [pc, #40]	; (8001c14 <SysTick_Config+0x40>)
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	3b01      	subs	r3, #1
 8001bf0:	6053      	str	r3, [r2, #4]
 8001bf2:	210f      	movs	r1, #15
 8001bf4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bf8:	f7ff ff90 	bl	8001b1c <__NVIC_SetPriority>
 8001bfc:	4b05      	ldr	r3, [pc, #20]	; (8001c14 <SysTick_Config+0x40>)
 8001bfe:	2200      	movs	r2, #0
 8001c00:	609a      	str	r2, [r3, #8]
 8001c02:	4b04      	ldr	r3, [pc, #16]	; (8001c14 <SysTick_Config+0x40>)
 8001c04:	2207      	movs	r2, #7
 8001c06:	601a      	str	r2, [r3, #0]
 8001c08:	2300      	movs	r3, #0
 8001c0a:	4618      	mov	r0, r3
 8001c0c:	3708      	adds	r7, #8
 8001c0e:	46bd      	mov	sp, r7
 8001c10:	bd80      	pop	{r7, pc}
 8001c12:	bf00      	nop
 8001c14:	e000e010 	.word	0xe000e010

08001c18 <HAL_NVIC_SetPriorityGrouping>:
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b082      	sub	sp, #8
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	6078      	str	r0, [r7, #4]
 8001c20:	6878      	ldr	r0, [r7, #4]
 8001c22:	f7ff ff2d 	bl	8001a80 <__NVIC_SetPriorityGrouping>
 8001c26:	bf00      	nop
 8001c28:	3708      	adds	r7, #8
 8001c2a:	46bd      	mov	sp, r7
 8001c2c:	bd80      	pop	{r7, pc}

08001c2e <HAL_NVIC_SetPriority>:
 8001c2e:	b580      	push	{r7, lr}
 8001c30:	b086      	sub	sp, #24
 8001c32:	af00      	add	r7, sp, #0
 8001c34:	4603      	mov	r3, r0
 8001c36:	60b9      	str	r1, [r7, #8]
 8001c38:	607a      	str	r2, [r7, #4]
 8001c3a:	73fb      	strb	r3, [r7, #15]
 8001c3c:	2300      	movs	r3, #0
 8001c3e:	617b      	str	r3, [r7, #20]
 8001c40:	f7ff ff42 	bl	8001ac8 <__NVIC_GetPriorityGrouping>
 8001c44:	6178      	str	r0, [r7, #20]
 8001c46:	687a      	ldr	r2, [r7, #4]
 8001c48:	68b9      	ldr	r1, [r7, #8]
 8001c4a:	6978      	ldr	r0, [r7, #20]
 8001c4c:	f7ff ff90 	bl	8001b70 <NVIC_EncodePriority>
 8001c50:	4602      	mov	r2, r0
 8001c52:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c56:	4611      	mov	r1, r2
 8001c58:	4618      	mov	r0, r3
 8001c5a:	f7ff ff5f 	bl	8001b1c <__NVIC_SetPriority>
 8001c5e:	bf00      	nop
 8001c60:	3718      	adds	r7, #24
 8001c62:	46bd      	mov	sp, r7
 8001c64:	bd80      	pop	{r7, pc}

08001c66 <HAL_NVIC_EnableIRQ>:
 8001c66:	b580      	push	{r7, lr}
 8001c68:	b082      	sub	sp, #8
 8001c6a:	af00      	add	r7, sp, #0
 8001c6c:	4603      	mov	r3, r0
 8001c6e:	71fb      	strb	r3, [r7, #7]
 8001c70:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c74:	4618      	mov	r0, r3
 8001c76:	f7ff ff35 	bl	8001ae4 <__NVIC_EnableIRQ>
 8001c7a:	bf00      	nop
 8001c7c:	3708      	adds	r7, #8
 8001c7e:	46bd      	mov	sp, r7
 8001c80:	bd80      	pop	{r7, pc}

08001c82 <HAL_SYSTICK_Config>:
 8001c82:	b580      	push	{r7, lr}
 8001c84:	b082      	sub	sp, #8
 8001c86:	af00      	add	r7, sp, #0
 8001c88:	6078      	str	r0, [r7, #4]
 8001c8a:	6878      	ldr	r0, [r7, #4]
 8001c8c:	f7ff ffa2 	bl	8001bd4 <SysTick_Config>
 8001c90:	4603      	mov	r3, r0
 8001c92:	4618      	mov	r0, r3
 8001c94:	3708      	adds	r7, #8
 8001c96:	46bd      	mov	sp, r7
 8001c98:	bd80      	pop	{r7, pc}
	...

08001c9c <HAL_GPIO_Init>:
 8001c9c:	b480      	push	{r7}
 8001c9e:	b08b      	sub	sp, #44	; 0x2c
 8001ca0:	af00      	add	r7, sp, #0
 8001ca2:	6078      	str	r0, [r7, #4]
 8001ca4:	6039      	str	r1, [r7, #0]
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	627b      	str	r3, [r7, #36]	; 0x24
 8001caa:	2300      	movs	r3, #0
 8001cac:	623b      	str	r3, [r7, #32]
 8001cae:	e169      	b.n	8001f84 <HAL_GPIO_Init+0x2e8>
 8001cb0:	2201      	movs	r2, #1
 8001cb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cb4:	fa02 f303 	lsl.w	r3, r2, r3
 8001cb8:	61fb      	str	r3, [r7, #28]
 8001cba:	683b      	ldr	r3, [r7, #0]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	69fa      	ldr	r2, [r7, #28]
 8001cc0:	4013      	ands	r3, r2
 8001cc2:	61bb      	str	r3, [r7, #24]
 8001cc4:	69ba      	ldr	r2, [r7, #24]
 8001cc6:	69fb      	ldr	r3, [r7, #28]
 8001cc8:	429a      	cmp	r2, r3
 8001cca:	f040 8158 	bne.w	8001f7e <HAL_GPIO_Init+0x2e2>
 8001cce:	683b      	ldr	r3, [r7, #0]
 8001cd0:	685b      	ldr	r3, [r3, #4]
 8001cd2:	4a9a      	ldr	r2, [pc, #616]	; (8001f3c <HAL_GPIO_Init+0x2a0>)
 8001cd4:	4293      	cmp	r3, r2
 8001cd6:	d05e      	beq.n	8001d96 <HAL_GPIO_Init+0xfa>
 8001cd8:	4a98      	ldr	r2, [pc, #608]	; (8001f3c <HAL_GPIO_Init+0x2a0>)
 8001cda:	4293      	cmp	r3, r2
 8001cdc:	d875      	bhi.n	8001dca <HAL_GPIO_Init+0x12e>
 8001cde:	4a98      	ldr	r2, [pc, #608]	; (8001f40 <HAL_GPIO_Init+0x2a4>)
 8001ce0:	4293      	cmp	r3, r2
 8001ce2:	d058      	beq.n	8001d96 <HAL_GPIO_Init+0xfa>
 8001ce4:	4a96      	ldr	r2, [pc, #600]	; (8001f40 <HAL_GPIO_Init+0x2a4>)
 8001ce6:	4293      	cmp	r3, r2
 8001ce8:	d86f      	bhi.n	8001dca <HAL_GPIO_Init+0x12e>
 8001cea:	4a96      	ldr	r2, [pc, #600]	; (8001f44 <HAL_GPIO_Init+0x2a8>)
 8001cec:	4293      	cmp	r3, r2
 8001cee:	d052      	beq.n	8001d96 <HAL_GPIO_Init+0xfa>
 8001cf0:	4a94      	ldr	r2, [pc, #592]	; (8001f44 <HAL_GPIO_Init+0x2a8>)
 8001cf2:	4293      	cmp	r3, r2
 8001cf4:	d869      	bhi.n	8001dca <HAL_GPIO_Init+0x12e>
 8001cf6:	4a94      	ldr	r2, [pc, #592]	; (8001f48 <HAL_GPIO_Init+0x2ac>)
 8001cf8:	4293      	cmp	r3, r2
 8001cfa:	d04c      	beq.n	8001d96 <HAL_GPIO_Init+0xfa>
 8001cfc:	4a92      	ldr	r2, [pc, #584]	; (8001f48 <HAL_GPIO_Init+0x2ac>)
 8001cfe:	4293      	cmp	r3, r2
 8001d00:	d863      	bhi.n	8001dca <HAL_GPIO_Init+0x12e>
 8001d02:	4a92      	ldr	r2, [pc, #584]	; (8001f4c <HAL_GPIO_Init+0x2b0>)
 8001d04:	4293      	cmp	r3, r2
 8001d06:	d046      	beq.n	8001d96 <HAL_GPIO_Init+0xfa>
 8001d08:	4a90      	ldr	r2, [pc, #576]	; (8001f4c <HAL_GPIO_Init+0x2b0>)
 8001d0a:	4293      	cmp	r3, r2
 8001d0c:	d85d      	bhi.n	8001dca <HAL_GPIO_Init+0x12e>
 8001d0e:	2b12      	cmp	r3, #18
 8001d10:	d82a      	bhi.n	8001d68 <HAL_GPIO_Init+0xcc>
 8001d12:	2b12      	cmp	r3, #18
 8001d14:	d859      	bhi.n	8001dca <HAL_GPIO_Init+0x12e>
 8001d16:	a201      	add	r2, pc, #4	; (adr r2, 8001d1c <HAL_GPIO_Init+0x80>)
 8001d18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001d1c:	08001d97 	.word	0x08001d97
 8001d20:	08001d71 	.word	0x08001d71
 8001d24:	08001d83 	.word	0x08001d83
 8001d28:	08001dc5 	.word	0x08001dc5
 8001d2c:	08001dcb 	.word	0x08001dcb
 8001d30:	08001dcb 	.word	0x08001dcb
 8001d34:	08001dcb 	.word	0x08001dcb
 8001d38:	08001dcb 	.word	0x08001dcb
 8001d3c:	08001dcb 	.word	0x08001dcb
 8001d40:	08001dcb 	.word	0x08001dcb
 8001d44:	08001dcb 	.word	0x08001dcb
 8001d48:	08001dcb 	.word	0x08001dcb
 8001d4c:	08001dcb 	.word	0x08001dcb
 8001d50:	08001dcb 	.word	0x08001dcb
 8001d54:	08001dcb 	.word	0x08001dcb
 8001d58:	08001dcb 	.word	0x08001dcb
 8001d5c:	08001dcb 	.word	0x08001dcb
 8001d60:	08001d79 	.word	0x08001d79
 8001d64:	08001d8d 	.word	0x08001d8d
 8001d68:	4a79      	ldr	r2, [pc, #484]	; (8001f50 <HAL_GPIO_Init+0x2b4>)
 8001d6a:	4293      	cmp	r3, r2
 8001d6c:	d013      	beq.n	8001d96 <HAL_GPIO_Init+0xfa>
 8001d6e:	e02c      	b.n	8001dca <HAL_GPIO_Init+0x12e>
 8001d70:	683b      	ldr	r3, [r7, #0]
 8001d72:	68db      	ldr	r3, [r3, #12]
 8001d74:	623b      	str	r3, [r7, #32]
 8001d76:	e029      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001d78:	683b      	ldr	r3, [r7, #0]
 8001d7a:	68db      	ldr	r3, [r3, #12]
 8001d7c:	3304      	adds	r3, #4
 8001d7e:	623b      	str	r3, [r7, #32]
 8001d80:	e024      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001d82:	683b      	ldr	r3, [r7, #0]
 8001d84:	68db      	ldr	r3, [r3, #12]
 8001d86:	3308      	adds	r3, #8
 8001d88:	623b      	str	r3, [r7, #32]
 8001d8a:	e01f      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001d8c:	683b      	ldr	r3, [r7, #0]
 8001d8e:	68db      	ldr	r3, [r3, #12]
 8001d90:	330c      	adds	r3, #12
 8001d92:	623b      	str	r3, [r7, #32]
 8001d94:	e01a      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001d96:	683b      	ldr	r3, [r7, #0]
 8001d98:	689b      	ldr	r3, [r3, #8]
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d102      	bne.n	8001da4 <HAL_GPIO_Init+0x108>
 8001d9e:	2304      	movs	r3, #4
 8001da0:	623b      	str	r3, [r7, #32]
 8001da2:	e013      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001da4:	683b      	ldr	r3, [r7, #0]
 8001da6:	689b      	ldr	r3, [r3, #8]
 8001da8:	2b01      	cmp	r3, #1
 8001daa:	d105      	bne.n	8001db8 <HAL_GPIO_Init+0x11c>
 8001dac:	2308      	movs	r3, #8
 8001dae:	623b      	str	r3, [r7, #32]
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	69fa      	ldr	r2, [r7, #28]
 8001db4:	611a      	str	r2, [r3, #16]
 8001db6:	e009      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001db8:	2308      	movs	r3, #8
 8001dba:	623b      	str	r3, [r7, #32]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	69fa      	ldr	r2, [r7, #28]
 8001dc0:	615a      	str	r2, [r3, #20]
 8001dc2:	e003      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001dc4:	2300      	movs	r3, #0
 8001dc6:	623b      	str	r3, [r7, #32]
 8001dc8:	e000      	b.n	8001dcc <HAL_GPIO_Init+0x130>
 8001dca:	bf00      	nop
 8001dcc:	69bb      	ldr	r3, [r7, #24]
 8001dce:	2bff      	cmp	r3, #255	; 0xff
 8001dd0:	d801      	bhi.n	8001dd6 <HAL_GPIO_Init+0x13a>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	e001      	b.n	8001dda <HAL_GPIO_Init+0x13e>
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	3304      	adds	r3, #4
 8001dda:	617b      	str	r3, [r7, #20]
 8001ddc:	69bb      	ldr	r3, [r7, #24]
 8001dde:	2bff      	cmp	r3, #255	; 0xff
 8001de0:	d802      	bhi.n	8001de8 <HAL_GPIO_Init+0x14c>
 8001de2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001de4:	009b      	lsls	r3, r3, #2
 8001de6:	e002      	b.n	8001dee <HAL_GPIO_Init+0x152>
 8001de8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001dea:	3b08      	subs	r3, #8
 8001dec:	009b      	lsls	r3, r3, #2
 8001dee:	613b      	str	r3, [r7, #16]
 8001df0:	697b      	ldr	r3, [r7, #20]
 8001df2:	681a      	ldr	r2, [r3, #0]
 8001df4:	210f      	movs	r1, #15
 8001df6:	693b      	ldr	r3, [r7, #16]
 8001df8:	fa01 f303 	lsl.w	r3, r1, r3
 8001dfc:	43db      	mvns	r3, r3
 8001dfe:	401a      	ands	r2, r3
 8001e00:	6a39      	ldr	r1, [r7, #32]
 8001e02:	693b      	ldr	r3, [r7, #16]
 8001e04:	fa01 f303 	lsl.w	r3, r1, r3
 8001e08:	431a      	orrs	r2, r3
 8001e0a:	697b      	ldr	r3, [r7, #20]
 8001e0c:	601a      	str	r2, [r3, #0]
 8001e0e:	683b      	ldr	r3, [r7, #0]
 8001e10:	685b      	ldr	r3, [r3, #4]
 8001e12:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	f000 80b1 	beq.w	8001f7e <HAL_GPIO_Init+0x2e2>
 8001e1c:	4b4d      	ldr	r3, [pc, #308]	; (8001f54 <HAL_GPIO_Init+0x2b8>)
 8001e1e:	699b      	ldr	r3, [r3, #24]
 8001e20:	4a4c      	ldr	r2, [pc, #304]	; (8001f54 <HAL_GPIO_Init+0x2b8>)
 8001e22:	f043 0301 	orr.w	r3, r3, #1
 8001e26:	6193      	str	r3, [r2, #24]
 8001e28:	4b4a      	ldr	r3, [pc, #296]	; (8001f54 <HAL_GPIO_Init+0x2b8>)
 8001e2a:	699b      	ldr	r3, [r3, #24]
 8001e2c:	f003 0301 	and.w	r3, r3, #1
 8001e30:	60bb      	str	r3, [r7, #8]
 8001e32:	68bb      	ldr	r3, [r7, #8]
 8001e34:	4a48      	ldr	r2, [pc, #288]	; (8001f58 <HAL_GPIO_Init+0x2bc>)
 8001e36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e38:	089b      	lsrs	r3, r3, #2
 8001e3a:	3302      	adds	r3, #2
 8001e3c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e40:	60fb      	str	r3, [r7, #12]
 8001e42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e44:	f003 0303 	and.w	r3, r3, #3
 8001e48:	009b      	lsls	r3, r3, #2
 8001e4a:	220f      	movs	r2, #15
 8001e4c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e50:	43db      	mvns	r3, r3
 8001e52:	68fa      	ldr	r2, [r7, #12]
 8001e54:	4013      	ands	r3, r2
 8001e56:	60fb      	str	r3, [r7, #12]
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	4a40      	ldr	r2, [pc, #256]	; (8001f5c <HAL_GPIO_Init+0x2c0>)
 8001e5c:	4293      	cmp	r3, r2
 8001e5e:	d013      	beq.n	8001e88 <HAL_GPIO_Init+0x1ec>
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	4a3f      	ldr	r2, [pc, #252]	; (8001f60 <HAL_GPIO_Init+0x2c4>)
 8001e64:	4293      	cmp	r3, r2
 8001e66:	d00d      	beq.n	8001e84 <HAL_GPIO_Init+0x1e8>
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	4a3e      	ldr	r2, [pc, #248]	; (8001f64 <HAL_GPIO_Init+0x2c8>)
 8001e6c:	4293      	cmp	r3, r2
 8001e6e:	d007      	beq.n	8001e80 <HAL_GPIO_Init+0x1e4>
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	4a3d      	ldr	r2, [pc, #244]	; (8001f68 <HAL_GPIO_Init+0x2cc>)
 8001e74:	4293      	cmp	r3, r2
 8001e76:	d101      	bne.n	8001e7c <HAL_GPIO_Init+0x1e0>
 8001e78:	2303      	movs	r3, #3
 8001e7a:	e006      	b.n	8001e8a <HAL_GPIO_Init+0x1ee>
 8001e7c:	2304      	movs	r3, #4
 8001e7e:	e004      	b.n	8001e8a <HAL_GPIO_Init+0x1ee>
 8001e80:	2302      	movs	r3, #2
 8001e82:	e002      	b.n	8001e8a <HAL_GPIO_Init+0x1ee>
 8001e84:	2301      	movs	r3, #1
 8001e86:	e000      	b.n	8001e8a <HAL_GPIO_Init+0x1ee>
 8001e88:	2300      	movs	r3, #0
 8001e8a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001e8c:	f002 0203 	and.w	r2, r2, #3
 8001e90:	0092      	lsls	r2, r2, #2
 8001e92:	4093      	lsls	r3, r2
 8001e94:	68fa      	ldr	r2, [r7, #12]
 8001e96:	4313      	orrs	r3, r2
 8001e98:	60fb      	str	r3, [r7, #12]
 8001e9a:	492f      	ldr	r1, [pc, #188]	; (8001f58 <HAL_GPIO_Init+0x2bc>)
 8001e9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e9e:	089b      	lsrs	r3, r3, #2
 8001ea0:	3302      	adds	r3, #2
 8001ea2:	68fa      	ldr	r2, [r7, #12]
 8001ea4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001ea8:	683b      	ldr	r3, [r7, #0]
 8001eaa:	685b      	ldr	r3, [r3, #4]
 8001eac:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001eb0:	2b00      	cmp	r3, #0
 8001eb2:	d006      	beq.n	8001ec2 <HAL_GPIO_Init+0x226>
 8001eb4:	4b2d      	ldr	r3, [pc, #180]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001eb6:	681a      	ldr	r2, [r3, #0]
 8001eb8:	492c      	ldr	r1, [pc, #176]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001eba:	69bb      	ldr	r3, [r7, #24]
 8001ebc:	4313      	orrs	r3, r2
 8001ebe:	600b      	str	r3, [r1, #0]
 8001ec0:	e006      	b.n	8001ed0 <HAL_GPIO_Init+0x234>
 8001ec2:	4b2a      	ldr	r3, [pc, #168]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001ec4:	681a      	ldr	r2, [r3, #0]
 8001ec6:	69bb      	ldr	r3, [r7, #24]
 8001ec8:	43db      	mvns	r3, r3
 8001eca:	4928      	ldr	r1, [pc, #160]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001ecc:	4013      	ands	r3, r2
 8001ece:	600b      	str	r3, [r1, #0]
 8001ed0:	683b      	ldr	r3, [r7, #0]
 8001ed2:	685b      	ldr	r3, [r3, #4]
 8001ed4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	d006      	beq.n	8001eea <HAL_GPIO_Init+0x24e>
 8001edc:	4b23      	ldr	r3, [pc, #140]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001ede:	685a      	ldr	r2, [r3, #4]
 8001ee0:	4922      	ldr	r1, [pc, #136]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001ee2:	69bb      	ldr	r3, [r7, #24]
 8001ee4:	4313      	orrs	r3, r2
 8001ee6:	604b      	str	r3, [r1, #4]
 8001ee8:	e006      	b.n	8001ef8 <HAL_GPIO_Init+0x25c>
 8001eea:	4b20      	ldr	r3, [pc, #128]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001eec:	685a      	ldr	r2, [r3, #4]
 8001eee:	69bb      	ldr	r3, [r7, #24]
 8001ef0:	43db      	mvns	r3, r3
 8001ef2:	491e      	ldr	r1, [pc, #120]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001ef4:	4013      	ands	r3, r2
 8001ef6:	604b      	str	r3, [r1, #4]
 8001ef8:	683b      	ldr	r3, [r7, #0]
 8001efa:	685b      	ldr	r3, [r3, #4]
 8001efc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001f00:	2b00      	cmp	r3, #0
 8001f02:	d006      	beq.n	8001f12 <HAL_GPIO_Init+0x276>
 8001f04:	4b19      	ldr	r3, [pc, #100]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001f06:	689a      	ldr	r2, [r3, #8]
 8001f08:	4918      	ldr	r1, [pc, #96]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001f0a:	69bb      	ldr	r3, [r7, #24]
 8001f0c:	4313      	orrs	r3, r2
 8001f0e:	608b      	str	r3, [r1, #8]
 8001f10:	e006      	b.n	8001f20 <HAL_GPIO_Init+0x284>
 8001f12:	4b16      	ldr	r3, [pc, #88]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001f14:	689a      	ldr	r2, [r3, #8]
 8001f16:	69bb      	ldr	r3, [r7, #24]
 8001f18:	43db      	mvns	r3, r3
 8001f1a:	4914      	ldr	r1, [pc, #80]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001f1c:	4013      	ands	r3, r2
 8001f1e:	608b      	str	r3, [r1, #8]
 8001f20:	683b      	ldr	r3, [r7, #0]
 8001f22:	685b      	ldr	r3, [r3, #4]
 8001f24:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d021      	beq.n	8001f70 <HAL_GPIO_Init+0x2d4>
 8001f2c:	4b0f      	ldr	r3, [pc, #60]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001f2e:	68da      	ldr	r2, [r3, #12]
 8001f30:	490e      	ldr	r1, [pc, #56]	; (8001f6c <HAL_GPIO_Init+0x2d0>)
 8001f32:	69bb      	ldr	r3, [r7, #24]
 8001f34:	4313      	orrs	r3, r2
 8001f36:	60cb      	str	r3, [r1, #12]
 8001f38:	e021      	b.n	8001f7e <HAL_GPIO_Init+0x2e2>
 8001f3a:	bf00      	nop
 8001f3c:	10320000 	.word	0x10320000
 8001f40:	10310000 	.word	0x10310000
 8001f44:	10220000 	.word	0x10220000
 8001f48:	10210000 	.word	0x10210000
 8001f4c:	10120000 	.word	0x10120000
 8001f50:	10110000 	.word	0x10110000
 8001f54:	40021000 	.word	0x40021000
 8001f58:	40010000 	.word	0x40010000
 8001f5c:	40010800 	.word	0x40010800
 8001f60:	40010c00 	.word	0x40010c00
 8001f64:	40011000 	.word	0x40011000
 8001f68:	40011400 	.word	0x40011400
 8001f6c:	40010400 	.word	0x40010400
 8001f70:	4b0b      	ldr	r3, [pc, #44]	; (8001fa0 <HAL_GPIO_Init+0x304>)
 8001f72:	68da      	ldr	r2, [r3, #12]
 8001f74:	69bb      	ldr	r3, [r7, #24]
 8001f76:	43db      	mvns	r3, r3
 8001f78:	4909      	ldr	r1, [pc, #36]	; (8001fa0 <HAL_GPIO_Init+0x304>)
 8001f7a:	4013      	ands	r3, r2
 8001f7c:	60cb      	str	r3, [r1, #12]
 8001f7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f80:	3301      	adds	r3, #1
 8001f82:	627b      	str	r3, [r7, #36]	; 0x24
 8001f84:	683b      	ldr	r3, [r7, #0]
 8001f86:	681a      	ldr	r2, [r3, #0]
 8001f88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f8a:	fa22 f303 	lsr.w	r3, r2, r3
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	f47f ae8e 	bne.w	8001cb0 <HAL_GPIO_Init+0x14>
 8001f94:	bf00      	nop
 8001f96:	bf00      	nop
 8001f98:	372c      	adds	r7, #44	; 0x2c
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	bc80      	pop	{r7}
 8001f9e:	4770      	bx	lr
 8001fa0:	40010400 	.word	0x40010400

08001fa4 <HAL_GPIO_ReadPin>:
 8001fa4:	b480      	push	{r7}
 8001fa6:	b085      	sub	sp, #20
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	6078      	str	r0, [r7, #4]
 8001fac:	460b      	mov	r3, r1
 8001fae:	807b      	strh	r3, [r7, #2]
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	689a      	ldr	r2, [r3, #8]
 8001fb4:	887b      	ldrh	r3, [r7, #2]
 8001fb6:	4013      	ands	r3, r2
 8001fb8:	2b00      	cmp	r3, #0
 8001fba:	d002      	beq.n	8001fc2 <HAL_GPIO_ReadPin+0x1e>
 8001fbc:	2301      	movs	r3, #1
 8001fbe:	73fb      	strb	r3, [r7, #15]
 8001fc0:	e001      	b.n	8001fc6 <HAL_GPIO_ReadPin+0x22>
 8001fc2:	2300      	movs	r3, #0
 8001fc4:	73fb      	strb	r3, [r7, #15]
 8001fc6:	7bfb      	ldrb	r3, [r7, #15]
 8001fc8:	4618      	mov	r0, r3
 8001fca:	3714      	adds	r7, #20
 8001fcc:	46bd      	mov	sp, r7
 8001fce:	bc80      	pop	{r7}
 8001fd0:	4770      	bx	lr

08001fd2 <HAL_GPIO_WritePin>:
 8001fd2:	b480      	push	{r7}
 8001fd4:	b083      	sub	sp, #12
 8001fd6:	af00      	add	r7, sp, #0
 8001fd8:	6078      	str	r0, [r7, #4]
 8001fda:	460b      	mov	r3, r1
 8001fdc:	807b      	strh	r3, [r7, #2]
 8001fde:	4613      	mov	r3, r2
 8001fe0:	707b      	strb	r3, [r7, #1]
 8001fe2:	787b      	ldrb	r3, [r7, #1]
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d003      	beq.n	8001ff0 <HAL_GPIO_WritePin+0x1e>
 8001fe8:	887a      	ldrh	r2, [r7, #2]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	611a      	str	r2, [r3, #16]
 8001fee:	e003      	b.n	8001ff8 <HAL_GPIO_WritePin+0x26>
 8001ff0:	887b      	ldrh	r3, [r7, #2]
 8001ff2:	041a      	lsls	r2, r3, #16
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	611a      	str	r2, [r3, #16]
 8001ff8:	bf00      	nop
 8001ffa:	370c      	adds	r7, #12
 8001ffc:	46bd      	mov	sp, r7
 8001ffe:	bc80      	pop	{r7}
 8002000:	4770      	bx	lr

08002002 <HAL_GPIO_TogglePin>:
 8002002:	b480      	push	{r7}
 8002004:	b085      	sub	sp, #20
 8002006:	af00      	add	r7, sp, #0
 8002008:	6078      	str	r0, [r7, #4]
 800200a:	460b      	mov	r3, r1
 800200c:	807b      	strh	r3, [r7, #2]
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	68db      	ldr	r3, [r3, #12]
 8002012:	60fb      	str	r3, [r7, #12]
 8002014:	887a      	ldrh	r2, [r7, #2]
 8002016:	68fb      	ldr	r3, [r7, #12]
 8002018:	4013      	ands	r3, r2
 800201a:	041a      	lsls	r2, r3, #16
 800201c:	68fb      	ldr	r3, [r7, #12]
 800201e:	43d9      	mvns	r1, r3
 8002020:	887b      	ldrh	r3, [r7, #2]
 8002022:	400b      	ands	r3, r1
 8002024:	431a      	orrs	r2, r3
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	611a      	str	r2, [r3, #16]
 800202a:	bf00      	nop
 800202c:	3714      	adds	r7, #20
 800202e:	46bd      	mov	sp, r7
 8002030:	bc80      	pop	{r7}
 8002032:	4770      	bx	lr

08002034 <HAL_GPIO_EXTI_IRQHandler>:
 8002034:	b580      	push	{r7, lr}
 8002036:	b082      	sub	sp, #8
 8002038:	af00      	add	r7, sp, #0
 800203a:	4603      	mov	r3, r0
 800203c:	80fb      	strh	r3, [r7, #6]
 800203e:	4b08      	ldr	r3, [pc, #32]	; (8002060 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002040:	695a      	ldr	r2, [r3, #20]
 8002042:	88fb      	ldrh	r3, [r7, #6]
 8002044:	4013      	ands	r3, r2
 8002046:	2b00      	cmp	r3, #0
 8002048:	d006      	beq.n	8002058 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800204a:	4a05      	ldr	r2, [pc, #20]	; (8002060 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800204c:	88fb      	ldrh	r3, [r7, #6]
 800204e:	6153      	str	r3, [r2, #20]
 8002050:	88fb      	ldrh	r3, [r7, #6]
 8002052:	4618      	mov	r0, r3
 8002054:	f000 f806 	bl	8002064 <HAL_GPIO_EXTI_Callback>
 8002058:	bf00      	nop
 800205a:	3708      	adds	r7, #8
 800205c:	46bd      	mov	sp, r7
 800205e:	bd80      	pop	{r7, pc}
 8002060:	40010400 	.word	0x40010400

08002064 <HAL_GPIO_EXTI_Callback>:
 8002064:	b480      	push	{r7}
 8002066:	b083      	sub	sp, #12
 8002068:	af00      	add	r7, sp, #0
 800206a:	4603      	mov	r3, r0
 800206c:	80fb      	strh	r3, [r7, #6]
 800206e:	bf00      	nop
 8002070:	370c      	adds	r7, #12
 8002072:	46bd      	mov	sp, r7
 8002074:	bc80      	pop	{r7}
 8002076:	4770      	bx	lr

08002078 <HAL_RCC_OscConfig>:
 8002078:	b580      	push	{r7, lr}
 800207a:	b086      	sub	sp, #24
 800207c:	af00      	add	r7, sp, #0
 800207e:	6078      	str	r0, [r7, #4]
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	2b00      	cmp	r3, #0
 8002084:	d101      	bne.n	800208a <HAL_RCC_OscConfig+0x12>
 8002086:	2301      	movs	r3, #1
 8002088:	e272      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	f003 0301 	and.w	r3, r3, #1
 8002092:	2b00      	cmp	r3, #0
 8002094:	f000 8087 	beq.w	80021a6 <HAL_RCC_OscConfig+0x12e>
 8002098:	4b92      	ldr	r3, [pc, #584]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 800209a:	685b      	ldr	r3, [r3, #4]
 800209c:	f003 030c 	and.w	r3, r3, #12
 80020a0:	2b04      	cmp	r3, #4
 80020a2:	d00c      	beq.n	80020be <HAL_RCC_OscConfig+0x46>
 80020a4:	4b8f      	ldr	r3, [pc, #572]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020a6:	685b      	ldr	r3, [r3, #4]
 80020a8:	f003 030c 	and.w	r3, r3, #12
 80020ac:	2b08      	cmp	r3, #8
 80020ae:	d112      	bne.n	80020d6 <HAL_RCC_OscConfig+0x5e>
 80020b0:	4b8c      	ldr	r3, [pc, #560]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020b2:	685b      	ldr	r3, [r3, #4]
 80020b4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80020b8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80020bc:	d10b      	bne.n	80020d6 <HAL_RCC_OscConfig+0x5e>
 80020be:	4b89      	ldr	r3, [pc, #548]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d06c      	beq.n	80021a4 <HAL_RCC_OscConfig+0x12c>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	685b      	ldr	r3, [r3, #4]
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d168      	bne.n	80021a4 <HAL_RCC_OscConfig+0x12c>
 80020d2:	2301      	movs	r3, #1
 80020d4:	e24c      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	685b      	ldr	r3, [r3, #4]
 80020da:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80020de:	d106      	bne.n	80020ee <HAL_RCC_OscConfig+0x76>
 80020e0:	4b80      	ldr	r3, [pc, #512]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	4a7f      	ldr	r2, [pc, #508]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020e6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80020ea:	6013      	str	r3, [r2, #0]
 80020ec:	e02e      	b.n	800214c <HAL_RCC_OscConfig+0xd4>
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	685b      	ldr	r3, [r3, #4]
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d10c      	bne.n	8002110 <HAL_RCC_OscConfig+0x98>
 80020f6:	4b7b      	ldr	r3, [pc, #492]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	4a7a      	ldr	r2, [pc, #488]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80020fc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002100:	6013      	str	r3, [r2, #0]
 8002102:	4b78      	ldr	r3, [pc, #480]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	4a77      	ldr	r2, [pc, #476]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002108:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800210c:	6013      	str	r3, [r2, #0]
 800210e:	e01d      	b.n	800214c <HAL_RCC_OscConfig+0xd4>
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	685b      	ldr	r3, [r3, #4]
 8002114:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002118:	d10c      	bne.n	8002134 <HAL_RCC_OscConfig+0xbc>
 800211a:	4b72      	ldr	r3, [pc, #456]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	4a71      	ldr	r2, [pc, #452]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002120:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002124:	6013      	str	r3, [r2, #0]
 8002126:	4b6f      	ldr	r3, [pc, #444]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	4a6e      	ldr	r2, [pc, #440]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 800212c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002130:	6013      	str	r3, [r2, #0]
 8002132:	e00b      	b.n	800214c <HAL_RCC_OscConfig+0xd4>
 8002134:	4b6b      	ldr	r3, [pc, #428]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	4a6a      	ldr	r2, [pc, #424]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 800213a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800213e:	6013      	str	r3, [r2, #0]
 8002140:	4b68      	ldr	r3, [pc, #416]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	4a67      	ldr	r2, [pc, #412]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002146:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800214a:	6013      	str	r3, [r2, #0]
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	685b      	ldr	r3, [r3, #4]
 8002150:	2b00      	cmp	r3, #0
 8002152:	d013      	beq.n	800217c <HAL_RCC_OscConfig+0x104>
 8002154:	f7ff fc8a 	bl	8001a6c <HAL_GetTick>
 8002158:	6138      	str	r0, [r7, #16]
 800215a:	e008      	b.n	800216e <HAL_RCC_OscConfig+0xf6>
 800215c:	f7ff fc86 	bl	8001a6c <HAL_GetTick>
 8002160:	4602      	mov	r2, r0
 8002162:	693b      	ldr	r3, [r7, #16]
 8002164:	1ad3      	subs	r3, r2, r3
 8002166:	2b64      	cmp	r3, #100	; 0x64
 8002168:	d901      	bls.n	800216e <HAL_RCC_OscConfig+0xf6>
 800216a:	2303      	movs	r3, #3
 800216c:	e200      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800216e:	4b5d      	ldr	r3, [pc, #372]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002176:	2b00      	cmp	r3, #0
 8002178:	d0f0      	beq.n	800215c <HAL_RCC_OscConfig+0xe4>
 800217a:	e014      	b.n	80021a6 <HAL_RCC_OscConfig+0x12e>
 800217c:	f7ff fc76 	bl	8001a6c <HAL_GetTick>
 8002180:	6138      	str	r0, [r7, #16]
 8002182:	e008      	b.n	8002196 <HAL_RCC_OscConfig+0x11e>
 8002184:	f7ff fc72 	bl	8001a6c <HAL_GetTick>
 8002188:	4602      	mov	r2, r0
 800218a:	693b      	ldr	r3, [r7, #16]
 800218c:	1ad3      	subs	r3, r2, r3
 800218e:	2b64      	cmp	r3, #100	; 0x64
 8002190:	d901      	bls.n	8002196 <HAL_RCC_OscConfig+0x11e>
 8002192:	2303      	movs	r3, #3
 8002194:	e1ec      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 8002196:	4b53      	ldr	r3, [pc, #332]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800219e:	2b00      	cmp	r3, #0
 80021a0:	d1f0      	bne.n	8002184 <HAL_RCC_OscConfig+0x10c>
 80021a2:	e000      	b.n	80021a6 <HAL_RCC_OscConfig+0x12e>
 80021a4:	bf00      	nop
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	f003 0302 	and.w	r3, r3, #2
 80021ae:	2b00      	cmp	r3, #0
 80021b0:	d063      	beq.n	800227a <HAL_RCC_OscConfig+0x202>
 80021b2:	4b4c      	ldr	r3, [pc, #304]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80021b4:	685b      	ldr	r3, [r3, #4]
 80021b6:	f003 030c 	and.w	r3, r3, #12
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d00b      	beq.n	80021d6 <HAL_RCC_OscConfig+0x15e>
 80021be:	4b49      	ldr	r3, [pc, #292]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80021c0:	685b      	ldr	r3, [r3, #4]
 80021c2:	f003 030c 	and.w	r3, r3, #12
 80021c6:	2b08      	cmp	r3, #8
 80021c8:	d11c      	bne.n	8002204 <HAL_RCC_OscConfig+0x18c>
 80021ca:	4b46      	ldr	r3, [pc, #280]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80021cc:	685b      	ldr	r3, [r3, #4]
 80021ce:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d116      	bne.n	8002204 <HAL_RCC_OscConfig+0x18c>
 80021d6:	4b43      	ldr	r3, [pc, #268]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	f003 0302 	and.w	r3, r3, #2
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d005      	beq.n	80021ee <HAL_RCC_OscConfig+0x176>
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	691b      	ldr	r3, [r3, #16]
 80021e6:	2b01      	cmp	r3, #1
 80021e8:	d001      	beq.n	80021ee <HAL_RCC_OscConfig+0x176>
 80021ea:	2301      	movs	r3, #1
 80021ec:	e1c0      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 80021ee:	4b3d      	ldr	r3, [pc, #244]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	695b      	ldr	r3, [r3, #20]
 80021fa:	00db      	lsls	r3, r3, #3
 80021fc:	4939      	ldr	r1, [pc, #228]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80021fe:	4313      	orrs	r3, r2
 8002200:	600b      	str	r3, [r1, #0]
 8002202:	e03a      	b.n	800227a <HAL_RCC_OscConfig+0x202>
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	691b      	ldr	r3, [r3, #16]
 8002208:	2b00      	cmp	r3, #0
 800220a:	d020      	beq.n	800224e <HAL_RCC_OscConfig+0x1d6>
 800220c:	4b36      	ldr	r3, [pc, #216]	; (80022e8 <HAL_RCC_OscConfig+0x270>)
 800220e:	2201      	movs	r2, #1
 8002210:	601a      	str	r2, [r3, #0]
 8002212:	f7ff fc2b 	bl	8001a6c <HAL_GetTick>
 8002216:	6138      	str	r0, [r7, #16]
 8002218:	e008      	b.n	800222c <HAL_RCC_OscConfig+0x1b4>
 800221a:	f7ff fc27 	bl	8001a6c <HAL_GetTick>
 800221e:	4602      	mov	r2, r0
 8002220:	693b      	ldr	r3, [r7, #16]
 8002222:	1ad3      	subs	r3, r2, r3
 8002224:	2b02      	cmp	r3, #2
 8002226:	d901      	bls.n	800222c <HAL_RCC_OscConfig+0x1b4>
 8002228:	2303      	movs	r3, #3
 800222a:	e1a1      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800222c:	4b2d      	ldr	r3, [pc, #180]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	f003 0302 	and.w	r3, r3, #2
 8002234:	2b00      	cmp	r3, #0
 8002236:	d0f0      	beq.n	800221a <HAL_RCC_OscConfig+0x1a2>
 8002238:	4b2a      	ldr	r3, [pc, #168]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	695b      	ldr	r3, [r3, #20]
 8002244:	00db      	lsls	r3, r3, #3
 8002246:	4927      	ldr	r1, [pc, #156]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002248:	4313      	orrs	r3, r2
 800224a:	600b      	str	r3, [r1, #0]
 800224c:	e015      	b.n	800227a <HAL_RCC_OscConfig+0x202>
 800224e:	4b26      	ldr	r3, [pc, #152]	; (80022e8 <HAL_RCC_OscConfig+0x270>)
 8002250:	2200      	movs	r2, #0
 8002252:	601a      	str	r2, [r3, #0]
 8002254:	f7ff fc0a 	bl	8001a6c <HAL_GetTick>
 8002258:	6138      	str	r0, [r7, #16]
 800225a:	e008      	b.n	800226e <HAL_RCC_OscConfig+0x1f6>
 800225c:	f7ff fc06 	bl	8001a6c <HAL_GetTick>
 8002260:	4602      	mov	r2, r0
 8002262:	693b      	ldr	r3, [r7, #16]
 8002264:	1ad3      	subs	r3, r2, r3
 8002266:	2b02      	cmp	r3, #2
 8002268:	d901      	bls.n	800226e <HAL_RCC_OscConfig+0x1f6>
 800226a:	2303      	movs	r3, #3
 800226c:	e180      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800226e:	4b1d      	ldr	r3, [pc, #116]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	f003 0302 	and.w	r3, r3, #2
 8002276:	2b00      	cmp	r3, #0
 8002278:	d1f0      	bne.n	800225c <HAL_RCC_OscConfig+0x1e4>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	f003 0308 	and.w	r3, r3, #8
 8002282:	2b00      	cmp	r3, #0
 8002284:	d03a      	beq.n	80022fc <HAL_RCC_OscConfig+0x284>
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	699b      	ldr	r3, [r3, #24]
 800228a:	2b00      	cmp	r3, #0
 800228c:	d019      	beq.n	80022c2 <HAL_RCC_OscConfig+0x24a>
 800228e:	4b17      	ldr	r3, [pc, #92]	; (80022ec <HAL_RCC_OscConfig+0x274>)
 8002290:	2201      	movs	r2, #1
 8002292:	601a      	str	r2, [r3, #0]
 8002294:	f7ff fbea 	bl	8001a6c <HAL_GetTick>
 8002298:	6138      	str	r0, [r7, #16]
 800229a:	e008      	b.n	80022ae <HAL_RCC_OscConfig+0x236>
 800229c:	f7ff fbe6 	bl	8001a6c <HAL_GetTick>
 80022a0:	4602      	mov	r2, r0
 80022a2:	693b      	ldr	r3, [r7, #16]
 80022a4:	1ad3      	subs	r3, r2, r3
 80022a6:	2b02      	cmp	r3, #2
 80022a8:	d901      	bls.n	80022ae <HAL_RCC_OscConfig+0x236>
 80022aa:	2303      	movs	r3, #3
 80022ac:	e160      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 80022ae:	4b0d      	ldr	r3, [pc, #52]	; (80022e4 <HAL_RCC_OscConfig+0x26c>)
 80022b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022b2:	f003 0302 	and.w	r3, r3, #2
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d0f0      	beq.n	800229c <HAL_RCC_OscConfig+0x224>
 80022ba:	2001      	movs	r0, #1
 80022bc:	f000 fad8 	bl	8002870 <RCC_Delay>
 80022c0:	e01c      	b.n	80022fc <HAL_RCC_OscConfig+0x284>
 80022c2:	4b0a      	ldr	r3, [pc, #40]	; (80022ec <HAL_RCC_OscConfig+0x274>)
 80022c4:	2200      	movs	r2, #0
 80022c6:	601a      	str	r2, [r3, #0]
 80022c8:	f7ff fbd0 	bl	8001a6c <HAL_GetTick>
 80022cc:	6138      	str	r0, [r7, #16]
 80022ce:	e00f      	b.n	80022f0 <HAL_RCC_OscConfig+0x278>
 80022d0:	f7ff fbcc 	bl	8001a6c <HAL_GetTick>
 80022d4:	4602      	mov	r2, r0
 80022d6:	693b      	ldr	r3, [r7, #16]
 80022d8:	1ad3      	subs	r3, r2, r3
 80022da:	2b02      	cmp	r3, #2
 80022dc:	d908      	bls.n	80022f0 <HAL_RCC_OscConfig+0x278>
 80022de:	2303      	movs	r3, #3
 80022e0:	e146      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 80022e2:	bf00      	nop
 80022e4:	40021000 	.word	0x40021000
 80022e8:	42420000 	.word	0x42420000
 80022ec:	42420480 	.word	0x42420480
 80022f0:	4b92      	ldr	r3, [pc, #584]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80022f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022f4:	f003 0302 	and.w	r3, r3, #2
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	d1e9      	bne.n	80022d0 <HAL_RCC_OscConfig+0x258>
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	f003 0304 	and.w	r3, r3, #4
 8002304:	2b00      	cmp	r3, #0
 8002306:	f000 80a6 	beq.w	8002456 <HAL_RCC_OscConfig+0x3de>
 800230a:	2300      	movs	r3, #0
 800230c:	75fb      	strb	r3, [r7, #23]
 800230e:	4b8b      	ldr	r3, [pc, #556]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002310:	69db      	ldr	r3, [r3, #28]
 8002312:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002316:	2b00      	cmp	r3, #0
 8002318:	d10d      	bne.n	8002336 <HAL_RCC_OscConfig+0x2be>
 800231a:	4b88      	ldr	r3, [pc, #544]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 800231c:	69db      	ldr	r3, [r3, #28]
 800231e:	4a87      	ldr	r2, [pc, #540]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002320:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002324:	61d3      	str	r3, [r2, #28]
 8002326:	4b85      	ldr	r3, [pc, #532]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002328:	69db      	ldr	r3, [r3, #28]
 800232a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800232e:	60bb      	str	r3, [r7, #8]
 8002330:	68bb      	ldr	r3, [r7, #8]
 8002332:	2301      	movs	r3, #1
 8002334:	75fb      	strb	r3, [r7, #23]
 8002336:	4b82      	ldr	r3, [pc, #520]	; (8002540 <HAL_RCC_OscConfig+0x4c8>)
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800233e:	2b00      	cmp	r3, #0
 8002340:	d118      	bne.n	8002374 <HAL_RCC_OscConfig+0x2fc>
 8002342:	4b7f      	ldr	r3, [pc, #508]	; (8002540 <HAL_RCC_OscConfig+0x4c8>)
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	4a7e      	ldr	r2, [pc, #504]	; (8002540 <HAL_RCC_OscConfig+0x4c8>)
 8002348:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800234c:	6013      	str	r3, [r2, #0]
 800234e:	f7ff fb8d 	bl	8001a6c <HAL_GetTick>
 8002352:	6138      	str	r0, [r7, #16]
 8002354:	e008      	b.n	8002368 <HAL_RCC_OscConfig+0x2f0>
 8002356:	f7ff fb89 	bl	8001a6c <HAL_GetTick>
 800235a:	4602      	mov	r2, r0
 800235c:	693b      	ldr	r3, [r7, #16]
 800235e:	1ad3      	subs	r3, r2, r3
 8002360:	2b64      	cmp	r3, #100	; 0x64
 8002362:	d901      	bls.n	8002368 <HAL_RCC_OscConfig+0x2f0>
 8002364:	2303      	movs	r3, #3
 8002366:	e103      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 8002368:	4b75      	ldr	r3, [pc, #468]	; (8002540 <HAL_RCC_OscConfig+0x4c8>)
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002370:	2b00      	cmp	r3, #0
 8002372:	d0f0      	beq.n	8002356 <HAL_RCC_OscConfig+0x2de>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	68db      	ldr	r3, [r3, #12]
 8002378:	2b01      	cmp	r3, #1
 800237a:	d106      	bne.n	800238a <HAL_RCC_OscConfig+0x312>
 800237c:	4b6f      	ldr	r3, [pc, #444]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 800237e:	6a1b      	ldr	r3, [r3, #32]
 8002380:	4a6e      	ldr	r2, [pc, #440]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002382:	f043 0301 	orr.w	r3, r3, #1
 8002386:	6213      	str	r3, [r2, #32]
 8002388:	e02d      	b.n	80023e6 <HAL_RCC_OscConfig+0x36e>
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	68db      	ldr	r3, [r3, #12]
 800238e:	2b00      	cmp	r3, #0
 8002390:	d10c      	bne.n	80023ac <HAL_RCC_OscConfig+0x334>
 8002392:	4b6a      	ldr	r3, [pc, #424]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002394:	6a1b      	ldr	r3, [r3, #32]
 8002396:	4a69      	ldr	r2, [pc, #420]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002398:	f023 0301 	bic.w	r3, r3, #1
 800239c:	6213      	str	r3, [r2, #32]
 800239e:	4b67      	ldr	r3, [pc, #412]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023a0:	6a1b      	ldr	r3, [r3, #32]
 80023a2:	4a66      	ldr	r2, [pc, #408]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023a4:	f023 0304 	bic.w	r3, r3, #4
 80023a8:	6213      	str	r3, [r2, #32]
 80023aa:	e01c      	b.n	80023e6 <HAL_RCC_OscConfig+0x36e>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	68db      	ldr	r3, [r3, #12]
 80023b0:	2b05      	cmp	r3, #5
 80023b2:	d10c      	bne.n	80023ce <HAL_RCC_OscConfig+0x356>
 80023b4:	4b61      	ldr	r3, [pc, #388]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023b6:	6a1b      	ldr	r3, [r3, #32]
 80023b8:	4a60      	ldr	r2, [pc, #384]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023ba:	f043 0304 	orr.w	r3, r3, #4
 80023be:	6213      	str	r3, [r2, #32]
 80023c0:	4b5e      	ldr	r3, [pc, #376]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023c2:	6a1b      	ldr	r3, [r3, #32]
 80023c4:	4a5d      	ldr	r2, [pc, #372]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023c6:	f043 0301 	orr.w	r3, r3, #1
 80023ca:	6213      	str	r3, [r2, #32]
 80023cc:	e00b      	b.n	80023e6 <HAL_RCC_OscConfig+0x36e>
 80023ce:	4b5b      	ldr	r3, [pc, #364]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023d0:	6a1b      	ldr	r3, [r3, #32]
 80023d2:	4a5a      	ldr	r2, [pc, #360]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023d4:	f023 0301 	bic.w	r3, r3, #1
 80023d8:	6213      	str	r3, [r2, #32]
 80023da:	4b58      	ldr	r3, [pc, #352]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023dc:	6a1b      	ldr	r3, [r3, #32]
 80023de:	4a57      	ldr	r2, [pc, #348]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80023e0:	f023 0304 	bic.w	r3, r3, #4
 80023e4:	6213      	str	r3, [r2, #32]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	68db      	ldr	r3, [r3, #12]
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d015      	beq.n	800241a <HAL_RCC_OscConfig+0x3a2>
 80023ee:	f7ff fb3d 	bl	8001a6c <HAL_GetTick>
 80023f2:	6138      	str	r0, [r7, #16]
 80023f4:	e00a      	b.n	800240c <HAL_RCC_OscConfig+0x394>
 80023f6:	f7ff fb39 	bl	8001a6c <HAL_GetTick>
 80023fa:	4602      	mov	r2, r0
 80023fc:	693b      	ldr	r3, [r7, #16]
 80023fe:	1ad3      	subs	r3, r2, r3
 8002400:	f241 3288 	movw	r2, #5000	; 0x1388
 8002404:	4293      	cmp	r3, r2
 8002406:	d901      	bls.n	800240c <HAL_RCC_OscConfig+0x394>
 8002408:	2303      	movs	r3, #3
 800240a:	e0b1      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800240c:	4b4b      	ldr	r3, [pc, #300]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 800240e:	6a1b      	ldr	r3, [r3, #32]
 8002410:	f003 0302 	and.w	r3, r3, #2
 8002414:	2b00      	cmp	r3, #0
 8002416:	d0ee      	beq.n	80023f6 <HAL_RCC_OscConfig+0x37e>
 8002418:	e014      	b.n	8002444 <HAL_RCC_OscConfig+0x3cc>
 800241a:	f7ff fb27 	bl	8001a6c <HAL_GetTick>
 800241e:	6138      	str	r0, [r7, #16]
 8002420:	e00a      	b.n	8002438 <HAL_RCC_OscConfig+0x3c0>
 8002422:	f7ff fb23 	bl	8001a6c <HAL_GetTick>
 8002426:	4602      	mov	r2, r0
 8002428:	693b      	ldr	r3, [r7, #16]
 800242a:	1ad3      	subs	r3, r2, r3
 800242c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002430:	4293      	cmp	r3, r2
 8002432:	d901      	bls.n	8002438 <HAL_RCC_OscConfig+0x3c0>
 8002434:	2303      	movs	r3, #3
 8002436:	e09b      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 8002438:	4b40      	ldr	r3, [pc, #256]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 800243a:	6a1b      	ldr	r3, [r3, #32]
 800243c:	f003 0302 	and.w	r3, r3, #2
 8002440:	2b00      	cmp	r3, #0
 8002442:	d1ee      	bne.n	8002422 <HAL_RCC_OscConfig+0x3aa>
 8002444:	7dfb      	ldrb	r3, [r7, #23]
 8002446:	2b01      	cmp	r3, #1
 8002448:	d105      	bne.n	8002456 <HAL_RCC_OscConfig+0x3de>
 800244a:	4b3c      	ldr	r3, [pc, #240]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 800244c:	69db      	ldr	r3, [r3, #28]
 800244e:	4a3b      	ldr	r2, [pc, #236]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002450:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002454:	61d3      	str	r3, [r2, #28]
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	69db      	ldr	r3, [r3, #28]
 800245a:	2b00      	cmp	r3, #0
 800245c:	f000 8087 	beq.w	800256e <HAL_RCC_OscConfig+0x4f6>
 8002460:	4b36      	ldr	r3, [pc, #216]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002462:	685b      	ldr	r3, [r3, #4]
 8002464:	f003 030c 	and.w	r3, r3, #12
 8002468:	2b08      	cmp	r3, #8
 800246a:	d061      	beq.n	8002530 <HAL_RCC_OscConfig+0x4b8>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	69db      	ldr	r3, [r3, #28]
 8002470:	2b02      	cmp	r3, #2
 8002472:	d146      	bne.n	8002502 <HAL_RCC_OscConfig+0x48a>
 8002474:	4b33      	ldr	r3, [pc, #204]	; (8002544 <HAL_RCC_OscConfig+0x4cc>)
 8002476:	2200      	movs	r2, #0
 8002478:	601a      	str	r2, [r3, #0]
 800247a:	f7ff faf7 	bl	8001a6c <HAL_GetTick>
 800247e:	6138      	str	r0, [r7, #16]
 8002480:	e008      	b.n	8002494 <HAL_RCC_OscConfig+0x41c>
 8002482:	f7ff faf3 	bl	8001a6c <HAL_GetTick>
 8002486:	4602      	mov	r2, r0
 8002488:	693b      	ldr	r3, [r7, #16]
 800248a:	1ad3      	subs	r3, r2, r3
 800248c:	2b02      	cmp	r3, #2
 800248e:	d901      	bls.n	8002494 <HAL_RCC_OscConfig+0x41c>
 8002490:	2303      	movs	r3, #3
 8002492:	e06d      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 8002494:	4b29      	ldr	r3, [pc, #164]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800249c:	2b00      	cmp	r3, #0
 800249e:	d1f0      	bne.n	8002482 <HAL_RCC_OscConfig+0x40a>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	6a1b      	ldr	r3, [r3, #32]
 80024a4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024a8:	d108      	bne.n	80024bc <HAL_RCC_OscConfig+0x444>
 80024aa:	4b24      	ldr	r3, [pc, #144]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80024ac:	685b      	ldr	r3, [r3, #4]
 80024ae:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	689b      	ldr	r3, [r3, #8]
 80024b6:	4921      	ldr	r1, [pc, #132]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80024b8:	4313      	orrs	r3, r2
 80024ba:	604b      	str	r3, [r1, #4]
 80024bc:	4b1f      	ldr	r3, [pc, #124]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80024be:	685b      	ldr	r3, [r3, #4]
 80024c0:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	6a19      	ldr	r1, [r3, #32]
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024cc:	430b      	orrs	r3, r1
 80024ce:	491b      	ldr	r1, [pc, #108]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80024d0:	4313      	orrs	r3, r2
 80024d2:	604b      	str	r3, [r1, #4]
 80024d4:	4b1b      	ldr	r3, [pc, #108]	; (8002544 <HAL_RCC_OscConfig+0x4cc>)
 80024d6:	2201      	movs	r2, #1
 80024d8:	601a      	str	r2, [r3, #0]
 80024da:	f7ff fac7 	bl	8001a6c <HAL_GetTick>
 80024de:	6138      	str	r0, [r7, #16]
 80024e0:	e008      	b.n	80024f4 <HAL_RCC_OscConfig+0x47c>
 80024e2:	f7ff fac3 	bl	8001a6c <HAL_GetTick>
 80024e6:	4602      	mov	r2, r0
 80024e8:	693b      	ldr	r3, [r7, #16]
 80024ea:	1ad3      	subs	r3, r2, r3
 80024ec:	2b02      	cmp	r3, #2
 80024ee:	d901      	bls.n	80024f4 <HAL_RCC_OscConfig+0x47c>
 80024f0:	2303      	movs	r3, #3
 80024f2:	e03d      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 80024f4:	4b11      	ldr	r3, [pc, #68]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024fc:	2b00      	cmp	r3, #0
 80024fe:	d0f0      	beq.n	80024e2 <HAL_RCC_OscConfig+0x46a>
 8002500:	e035      	b.n	800256e <HAL_RCC_OscConfig+0x4f6>
 8002502:	4b10      	ldr	r3, [pc, #64]	; (8002544 <HAL_RCC_OscConfig+0x4cc>)
 8002504:	2200      	movs	r2, #0
 8002506:	601a      	str	r2, [r3, #0]
 8002508:	f7ff fab0 	bl	8001a6c <HAL_GetTick>
 800250c:	6138      	str	r0, [r7, #16]
 800250e:	e008      	b.n	8002522 <HAL_RCC_OscConfig+0x4aa>
 8002510:	f7ff faac 	bl	8001a6c <HAL_GetTick>
 8002514:	4602      	mov	r2, r0
 8002516:	693b      	ldr	r3, [r7, #16]
 8002518:	1ad3      	subs	r3, r2, r3
 800251a:	2b02      	cmp	r3, #2
 800251c:	d901      	bls.n	8002522 <HAL_RCC_OscConfig+0x4aa>
 800251e:	2303      	movs	r3, #3
 8002520:	e026      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 8002522:	4b06      	ldr	r3, [pc, #24]	; (800253c <HAL_RCC_OscConfig+0x4c4>)
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800252a:	2b00      	cmp	r3, #0
 800252c:	d1f0      	bne.n	8002510 <HAL_RCC_OscConfig+0x498>
 800252e:	e01e      	b.n	800256e <HAL_RCC_OscConfig+0x4f6>
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	69db      	ldr	r3, [r3, #28]
 8002534:	2b01      	cmp	r3, #1
 8002536:	d107      	bne.n	8002548 <HAL_RCC_OscConfig+0x4d0>
 8002538:	2301      	movs	r3, #1
 800253a:	e019      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800253c:	40021000 	.word	0x40021000
 8002540:	40007000 	.word	0x40007000
 8002544:	42420060 	.word	0x42420060
 8002548:	4b0b      	ldr	r3, [pc, #44]	; (8002578 <HAL_RCC_OscConfig+0x500>)
 800254a:	685b      	ldr	r3, [r3, #4]
 800254c:	60fb      	str	r3, [r7, #12]
 800254e:	68fb      	ldr	r3, [r7, #12]
 8002550:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	6a1b      	ldr	r3, [r3, #32]
 8002558:	429a      	cmp	r2, r3
 800255a:	d106      	bne.n	800256a <HAL_RCC_OscConfig+0x4f2>
 800255c:	68fb      	ldr	r3, [r7, #12]
 800255e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002566:	429a      	cmp	r2, r3
 8002568:	d001      	beq.n	800256e <HAL_RCC_OscConfig+0x4f6>
 800256a:	2301      	movs	r3, #1
 800256c:	e000      	b.n	8002570 <HAL_RCC_OscConfig+0x4f8>
 800256e:	2300      	movs	r3, #0
 8002570:	4618      	mov	r0, r3
 8002572:	3718      	adds	r7, #24
 8002574:	46bd      	mov	sp, r7
 8002576:	bd80      	pop	{r7, pc}
 8002578:	40021000 	.word	0x40021000

0800257c <HAL_RCC_ClockConfig>:
 800257c:	b580      	push	{r7, lr}
 800257e:	b084      	sub	sp, #16
 8002580:	af00      	add	r7, sp, #0
 8002582:	6078      	str	r0, [r7, #4]
 8002584:	6039      	str	r1, [r7, #0]
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	2b00      	cmp	r3, #0
 800258a:	d101      	bne.n	8002590 <HAL_RCC_ClockConfig+0x14>
 800258c:	2301      	movs	r3, #1
 800258e:	e0d0      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 8002590:	4b6a      	ldr	r3, [pc, #424]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	f003 0307 	and.w	r3, r3, #7
 8002598:	683a      	ldr	r2, [r7, #0]
 800259a:	429a      	cmp	r2, r3
 800259c:	d910      	bls.n	80025c0 <HAL_RCC_ClockConfig+0x44>
 800259e:	4b67      	ldr	r3, [pc, #412]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	f023 0207 	bic.w	r2, r3, #7
 80025a6:	4965      	ldr	r1, [pc, #404]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 80025a8:	683b      	ldr	r3, [r7, #0]
 80025aa:	4313      	orrs	r3, r2
 80025ac:	600b      	str	r3, [r1, #0]
 80025ae:	4b63      	ldr	r3, [pc, #396]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	f003 0307 	and.w	r3, r3, #7
 80025b6:	683a      	ldr	r2, [r7, #0]
 80025b8:	429a      	cmp	r2, r3
 80025ba:	d001      	beq.n	80025c0 <HAL_RCC_ClockConfig+0x44>
 80025bc:	2301      	movs	r3, #1
 80025be:	e0b8      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	681b      	ldr	r3, [r3, #0]
 80025c4:	f003 0302 	and.w	r3, r3, #2
 80025c8:	2b00      	cmp	r3, #0
 80025ca:	d020      	beq.n	800260e <HAL_RCC_ClockConfig+0x92>
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f003 0304 	and.w	r3, r3, #4
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d005      	beq.n	80025e4 <HAL_RCC_ClockConfig+0x68>
 80025d8:	4b59      	ldr	r3, [pc, #356]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80025da:	685b      	ldr	r3, [r3, #4]
 80025dc:	4a58      	ldr	r2, [pc, #352]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80025de:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80025e2:	6053      	str	r3, [r2, #4]
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	f003 0308 	and.w	r3, r3, #8
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d005      	beq.n	80025fc <HAL_RCC_ClockConfig+0x80>
 80025f0:	4b53      	ldr	r3, [pc, #332]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80025f2:	685b      	ldr	r3, [r3, #4]
 80025f4:	4a52      	ldr	r2, [pc, #328]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80025f6:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80025fa:	6053      	str	r3, [r2, #4]
 80025fc:	4b50      	ldr	r3, [pc, #320]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80025fe:	685b      	ldr	r3, [r3, #4]
 8002600:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	689b      	ldr	r3, [r3, #8]
 8002608:	494d      	ldr	r1, [pc, #308]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 800260a:	4313      	orrs	r3, r2
 800260c:	604b      	str	r3, [r1, #4]
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	f003 0301 	and.w	r3, r3, #1
 8002616:	2b00      	cmp	r3, #0
 8002618:	d040      	beq.n	800269c <HAL_RCC_ClockConfig+0x120>
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	685b      	ldr	r3, [r3, #4]
 800261e:	2b01      	cmp	r3, #1
 8002620:	d107      	bne.n	8002632 <HAL_RCC_ClockConfig+0xb6>
 8002622:	4b47      	ldr	r3, [pc, #284]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800262a:	2b00      	cmp	r3, #0
 800262c:	d115      	bne.n	800265a <HAL_RCC_ClockConfig+0xde>
 800262e:	2301      	movs	r3, #1
 8002630:	e07f      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	685b      	ldr	r3, [r3, #4]
 8002636:	2b02      	cmp	r3, #2
 8002638:	d107      	bne.n	800264a <HAL_RCC_ClockConfig+0xce>
 800263a:	4b41      	ldr	r3, [pc, #260]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002642:	2b00      	cmp	r3, #0
 8002644:	d109      	bne.n	800265a <HAL_RCC_ClockConfig+0xde>
 8002646:	2301      	movs	r3, #1
 8002648:	e073      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 800264a:	4b3d      	ldr	r3, [pc, #244]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	f003 0302 	and.w	r3, r3, #2
 8002652:	2b00      	cmp	r3, #0
 8002654:	d101      	bne.n	800265a <HAL_RCC_ClockConfig+0xde>
 8002656:	2301      	movs	r3, #1
 8002658:	e06b      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 800265a:	4b39      	ldr	r3, [pc, #228]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 800265c:	685b      	ldr	r3, [r3, #4]
 800265e:	f023 0203 	bic.w	r2, r3, #3
 8002662:	687b      	ldr	r3, [r7, #4]
 8002664:	685b      	ldr	r3, [r3, #4]
 8002666:	4936      	ldr	r1, [pc, #216]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 8002668:	4313      	orrs	r3, r2
 800266a:	604b      	str	r3, [r1, #4]
 800266c:	f7ff f9fe 	bl	8001a6c <HAL_GetTick>
 8002670:	60f8      	str	r0, [r7, #12]
 8002672:	e00a      	b.n	800268a <HAL_RCC_ClockConfig+0x10e>
 8002674:	f7ff f9fa 	bl	8001a6c <HAL_GetTick>
 8002678:	4602      	mov	r2, r0
 800267a:	68fb      	ldr	r3, [r7, #12]
 800267c:	1ad3      	subs	r3, r2, r3
 800267e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002682:	4293      	cmp	r3, r2
 8002684:	d901      	bls.n	800268a <HAL_RCC_ClockConfig+0x10e>
 8002686:	2303      	movs	r3, #3
 8002688:	e053      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 800268a:	4b2d      	ldr	r3, [pc, #180]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 800268c:	685b      	ldr	r3, [r3, #4]
 800268e:	f003 020c 	and.w	r2, r3, #12
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	685b      	ldr	r3, [r3, #4]
 8002696:	009b      	lsls	r3, r3, #2
 8002698:	429a      	cmp	r2, r3
 800269a:	d1eb      	bne.n	8002674 <HAL_RCC_ClockConfig+0xf8>
 800269c:	4b27      	ldr	r3, [pc, #156]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	f003 0307 	and.w	r3, r3, #7
 80026a4:	683a      	ldr	r2, [r7, #0]
 80026a6:	429a      	cmp	r2, r3
 80026a8:	d210      	bcs.n	80026cc <HAL_RCC_ClockConfig+0x150>
 80026aa:	4b24      	ldr	r3, [pc, #144]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	f023 0207 	bic.w	r2, r3, #7
 80026b2:	4922      	ldr	r1, [pc, #136]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 80026b4:	683b      	ldr	r3, [r7, #0]
 80026b6:	4313      	orrs	r3, r2
 80026b8:	600b      	str	r3, [r1, #0]
 80026ba:	4b20      	ldr	r3, [pc, #128]	; (800273c <HAL_RCC_ClockConfig+0x1c0>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	f003 0307 	and.w	r3, r3, #7
 80026c2:	683a      	ldr	r2, [r7, #0]
 80026c4:	429a      	cmp	r2, r3
 80026c6:	d001      	beq.n	80026cc <HAL_RCC_ClockConfig+0x150>
 80026c8:	2301      	movs	r3, #1
 80026ca:	e032      	b.n	8002732 <HAL_RCC_ClockConfig+0x1b6>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	f003 0304 	and.w	r3, r3, #4
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d008      	beq.n	80026ea <HAL_RCC_ClockConfig+0x16e>
 80026d8:	4b19      	ldr	r3, [pc, #100]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80026da:	685b      	ldr	r3, [r3, #4]
 80026dc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	68db      	ldr	r3, [r3, #12]
 80026e4:	4916      	ldr	r1, [pc, #88]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80026e6:	4313      	orrs	r3, r2
 80026e8:	604b      	str	r3, [r1, #4]
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	f003 0308 	and.w	r3, r3, #8
 80026f2:	2b00      	cmp	r3, #0
 80026f4:	d009      	beq.n	800270a <HAL_RCC_ClockConfig+0x18e>
 80026f6:	4b12      	ldr	r3, [pc, #72]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 80026f8:	685b      	ldr	r3, [r3, #4]
 80026fa:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	691b      	ldr	r3, [r3, #16]
 8002702:	00db      	lsls	r3, r3, #3
 8002704:	490e      	ldr	r1, [pc, #56]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 8002706:	4313      	orrs	r3, r2
 8002708:	604b      	str	r3, [r1, #4]
 800270a:	f000 f821 	bl	8002750 <HAL_RCC_GetSysClockFreq>
 800270e:	4602      	mov	r2, r0
 8002710:	4b0b      	ldr	r3, [pc, #44]	; (8002740 <HAL_RCC_ClockConfig+0x1c4>)
 8002712:	685b      	ldr	r3, [r3, #4]
 8002714:	091b      	lsrs	r3, r3, #4
 8002716:	f003 030f 	and.w	r3, r3, #15
 800271a:	490a      	ldr	r1, [pc, #40]	; (8002744 <HAL_RCC_ClockConfig+0x1c8>)
 800271c:	5ccb      	ldrb	r3, [r1, r3]
 800271e:	fa22 f303 	lsr.w	r3, r2, r3
 8002722:	4a09      	ldr	r2, [pc, #36]	; (8002748 <HAL_RCC_ClockConfig+0x1cc>)
 8002724:	6013      	str	r3, [r2, #0]
 8002726:	4b09      	ldr	r3, [pc, #36]	; (800274c <HAL_RCC_ClockConfig+0x1d0>)
 8002728:	681b      	ldr	r3, [r3, #0]
 800272a:	4618      	mov	r0, r3
 800272c:	f7ff f95c 	bl	80019e8 <HAL_InitTick>
 8002730:	2300      	movs	r3, #0
 8002732:	4618      	mov	r0, r3
 8002734:	3710      	adds	r7, #16
 8002736:	46bd      	mov	sp, r7
 8002738:	bd80      	pop	{r7, pc}
 800273a:	bf00      	nop
 800273c:	40022000 	.word	0x40022000
 8002740:	40021000 	.word	0x40021000
 8002744:	08004464 	.word	0x08004464
 8002748:	20000308 	.word	0x20000308
 800274c:	20000324 	.word	0x20000324

08002750 <HAL_RCC_GetSysClockFreq>:
 8002750:	b490      	push	{r4, r7}
 8002752:	b08a      	sub	sp, #40	; 0x28
 8002754:	af00      	add	r7, sp, #0
 8002756:	4b29      	ldr	r3, [pc, #164]	; (80027fc <HAL_RCC_GetSysClockFreq+0xac>)
 8002758:	1d3c      	adds	r4, r7, #4
 800275a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800275c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002760:	f240 2301 	movw	r3, #513	; 0x201
 8002764:	803b      	strh	r3, [r7, #0]
 8002766:	2300      	movs	r3, #0
 8002768:	61fb      	str	r3, [r7, #28]
 800276a:	2300      	movs	r3, #0
 800276c:	61bb      	str	r3, [r7, #24]
 800276e:	2300      	movs	r3, #0
 8002770:	627b      	str	r3, [r7, #36]	; 0x24
 8002772:	2300      	movs	r3, #0
 8002774:	617b      	str	r3, [r7, #20]
 8002776:	2300      	movs	r3, #0
 8002778:	623b      	str	r3, [r7, #32]
 800277a:	4b21      	ldr	r3, [pc, #132]	; (8002800 <HAL_RCC_GetSysClockFreq+0xb0>)
 800277c:	685b      	ldr	r3, [r3, #4]
 800277e:	61fb      	str	r3, [r7, #28]
 8002780:	69fb      	ldr	r3, [r7, #28]
 8002782:	f003 030c 	and.w	r3, r3, #12
 8002786:	2b04      	cmp	r3, #4
 8002788:	d002      	beq.n	8002790 <HAL_RCC_GetSysClockFreq+0x40>
 800278a:	2b08      	cmp	r3, #8
 800278c:	d003      	beq.n	8002796 <HAL_RCC_GetSysClockFreq+0x46>
 800278e:	e02b      	b.n	80027e8 <HAL_RCC_GetSysClockFreq+0x98>
 8002790:	4b1c      	ldr	r3, [pc, #112]	; (8002804 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002792:	623b      	str	r3, [r7, #32]
 8002794:	e02b      	b.n	80027ee <HAL_RCC_GetSysClockFreq+0x9e>
 8002796:	69fb      	ldr	r3, [r7, #28]
 8002798:	0c9b      	lsrs	r3, r3, #18
 800279a:	f003 030f 	and.w	r3, r3, #15
 800279e:	3328      	adds	r3, #40	; 0x28
 80027a0:	443b      	add	r3, r7
 80027a2:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80027a6:	617b      	str	r3, [r7, #20]
 80027a8:	69fb      	ldr	r3, [r7, #28]
 80027aa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d012      	beq.n	80027d8 <HAL_RCC_GetSysClockFreq+0x88>
 80027b2:	4b13      	ldr	r3, [pc, #76]	; (8002800 <HAL_RCC_GetSysClockFreq+0xb0>)
 80027b4:	685b      	ldr	r3, [r3, #4]
 80027b6:	0c5b      	lsrs	r3, r3, #17
 80027b8:	f003 0301 	and.w	r3, r3, #1
 80027bc:	3328      	adds	r3, #40	; 0x28
 80027be:	443b      	add	r3, r7
 80027c0:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80027c4:	61bb      	str	r3, [r7, #24]
 80027c6:	697b      	ldr	r3, [r7, #20]
 80027c8:	4a0e      	ldr	r2, [pc, #56]	; (8002804 <HAL_RCC_GetSysClockFreq+0xb4>)
 80027ca:	fb03 f202 	mul.w	r2, r3, r2
 80027ce:	69bb      	ldr	r3, [r7, #24]
 80027d0:	fbb2 f3f3 	udiv	r3, r2, r3
 80027d4:	627b      	str	r3, [r7, #36]	; 0x24
 80027d6:	e004      	b.n	80027e2 <HAL_RCC_GetSysClockFreq+0x92>
 80027d8:	697b      	ldr	r3, [r7, #20]
 80027da:	4a0b      	ldr	r2, [pc, #44]	; (8002808 <HAL_RCC_GetSysClockFreq+0xb8>)
 80027dc:	fb02 f303 	mul.w	r3, r2, r3
 80027e0:	627b      	str	r3, [r7, #36]	; 0x24
 80027e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027e4:	623b      	str	r3, [r7, #32]
 80027e6:	e002      	b.n	80027ee <HAL_RCC_GetSysClockFreq+0x9e>
 80027e8:	4b06      	ldr	r3, [pc, #24]	; (8002804 <HAL_RCC_GetSysClockFreq+0xb4>)
 80027ea:	623b      	str	r3, [r7, #32]
 80027ec:	bf00      	nop
 80027ee:	6a3b      	ldr	r3, [r7, #32]
 80027f0:	4618      	mov	r0, r3
 80027f2:	3728      	adds	r7, #40	; 0x28
 80027f4:	46bd      	mov	sp, r7
 80027f6:	bc90      	pop	{r4, r7}
 80027f8:	4770      	bx	lr
 80027fa:	bf00      	nop
 80027fc:	08004454 	.word	0x08004454
 8002800:	40021000 	.word	0x40021000
 8002804:	007a1200 	.word	0x007a1200
 8002808:	003d0900 	.word	0x003d0900

0800280c <HAL_RCC_GetHCLKFreq>:
 800280c:	b480      	push	{r7}
 800280e:	af00      	add	r7, sp, #0
 8002810:	4b02      	ldr	r3, [pc, #8]	; (800281c <HAL_RCC_GetHCLKFreq+0x10>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	4618      	mov	r0, r3
 8002816:	46bd      	mov	sp, r7
 8002818:	bc80      	pop	{r7}
 800281a:	4770      	bx	lr
 800281c:	20000308 	.word	0x20000308

08002820 <HAL_RCC_GetPCLK1Freq>:
 8002820:	b580      	push	{r7, lr}
 8002822:	af00      	add	r7, sp, #0
 8002824:	f7ff fff2 	bl	800280c <HAL_RCC_GetHCLKFreq>
 8002828:	4602      	mov	r2, r0
 800282a:	4b05      	ldr	r3, [pc, #20]	; (8002840 <HAL_RCC_GetPCLK1Freq+0x20>)
 800282c:	685b      	ldr	r3, [r3, #4]
 800282e:	0a1b      	lsrs	r3, r3, #8
 8002830:	f003 0307 	and.w	r3, r3, #7
 8002834:	4903      	ldr	r1, [pc, #12]	; (8002844 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002836:	5ccb      	ldrb	r3, [r1, r3]
 8002838:	fa22 f303 	lsr.w	r3, r2, r3
 800283c:	4618      	mov	r0, r3
 800283e:	bd80      	pop	{r7, pc}
 8002840:	40021000 	.word	0x40021000
 8002844:	08004474 	.word	0x08004474

08002848 <HAL_RCC_GetPCLK2Freq>:
 8002848:	b580      	push	{r7, lr}
 800284a:	af00      	add	r7, sp, #0
 800284c:	f7ff ffde 	bl	800280c <HAL_RCC_GetHCLKFreq>
 8002850:	4602      	mov	r2, r0
 8002852:	4b05      	ldr	r3, [pc, #20]	; (8002868 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002854:	685b      	ldr	r3, [r3, #4]
 8002856:	0adb      	lsrs	r3, r3, #11
 8002858:	f003 0307 	and.w	r3, r3, #7
 800285c:	4903      	ldr	r1, [pc, #12]	; (800286c <HAL_RCC_GetPCLK2Freq+0x24>)
 800285e:	5ccb      	ldrb	r3, [r1, r3]
 8002860:	fa22 f303 	lsr.w	r3, r2, r3
 8002864:	4618      	mov	r0, r3
 8002866:	bd80      	pop	{r7, pc}
 8002868:	40021000 	.word	0x40021000
 800286c:	08004474 	.word	0x08004474

08002870 <RCC_Delay>:
 8002870:	b480      	push	{r7}
 8002872:	b085      	sub	sp, #20
 8002874:	af00      	add	r7, sp, #0
 8002876:	6078      	str	r0, [r7, #4]
 8002878:	4b0a      	ldr	r3, [pc, #40]	; (80028a4 <RCC_Delay+0x34>)
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	4a0a      	ldr	r2, [pc, #40]	; (80028a8 <RCC_Delay+0x38>)
 800287e:	fba2 2303 	umull	r2, r3, r2, r3
 8002882:	0a5b      	lsrs	r3, r3, #9
 8002884:	687a      	ldr	r2, [r7, #4]
 8002886:	fb02 f303 	mul.w	r3, r2, r3
 800288a:	60fb      	str	r3, [r7, #12]
 800288c:	bf00      	nop
 800288e:	68fb      	ldr	r3, [r7, #12]
 8002890:	1e5a      	subs	r2, r3, #1
 8002892:	60fa      	str	r2, [r7, #12]
 8002894:	2b00      	cmp	r3, #0
 8002896:	d1f9      	bne.n	800288c <RCC_Delay+0x1c>
 8002898:	bf00      	nop
 800289a:	bf00      	nop
 800289c:	3714      	adds	r7, #20
 800289e:	46bd      	mov	sp, r7
 80028a0:	bc80      	pop	{r7}
 80028a2:	4770      	bx	lr
 80028a4:	20000308 	.word	0x20000308
 80028a8:	10624dd3 	.word	0x10624dd3

080028ac <HAL_TIM_Base_Init>:
 80028ac:	b580      	push	{r7, lr}
 80028ae:	b082      	sub	sp, #8
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	6078      	str	r0, [r7, #4]
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	d101      	bne.n	80028be <HAL_TIM_Base_Init+0x12>
 80028ba:	2301      	movs	r3, #1
 80028bc:	e041      	b.n	8002942 <HAL_TIM_Base_Init+0x96>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80028c4:	b2db      	uxtb	r3, r3
 80028c6:	2b00      	cmp	r3, #0
 80028c8:	d106      	bne.n	80028d8 <HAL_TIM_Base_Init+0x2c>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	2200      	movs	r2, #0
 80028ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028d2:	6878      	ldr	r0, [r7, #4]
 80028d4:	f7fe fea0 	bl	8001618 <HAL_TIM_Base_MspInit>
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	2202      	movs	r2, #2
 80028dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	681a      	ldr	r2, [r3, #0]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	3304      	adds	r3, #4
 80028e8:	4619      	mov	r1, r3
 80028ea:	4610      	mov	r0, r2
 80028ec:	f000 fc28 	bl	8003140 <TIM_Base_SetConfig>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	2201      	movs	r2, #1
 80028f4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	2201      	movs	r2, #1
 80028fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	2201      	movs	r2, #1
 8002904:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	2201      	movs	r2, #1
 800290c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	2201      	movs	r2, #1
 8002914:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	2201      	movs	r2, #1
 800291c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	2201      	movs	r2, #1
 8002924:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	2201      	movs	r2, #1
 800292c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	2201      	movs	r2, #1
 8002934:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	2201      	movs	r2, #1
 800293c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002940:	2300      	movs	r3, #0
 8002942:	4618      	mov	r0, r3
 8002944:	3708      	adds	r7, #8
 8002946:	46bd      	mov	sp, r7
 8002948:	bd80      	pop	{r7, pc}
	...

0800294c <HAL_TIM_Base_Start_IT>:
 800294c:	b480      	push	{r7}
 800294e:	b085      	sub	sp, #20
 8002950:	af00      	add	r7, sp, #0
 8002952:	6078      	str	r0, [r7, #4]
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800295a:	b2db      	uxtb	r3, r3
 800295c:	2b01      	cmp	r3, #1
 800295e:	d001      	beq.n	8002964 <HAL_TIM_Base_Start_IT+0x18>
 8002960:	2301      	movs	r3, #1
 8002962:	e03a      	b.n	80029da <HAL_TIM_Base_Start_IT+0x8e>
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	2202      	movs	r2, #2
 8002968:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	68da      	ldr	r2, [r3, #12]
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	f042 0201 	orr.w	r2, r2, #1
 800297a:	60da      	str	r2, [r3, #12]
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	4a18      	ldr	r2, [pc, #96]	; (80029e4 <HAL_TIM_Base_Start_IT+0x98>)
 8002982:	4293      	cmp	r3, r2
 8002984:	d00e      	beq.n	80029a4 <HAL_TIM_Base_Start_IT+0x58>
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800298e:	d009      	beq.n	80029a4 <HAL_TIM_Base_Start_IT+0x58>
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	4a14      	ldr	r2, [pc, #80]	; (80029e8 <HAL_TIM_Base_Start_IT+0x9c>)
 8002996:	4293      	cmp	r3, r2
 8002998:	d004      	beq.n	80029a4 <HAL_TIM_Base_Start_IT+0x58>
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	4a13      	ldr	r2, [pc, #76]	; (80029ec <HAL_TIM_Base_Start_IT+0xa0>)
 80029a0:	4293      	cmp	r3, r2
 80029a2:	d111      	bne.n	80029c8 <HAL_TIM_Base_Start_IT+0x7c>
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	689b      	ldr	r3, [r3, #8]
 80029aa:	f003 0307 	and.w	r3, r3, #7
 80029ae:	60fb      	str	r3, [r7, #12]
 80029b0:	68fb      	ldr	r3, [r7, #12]
 80029b2:	2b06      	cmp	r3, #6
 80029b4:	d010      	beq.n	80029d8 <HAL_TIM_Base_Start_IT+0x8c>
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	681a      	ldr	r2, [r3, #0]
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	f042 0201 	orr.w	r2, r2, #1
 80029c4:	601a      	str	r2, [r3, #0]
 80029c6:	e007      	b.n	80029d8 <HAL_TIM_Base_Start_IT+0x8c>
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	681a      	ldr	r2, [r3, #0]
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	f042 0201 	orr.w	r2, r2, #1
 80029d6:	601a      	str	r2, [r3, #0]
 80029d8:	2300      	movs	r3, #0
 80029da:	4618      	mov	r0, r3
 80029dc:	3714      	adds	r7, #20
 80029de:	46bd      	mov	sp, r7
 80029e0:	bc80      	pop	{r7}
 80029e2:	4770      	bx	lr
 80029e4:	40012c00 	.word	0x40012c00
 80029e8:	40000400 	.word	0x40000400
 80029ec:	40000800 	.word	0x40000800

080029f0 <HAL_TIM_PWM_Init>:
 80029f0:	b580      	push	{r7, lr}
 80029f2:	b082      	sub	sp, #8
 80029f4:	af00      	add	r7, sp, #0
 80029f6:	6078      	str	r0, [r7, #4]
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d101      	bne.n	8002a02 <HAL_TIM_PWM_Init+0x12>
 80029fe:	2301      	movs	r3, #1
 8002a00:	e041      	b.n	8002a86 <HAL_TIM_PWM_Init+0x96>
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a08:	b2db      	uxtb	r3, r3
 8002a0a:	2b00      	cmp	r3, #0
 8002a0c:	d106      	bne.n	8002a1c <HAL_TIM_PWM_Init+0x2c>
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	2200      	movs	r2, #0
 8002a12:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a16:	6878      	ldr	r0, [r7, #4]
 8002a18:	f000 f839 	bl	8002a8e <HAL_TIM_PWM_MspInit>
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	2202      	movs	r2, #2
 8002a20:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	681a      	ldr	r2, [r3, #0]
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	3304      	adds	r3, #4
 8002a2c:	4619      	mov	r1, r3
 8002a2e:	4610      	mov	r0, r2
 8002a30:	f000 fb86 	bl	8003140 <TIM_Base_SetConfig>
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	2201      	movs	r2, #1
 8002a38:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	2201      	movs	r2, #1
 8002a40:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	2201      	movs	r2, #1
 8002a48:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	2201      	movs	r2, #1
 8002a50:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	2201      	movs	r2, #1
 8002a58:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	2201      	movs	r2, #1
 8002a60:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	2201      	movs	r2, #1
 8002a68:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	2201      	movs	r2, #1
 8002a70:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	2201      	movs	r2, #1
 8002a78:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	2201      	movs	r2, #1
 8002a80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a84:	2300      	movs	r3, #0
 8002a86:	4618      	mov	r0, r3
 8002a88:	3708      	adds	r7, #8
 8002a8a:	46bd      	mov	sp, r7
 8002a8c:	bd80      	pop	{r7, pc}

08002a8e <HAL_TIM_PWM_MspInit>:
 8002a8e:	b480      	push	{r7}
 8002a90:	b083      	sub	sp, #12
 8002a92:	af00      	add	r7, sp, #0
 8002a94:	6078      	str	r0, [r7, #4]
 8002a96:	bf00      	nop
 8002a98:	370c      	adds	r7, #12
 8002a9a:	46bd      	mov	sp, r7
 8002a9c:	bc80      	pop	{r7}
 8002a9e:	4770      	bx	lr

08002aa0 <HAL_TIM_PWM_Start>:
 8002aa0:	b580      	push	{r7, lr}
 8002aa2:	b084      	sub	sp, #16
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]
 8002aa8:	6039      	str	r1, [r7, #0]
 8002aaa:	683b      	ldr	r3, [r7, #0]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d109      	bne.n	8002ac4 <HAL_TIM_PWM_Start+0x24>
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002ab6:	b2db      	uxtb	r3, r3
 8002ab8:	2b01      	cmp	r3, #1
 8002aba:	bf14      	ite	ne
 8002abc:	2301      	movne	r3, #1
 8002abe:	2300      	moveq	r3, #0
 8002ac0:	b2db      	uxtb	r3, r3
 8002ac2:	e022      	b.n	8002b0a <HAL_TIM_PWM_Start+0x6a>
 8002ac4:	683b      	ldr	r3, [r7, #0]
 8002ac6:	2b04      	cmp	r3, #4
 8002ac8:	d109      	bne.n	8002ade <HAL_TIM_PWM_Start+0x3e>
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8002ad0:	b2db      	uxtb	r3, r3
 8002ad2:	2b01      	cmp	r3, #1
 8002ad4:	bf14      	ite	ne
 8002ad6:	2301      	movne	r3, #1
 8002ad8:	2300      	moveq	r3, #0
 8002ada:	b2db      	uxtb	r3, r3
 8002adc:	e015      	b.n	8002b0a <HAL_TIM_PWM_Start+0x6a>
 8002ade:	683b      	ldr	r3, [r7, #0]
 8002ae0:	2b08      	cmp	r3, #8
 8002ae2:	d109      	bne.n	8002af8 <HAL_TIM_PWM_Start+0x58>
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002aea:	b2db      	uxtb	r3, r3
 8002aec:	2b01      	cmp	r3, #1
 8002aee:	bf14      	ite	ne
 8002af0:	2301      	movne	r3, #1
 8002af2:	2300      	moveq	r3, #0
 8002af4:	b2db      	uxtb	r3, r3
 8002af6:	e008      	b.n	8002b0a <HAL_TIM_PWM_Start+0x6a>
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002afe:	b2db      	uxtb	r3, r3
 8002b00:	2b01      	cmp	r3, #1
 8002b02:	bf14      	ite	ne
 8002b04:	2301      	movne	r3, #1
 8002b06:	2300      	moveq	r3, #0
 8002b08:	b2db      	uxtb	r3, r3
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d001      	beq.n	8002b12 <HAL_TIM_PWM_Start+0x72>
 8002b0e:	2301      	movs	r3, #1
 8002b10:	e05e      	b.n	8002bd0 <HAL_TIM_PWM_Start+0x130>
 8002b12:	683b      	ldr	r3, [r7, #0]
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d104      	bne.n	8002b22 <HAL_TIM_PWM_Start+0x82>
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	2202      	movs	r2, #2
 8002b1c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b20:	e013      	b.n	8002b4a <HAL_TIM_PWM_Start+0xaa>
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	2b04      	cmp	r3, #4
 8002b26:	d104      	bne.n	8002b32 <HAL_TIM_PWM_Start+0x92>
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	2202      	movs	r2, #2
 8002b2c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002b30:	e00b      	b.n	8002b4a <HAL_TIM_PWM_Start+0xaa>
 8002b32:	683b      	ldr	r3, [r7, #0]
 8002b34:	2b08      	cmp	r3, #8
 8002b36:	d104      	bne.n	8002b42 <HAL_TIM_PWM_Start+0xa2>
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	2202      	movs	r2, #2
 8002b3c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002b40:	e003      	b.n	8002b4a <HAL_TIM_PWM_Start+0xaa>
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	2202      	movs	r2, #2
 8002b46:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	2201      	movs	r2, #1
 8002b50:	6839      	ldr	r1, [r7, #0]
 8002b52:	4618      	mov	r0, r3
 8002b54:	f000 fd74 	bl	8003640 <TIM_CCxChannelCmd>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	4a1e      	ldr	r2, [pc, #120]	; (8002bd8 <HAL_TIM_PWM_Start+0x138>)
 8002b5e:	4293      	cmp	r3, r2
 8002b60:	d107      	bne.n	8002b72 <HAL_TIM_PWM_Start+0xd2>
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002b70:	645a      	str	r2, [r3, #68]	; 0x44
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	4a18      	ldr	r2, [pc, #96]	; (8002bd8 <HAL_TIM_PWM_Start+0x138>)
 8002b78:	4293      	cmp	r3, r2
 8002b7a:	d00e      	beq.n	8002b9a <HAL_TIM_PWM_Start+0xfa>
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002b84:	d009      	beq.n	8002b9a <HAL_TIM_PWM_Start+0xfa>
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	4a14      	ldr	r2, [pc, #80]	; (8002bdc <HAL_TIM_PWM_Start+0x13c>)
 8002b8c:	4293      	cmp	r3, r2
 8002b8e:	d004      	beq.n	8002b9a <HAL_TIM_PWM_Start+0xfa>
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	4a12      	ldr	r2, [pc, #72]	; (8002be0 <HAL_TIM_PWM_Start+0x140>)
 8002b96:	4293      	cmp	r3, r2
 8002b98:	d111      	bne.n	8002bbe <HAL_TIM_PWM_Start+0x11e>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	689b      	ldr	r3, [r3, #8]
 8002ba0:	f003 0307 	and.w	r3, r3, #7
 8002ba4:	60fb      	str	r3, [r7, #12]
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	2b06      	cmp	r3, #6
 8002baa:	d010      	beq.n	8002bce <HAL_TIM_PWM_Start+0x12e>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	681a      	ldr	r2, [r3, #0]
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	f042 0201 	orr.w	r2, r2, #1
 8002bba:	601a      	str	r2, [r3, #0]
 8002bbc:	e007      	b.n	8002bce <HAL_TIM_PWM_Start+0x12e>
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	f042 0201 	orr.w	r2, r2, #1
 8002bcc:	601a      	str	r2, [r3, #0]
 8002bce:	2300      	movs	r3, #0
 8002bd0:	4618      	mov	r0, r3
 8002bd2:	3710      	adds	r7, #16
 8002bd4:	46bd      	mov	sp, r7
 8002bd6:	bd80      	pop	{r7, pc}
 8002bd8:	40012c00 	.word	0x40012c00
 8002bdc:	40000400 	.word	0x40000400
 8002be0:	40000800 	.word	0x40000800

08002be4 <HAL_TIM_IRQHandler>:
 8002be4:	b580      	push	{r7, lr}
 8002be6:	b082      	sub	sp, #8
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	6078      	str	r0, [r7, #4]
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	691b      	ldr	r3, [r3, #16]
 8002bf2:	f003 0302 	and.w	r3, r3, #2
 8002bf6:	2b02      	cmp	r3, #2
 8002bf8:	d122      	bne.n	8002c40 <HAL_TIM_IRQHandler+0x5c>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	68db      	ldr	r3, [r3, #12]
 8002c00:	f003 0302 	and.w	r3, r3, #2
 8002c04:	2b02      	cmp	r3, #2
 8002c06:	d11b      	bne.n	8002c40 <HAL_TIM_IRQHandler+0x5c>
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f06f 0202 	mvn.w	r2, #2
 8002c10:	611a      	str	r2, [r3, #16]
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	2201      	movs	r2, #1
 8002c16:	771a      	strb	r2, [r3, #28]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	699b      	ldr	r3, [r3, #24]
 8002c1e:	f003 0303 	and.w	r3, r3, #3
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d003      	beq.n	8002c2e <HAL_TIM_IRQHandler+0x4a>
 8002c26:	6878      	ldr	r0, [r7, #4]
 8002c28:	f000 fa6f 	bl	800310a <HAL_TIM_IC_CaptureCallback>
 8002c2c:	e005      	b.n	8002c3a <HAL_TIM_IRQHandler+0x56>
 8002c2e:	6878      	ldr	r0, [r7, #4]
 8002c30:	f000 fa62 	bl	80030f8 <HAL_TIM_OC_DelayElapsedCallback>
 8002c34:	6878      	ldr	r0, [r7, #4]
 8002c36:	f000 fa71 	bl	800311c <HAL_TIM_PWM_PulseFinishedCallback>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	2200      	movs	r2, #0
 8002c3e:	771a      	strb	r2, [r3, #28]
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	691b      	ldr	r3, [r3, #16]
 8002c46:	f003 0304 	and.w	r3, r3, #4
 8002c4a:	2b04      	cmp	r3, #4
 8002c4c:	d122      	bne.n	8002c94 <HAL_TIM_IRQHandler+0xb0>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	68db      	ldr	r3, [r3, #12]
 8002c54:	f003 0304 	and.w	r3, r3, #4
 8002c58:	2b04      	cmp	r3, #4
 8002c5a:	d11b      	bne.n	8002c94 <HAL_TIM_IRQHandler+0xb0>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f06f 0204 	mvn.w	r2, #4
 8002c64:	611a      	str	r2, [r3, #16]
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	2202      	movs	r2, #2
 8002c6a:	771a      	strb	r2, [r3, #28]
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	699b      	ldr	r3, [r3, #24]
 8002c72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d003      	beq.n	8002c82 <HAL_TIM_IRQHandler+0x9e>
 8002c7a:	6878      	ldr	r0, [r7, #4]
 8002c7c:	f000 fa45 	bl	800310a <HAL_TIM_IC_CaptureCallback>
 8002c80:	e005      	b.n	8002c8e <HAL_TIM_IRQHandler+0xaa>
 8002c82:	6878      	ldr	r0, [r7, #4]
 8002c84:	f000 fa38 	bl	80030f8 <HAL_TIM_OC_DelayElapsedCallback>
 8002c88:	6878      	ldr	r0, [r7, #4]
 8002c8a:	f000 fa47 	bl	800311c <HAL_TIM_PWM_PulseFinishedCallback>
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	2200      	movs	r2, #0
 8002c92:	771a      	strb	r2, [r3, #28]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	691b      	ldr	r3, [r3, #16]
 8002c9a:	f003 0308 	and.w	r3, r3, #8
 8002c9e:	2b08      	cmp	r3, #8
 8002ca0:	d122      	bne.n	8002ce8 <HAL_TIM_IRQHandler+0x104>
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	68db      	ldr	r3, [r3, #12]
 8002ca8:	f003 0308 	and.w	r3, r3, #8
 8002cac:	2b08      	cmp	r3, #8
 8002cae:	d11b      	bne.n	8002ce8 <HAL_TIM_IRQHandler+0x104>
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	f06f 0208 	mvn.w	r2, #8
 8002cb8:	611a      	str	r2, [r3, #16]
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	2204      	movs	r2, #4
 8002cbe:	771a      	strb	r2, [r3, #28]
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	69db      	ldr	r3, [r3, #28]
 8002cc6:	f003 0303 	and.w	r3, r3, #3
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d003      	beq.n	8002cd6 <HAL_TIM_IRQHandler+0xf2>
 8002cce:	6878      	ldr	r0, [r7, #4]
 8002cd0:	f000 fa1b 	bl	800310a <HAL_TIM_IC_CaptureCallback>
 8002cd4:	e005      	b.n	8002ce2 <HAL_TIM_IRQHandler+0xfe>
 8002cd6:	6878      	ldr	r0, [r7, #4]
 8002cd8:	f000 fa0e 	bl	80030f8 <HAL_TIM_OC_DelayElapsedCallback>
 8002cdc:	6878      	ldr	r0, [r7, #4]
 8002cde:	f000 fa1d 	bl	800311c <HAL_TIM_PWM_PulseFinishedCallback>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	2200      	movs	r2, #0
 8002ce6:	771a      	strb	r2, [r3, #28]
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	691b      	ldr	r3, [r3, #16]
 8002cee:	f003 0310 	and.w	r3, r3, #16
 8002cf2:	2b10      	cmp	r3, #16
 8002cf4:	d122      	bne.n	8002d3c <HAL_TIM_IRQHandler+0x158>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	68db      	ldr	r3, [r3, #12]
 8002cfc:	f003 0310 	and.w	r3, r3, #16
 8002d00:	2b10      	cmp	r3, #16
 8002d02:	d11b      	bne.n	8002d3c <HAL_TIM_IRQHandler+0x158>
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	f06f 0210 	mvn.w	r2, #16
 8002d0c:	611a      	str	r2, [r3, #16]
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	2208      	movs	r2, #8
 8002d12:	771a      	strb	r2, [r3, #28]
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	69db      	ldr	r3, [r3, #28]
 8002d1a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d003      	beq.n	8002d2a <HAL_TIM_IRQHandler+0x146>
 8002d22:	6878      	ldr	r0, [r7, #4]
 8002d24:	f000 f9f1 	bl	800310a <HAL_TIM_IC_CaptureCallback>
 8002d28:	e005      	b.n	8002d36 <HAL_TIM_IRQHandler+0x152>
 8002d2a:	6878      	ldr	r0, [r7, #4]
 8002d2c:	f000 f9e4 	bl	80030f8 <HAL_TIM_OC_DelayElapsedCallback>
 8002d30:	6878      	ldr	r0, [r7, #4]
 8002d32:	f000 f9f3 	bl	800311c <HAL_TIM_PWM_PulseFinishedCallback>
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	2200      	movs	r2, #0
 8002d3a:	771a      	strb	r2, [r3, #28]
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	691b      	ldr	r3, [r3, #16]
 8002d42:	f003 0301 	and.w	r3, r3, #1
 8002d46:	2b01      	cmp	r3, #1
 8002d48:	d10e      	bne.n	8002d68 <HAL_TIM_IRQHandler+0x184>
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	68db      	ldr	r3, [r3, #12]
 8002d50:	f003 0301 	and.w	r3, r3, #1
 8002d54:	2b01      	cmp	r3, #1
 8002d56:	d107      	bne.n	8002d68 <HAL_TIM_IRQHandler+0x184>
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f06f 0201 	mvn.w	r2, #1
 8002d60:	611a      	str	r2, [r3, #16]
 8002d62:	6878      	ldr	r0, [r7, #4]
 8002d64:	f7fe f83d 	bl	8000de2 <HAL_TIM_PeriodElapsedCallback>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	691b      	ldr	r3, [r3, #16]
 8002d6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d72:	2b80      	cmp	r3, #128	; 0x80
 8002d74:	d10e      	bne.n	8002d94 <HAL_TIM_IRQHandler+0x1b0>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	68db      	ldr	r3, [r3, #12]
 8002d7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d80:	2b80      	cmp	r3, #128	; 0x80
 8002d82:	d107      	bne.n	8002d94 <HAL_TIM_IRQHandler+0x1b0>
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002d8c:	611a      	str	r2, [r3, #16]
 8002d8e:	6878      	ldr	r0, [r7, #4]
 8002d90:	f000 fce1 	bl	8003756 <HAL_TIMEx_BreakCallback>
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	691b      	ldr	r3, [r3, #16]
 8002d9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d9e:	2b40      	cmp	r3, #64	; 0x40
 8002da0:	d10e      	bne.n	8002dc0 <HAL_TIM_IRQHandler+0x1dc>
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	68db      	ldr	r3, [r3, #12]
 8002da8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002dac:	2b40      	cmp	r3, #64	; 0x40
 8002dae:	d107      	bne.n	8002dc0 <HAL_TIM_IRQHandler+0x1dc>
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002db8:	611a      	str	r2, [r3, #16]
 8002dba:	6878      	ldr	r0, [r7, #4]
 8002dbc:	f000 f9b7 	bl	800312e <HAL_TIM_TriggerCallback>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	691b      	ldr	r3, [r3, #16]
 8002dc6:	f003 0320 	and.w	r3, r3, #32
 8002dca:	2b20      	cmp	r3, #32
 8002dcc:	d10e      	bne.n	8002dec <HAL_TIM_IRQHandler+0x208>
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	68db      	ldr	r3, [r3, #12]
 8002dd4:	f003 0320 	and.w	r3, r3, #32
 8002dd8:	2b20      	cmp	r3, #32
 8002dda:	d107      	bne.n	8002dec <HAL_TIM_IRQHandler+0x208>
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	f06f 0220 	mvn.w	r2, #32
 8002de4:	611a      	str	r2, [r3, #16]
 8002de6:	6878      	ldr	r0, [r7, #4]
 8002de8:	f000 fcac 	bl	8003744 <HAL_TIMEx_CommutCallback>
 8002dec:	bf00      	nop
 8002dee:	3708      	adds	r7, #8
 8002df0:	46bd      	mov	sp, r7
 8002df2:	bd80      	pop	{r7, pc}

08002df4 <HAL_TIM_PWM_ConfigChannel>:
 8002df4:	b580      	push	{r7, lr}
 8002df6:	b084      	sub	sp, #16
 8002df8:	af00      	add	r7, sp, #0
 8002dfa:	60f8      	str	r0, [r7, #12]
 8002dfc:	60b9      	str	r1, [r7, #8]
 8002dfe:	607a      	str	r2, [r7, #4]
 8002e00:	68fb      	ldr	r3, [r7, #12]
 8002e02:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002e06:	2b01      	cmp	r3, #1
 8002e08:	d101      	bne.n	8002e0e <HAL_TIM_PWM_ConfigChannel+0x1a>
 8002e0a:	2302      	movs	r3, #2
 8002e0c:	e0ac      	b.n	8002f68 <HAL_TIM_PWM_ConfigChannel+0x174>
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	2201      	movs	r2, #1
 8002e12:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	2b0c      	cmp	r3, #12
 8002e1a:	f200 809f 	bhi.w	8002f5c <HAL_TIM_PWM_ConfigChannel+0x168>
 8002e1e:	a201      	add	r2, pc, #4	; (adr r2, 8002e24 <HAL_TIM_PWM_ConfigChannel+0x30>)
 8002e20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e24:	08002e59 	.word	0x08002e59
 8002e28:	08002f5d 	.word	0x08002f5d
 8002e2c:	08002f5d 	.word	0x08002f5d
 8002e30:	08002f5d 	.word	0x08002f5d
 8002e34:	08002e99 	.word	0x08002e99
 8002e38:	08002f5d 	.word	0x08002f5d
 8002e3c:	08002f5d 	.word	0x08002f5d
 8002e40:	08002f5d 	.word	0x08002f5d
 8002e44:	08002edb 	.word	0x08002edb
 8002e48:	08002f5d 	.word	0x08002f5d
 8002e4c:	08002f5d 	.word	0x08002f5d
 8002e50:	08002f5d 	.word	0x08002f5d
 8002e54:	08002f1b 	.word	0x08002f1b
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	68b9      	ldr	r1, [r7, #8]
 8002e5e:	4618      	mov	r0, r3
 8002e60:	f000 f9d0 	bl	8003204 <TIM_OC1_SetConfig>
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	699a      	ldr	r2, [r3, #24]
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	f042 0208 	orr.w	r2, r2, #8
 8002e72:	619a      	str	r2, [r3, #24]
 8002e74:	68fb      	ldr	r3, [r7, #12]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	699a      	ldr	r2, [r3, #24]
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	f022 0204 	bic.w	r2, r2, #4
 8002e82:	619a      	str	r2, [r3, #24]
 8002e84:	68fb      	ldr	r3, [r7, #12]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	6999      	ldr	r1, [r3, #24]
 8002e8a:	68bb      	ldr	r3, [r7, #8]
 8002e8c:	691a      	ldr	r2, [r3, #16]
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	430a      	orrs	r2, r1
 8002e94:	619a      	str	r2, [r3, #24]
 8002e96:	e062      	b.n	8002f5e <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002e98:	68fb      	ldr	r3, [r7, #12]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	68b9      	ldr	r1, [r7, #8]
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	f000 fa16 	bl	80032d0 <TIM_OC2_SetConfig>
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	699a      	ldr	r2, [r3, #24]
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002eb2:	619a      	str	r2, [r3, #24]
 8002eb4:	68fb      	ldr	r3, [r7, #12]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	699a      	ldr	r2, [r3, #24]
 8002eba:	68fb      	ldr	r3, [r7, #12]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002ec2:	619a      	str	r2, [r3, #24]
 8002ec4:	68fb      	ldr	r3, [r7, #12]
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	6999      	ldr	r1, [r3, #24]
 8002eca:	68bb      	ldr	r3, [r7, #8]
 8002ecc:	691b      	ldr	r3, [r3, #16]
 8002ece:	021a      	lsls	r2, r3, #8
 8002ed0:	68fb      	ldr	r3, [r7, #12]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	430a      	orrs	r2, r1
 8002ed6:	619a      	str	r2, [r3, #24]
 8002ed8:	e041      	b.n	8002f5e <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002eda:	68fb      	ldr	r3, [r7, #12]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	68b9      	ldr	r1, [r7, #8]
 8002ee0:	4618      	mov	r0, r3
 8002ee2:	f000 fa5f 	bl	80033a4 <TIM_OC3_SetConfig>
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	69da      	ldr	r2, [r3, #28]
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	f042 0208 	orr.w	r2, r2, #8
 8002ef4:	61da      	str	r2, [r3, #28]
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	69da      	ldr	r2, [r3, #28]
 8002efc:	68fb      	ldr	r3, [r7, #12]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	f022 0204 	bic.w	r2, r2, #4
 8002f04:	61da      	str	r2, [r3, #28]
 8002f06:	68fb      	ldr	r3, [r7, #12]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	69d9      	ldr	r1, [r3, #28]
 8002f0c:	68bb      	ldr	r3, [r7, #8]
 8002f0e:	691a      	ldr	r2, [r3, #16]
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	430a      	orrs	r2, r1
 8002f16:	61da      	str	r2, [r3, #28]
 8002f18:	e021      	b.n	8002f5e <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002f1a:	68fb      	ldr	r3, [r7, #12]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	68b9      	ldr	r1, [r7, #8]
 8002f20:	4618      	mov	r0, r3
 8002f22:	f000 faa9 	bl	8003478 <TIM_OC4_SetConfig>
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	69da      	ldr	r2, [r3, #28]
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002f34:	61da      	str	r2, [r3, #28]
 8002f36:	68fb      	ldr	r3, [r7, #12]
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	69da      	ldr	r2, [r3, #28]
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002f44:	61da      	str	r2, [r3, #28]
 8002f46:	68fb      	ldr	r3, [r7, #12]
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	69d9      	ldr	r1, [r3, #28]
 8002f4c:	68bb      	ldr	r3, [r7, #8]
 8002f4e:	691b      	ldr	r3, [r3, #16]
 8002f50:	021a      	lsls	r2, r3, #8
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	430a      	orrs	r2, r1
 8002f58:	61da      	str	r2, [r3, #28]
 8002f5a:	e000      	b.n	8002f5e <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002f5c:	bf00      	nop
 8002f5e:	68fb      	ldr	r3, [r7, #12]
 8002f60:	2200      	movs	r2, #0
 8002f62:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f66:	2300      	movs	r3, #0
 8002f68:	4618      	mov	r0, r3
 8002f6a:	3710      	adds	r7, #16
 8002f6c:	46bd      	mov	sp, r7
 8002f6e:	bd80      	pop	{r7, pc}

08002f70 <HAL_TIM_ConfigClockSource>:
 8002f70:	b580      	push	{r7, lr}
 8002f72:	b084      	sub	sp, #16
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	6078      	str	r0, [r7, #4]
 8002f78:	6039      	str	r1, [r7, #0]
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002f80:	2b01      	cmp	r3, #1
 8002f82:	d101      	bne.n	8002f88 <HAL_TIM_ConfigClockSource+0x18>
 8002f84:	2302      	movs	r3, #2
 8002f86:	e0b3      	b.n	80030f0 <HAL_TIM_ConfigClockSource+0x180>
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	2201      	movs	r2, #1
 8002f8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	2202      	movs	r2, #2
 8002f94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	689b      	ldr	r3, [r3, #8]
 8002f9e:	60fb      	str	r3, [r7, #12]
 8002fa0:	68fb      	ldr	r3, [r7, #12]
 8002fa2:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002fa6:	60fb      	str	r3, [r7, #12]
 8002fa8:	68fb      	ldr	r3, [r7, #12]
 8002faa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002fae:	60fb      	str	r3, [r7, #12]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	68fa      	ldr	r2, [r7, #12]
 8002fb6:	609a      	str	r2, [r3, #8]
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002fc0:	d03e      	beq.n	8003040 <HAL_TIM_ConfigClockSource+0xd0>
 8002fc2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002fc6:	f200 8087 	bhi.w	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8002fca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002fce:	f000 8085 	beq.w	80030dc <HAL_TIM_ConfigClockSource+0x16c>
 8002fd2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002fd6:	d87f      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8002fd8:	2b70      	cmp	r3, #112	; 0x70
 8002fda:	d01a      	beq.n	8003012 <HAL_TIM_ConfigClockSource+0xa2>
 8002fdc:	2b70      	cmp	r3, #112	; 0x70
 8002fde:	d87b      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8002fe0:	2b60      	cmp	r3, #96	; 0x60
 8002fe2:	d050      	beq.n	8003086 <HAL_TIM_ConfigClockSource+0x116>
 8002fe4:	2b60      	cmp	r3, #96	; 0x60
 8002fe6:	d877      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8002fe8:	2b50      	cmp	r3, #80	; 0x50
 8002fea:	d03c      	beq.n	8003066 <HAL_TIM_ConfigClockSource+0xf6>
 8002fec:	2b50      	cmp	r3, #80	; 0x50
 8002fee:	d873      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8002ff0:	2b40      	cmp	r3, #64	; 0x40
 8002ff2:	d058      	beq.n	80030a6 <HAL_TIM_ConfigClockSource+0x136>
 8002ff4:	2b40      	cmp	r3, #64	; 0x40
 8002ff6:	d86f      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8002ff8:	2b30      	cmp	r3, #48	; 0x30
 8002ffa:	d064      	beq.n	80030c6 <HAL_TIM_ConfigClockSource+0x156>
 8002ffc:	2b30      	cmp	r3, #48	; 0x30
 8002ffe:	d86b      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8003000:	2b20      	cmp	r3, #32
 8003002:	d060      	beq.n	80030c6 <HAL_TIM_ConfigClockSource+0x156>
 8003004:	2b20      	cmp	r3, #32
 8003006:	d867      	bhi.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8003008:	2b00      	cmp	r3, #0
 800300a:	d05c      	beq.n	80030c6 <HAL_TIM_ConfigClockSource+0x156>
 800300c:	2b10      	cmp	r3, #16
 800300e:	d05a      	beq.n	80030c6 <HAL_TIM_ConfigClockSource+0x156>
 8003010:	e062      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x168>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	6818      	ldr	r0, [r3, #0]
 8003016:	683b      	ldr	r3, [r7, #0]
 8003018:	6899      	ldr	r1, [r3, #8]
 800301a:	683b      	ldr	r3, [r7, #0]
 800301c:	685a      	ldr	r2, [r3, #4]
 800301e:	683b      	ldr	r3, [r7, #0]
 8003020:	68db      	ldr	r3, [r3, #12]
 8003022:	f000 faee 	bl	8003602 <TIM_ETR_SetConfig>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	689b      	ldr	r3, [r3, #8]
 800302c:	60fb      	str	r3, [r7, #12]
 800302e:	68fb      	ldr	r3, [r7, #12]
 8003030:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003034:	60fb      	str	r3, [r7, #12]
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	68fa      	ldr	r2, [r7, #12]
 800303c:	609a      	str	r2, [r3, #8]
 800303e:	e04e      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	6818      	ldr	r0, [r3, #0]
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	6899      	ldr	r1, [r3, #8]
 8003048:	683b      	ldr	r3, [r7, #0]
 800304a:	685a      	ldr	r2, [r3, #4]
 800304c:	683b      	ldr	r3, [r7, #0]
 800304e:	68db      	ldr	r3, [r3, #12]
 8003050:	f000 fad7 	bl	8003602 <TIM_ETR_SetConfig>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	689a      	ldr	r2, [r3, #8]
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003062:	609a      	str	r2, [r3, #8]
 8003064:	e03b      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6818      	ldr	r0, [r3, #0]
 800306a:	683b      	ldr	r3, [r7, #0]
 800306c:	6859      	ldr	r1, [r3, #4]
 800306e:	683b      	ldr	r3, [r7, #0]
 8003070:	68db      	ldr	r3, [r3, #12]
 8003072:	461a      	mov	r2, r3
 8003074:	f000 fa4e 	bl	8003514 <TIM_TI1_ConfigInputStage>
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	2150      	movs	r1, #80	; 0x50
 800307e:	4618      	mov	r0, r3
 8003080:	f000 faa5 	bl	80035ce <TIM_ITRx_SetConfig>
 8003084:	e02b      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	6818      	ldr	r0, [r3, #0]
 800308a:	683b      	ldr	r3, [r7, #0]
 800308c:	6859      	ldr	r1, [r3, #4]
 800308e:	683b      	ldr	r3, [r7, #0]
 8003090:	68db      	ldr	r3, [r3, #12]
 8003092:	461a      	mov	r2, r3
 8003094:	f000 fa6c 	bl	8003570 <TIM_TI2_ConfigInputStage>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	2160      	movs	r1, #96	; 0x60
 800309e:	4618      	mov	r0, r3
 80030a0:	f000 fa95 	bl	80035ce <TIM_ITRx_SetConfig>
 80030a4:	e01b      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	6818      	ldr	r0, [r3, #0]
 80030aa:	683b      	ldr	r3, [r7, #0]
 80030ac:	6859      	ldr	r1, [r3, #4]
 80030ae:	683b      	ldr	r3, [r7, #0]
 80030b0:	68db      	ldr	r3, [r3, #12]
 80030b2:	461a      	mov	r2, r3
 80030b4:	f000 fa2e 	bl	8003514 <TIM_TI1_ConfigInputStage>
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	2140      	movs	r1, #64	; 0x40
 80030be:	4618      	mov	r0, r3
 80030c0:	f000 fa85 	bl	80035ce <TIM_ITRx_SetConfig>
 80030c4:	e00b      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681a      	ldr	r2, [r3, #0]
 80030ca:	683b      	ldr	r3, [r7, #0]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	4619      	mov	r1, r3
 80030d0:	4610      	mov	r0, r2
 80030d2:	f000 fa7c 	bl	80035ce <TIM_ITRx_SetConfig>
 80030d6:	e002      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 80030d8:	bf00      	nop
 80030da:	e000      	b.n	80030de <HAL_TIM_ConfigClockSource+0x16e>
 80030dc:	bf00      	nop
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	2201      	movs	r2, #1
 80030e2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	2200      	movs	r2, #0
 80030ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80030ee:	2300      	movs	r3, #0
 80030f0:	4618      	mov	r0, r3
 80030f2:	3710      	adds	r7, #16
 80030f4:	46bd      	mov	sp, r7
 80030f6:	bd80      	pop	{r7, pc}

080030f8 <HAL_TIM_OC_DelayElapsedCallback>:
 80030f8:	b480      	push	{r7}
 80030fa:	b083      	sub	sp, #12
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]
 8003100:	bf00      	nop
 8003102:	370c      	adds	r7, #12
 8003104:	46bd      	mov	sp, r7
 8003106:	bc80      	pop	{r7}
 8003108:	4770      	bx	lr

0800310a <HAL_TIM_IC_CaptureCallback>:
 800310a:	b480      	push	{r7}
 800310c:	b083      	sub	sp, #12
 800310e:	af00      	add	r7, sp, #0
 8003110:	6078      	str	r0, [r7, #4]
 8003112:	bf00      	nop
 8003114:	370c      	adds	r7, #12
 8003116:	46bd      	mov	sp, r7
 8003118:	bc80      	pop	{r7}
 800311a:	4770      	bx	lr

0800311c <HAL_TIM_PWM_PulseFinishedCallback>:
 800311c:	b480      	push	{r7}
 800311e:	b083      	sub	sp, #12
 8003120:	af00      	add	r7, sp, #0
 8003122:	6078      	str	r0, [r7, #4]
 8003124:	bf00      	nop
 8003126:	370c      	adds	r7, #12
 8003128:	46bd      	mov	sp, r7
 800312a:	bc80      	pop	{r7}
 800312c:	4770      	bx	lr

0800312e <HAL_TIM_TriggerCallback>:
 800312e:	b480      	push	{r7}
 8003130:	b083      	sub	sp, #12
 8003132:	af00      	add	r7, sp, #0
 8003134:	6078      	str	r0, [r7, #4]
 8003136:	bf00      	nop
 8003138:	370c      	adds	r7, #12
 800313a:	46bd      	mov	sp, r7
 800313c:	bc80      	pop	{r7}
 800313e:	4770      	bx	lr

08003140 <TIM_Base_SetConfig>:
 8003140:	b480      	push	{r7}
 8003142:	b085      	sub	sp, #20
 8003144:	af00      	add	r7, sp, #0
 8003146:	6078      	str	r0, [r7, #4]
 8003148:	6039      	str	r1, [r7, #0]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	60fb      	str	r3, [r7, #12]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	4a29      	ldr	r2, [pc, #164]	; (80031f8 <TIM_Base_SetConfig+0xb8>)
 8003154:	4293      	cmp	r3, r2
 8003156:	d00b      	beq.n	8003170 <TIM_Base_SetConfig+0x30>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800315e:	d007      	beq.n	8003170 <TIM_Base_SetConfig+0x30>
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	4a26      	ldr	r2, [pc, #152]	; (80031fc <TIM_Base_SetConfig+0xbc>)
 8003164:	4293      	cmp	r3, r2
 8003166:	d003      	beq.n	8003170 <TIM_Base_SetConfig+0x30>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	4a25      	ldr	r2, [pc, #148]	; (8003200 <TIM_Base_SetConfig+0xc0>)
 800316c:	4293      	cmp	r3, r2
 800316e:	d108      	bne.n	8003182 <TIM_Base_SetConfig+0x42>
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003176:	60fb      	str	r3, [r7, #12]
 8003178:	683b      	ldr	r3, [r7, #0]
 800317a:	685b      	ldr	r3, [r3, #4]
 800317c:	68fa      	ldr	r2, [r7, #12]
 800317e:	4313      	orrs	r3, r2
 8003180:	60fb      	str	r3, [r7, #12]
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	4a1c      	ldr	r2, [pc, #112]	; (80031f8 <TIM_Base_SetConfig+0xb8>)
 8003186:	4293      	cmp	r3, r2
 8003188:	d00b      	beq.n	80031a2 <TIM_Base_SetConfig+0x62>
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003190:	d007      	beq.n	80031a2 <TIM_Base_SetConfig+0x62>
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	4a19      	ldr	r2, [pc, #100]	; (80031fc <TIM_Base_SetConfig+0xbc>)
 8003196:	4293      	cmp	r3, r2
 8003198:	d003      	beq.n	80031a2 <TIM_Base_SetConfig+0x62>
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	4a18      	ldr	r2, [pc, #96]	; (8003200 <TIM_Base_SetConfig+0xc0>)
 800319e:	4293      	cmp	r3, r2
 80031a0:	d108      	bne.n	80031b4 <TIM_Base_SetConfig+0x74>
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80031a8:	60fb      	str	r3, [r7, #12]
 80031aa:	683b      	ldr	r3, [r7, #0]
 80031ac:	68db      	ldr	r3, [r3, #12]
 80031ae:	68fa      	ldr	r2, [r7, #12]
 80031b0:	4313      	orrs	r3, r2
 80031b2:	60fb      	str	r3, [r7, #12]
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80031ba:	683b      	ldr	r3, [r7, #0]
 80031bc:	695b      	ldr	r3, [r3, #20]
 80031be:	4313      	orrs	r3, r2
 80031c0:	60fb      	str	r3, [r7, #12]
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	68fa      	ldr	r2, [r7, #12]
 80031c6:	601a      	str	r2, [r3, #0]
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	689a      	ldr	r2, [r3, #8]
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	62da      	str	r2, [r3, #44]	; 0x2c
 80031d0:	683b      	ldr	r3, [r7, #0]
 80031d2:	681a      	ldr	r2, [r3, #0]
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	629a      	str	r2, [r3, #40]	; 0x28
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	4a07      	ldr	r2, [pc, #28]	; (80031f8 <TIM_Base_SetConfig+0xb8>)
 80031dc:	4293      	cmp	r3, r2
 80031de:	d103      	bne.n	80031e8 <TIM_Base_SetConfig+0xa8>
 80031e0:	683b      	ldr	r3, [r7, #0]
 80031e2:	691a      	ldr	r2, [r3, #16]
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	631a      	str	r2, [r3, #48]	; 0x30
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2201      	movs	r2, #1
 80031ec:	615a      	str	r2, [r3, #20]
 80031ee:	bf00      	nop
 80031f0:	3714      	adds	r7, #20
 80031f2:	46bd      	mov	sp, r7
 80031f4:	bc80      	pop	{r7}
 80031f6:	4770      	bx	lr
 80031f8:	40012c00 	.word	0x40012c00
 80031fc:	40000400 	.word	0x40000400
 8003200:	40000800 	.word	0x40000800

08003204 <TIM_OC1_SetConfig>:
 8003204:	b480      	push	{r7}
 8003206:	b087      	sub	sp, #28
 8003208:	af00      	add	r7, sp, #0
 800320a:	6078      	str	r0, [r7, #4]
 800320c:	6039      	str	r1, [r7, #0]
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	6a1b      	ldr	r3, [r3, #32]
 8003212:	f023 0201 	bic.w	r2, r3, #1
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	621a      	str	r2, [r3, #32]
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	6a1b      	ldr	r3, [r3, #32]
 800321e:	617b      	str	r3, [r7, #20]
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	685b      	ldr	r3, [r3, #4]
 8003224:	613b      	str	r3, [r7, #16]
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	699b      	ldr	r3, [r3, #24]
 800322a:	60fb      	str	r3, [r7, #12]
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003232:	60fb      	str	r3, [r7, #12]
 8003234:	68fb      	ldr	r3, [r7, #12]
 8003236:	f023 0303 	bic.w	r3, r3, #3
 800323a:	60fb      	str	r3, [r7, #12]
 800323c:	683b      	ldr	r3, [r7, #0]
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	68fa      	ldr	r2, [r7, #12]
 8003242:	4313      	orrs	r3, r2
 8003244:	60fb      	str	r3, [r7, #12]
 8003246:	697b      	ldr	r3, [r7, #20]
 8003248:	f023 0302 	bic.w	r3, r3, #2
 800324c:	617b      	str	r3, [r7, #20]
 800324e:	683b      	ldr	r3, [r7, #0]
 8003250:	689b      	ldr	r3, [r3, #8]
 8003252:	697a      	ldr	r2, [r7, #20]
 8003254:	4313      	orrs	r3, r2
 8003256:	617b      	str	r3, [r7, #20]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	4a1c      	ldr	r2, [pc, #112]	; (80032cc <TIM_OC1_SetConfig+0xc8>)
 800325c:	4293      	cmp	r3, r2
 800325e:	d10c      	bne.n	800327a <TIM_OC1_SetConfig+0x76>
 8003260:	697b      	ldr	r3, [r7, #20]
 8003262:	f023 0308 	bic.w	r3, r3, #8
 8003266:	617b      	str	r3, [r7, #20]
 8003268:	683b      	ldr	r3, [r7, #0]
 800326a:	68db      	ldr	r3, [r3, #12]
 800326c:	697a      	ldr	r2, [r7, #20]
 800326e:	4313      	orrs	r3, r2
 8003270:	617b      	str	r3, [r7, #20]
 8003272:	697b      	ldr	r3, [r7, #20]
 8003274:	f023 0304 	bic.w	r3, r3, #4
 8003278:	617b      	str	r3, [r7, #20]
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	4a13      	ldr	r2, [pc, #76]	; (80032cc <TIM_OC1_SetConfig+0xc8>)
 800327e:	4293      	cmp	r3, r2
 8003280:	d111      	bne.n	80032a6 <TIM_OC1_SetConfig+0xa2>
 8003282:	693b      	ldr	r3, [r7, #16]
 8003284:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003288:	613b      	str	r3, [r7, #16]
 800328a:	693b      	ldr	r3, [r7, #16]
 800328c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003290:	613b      	str	r3, [r7, #16]
 8003292:	683b      	ldr	r3, [r7, #0]
 8003294:	695b      	ldr	r3, [r3, #20]
 8003296:	693a      	ldr	r2, [r7, #16]
 8003298:	4313      	orrs	r3, r2
 800329a:	613b      	str	r3, [r7, #16]
 800329c:	683b      	ldr	r3, [r7, #0]
 800329e:	699b      	ldr	r3, [r3, #24]
 80032a0:	693a      	ldr	r2, [r7, #16]
 80032a2:	4313      	orrs	r3, r2
 80032a4:	613b      	str	r3, [r7, #16]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	693a      	ldr	r2, [r7, #16]
 80032aa:	605a      	str	r2, [r3, #4]
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	68fa      	ldr	r2, [r7, #12]
 80032b0:	619a      	str	r2, [r3, #24]
 80032b2:	683b      	ldr	r3, [r7, #0]
 80032b4:	685a      	ldr	r2, [r3, #4]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	635a      	str	r2, [r3, #52]	; 0x34
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	697a      	ldr	r2, [r7, #20]
 80032be:	621a      	str	r2, [r3, #32]
 80032c0:	bf00      	nop
 80032c2:	371c      	adds	r7, #28
 80032c4:	46bd      	mov	sp, r7
 80032c6:	bc80      	pop	{r7}
 80032c8:	4770      	bx	lr
 80032ca:	bf00      	nop
 80032cc:	40012c00 	.word	0x40012c00

080032d0 <TIM_OC2_SetConfig>:
 80032d0:	b480      	push	{r7}
 80032d2:	b087      	sub	sp, #28
 80032d4:	af00      	add	r7, sp, #0
 80032d6:	6078      	str	r0, [r7, #4]
 80032d8:	6039      	str	r1, [r7, #0]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	6a1b      	ldr	r3, [r3, #32]
 80032de:	f023 0210 	bic.w	r2, r3, #16
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	621a      	str	r2, [r3, #32]
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	6a1b      	ldr	r3, [r3, #32]
 80032ea:	617b      	str	r3, [r7, #20]
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	685b      	ldr	r3, [r3, #4]
 80032f0:	613b      	str	r3, [r7, #16]
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	699b      	ldr	r3, [r3, #24]
 80032f6:	60fb      	str	r3, [r7, #12]
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80032fe:	60fb      	str	r3, [r7, #12]
 8003300:	68fb      	ldr	r3, [r7, #12]
 8003302:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003306:	60fb      	str	r3, [r7, #12]
 8003308:	683b      	ldr	r3, [r7, #0]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	021b      	lsls	r3, r3, #8
 800330e:	68fa      	ldr	r2, [r7, #12]
 8003310:	4313      	orrs	r3, r2
 8003312:	60fb      	str	r3, [r7, #12]
 8003314:	697b      	ldr	r3, [r7, #20]
 8003316:	f023 0320 	bic.w	r3, r3, #32
 800331a:	617b      	str	r3, [r7, #20]
 800331c:	683b      	ldr	r3, [r7, #0]
 800331e:	689b      	ldr	r3, [r3, #8]
 8003320:	011b      	lsls	r3, r3, #4
 8003322:	697a      	ldr	r2, [r7, #20]
 8003324:	4313      	orrs	r3, r2
 8003326:	617b      	str	r3, [r7, #20]
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	4a1d      	ldr	r2, [pc, #116]	; (80033a0 <TIM_OC2_SetConfig+0xd0>)
 800332c:	4293      	cmp	r3, r2
 800332e:	d10d      	bne.n	800334c <TIM_OC2_SetConfig+0x7c>
 8003330:	697b      	ldr	r3, [r7, #20]
 8003332:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003336:	617b      	str	r3, [r7, #20]
 8003338:	683b      	ldr	r3, [r7, #0]
 800333a:	68db      	ldr	r3, [r3, #12]
 800333c:	011b      	lsls	r3, r3, #4
 800333e:	697a      	ldr	r2, [r7, #20]
 8003340:	4313      	orrs	r3, r2
 8003342:	617b      	str	r3, [r7, #20]
 8003344:	697b      	ldr	r3, [r7, #20]
 8003346:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800334a:	617b      	str	r3, [r7, #20]
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	4a14      	ldr	r2, [pc, #80]	; (80033a0 <TIM_OC2_SetConfig+0xd0>)
 8003350:	4293      	cmp	r3, r2
 8003352:	d113      	bne.n	800337c <TIM_OC2_SetConfig+0xac>
 8003354:	693b      	ldr	r3, [r7, #16]
 8003356:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800335a:	613b      	str	r3, [r7, #16]
 800335c:	693b      	ldr	r3, [r7, #16]
 800335e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003362:	613b      	str	r3, [r7, #16]
 8003364:	683b      	ldr	r3, [r7, #0]
 8003366:	695b      	ldr	r3, [r3, #20]
 8003368:	009b      	lsls	r3, r3, #2
 800336a:	693a      	ldr	r2, [r7, #16]
 800336c:	4313      	orrs	r3, r2
 800336e:	613b      	str	r3, [r7, #16]
 8003370:	683b      	ldr	r3, [r7, #0]
 8003372:	699b      	ldr	r3, [r3, #24]
 8003374:	009b      	lsls	r3, r3, #2
 8003376:	693a      	ldr	r2, [r7, #16]
 8003378:	4313      	orrs	r3, r2
 800337a:	613b      	str	r3, [r7, #16]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	693a      	ldr	r2, [r7, #16]
 8003380:	605a      	str	r2, [r3, #4]
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	68fa      	ldr	r2, [r7, #12]
 8003386:	619a      	str	r2, [r3, #24]
 8003388:	683b      	ldr	r3, [r7, #0]
 800338a:	685a      	ldr	r2, [r3, #4]
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	639a      	str	r2, [r3, #56]	; 0x38
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	697a      	ldr	r2, [r7, #20]
 8003394:	621a      	str	r2, [r3, #32]
 8003396:	bf00      	nop
 8003398:	371c      	adds	r7, #28
 800339a:	46bd      	mov	sp, r7
 800339c:	bc80      	pop	{r7}
 800339e:	4770      	bx	lr
 80033a0:	40012c00 	.word	0x40012c00

080033a4 <TIM_OC3_SetConfig>:
 80033a4:	b480      	push	{r7}
 80033a6:	b087      	sub	sp, #28
 80033a8:	af00      	add	r7, sp, #0
 80033aa:	6078      	str	r0, [r7, #4]
 80033ac:	6039      	str	r1, [r7, #0]
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	6a1b      	ldr	r3, [r3, #32]
 80033b2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	621a      	str	r2, [r3, #32]
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	6a1b      	ldr	r3, [r3, #32]
 80033be:	617b      	str	r3, [r7, #20]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	685b      	ldr	r3, [r3, #4]
 80033c4:	613b      	str	r3, [r7, #16]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	69db      	ldr	r3, [r3, #28]
 80033ca:	60fb      	str	r3, [r7, #12]
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80033d2:	60fb      	str	r3, [r7, #12]
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	f023 0303 	bic.w	r3, r3, #3
 80033da:	60fb      	str	r3, [r7, #12]
 80033dc:	683b      	ldr	r3, [r7, #0]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	68fa      	ldr	r2, [r7, #12]
 80033e2:	4313      	orrs	r3, r2
 80033e4:	60fb      	str	r3, [r7, #12]
 80033e6:	697b      	ldr	r3, [r7, #20]
 80033e8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80033ec:	617b      	str	r3, [r7, #20]
 80033ee:	683b      	ldr	r3, [r7, #0]
 80033f0:	689b      	ldr	r3, [r3, #8]
 80033f2:	021b      	lsls	r3, r3, #8
 80033f4:	697a      	ldr	r2, [r7, #20]
 80033f6:	4313      	orrs	r3, r2
 80033f8:	617b      	str	r3, [r7, #20]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	4a1d      	ldr	r2, [pc, #116]	; (8003474 <TIM_OC3_SetConfig+0xd0>)
 80033fe:	4293      	cmp	r3, r2
 8003400:	d10d      	bne.n	800341e <TIM_OC3_SetConfig+0x7a>
 8003402:	697b      	ldr	r3, [r7, #20]
 8003404:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003408:	617b      	str	r3, [r7, #20]
 800340a:	683b      	ldr	r3, [r7, #0]
 800340c:	68db      	ldr	r3, [r3, #12]
 800340e:	021b      	lsls	r3, r3, #8
 8003410:	697a      	ldr	r2, [r7, #20]
 8003412:	4313      	orrs	r3, r2
 8003414:	617b      	str	r3, [r7, #20]
 8003416:	697b      	ldr	r3, [r7, #20]
 8003418:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800341c:	617b      	str	r3, [r7, #20]
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	4a14      	ldr	r2, [pc, #80]	; (8003474 <TIM_OC3_SetConfig+0xd0>)
 8003422:	4293      	cmp	r3, r2
 8003424:	d113      	bne.n	800344e <TIM_OC3_SetConfig+0xaa>
 8003426:	693b      	ldr	r3, [r7, #16]
 8003428:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800342c:	613b      	str	r3, [r7, #16]
 800342e:	693b      	ldr	r3, [r7, #16]
 8003430:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003434:	613b      	str	r3, [r7, #16]
 8003436:	683b      	ldr	r3, [r7, #0]
 8003438:	695b      	ldr	r3, [r3, #20]
 800343a:	011b      	lsls	r3, r3, #4
 800343c:	693a      	ldr	r2, [r7, #16]
 800343e:	4313      	orrs	r3, r2
 8003440:	613b      	str	r3, [r7, #16]
 8003442:	683b      	ldr	r3, [r7, #0]
 8003444:	699b      	ldr	r3, [r3, #24]
 8003446:	011b      	lsls	r3, r3, #4
 8003448:	693a      	ldr	r2, [r7, #16]
 800344a:	4313      	orrs	r3, r2
 800344c:	613b      	str	r3, [r7, #16]
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	693a      	ldr	r2, [r7, #16]
 8003452:	605a      	str	r2, [r3, #4]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	68fa      	ldr	r2, [r7, #12]
 8003458:	61da      	str	r2, [r3, #28]
 800345a:	683b      	ldr	r3, [r7, #0]
 800345c:	685a      	ldr	r2, [r3, #4]
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	63da      	str	r2, [r3, #60]	; 0x3c
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	697a      	ldr	r2, [r7, #20]
 8003466:	621a      	str	r2, [r3, #32]
 8003468:	bf00      	nop
 800346a:	371c      	adds	r7, #28
 800346c:	46bd      	mov	sp, r7
 800346e:	bc80      	pop	{r7}
 8003470:	4770      	bx	lr
 8003472:	bf00      	nop
 8003474:	40012c00 	.word	0x40012c00

08003478 <TIM_OC4_SetConfig>:
 8003478:	b480      	push	{r7}
 800347a:	b087      	sub	sp, #28
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	6039      	str	r1, [r7, #0]
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	6a1b      	ldr	r3, [r3, #32]
 8003486:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	621a      	str	r2, [r3, #32]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	6a1b      	ldr	r3, [r3, #32]
 8003492:	613b      	str	r3, [r7, #16]
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	685b      	ldr	r3, [r3, #4]
 8003498:	617b      	str	r3, [r7, #20]
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	69db      	ldr	r3, [r3, #28]
 800349e:	60fb      	str	r3, [r7, #12]
 80034a0:	68fb      	ldr	r3, [r7, #12]
 80034a2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80034a6:	60fb      	str	r3, [r7, #12]
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80034ae:	60fb      	str	r3, [r7, #12]
 80034b0:	683b      	ldr	r3, [r7, #0]
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	021b      	lsls	r3, r3, #8
 80034b6:	68fa      	ldr	r2, [r7, #12]
 80034b8:	4313      	orrs	r3, r2
 80034ba:	60fb      	str	r3, [r7, #12]
 80034bc:	693b      	ldr	r3, [r7, #16]
 80034be:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80034c2:	613b      	str	r3, [r7, #16]
 80034c4:	683b      	ldr	r3, [r7, #0]
 80034c6:	689b      	ldr	r3, [r3, #8]
 80034c8:	031b      	lsls	r3, r3, #12
 80034ca:	693a      	ldr	r2, [r7, #16]
 80034cc:	4313      	orrs	r3, r2
 80034ce:	613b      	str	r3, [r7, #16]
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	4a0f      	ldr	r2, [pc, #60]	; (8003510 <TIM_OC4_SetConfig+0x98>)
 80034d4:	4293      	cmp	r3, r2
 80034d6:	d109      	bne.n	80034ec <TIM_OC4_SetConfig+0x74>
 80034d8:	697b      	ldr	r3, [r7, #20]
 80034da:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80034de:	617b      	str	r3, [r7, #20]
 80034e0:	683b      	ldr	r3, [r7, #0]
 80034e2:	695b      	ldr	r3, [r3, #20]
 80034e4:	019b      	lsls	r3, r3, #6
 80034e6:	697a      	ldr	r2, [r7, #20]
 80034e8:	4313      	orrs	r3, r2
 80034ea:	617b      	str	r3, [r7, #20]
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	697a      	ldr	r2, [r7, #20]
 80034f0:	605a      	str	r2, [r3, #4]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	68fa      	ldr	r2, [r7, #12]
 80034f6:	61da      	str	r2, [r3, #28]
 80034f8:	683b      	ldr	r3, [r7, #0]
 80034fa:	685a      	ldr	r2, [r3, #4]
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	641a      	str	r2, [r3, #64]	; 0x40
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	693a      	ldr	r2, [r7, #16]
 8003504:	621a      	str	r2, [r3, #32]
 8003506:	bf00      	nop
 8003508:	371c      	adds	r7, #28
 800350a:	46bd      	mov	sp, r7
 800350c:	bc80      	pop	{r7}
 800350e:	4770      	bx	lr
 8003510:	40012c00 	.word	0x40012c00

08003514 <TIM_TI1_ConfigInputStage>:
 8003514:	b480      	push	{r7}
 8003516:	b087      	sub	sp, #28
 8003518:	af00      	add	r7, sp, #0
 800351a:	60f8      	str	r0, [r7, #12]
 800351c:	60b9      	str	r1, [r7, #8]
 800351e:	607a      	str	r2, [r7, #4]
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	6a1b      	ldr	r3, [r3, #32]
 8003524:	617b      	str	r3, [r7, #20]
 8003526:	68fb      	ldr	r3, [r7, #12]
 8003528:	6a1b      	ldr	r3, [r3, #32]
 800352a:	f023 0201 	bic.w	r2, r3, #1
 800352e:	68fb      	ldr	r3, [r7, #12]
 8003530:	621a      	str	r2, [r3, #32]
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	699b      	ldr	r3, [r3, #24]
 8003536:	613b      	str	r3, [r7, #16]
 8003538:	693b      	ldr	r3, [r7, #16]
 800353a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800353e:	613b      	str	r3, [r7, #16]
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	011b      	lsls	r3, r3, #4
 8003544:	693a      	ldr	r2, [r7, #16]
 8003546:	4313      	orrs	r3, r2
 8003548:	613b      	str	r3, [r7, #16]
 800354a:	697b      	ldr	r3, [r7, #20]
 800354c:	f023 030a 	bic.w	r3, r3, #10
 8003550:	617b      	str	r3, [r7, #20]
 8003552:	697a      	ldr	r2, [r7, #20]
 8003554:	68bb      	ldr	r3, [r7, #8]
 8003556:	4313      	orrs	r3, r2
 8003558:	617b      	str	r3, [r7, #20]
 800355a:	68fb      	ldr	r3, [r7, #12]
 800355c:	693a      	ldr	r2, [r7, #16]
 800355e:	619a      	str	r2, [r3, #24]
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	697a      	ldr	r2, [r7, #20]
 8003564:	621a      	str	r2, [r3, #32]
 8003566:	bf00      	nop
 8003568:	371c      	adds	r7, #28
 800356a:	46bd      	mov	sp, r7
 800356c:	bc80      	pop	{r7}
 800356e:	4770      	bx	lr

08003570 <TIM_TI2_ConfigInputStage>:
 8003570:	b480      	push	{r7}
 8003572:	b087      	sub	sp, #28
 8003574:	af00      	add	r7, sp, #0
 8003576:	60f8      	str	r0, [r7, #12]
 8003578:	60b9      	str	r1, [r7, #8]
 800357a:	607a      	str	r2, [r7, #4]
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	6a1b      	ldr	r3, [r3, #32]
 8003580:	f023 0210 	bic.w	r2, r3, #16
 8003584:	68fb      	ldr	r3, [r7, #12]
 8003586:	621a      	str	r2, [r3, #32]
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	699b      	ldr	r3, [r3, #24]
 800358c:	617b      	str	r3, [r7, #20]
 800358e:	68fb      	ldr	r3, [r7, #12]
 8003590:	6a1b      	ldr	r3, [r3, #32]
 8003592:	613b      	str	r3, [r7, #16]
 8003594:	697b      	ldr	r3, [r7, #20]
 8003596:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800359a:	617b      	str	r3, [r7, #20]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	031b      	lsls	r3, r3, #12
 80035a0:	697a      	ldr	r2, [r7, #20]
 80035a2:	4313      	orrs	r3, r2
 80035a4:	617b      	str	r3, [r7, #20]
 80035a6:	693b      	ldr	r3, [r7, #16]
 80035a8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80035ac:	613b      	str	r3, [r7, #16]
 80035ae:	68bb      	ldr	r3, [r7, #8]
 80035b0:	011b      	lsls	r3, r3, #4
 80035b2:	693a      	ldr	r2, [r7, #16]
 80035b4:	4313      	orrs	r3, r2
 80035b6:	613b      	str	r3, [r7, #16]
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	697a      	ldr	r2, [r7, #20]
 80035bc:	619a      	str	r2, [r3, #24]
 80035be:	68fb      	ldr	r3, [r7, #12]
 80035c0:	693a      	ldr	r2, [r7, #16]
 80035c2:	621a      	str	r2, [r3, #32]
 80035c4:	bf00      	nop
 80035c6:	371c      	adds	r7, #28
 80035c8:	46bd      	mov	sp, r7
 80035ca:	bc80      	pop	{r7}
 80035cc:	4770      	bx	lr

080035ce <TIM_ITRx_SetConfig>:
 80035ce:	b480      	push	{r7}
 80035d0:	b085      	sub	sp, #20
 80035d2:	af00      	add	r7, sp, #0
 80035d4:	6078      	str	r0, [r7, #4]
 80035d6:	6039      	str	r1, [r7, #0]
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	689b      	ldr	r3, [r3, #8]
 80035dc:	60fb      	str	r3, [r7, #12]
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80035e4:	60fb      	str	r3, [r7, #12]
 80035e6:	683a      	ldr	r2, [r7, #0]
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	4313      	orrs	r3, r2
 80035ec:	f043 0307 	orr.w	r3, r3, #7
 80035f0:	60fb      	str	r3, [r7, #12]
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	68fa      	ldr	r2, [r7, #12]
 80035f6:	609a      	str	r2, [r3, #8]
 80035f8:	bf00      	nop
 80035fa:	3714      	adds	r7, #20
 80035fc:	46bd      	mov	sp, r7
 80035fe:	bc80      	pop	{r7}
 8003600:	4770      	bx	lr

08003602 <TIM_ETR_SetConfig>:
 8003602:	b480      	push	{r7}
 8003604:	b087      	sub	sp, #28
 8003606:	af00      	add	r7, sp, #0
 8003608:	60f8      	str	r0, [r7, #12]
 800360a:	60b9      	str	r1, [r7, #8]
 800360c:	607a      	str	r2, [r7, #4]
 800360e:	603b      	str	r3, [r7, #0]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	689b      	ldr	r3, [r3, #8]
 8003614:	617b      	str	r3, [r7, #20]
 8003616:	697b      	ldr	r3, [r7, #20]
 8003618:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800361c:	617b      	str	r3, [r7, #20]
 800361e:	683b      	ldr	r3, [r7, #0]
 8003620:	021a      	lsls	r2, r3, #8
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	431a      	orrs	r2, r3
 8003626:	68bb      	ldr	r3, [r7, #8]
 8003628:	4313      	orrs	r3, r2
 800362a:	697a      	ldr	r2, [r7, #20]
 800362c:	4313      	orrs	r3, r2
 800362e:	617b      	str	r3, [r7, #20]
 8003630:	68fb      	ldr	r3, [r7, #12]
 8003632:	697a      	ldr	r2, [r7, #20]
 8003634:	609a      	str	r2, [r3, #8]
 8003636:	bf00      	nop
 8003638:	371c      	adds	r7, #28
 800363a:	46bd      	mov	sp, r7
 800363c:	bc80      	pop	{r7}
 800363e:	4770      	bx	lr

08003640 <TIM_CCxChannelCmd>:
 8003640:	b480      	push	{r7}
 8003642:	b087      	sub	sp, #28
 8003644:	af00      	add	r7, sp, #0
 8003646:	60f8      	str	r0, [r7, #12]
 8003648:	60b9      	str	r1, [r7, #8]
 800364a:	607a      	str	r2, [r7, #4]
 800364c:	68bb      	ldr	r3, [r7, #8]
 800364e:	f003 031f 	and.w	r3, r3, #31
 8003652:	2201      	movs	r2, #1
 8003654:	fa02 f303 	lsl.w	r3, r2, r3
 8003658:	617b      	str	r3, [r7, #20]
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	6a1a      	ldr	r2, [r3, #32]
 800365e:	697b      	ldr	r3, [r7, #20]
 8003660:	43db      	mvns	r3, r3
 8003662:	401a      	ands	r2, r3
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	621a      	str	r2, [r3, #32]
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	6a1a      	ldr	r2, [r3, #32]
 800366c:	68bb      	ldr	r3, [r7, #8]
 800366e:	f003 031f 	and.w	r3, r3, #31
 8003672:	6879      	ldr	r1, [r7, #4]
 8003674:	fa01 f303 	lsl.w	r3, r1, r3
 8003678:	431a      	orrs	r2, r3
 800367a:	68fb      	ldr	r3, [r7, #12]
 800367c:	621a      	str	r2, [r3, #32]
 800367e:	bf00      	nop
 8003680:	371c      	adds	r7, #28
 8003682:	46bd      	mov	sp, r7
 8003684:	bc80      	pop	{r7}
 8003686:	4770      	bx	lr

08003688 <HAL_TIMEx_MasterConfigSynchronization>:
 8003688:	b480      	push	{r7}
 800368a:	b085      	sub	sp, #20
 800368c:	af00      	add	r7, sp, #0
 800368e:	6078      	str	r0, [r7, #4]
 8003690:	6039      	str	r1, [r7, #0]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003698:	2b01      	cmp	r3, #1
 800369a:	d101      	bne.n	80036a0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800369c:	2302      	movs	r3, #2
 800369e:	e046      	b.n	800372e <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	2201      	movs	r2, #1
 80036a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2202      	movs	r2, #2
 80036ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	685b      	ldr	r3, [r3, #4]
 80036b6:	60fb      	str	r3, [r7, #12]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	689b      	ldr	r3, [r3, #8]
 80036be:	60bb      	str	r3, [r7, #8]
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80036c6:	60fb      	str	r3, [r7, #12]
 80036c8:	683b      	ldr	r3, [r7, #0]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	68fa      	ldr	r2, [r7, #12]
 80036ce:	4313      	orrs	r3, r2
 80036d0:	60fb      	str	r3, [r7, #12]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	68fa      	ldr	r2, [r7, #12]
 80036d8:	605a      	str	r2, [r3, #4]
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	4a16      	ldr	r2, [pc, #88]	; (8003738 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80036e0:	4293      	cmp	r3, r2
 80036e2:	d00e      	beq.n	8003702 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80036ec:	d009      	beq.n	8003702 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	4a12      	ldr	r2, [pc, #72]	; (800373c <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80036f4:	4293      	cmp	r3, r2
 80036f6:	d004      	beq.n	8003702 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	4a10      	ldr	r2, [pc, #64]	; (8003740 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80036fe:	4293      	cmp	r3, r2
 8003700:	d10c      	bne.n	800371c <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003702:	68bb      	ldr	r3, [r7, #8]
 8003704:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003708:	60bb      	str	r3, [r7, #8]
 800370a:	683b      	ldr	r3, [r7, #0]
 800370c:	685b      	ldr	r3, [r3, #4]
 800370e:	68ba      	ldr	r2, [r7, #8]
 8003710:	4313      	orrs	r3, r2
 8003712:	60bb      	str	r3, [r7, #8]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	68ba      	ldr	r2, [r7, #8]
 800371a:	609a      	str	r2, [r3, #8]
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	2201      	movs	r2, #1
 8003720:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	2200      	movs	r2, #0
 8003728:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800372c:	2300      	movs	r3, #0
 800372e:	4618      	mov	r0, r3
 8003730:	3714      	adds	r7, #20
 8003732:	46bd      	mov	sp, r7
 8003734:	bc80      	pop	{r7}
 8003736:	4770      	bx	lr
 8003738:	40012c00 	.word	0x40012c00
 800373c:	40000400 	.word	0x40000400
 8003740:	40000800 	.word	0x40000800

08003744 <HAL_TIMEx_CommutCallback>:
 8003744:	b480      	push	{r7}
 8003746:	b083      	sub	sp, #12
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
 800374c:	bf00      	nop
 800374e:	370c      	adds	r7, #12
 8003750:	46bd      	mov	sp, r7
 8003752:	bc80      	pop	{r7}
 8003754:	4770      	bx	lr

08003756 <HAL_TIMEx_BreakCallback>:
 8003756:	b480      	push	{r7}
 8003758:	b083      	sub	sp, #12
 800375a:	af00      	add	r7, sp, #0
 800375c:	6078      	str	r0, [r7, #4]
 800375e:	bf00      	nop
 8003760:	370c      	adds	r7, #12
 8003762:	46bd      	mov	sp, r7
 8003764:	bc80      	pop	{r7}
 8003766:	4770      	bx	lr

08003768 <HAL_UART_Init>:
 8003768:	b580      	push	{r7, lr}
 800376a:	b082      	sub	sp, #8
 800376c:	af00      	add	r7, sp, #0
 800376e:	6078      	str	r0, [r7, #4]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	2b00      	cmp	r3, #0
 8003774:	d101      	bne.n	800377a <HAL_UART_Init+0x12>
 8003776:	2301      	movs	r3, #1
 8003778:	e03f      	b.n	80037fa <HAL_UART_Init+0x92>
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003780:	b2db      	uxtb	r3, r3
 8003782:	2b00      	cmp	r3, #0
 8003784:	d106      	bne.n	8003794 <HAL_UART_Init+0x2c>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	2200      	movs	r2, #0
 800378a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800378e:	6878      	ldr	r0, [r7, #4]
 8003790:	f7fe f8b0 	bl	80018f4 <HAL_UART_MspInit>
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	2224      	movs	r2, #36	; 0x24
 8003798:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	68da      	ldr	r2, [r3, #12]
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80037aa:	60da      	str	r2, [r3, #12]
 80037ac:	6878      	ldr	r0, [r7, #4]
 80037ae:	f000 f905 	bl	80039bc <UART_SetConfig>
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	691a      	ldr	r2, [r3, #16]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80037c0:	611a      	str	r2, [r3, #16]
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	695a      	ldr	r2, [r3, #20]
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80037d0:	615a      	str	r2, [r3, #20]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	68da      	ldr	r2, [r3, #12]
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80037e0:	60da      	str	r2, [r3, #12]
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	2200      	movs	r2, #0
 80037e6:	641a      	str	r2, [r3, #64]	; 0x40
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	2220      	movs	r2, #32
 80037ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	2220      	movs	r2, #32
 80037f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80037f8:	2300      	movs	r3, #0
 80037fa:	4618      	mov	r0, r3
 80037fc:	3708      	adds	r7, #8
 80037fe:	46bd      	mov	sp, r7
 8003800:	bd80      	pop	{r7, pc}

08003802 <HAL_UART_Transmit>:
 8003802:	b580      	push	{r7, lr}
 8003804:	b08a      	sub	sp, #40	; 0x28
 8003806:	af02      	add	r7, sp, #8
 8003808:	60f8      	str	r0, [r7, #12]
 800380a:	60b9      	str	r1, [r7, #8]
 800380c:	603b      	str	r3, [r7, #0]
 800380e:	4613      	mov	r3, r2
 8003810:	80fb      	strh	r3, [r7, #6]
 8003812:	2300      	movs	r3, #0
 8003814:	617b      	str	r3, [r7, #20]
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800381c:	b2db      	uxtb	r3, r3
 800381e:	2b20      	cmp	r3, #32
 8003820:	d17c      	bne.n	800391c <HAL_UART_Transmit+0x11a>
 8003822:	68bb      	ldr	r3, [r7, #8]
 8003824:	2b00      	cmp	r3, #0
 8003826:	d002      	beq.n	800382e <HAL_UART_Transmit+0x2c>
 8003828:	88fb      	ldrh	r3, [r7, #6]
 800382a:	2b00      	cmp	r3, #0
 800382c:	d101      	bne.n	8003832 <HAL_UART_Transmit+0x30>
 800382e:	2301      	movs	r3, #1
 8003830:	e075      	b.n	800391e <HAL_UART_Transmit+0x11c>
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003838:	2b01      	cmp	r3, #1
 800383a:	d101      	bne.n	8003840 <HAL_UART_Transmit+0x3e>
 800383c:	2302      	movs	r3, #2
 800383e:	e06e      	b.n	800391e <HAL_UART_Transmit+0x11c>
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	2201      	movs	r2, #1
 8003844:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	2200      	movs	r2, #0
 800384c:	641a      	str	r2, [r3, #64]	; 0x40
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	2221      	movs	r2, #33	; 0x21
 8003852:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003856:	f7fe f909 	bl	8001a6c <HAL_GetTick>
 800385a:	6178      	str	r0, [r7, #20]
 800385c:	68fb      	ldr	r3, [r7, #12]
 800385e:	88fa      	ldrh	r2, [r7, #6]
 8003860:	849a      	strh	r2, [r3, #36]	; 0x24
 8003862:	68fb      	ldr	r3, [r7, #12]
 8003864:	88fa      	ldrh	r2, [r7, #6]
 8003866:	84da      	strh	r2, [r3, #38]	; 0x26
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	689b      	ldr	r3, [r3, #8]
 800386c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003870:	d108      	bne.n	8003884 <HAL_UART_Transmit+0x82>
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	691b      	ldr	r3, [r3, #16]
 8003876:	2b00      	cmp	r3, #0
 8003878:	d104      	bne.n	8003884 <HAL_UART_Transmit+0x82>
 800387a:	2300      	movs	r3, #0
 800387c:	61fb      	str	r3, [r7, #28]
 800387e:	68bb      	ldr	r3, [r7, #8]
 8003880:	61bb      	str	r3, [r7, #24]
 8003882:	e003      	b.n	800388c <HAL_UART_Transmit+0x8a>
 8003884:	68bb      	ldr	r3, [r7, #8]
 8003886:	61fb      	str	r3, [r7, #28]
 8003888:	2300      	movs	r3, #0
 800388a:	61bb      	str	r3, [r7, #24]
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	2200      	movs	r2, #0
 8003890:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003894:	e02a      	b.n	80038ec <HAL_UART_Transmit+0xea>
 8003896:	683b      	ldr	r3, [r7, #0]
 8003898:	9300      	str	r3, [sp, #0]
 800389a:	697b      	ldr	r3, [r7, #20]
 800389c:	2200      	movs	r2, #0
 800389e:	2180      	movs	r1, #128	; 0x80
 80038a0:	68f8      	ldr	r0, [r7, #12]
 80038a2:	f000 f840 	bl	8003926 <UART_WaitOnFlagUntilTimeout>
 80038a6:	4603      	mov	r3, r0
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d001      	beq.n	80038b0 <HAL_UART_Transmit+0xae>
 80038ac:	2303      	movs	r3, #3
 80038ae:	e036      	b.n	800391e <HAL_UART_Transmit+0x11c>
 80038b0:	69fb      	ldr	r3, [r7, #28]
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	d10b      	bne.n	80038ce <HAL_UART_Transmit+0xcc>
 80038b6:	69bb      	ldr	r3, [r7, #24]
 80038b8:	881b      	ldrh	r3, [r3, #0]
 80038ba:	461a      	mov	r2, r3
 80038bc:	68fb      	ldr	r3, [r7, #12]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80038c4:	605a      	str	r2, [r3, #4]
 80038c6:	69bb      	ldr	r3, [r7, #24]
 80038c8:	3302      	adds	r3, #2
 80038ca:	61bb      	str	r3, [r7, #24]
 80038cc:	e007      	b.n	80038de <HAL_UART_Transmit+0xdc>
 80038ce:	69fb      	ldr	r3, [r7, #28]
 80038d0:	781a      	ldrb	r2, [r3, #0]
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	605a      	str	r2, [r3, #4]
 80038d8:	69fb      	ldr	r3, [r7, #28]
 80038da:	3301      	adds	r3, #1
 80038dc:	61fb      	str	r3, [r7, #28]
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80038e2:	b29b      	uxth	r3, r3
 80038e4:	3b01      	subs	r3, #1
 80038e6:	b29a      	uxth	r2, r3
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	84da      	strh	r2, [r3, #38]	; 0x26
 80038ec:	68fb      	ldr	r3, [r7, #12]
 80038ee:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80038f0:	b29b      	uxth	r3, r3
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d1cf      	bne.n	8003896 <HAL_UART_Transmit+0x94>
 80038f6:	683b      	ldr	r3, [r7, #0]
 80038f8:	9300      	str	r3, [sp, #0]
 80038fa:	697b      	ldr	r3, [r7, #20]
 80038fc:	2200      	movs	r2, #0
 80038fe:	2140      	movs	r1, #64	; 0x40
 8003900:	68f8      	ldr	r0, [r7, #12]
 8003902:	f000 f810 	bl	8003926 <UART_WaitOnFlagUntilTimeout>
 8003906:	4603      	mov	r3, r0
 8003908:	2b00      	cmp	r3, #0
 800390a:	d001      	beq.n	8003910 <HAL_UART_Transmit+0x10e>
 800390c:	2303      	movs	r3, #3
 800390e:	e006      	b.n	800391e <HAL_UART_Transmit+0x11c>
 8003910:	68fb      	ldr	r3, [r7, #12]
 8003912:	2220      	movs	r2, #32
 8003914:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003918:	2300      	movs	r3, #0
 800391a:	e000      	b.n	800391e <HAL_UART_Transmit+0x11c>
 800391c:	2302      	movs	r3, #2
 800391e:	4618      	mov	r0, r3
 8003920:	3720      	adds	r7, #32
 8003922:	46bd      	mov	sp, r7
 8003924:	bd80      	pop	{r7, pc}

08003926 <UART_WaitOnFlagUntilTimeout>:
 8003926:	b580      	push	{r7, lr}
 8003928:	b084      	sub	sp, #16
 800392a:	af00      	add	r7, sp, #0
 800392c:	60f8      	str	r0, [r7, #12]
 800392e:	60b9      	str	r1, [r7, #8]
 8003930:	603b      	str	r3, [r7, #0]
 8003932:	4613      	mov	r3, r2
 8003934:	71fb      	strb	r3, [r7, #7]
 8003936:	e02c      	b.n	8003992 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003938:	69bb      	ldr	r3, [r7, #24]
 800393a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800393e:	d028      	beq.n	8003992 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003940:	69bb      	ldr	r3, [r7, #24]
 8003942:	2b00      	cmp	r3, #0
 8003944:	d007      	beq.n	8003956 <UART_WaitOnFlagUntilTimeout+0x30>
 8003946:	f7fe f891 	bl	8001a6c <HAL_GetTick>
 800394a:	4602      	mov	r2, r0
 800394c:	683b      	ldr	r3, [r7, #0]
 800394e:	1ad3      	subs	r3, r2, r3
 8003950:	69ba      	ldr	r2, [r7, #24]
 8003952:	429a      	cmp	r2, r3
 8003954:	d21d      	bcs.n	8003992 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	68da      	ldr	r2, [r3, #12]
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003964:	60da      	str	r2, [r3, #12]
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	695a      	ldr	r2, [r3, #20]
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	f022 0201 	bic.w	r2, r2, #1
 8003974:	615a      	str	r2, [r3, #20]
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	2220      	movs	r2, #32
 800397a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800397e:	68fb      	ldr	r3, [r7, #12]
 8003980:	2220      	movs	r2, #32
 8003982:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	2200      	movs	r2, #0
 800398a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800398e:	2303      	movs	r3, #3
 8003990:	e00f      	b.n	80039b2 <UART_WaitOnFlagUntilTimeout+0x8c>
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	681a      	ldr	r2, [r3, #0]
 8003998:	68bb      	ldr	r3, [r7, #8]
 800399a:	4013      	ands	r3, r2
 800399c:	68ba      	ldr	r2, [r7, #8]
 800399e:	429a      	cmp	r2, r3
 80039a0:	bf0c      	ite	eq
 80039a2:	2301      	moveq	r3, #1
 80039a4:	2300      	movne	r3, #0
 80039a6:	b2db      	uxtb	r3, r3
 80039a8:	461a      	mov	r2, r3
 80039aa:	79fb      	ldrb	r3, [r7, #7]
 80039ac:	429a      	cmp	r2, r3
 80039ae:	d0c3      	beq.n	8003938 <UART_WaitOnFlagUntilTimeout+0x12>
 80039b0:	2300      	movs	r3, #0
 80039b2:	4618      	mov	r0, r3
 80039b4:	3710      	adds	r7, #16
 80039b6:	46bd      	mov	sp, r7
 80039b8:	bd80      	pop	{r7, pc}
	...

080039bc <UART_SetConfig>:
 80039bc:	b580      	push	{r7, lr}
 80039be:	b084      	sub	sp, #16
 80039c0:	af00      	add	r7, sp, #0
 80039c2:	6078      	str	r0, [r7, #4]
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	691b      	ldr	r3, [r3, #16]
 80039ca:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	68da      	ldr	r2, [r3, #12]
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	430a      	orrs	r2, r1
 80039d8:	611a      	str	r2, [r3, #16]
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	689a      	ldr	r2, [r3, #8]
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	691b      	ldr	r3, [r3, #16]
 80039e2:	431a      	orrs	r2, r3
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	695b      	ldr	r3, [r3, #20]
 80039e8:	4313      	orrs	r3, r2
 80039ea:	60bb      	str	r3, [r7, #8]
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	68db      	ldr	r3, [r3, #12]
 80039f2:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80039f6:	f023 030c 	bic.w	r3, r3, #12
 80039fa:	687a      	ldr	r2, [r7, #4]
 80039fc:	6812      	ldr	r2, [r2, #0]
 80039fe:	68b9      	ldr	r1, [r7, #8]
 8003a00:	430b      	orrs	r3, r1
 8003a02:	60d3      	str	r3, [r2, #12]
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	695b      	ldr	r3, [r3, #20]
 8003a0a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	699a      	ldr	r2, [r3, #24]
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	430a      	orrs	r2, r1
 8003a18:	615a      	str	r2, [r3, #20]
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	4a2c      	ldr	r2, [pc, #176]	; (8003ad0 <UART_SetConfig+0x114>)
 8003a20:	4293      	cmp	r3, r2
 8003a22:	d103      	bne.n	8003a2c <UART_SetConfig+0x70>
 8003a24:	f7fe ff10 	bl	8002848 <HAL_RCC_GetPCLK2Freq>
 8003a28:	60f8      	str	r0, [r7, #12]
 8003a2a:	e002      	b.n	8003a32 <UART_SetConfig+0x76>
 8003a2c:	f7fe fef8 	bl	8002820 <HAL_RCC_GetPCLK1Freq>
 8003a30:	60f8      	str	r0, [r7, #12]
 8003a32:	68fa      	ldr	r2, [r7, #12]
 8003a34:	4613      	mov	r3, r2
 8003a36:	009b      	lsls	r3, r3, #2
 8003a38:	4413      	add	r3, r2
 8003a3a:	009a      	lsls	r2, r3, #2
 8003a3c:	441a      	add	r2, r3
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	685b      	ldr	r3, [r3, #4]
 8003a42:	009b      	lsls	r3, r3, #2
 8003a44:	fbb2 f3f3 	udiv	r3, r2, r3
 8003a48:	4a22      	ldr	r2, [pc, #136]	; (8003ad4 <UART_SetConfig+0x118>)
 8003a4a:	fba2 2303 	umull	r2, r3, r2, r3
 8003a4e:	095b      	lsrs	r3, r3, #5
 8003a50:	0119      	lsls	r1, r3, #4
 8003a52:	68fa      	ldr	r2, [r7, #12]
 8003a54:	4613      	mov	r3, r2
 8003a56:	009b      	lsls	r3, r3, #2
 8003a58:	4413      	add	r3, r2
 8003a5a:	009a      	lsls	r2, r3, #2
 8003a5c:	441a      	add	r2, r3
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	685b      	ldr	r3, [r3, #4]
 8003a62:	009b      	lsls	r3, r3, #2
 8003a64:	fbb2 f2f3 	udiv	r2, r2, r3
 8003a68:	4b1a      	ldr	r3, [pc, #104]	; (8003ad4 <UART_SetConfig+0x118>)
 8003a6a:	fba3 0302 	umull	r0, r3, r3, r2
 8003a6e:	095b      	lsrs	r3, r3, #5
 8003a70:	2064      	movs	r0, #100	; 0x64
 8003a72:	fb00 f303 	mul.w	r3, r0, r3
 8003a76:	1ad3      	subs	r3, r2, r3
 8003a78:	011b      	lsls	r3, r3, #4
 8003a7a:	3332      	adds	r3, #50	; 0x32
 8003a7c:	4a15      	ldr	r2, [pc, #84]	; (8003ad4 <UART_SetConfig+0x118>)
 8003a7e:	fba2 2303 	umull	r2, r3, r2, r3
 8003a82:	095b      	lsrs	r3, r3, #5
 8003a84:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003a88:	4419      	add	r1, r3
 8003a8a:	68fa      	ldr	r2, [r7, #12]
 8003a8c:	4613      	mov	r3, r2
 8003a8e:	009b      	lsls	r3, r3, #2
 8003a90:	4413      	add	r3, r2
 8003a92:	009a      	lsls	r2, r3, #2
 8003a94:	441a      	add	r2, r3
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	685b      	ldr	r3, [r3, #4]
 8003a9a:	009b      	lsls	r3, r3, #2
 8003a9c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003aa0:	4b0c      	ldr	r3, [pc, #48]	; (8003ad4 <UART_SetConfig+0x118>)
 8003aa2:	fba3 0302 	umull	r0, r3, r3, r2
 8003aa6:	095b      	lsrs	r3, r3, #5
 8003aa8:	2064      	movs	r0, #100	; 0x64
 8003aaa:	fb00 f303 	mul.w	r3, r0, r3
 8003aae:	1ad3      	subs	r3, r2, r3
 8003ab0:	011b      	lsls	r3, r3, #4
 8003ab2:	3332      	adds	r3, #50	; 0x32
 8003ab4:	4a07      	ldr	r2, [pc, #28]	; (8003ad4 <UART_SetConfig+0x118>)
 8003ab6:	fba2 2303 	umull	r2, r3, r2, r3
 8003aba:	095b      	lsrs	r3, r3, #5
 8003abc:	f003 020f 	and.w	r2, r3, #15
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	440a      	add	r2, r1
 8003ac6:	609a      	str	r2, [r3, #8]
 8003ac8:	bf00      	nop
 8003aca:	3710      	adds	r7, #16
 8003acc:	46bd      	mov	sp, r7
 8003ace:	bd80      	pop	{r7, pc}
 8003ad0:	40013800 	.word	0x40013800
 8003ad4:	51eb851f 	.word	0x51eb851f

08003ad8 <__errno>:
 8003ad8:	4b01      	ldr	r3, [pc, #4]	; (8003ae0 <__errno+0x8>)
 8003ada:	6818      	ldr	r0, [r3, #0]
 8003adc:	4770      	bx	lr
 8003ade:	bf00      	nop
 8003ae0:	2000032c 	.word	0x2000032c

08003ae4 <__libc_init_array>:
 8003ae4:	b570      	push	{r4, r5, r6, lr}
 8003ae6:	2600      	movs	r6, #0
 8003ae8:	4d0c      	ldr	r5, [pc, #48]	; (8003b1c <__libc_init_array+0x38>)
 8003aea:	4c0d      	ldr	r4, [pc, #52]	; (8003b20 <__libc_init_array+0x3c>)
 8003aec:	1b64      	subs	r4, r4, r5
 8003aee:	10a4      	asrs	r4, r4, #2
 8003af0:	42a6      	cmp	r6, r4
 8003af2:	d109      	bne.n	8003b08 <__libc_init_array+0x24>
 8003af4:	f000 fc9c 	bl	8004430 <_init>
 8003af8:	2600      	movs	r6, #0
 8003afa:	4d0a      	ldr	r5, [pc, #40]	; (8003b24 <__libc_init_array+0x40>)
 8003afc:	4c0a      	ldr	r4, [pc, #40]	; (8003b28 <__libc_init_array+0x44>)
 8003afe:	1b64      	subs	r4, r4, r5
 8003b00:	10a4      	asrs	r4, r4, #2
 8003b02:	42a6      	cmp	r6, r4
 8003b04:	d105      	bne.n	8003b12 <__libc_init_array+0x2e>
 8003b06:	bd70      	pop	{r4, r5, r6, pc}
 8003b08:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b0c:	4798      	blx	r3
 8003b0e:	3601      	adds	r6, #1
 8003b10:	e7ee      	b.n	8003af0 <__libc_init_array+0xc>
 8003b12:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b16:	4798      	blx	r3
 8003b18:	3601      	adds	r6, #1
 8003b1a:	e7f2      	b.n	8003b02 <__libc_init_array+0x1e>
 8003b1c:	080044b0 	.word	0x080044b0
 8003b20:	080044b0 	.word	0x080044b0
 8003b24:	080044b0 	.word	0x080044b0
 8003b28:	080044b4 	.word	0x080044b4

08003b2c <memset>:
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	4402      	add	r2, r0
 8003b30:	4293      	cmp	r3, r2
 8003b32:	d100      	bne.n	8003b36 <memset+0xa>
 8003b34:	4770      	bx	lr
 8003b36:	f803 1b01 	strb.w	r1, [r3], #1
 8003b3a:	e7f9      	b.n	8003b30 <memset+0x4>

08003b3c <siprintf>:
 8003b3c:	b40e      	push	{r1, r2, r3}
 8003b3e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003b42:	b500      	push	{lr}
 8003b44:	b09c      	sub	sp, #112	; 0x70
 8003b46:	ab1d      	add	r3, sp, #116	; 0x74
 8003b48:	9002      	str	r0, [sp, #8]
 8003b4a:	9006      	str	r0, [sp, #24]
 8003b4c:	9107      	str	r1, [sp, #28]
 8003b4e:	9104      	str	r1, [sp, #16]
 8003b50:	4808      	ldr	r0, [pc, #32]	; (8003b74 <siprintf+0x38>)
 8003b52:	4909      	ldr	r1, [pc, #36]	; (8003b78 <siprintf+0x3c>)
 8003b54:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b58:	9105      	str	r1, [sp, #20]
 8003b5a:	6800      	ldr	r0, [r0, #0]
 8003b5c:	a902      	add	r1, sp, #8
 8003b5e:	9301      	str	r3, [sp, #4]
 8003b60:	f000 f868 	bl	8003c34 <_svfiprintf_r>
 8003b64:	2200      	movs	r2, #0
 8003b66:	9b02      	ldr	r3, [sp, #8]
 8003b68:	701a      	strb	r2, [r3, #0]
 8003b6a:	b01c      	add	sp, #112	; 0x70
 8003b6c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b70:	b003      	add	sp, #12
 8003b72:	4770      	bx	lr
 8003b74:	2000032c 	.word	0x2000032c
 8003b78:	ffff0208 	.word	0xffff0208

08003b7c <__ssputs_r>:
 8003b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b80:	688e      	ldr	r6, [r1, #8]
 8003b82:	4682      	mov	sl, r0
 8003b84:	429e      	cmp	r6, r3
 8003b86:	460c      	mov	r4, r1
 8003b88:	4690      	mov	r8, r2
 8003b8a:	461f      	mov	r7, r3
 8003b8c:	d838      	bhi.n	8003c00 <__ssputs_r+0x84>
 8003b8e:	898a      	ldrh	r2, [r1, #12]
 8003b90:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003b94:	d032      	beq.n	8003bfc <__ssputs_r+0x80>
 8003b96:	6825      	ldr	r5, [r4, #0]
 8003b98:	6909      	ldr	r1, [r1, #16]
 8003b9a:	3301      	adds	r3, #1
 8003b9c:	eba5 0901 	sub.w	r9, r5, r1
 8003ba0:	6965      	ldr	r5, [r4, #20]
 8003ba2:	444b      	add	r3, r9
 8003ba4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003ba8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003bac:	106d      	asrs	r5, r5, #1
 8003bae:	429d      	cmp	r5, r3
 8003bb0:	bf38      	it	cc
 8003bb2:	461d      	movcc	r5, r3
 8003bb4:	0553      	lsls	r3, r2, #21
 8003bb6:	d531      	bpl.n	8003c1c <__ssputs_r+0xa0>
 8003bb8:	4629      	mov	r1, r5
 8003bba:	f000 fb6f 	bl	800429c <_malloc_r>
 8003bbe:	4606      	mov	r6, r0
 8003bc0:	b950      	cbnz	r0, 8003bd8 <__ssputs_r+0x5c>
 8003bc2:	230c      	movs	r3, #12
 8003bc4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003bc8:	f8ca 3000 	str.w	r3, [sl]
 8003bcc:	89a3      	ldrh	r3, [r4, #12]
 8003bce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003bd2:	81a3      	strh	r3, [r4, #12]
 8003bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003bd8:	464a      	mov	r2, r9
 8003bda:	6921      	ldr	r1, [r4, #16]
 8003bdc:	f000 face 	bl	800417c <memcpy>
 8003be0:	89a3      	ldrh	r3, [r4, #12]
 8003be2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003be6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003bea:	81a3      	strh	r3, [r4, #12]
 8003bec:	6126      	str	r6, [r4, #16]
 8003bee:	444e      	add	r6, r9
 8003bf0:	6026      	str	r6, [r4, #0]
 8003bf2:	463e      	mov	r6, r7
 8003bf4:	6165      	str	r5, [r4, #20]
 8003bf6:	eba5 0509 	sub.w	r5, r5, r9
 8003bfa:	60a5      	str	r5, [r4, #8]
 8003bfc:	42be      	cmp	r6, r7
 8003bfe:	d900      	bls.n	8003c02 <__ssputs_r+0x86>
 8003c00:	463e      	mov	r6, r7
 8003c02:	4632      	mov	r2, r6
 8003c04:	4641      	mov	r1, r8
 8003c06:	6820      	ldr	r0, [r4, #0]
 8003c08:	f000 fac6 	bl	8004198 <memmove>
 8003c0c:	68a3      	ldr	r3, [r4, #8]
 8003c0e:	2000      	movs	r0, #0
 8003c10:	1b9b      	subs	r3, r3, r6
 8003c12:	60a3      	str	r3, [r4, #8]
 8003c14:	6823      	ldr	r3, [r4, #0]
 8003c16:	4433      	add	r3, r6
 8003c18:	6023      	str	r3, [r4, #0]
 8003c1a:	e7db      	b.n	8003bd4 <__ssputs_r+0x58>
 8003c1c:	462a      	mov	r2, r5
 8003c1e:	f000 fbb1 	bl	8004384 <_realloc_r>
 8003c22:	4606      	mov	r6, r0
 8003c24:	2800      	cmp	r0, #0
 8003c26:	d1e1      	bne.n	8003bec <__ssputs_r+0x70>
 8003c28:	4650      	mov	r0, sl
 8003c2a:	6921      	ldr	r1, [r4, #16]
 8003c2c:	f000 face 	bl	80041cc <_free_r>
 8003c30:	e7c7      	b.n	8003bc2 <__ssputs_r+0x46>
	...

08003c34 <_svfiprintf_r>:
 8003c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c38:	4698      	mov	r8, r3
 8003c3a:	898b      	ldrh	r3, [r1, #12]
 8003c3c:	4607      	mov	r7, r0
 8003c3e:	061b      	lsls	r3, r3, #24
 8003c40:	460d      	mov	r5, r1
 8003c42:	4614      	mov	r4, r2
 8003c44:	b09d      	sub	sp, #116	; 0x74
 8003c46:	d50e      	bpl.n	8003c66 <_svfiprintf_r+0x32>
 8003c48:	690b      	ldr	r3, [r1, #16]
 8003c4a:	b963      	cbnz	r3, 8003c66 <_svfiprintf_r+0x32>
 8003c4c:	2140      	movs	r1, #64	; 0x40
 8003c4e:	f000 fb25 	bl	800429c <_malloc_r>
 8003c52:	6028      	str	r0, [r5, #0]
 8003c54:	6128      	str	r0, [r5, #16]
 8003c56:	b920      	cbnz	r0, 8003c62 <_svfiprintf_r+0x2e>
 8003c58:	230c      	movs	r3, #12
 8003c5a:	603b      	str	r3, [r7, #0]
 8003c5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003c60:	e0d1      	b.n	8003e06 <_svfiprintf_r+0x1d2>
 8003c62:	2340      	movs	r3, #64	; 0x40
 8003c64:	616b      	str	r3, [r5, #20]
 8003c66:	2300      	movs	r3, #0
 8003c68:	9309      	str	r3, [sp, #36]	; 0x24
 8003c6a:	2320      	movs	r3, #32
 8003c6c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003c70:	2330      	movs	r3, #48	; 0x30
 8003c72:	f04f 0901 	mov.w	r9, #1
 8003c76:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c7a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003e20 <_svfiprintf_r+0x1ec>
 8003c7e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003c82:	4623      	mov	r3, r4
 8003c84:	469a      	mov	sl, r3
 8003c86:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c8a:	b10a      	cbz	r2, 8003c90 <_svfiprintf_r+0x5c>
 8003c8c:	2a25      	cmp	r2, #37	; 0x25
 8003c8e:	d1f9      	bne.n	8003c84 <_svfiprintf_r+0x50>
 8003c90:	ebba 0b04 	subs.w	fp, sl, r4
 8003c94:	d00b      	beq.n	8003cae <_svfiprintf_r+0x7a>
 8003c96:	465b      	mov	r3, fp
 8003c98:	4622      	mov	r2, r4
 8003c9a:	4629      	mov	r1, r5
 8003c9c:	4638      	mov	r0, r7
 8003c9e:	f7ff ff6d 	bl	8003b7c <__ssputs_r>
 8003ca2:	3001      	adds	r0, #1
 8003ca4:	f000 80aa 	beq.w	8003dfc <_svfiprintf_r+0x1c8>
 8003ca8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003caa:	445a      	add	r2, fp
 8003cac:	9209      	str	r2, [sp, #36]	; 0x24
 8003cae:	f89a 3000 	ldrb.w	r3, [sl]
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	f000 80a2 	beq.w	8003dfc <_svfiprintf_r+0x1c8>
 8003cb8:	2300      	movs	r3, #0
 8003cba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003cbe:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003cc2:	f10a 0a01 	add.w	sl, sl, #1
 8003cc6:	9304      	str	r3, [sp, #16]
 8003cc8:	9307      	str	r3, [sp, #28]
 8003cca:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003cce:	931a      	str	r3, [sp, #104]	; 0x68
 8003cd0:	4654      	mov	r4, sl
 8003cd2:	2205      	movs	r2, #5
 8003cd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003cd8:	4851      	ldr	r0, [pc, #324]	; (8003e20 <_svfiprintf_r+0x1ec>)
 8003cda:	f000 fa41 	bl	8004160 <memchr>
 8003cde:	9a04      	ldr	r2, [sp, #16]
 8003ce0:	b9d8      	cbnz	r0, 8003d1a <_svfiprintf_r+0xe6>
 8003ce2:	06d0      	lsls	r0, r2, #27
 8003ce4:	bf44      	itt	mi
 8003ce6:	2320      	movmi	r3, #32
 8003ce8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cec:	0711      	lsls	r1, r2, #28
 8003cee:	bf44      	itt	mi
 8003cf0:	232b      	movmi	r3, #43	; 0x2b
 8003cf2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cf6:	f89a 3000 	ldrb.w	r3, [sl]
 8003cfa:	2b2a      	cmp	r3, #42	; 0x2a
 8003cfc:	d015      	beq.n	8003d2a <_svfiprintf_r+0xf6>
 8003cfe:	4654      	mov	r4, sl
 8003d00:	2000      	movs	r0, #0
 8003d02:	f04f 0c0a 	mov.w	ip, #10
 8003d06:	9a07      	ldr	r2, [sp, #28]
 8003d08:	4621      	mov	r1, r4
 8003d0a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d0e:	3b30      	subs	r3, #48	; 0x30
 8003d10:	2b09      	cmp	r3, #9
 8003d12:	d94e      	bls.n	8003db2 <_svfiprintf_r+0x17e>
 8003d14:	b1b0      	cbz	r0, 8003d44 <_svfiprintf_r+0x110>
 8003d16:	9207      	str	r2, [sp, #28]
 8003d18:	e014      	b.n	8003d44 <_svfiprintf_r+0x110>
 8003d1a:	eba0 0308 	sub.w	r3, r0, r8
 8003d1e:	fa09 f303 	lsl.w	r3, r9, r3
 8003d22:	4313      	orrs	r3, r2
 8003d24:	46a2      	mov	sl, r4
 8003d26:	9304      	str	r3, [sp, #16]
 8003d28:	e7d2      	b.n	8003cd0 <_svfiprintf_r+0x9c>
 8003d2a:	9b03      	ldr	r3, [sp, #12]
 8003d2c:	1d19      	adds	r1, r3, #4
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	9103      	str	r1, [sp, #12]
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	bfbb      	ittet	lt
 8003d36:	425b      	neglt	r3, r3
 8003d38:	f042 0202 	orrlt.w	r2, r2, #2
 8003d3c:	9307      	strge	r3, [sp, #28]
 8003d3e:	9307      	strlt	r3, [sp, #28]
 8003d40:	bfb8      	it	lt
 8003d42:	9204      	strlt	r2, [sp, #16]
 8003d44:	7823      	ldrb	r3, [r4, #0]
 8003d46:	2b2e      	cmp	r3, #46	; 0x2e
 8003d48:	d10c      	bne.n	8003d64 <_svfiprintf_r+0x130>
 8003d4a:	7863      	ldrb	r3, [r4, #1]
 8003d4c:	2b2a      	cmp	r3, #42	; 0x2a
 8003d4e:	d135      	bne.n	8003dbc <_svfiprintf_r+0x188>
 8003d50:	9b03      	ldr	r3, [sp, #12]
 8003d52:	3402      	adds	r4, #2
 8003d54:	1d1a      	adds	r2, r3, #4
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	9203      	str	r2, [sp, #12]
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	bfb8      	it	lt
 8003d5e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003d62:	9305      	str	r3, [sp, #20]
 8003d64:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8003e24 <_svfiprintf_r+0x1f0>
 8003d68:	2203      	movs	r2, #3
 8003d6a:	4650      	mov	r0, sl
 8003d6c:	7821      	ldrb	r1, [r4, #0]
 8003d6e:	f000 f9f7 	bl	8004160 <memchr>
 8003d72:	b140      	cbz	r0, 8003d86 <_svfiprintf_r+0x152>
 8003d74:	2340      	movs	r3, #64	; 0x40
 8003d76:	eba0 000a 	sub.w	r0, r0, sl
 8003d7a:	fa03 f000 	lsl.w	r0, r3, r0
 8003d7e:	9b04      	ldr	r3, [sp, #16]
 8003d80:	3401      	adds	r4, #1
 8003d82:	4303      	orrs	r3, r0
 8003d84:	9304      	str	r3, [sp, #16]
 8003d86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d8a:	2206      	movs	r2, #6
 8003d8c:	4826      	ldr	r0, [pc, #152]	; (8003e28 <_svfiprintf_r+0x1f4>)
 8003d8e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003d92:	f000 f9e5 	bl	8004160 <memchr>
 8003d96:	2800      	cmp	r0, #0
 8003d98:	d038      	beq.n	8003e0c <_svfiprintf_r+0x1d8>
 8003d9a:	4b24      	ldr	r3, [pc, #144]	; (8003e2c <_svfiprintf_r+0x1f8>)
 8003d9c:	bb1b      	cbnz	r3, 8003de6 <_svfiprintf_r+0x1b2>
 8003d9e:	9b03      	ldr	r3, [sp, #12]
 8003da0:	3307      	adds	r3, #7
 8003da2:	f023 0307 	bic.w	r3, r3, #7
 8003da6:	3308      	adds	r3, #8
 8003da8:	9303      	str	r3, [sp, #12]
 8003daa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dac:	4433      	add	r3, r6
 8003dae:	9309      	str	r3, [sp, #36]	; 0x24
 8003db0:	e767      	b.n	8003c82 <_svfiprintf_r+0x4e>
 8003db2:	460c      	mov	r4, r1
 8003db4:	2001      	movs	r0, #1
 8003db6:	fb0c 3202 	mla	r2, ip, r2, r3
 8003dba:	e7a5      	b.n	8003d08 <_svfiprintf_r+0xd4>
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	f04f 0c0a 	mov.w	ip, #10
 8003dc2:	4619      	mov	r1, r3
 8003dc4:	3401      	adds	r4, #1
 8003dc6:	9305      	str	r3, [sp, #20]
 8003dc8:	4620      	mov	r0, r4
 8003dca:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003dce:	3a30      	subs	r2, #48	; 0x30
 8003dd0:	2a09      	cmp	r2, #9
 8003dd2:	d903      	bls.n	8003ddc <_svfiprintf_r+0x1a8>
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d0c5      	beq.n	8003d64 <_svfiprintf_r+0x130>
 8003dd8:	9105      	str	r1, [sp, #20]
 8003dda:	e7c3      	b.n	8003d64 <_svfiprintf_r+0x130>
 8003ddc:	4604      	mov	r4, r0
 8003dde:	2301      	movs	r3, #1
 8003de0:	fb0c 2101 	mla	r1, ip, r1, r2
 8003de4:	e7f0      	b.n	8003dc8 <_svfiprintf_r+0x194>
 8003de6:	ab03      	add	r3, sp, #12
 8003de8:	9300      	str	r3, [sp, #0]
 8003dea:	462a      	mov	r2, r5
 8003dec:	4638      	mov	r0, r7
 8003dee:	4b10      	ldr	r3, [pc, #64]	; (8003e30 <_svfiprintf_r+0x1fc>)
 8003df0:	a904      	add	r1, sp, #16
 8003df2:	f3af 8000 	nop.w
 8003df6:	1c42      	adds	r2, r0, #1
 8003df8:	4606      	mov	r6, r0
 8003dfa:	d1d6      	bne.n	8003daa <_svfiprintf_r+0x176>
 8003dfc:	89ab      	ldrh	r3, [r5, #12]
 8003dfe:	065b      	lsls	r3, r3, #25
 8003e00:	f53f af2c 	bmi.w	8003c5c <_svfiprintf_r+0x28>
 8003e04:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e06:	b01d      	add	sp, #116	; 0x74
 8003e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e0c:	ab03      	add	r3, sp, #12
 8003e0e:	9300      	str	r3, [sp, #0]
 8003e10:	462a      	mov	r2, r5
 8003e12:	4638      	mov	r0, r7
 8003e14:	4b06      	ldr	r3, [pc, #24]	; (8003e30 <_svfiprintf_r+0x1fc>)
 8003e16:	a904      	add	r1, sp, #16
 8003e18:	f000 f87c 	bl	8003f14 <_printf_i>
 8003e1c:	e7eb      	b.n	8003df6 <_svfiprintf_r+0x1c2>
 8003e1e:	bf00      	nop
 8003e20:	0800447c 	.word	0x0800447c
 8003e24:	08004482 	.word	0x08004482
 8003e28:	08004486 	.word	0x08004486
 8003e2c:	00000000 	.word	0x00000000
 8003e30:	08003b7d 	.word	0x08003b7d

08003e34 <_printf_common>:
 8003e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e38:	4616      	mov	r6, r2
 8003e3a:	4699      	mov	r9, r3
 8003e3c:	688a      	ldr	r2, [r1, #8]
 8003e3e:	690b      	ldr	r3, [r1, #16]
 8003e40:	4607      	mov	r7, r0
 8003e42:	4293      	cmp	r3, r2
 8003e44:	bfb8      	it	lt
 8003e46:	4613      	movlt	r3, r2
 8003e48:	6033      	str	r3, [r6, #0]
 8003e4a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003e4e:	460c      	mov	r4, r1
 8003e50:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003e54:	b10a      	cbz	r2, 8003e5a <_printf_common+0x26>
 8003e56:	3301      	adds	r3, #1
 8003e58:	6033      	str	r3, [r6, #0]
 8003e5a:	6823      	ldr	r3, [r4, #0]
 8003e5c:	0699      	lsls	r1, r3, #26
 8003e5e:	bf42      	ittt	mi
 8003e60:	6833      	ldrmi	r3, [r6, #0]
 8003e62:	3302      	addmi	r3, #2
 8003e64:	6033      	strmi	r3, [r6, #0]
 8003e66:	6825      	ldr	r5, [r4, #0]
 8003e68:	f015 0506 	ands.w	r5, r5, #6
 8003e6c:	d106      	bne.n	8003e7c <_printf_common+0x48>
 8003e6e:	f104 0a19 	add.w	sl, r4, #25
 8003e72:	68e3      	ldr	r3, [r4, #12]
 8003e74:	6832      	ldr	r2, [r6, #0]
 8003e76:	1a9b      	subs	r3, r3, r2
 8003e78:	42ab      	cmp	r3, r5
 8003e7a:	dc28      	bgt.n	8003ece <_printf_common+0x9a>
 8003e7c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003e80:	1e13      	subs	r3, r2, #0
 8003e82:	6822      	ldr	r2, [r4, #0]
 8003e84:	bf18      	it	ne
 8003e86:	2301      	movne	r3, #1
 8003e88:	0692      	lsls	r2, r2, #26
 8003e8a:	d42d      	bmi.n	8003ee8 <_printf_common+0xb4>
 8003e8c:	4649      	mov	r1, r9
 8003e8e:	4638      	mov	r0, r7
 8003e90:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003e94:	47c0      	blx	r8
 8003e96:	3001      	adds	r0, #1
 8003e98:	d020      	beq.n	8003edc <_printf_common+0xa8>
 8003e9a:	6823      	ldr	r3, [r4, #0]
 8003e9c:	68e5      	ldr	r5, [r4, #12]
 8003e9e:	f003 0306 	and.w	r3, r3, #6
 8003ea2:	2b04      	cmp	r3, #4
 8003ea4:	bf18      	it	ne
 8003ea6:	2500      	movne	r5, #0
 8003ea8:	6832      	ldr	r2, [r6, #0]
 8003eaa:	f04f 0600 	mov.w	r6, #0
 8003eae:	68a3      	ldr	r3, [r4, #8]
 8003eb0:	bf08      	it	eq
 8003eb2:	1aad      	subeq	r5, r5, r2
 8003eb4:	6922      	ldr	r2, [r4, #16]
 8003eb6:	bf08      	it	eq
 8003eb8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003ebc:	4293      	cmp	r3, r2
 8003ebe:	bfc4      	itt	gt
 8003ec0:	1a9b      	subgt	r3, r3, r2
 8003ec2:	18ed      	addgt	r5, r5, r3
 8003ec4:	341a      	adds	r4, #26
 8003ec6:	42b5      	cmp	r5, r6
 8003ec8:	d11a      	bne.n	8003f00 <_printf_common+0xcc>
 8003eca:	2000      	movs	r0, #0
 8003ecc:	e008      	b.n	8003ee0 <_printf_common+0xac>
 8003ece:	2301      	movs	r3, #1
 8003ed0:	4652      	mov	r2, sl
 8003ed2:	4649      	mov	r1, r9
 8003ed4:	4638      	mov	r0, r7
 8003ed6:	47c0      	blx	r8
 8003ed8:	3001      	adds	r0, #1
 8003eda:	d103      	bne.n	8003ee4 <_printf_common+0xb0>
 8003edc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003ee0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ee4:	3501      	adds	r5, #1
 8003ee6:	e7c4      	b.n	8003e72 <_printf_common+0x3e>
 8003ee8:	2030      	movs	r0, #48	; 0x30
 8003eea:	18e1      	adds	r1, r4, r3
 8003eec:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003ef0:	1c5a      	adds	r2, r3, #1
 8003ef2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003ef6:	4422      	add	r2, r4
 8003ef8:	3302      	adds	r3, #2
 8003efa:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003efe:	e7c5      	b.n	8003e8c <_printf_common+0x58>
 8003f00:	2301      	movs	r3, #1
 8003f02:	4622      	mov	r2, r4
 8003f04:	4649      	mov	r1, r9
 8003f06:	4638      	mov	r0, r7
 8003f08:	47c0      	blx	r8
 8003f0a:	3001      	adds	r0, #1
 8003f0c:	d0e6      	beq.n	8003edc <_printf_common+0xa8>
 8003f0e:	3601      	adds	r6, #1
 8003f10:	e7d9      	b.n	8003ec6 <_printf_common+0x92>
	...

08003f14 <_printf_i>:
 8003f14:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f18:	7e0f      	ldrb	r7, [r1, #24]
 8003f1a:	4691      	mov	r9, r2
 8003f1c:	2f78      	cmp	r7, #120	; 0x78
 8003f1e:	4680      	mov	r8, r0
 8003f20:	460c      	mov	r4, r1
 8003f22:	469a      	mov	sl, r3
 8003f24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003f26:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003f2a:	d807      	bhi.n	8003f3c <_printf_i+0x28>
 8003f2c:	2f62      	cmp	r7, #98	; 0x62
 8003f2e:	d80a      	bhi.n	8003f46 <_printf_i+0x32>
 8003f30:	2f00      	cmp	r7, #0
 8003f32:	f000 80d9 	beq.w	80040e8 <_printf_i+0x1d4>
 8003f36:	2f58      	cmp	r7, #88	; 0x58
 8003f38:	f000 80a4 	beq.w	8004084 <_printf_i+0x170>
 8003f3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003f40:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003f44:	e03a      	b.n	8003fbc <_printf_i+0xa8>
 8003f46:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003f4a:	2b15      	cmp	r3, #21
 8003f4c:	d8f6      	bhi.n	8003f3c <_printf_i+0x28>
 8003f4e:	a101      	add	r1, pc, #4	; (adr r1, 8003f54 <_printf_i+0x40>)
 8003f50:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003f54:	08003fad 	.word	0x08003fad
 8003f58:	08003fc1 	.word	0x08003fc1
 8003f5c:	08003f3d 	.word	0x08003f3d
 8003f60:	08003f3d 	.word	0x08003f3d
 8003f64:	08003f3d 	.word	0x08003f3d
 8003f68:	08003f3d 	.word	0x08003f3d
 8003f6c:	08003fc1 	.word	0x08003fc1
 8003f70:	08003f3d 	.word	0x08003f3d
 8003f74:	08003f3d 	.word	0x08003f3d
 8003f78:	08003f3d 	.word	0x08003f3d
 8003f7c:	08003f3d 	.word	0x08003f3d
 8003f80:	080040cf 	.word	0x080040cf
 8003f84:	08003ff1 	.word	0x08003ff1
 8003f88:	080040b1 	.word	0x080040b1
 8003f8c:	08003f3d 	.word	0x08003f3d
 8003f90:	08003f3d 	.word	0x08003f3d
 8003f94:	080040f1 	.word	0x080040f1
 8003f98:	08003f3d 	.word	0x08003f3d
 8003f9c:	08003ff1 	.word	0x08003ff1
 8003fa0:	08003f3d 	.word	0x08003f3d
 8003fa4:	08003f3d 	.word	0x08003f3d
 8003fa8:	080040b9 	.word	0x080040b9
 8003fac:	682b      	ldr	r3, [r5, #0]
 8003fae:	1d1a      	adds	r2, r3, #4
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	602a      	str	r2, [r5, #0]
 8003fb4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003fb8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003fbc:	2301      	movs	r3, #1
 8003fbe:	e0a4      	b.n	800410a <_printf_i+0x1f6>
 8003fc0:	6820      	ldr	r0, [r4, #0]
 8003fc2:	6829      	ldr	r1, [r5, #0]
 8003fc4:	0606      	lsls	r6, r0, #24
 8003fc6:	f101 0304 	add.w	r3, r1, #4
 8003fca:	d50a      	bpl.n	8003fe2 <_printf_i+0xce>
 8003fcc:	680e      	ldr	r6, [r1, #0]
 8003fce:	602b      	str	r3, [r5, #0]
 8003fd0:	2e00      	cmp	r6, #0
 8003fd2:	da03      	bge.n	8003fdc <_printf_i+0xc8>
 8003fd4:	232d      	movs	r3, #45	; 0x2d
 8003fd6:	4276      	negs	r6, r6
 8003fd8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003fdc:	230a      	movs	r3, #10
 8003fde:	485e      	ldr	r0, [pc, #376]	; (8004158 <_printf_i+0x244>)
 8003fe0:	e019      	b.n	8004016 <_printf_i+0x102>
 8003fe2:	680e      	ldr	r6, [r1, #0]
 8003fe4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003fe8:	602b      	str	r3, [r5, #0]
 8003fea:	bf18      	it	ne
 8003fec:	b236      	sxthne	r6, r6
 8003fee:	e7ef      	b.n	8003fd0 <_printf_i+0xbc>
 8003ff0:	682b      	ldr	r3, [r5, #0]
 8003ff2:	6820      	ldr	r0, [r4, #0]
 8003ff4:	1d19      	adds	r1, r3, #4
 8003ff6:	6029      	str	r1, [r5, #0]
 8003ff8:	0601      	lsls	r1, r0, #24
 8003ffa:	d501      	bpl.n	8004000 <_printf_i+0xec>
 8003ffc:	681e      	ldr	r6, [r3, #0]
 8003ffe:	e002      	b.n	8004006 <_printf_i+0xf2>
 8004000:	0646      	lsls	r6, r0, #25
 8004002:	d5fb      	bpl.n	8003ffc <_printf_i+0xe8>
 8004004:	881e      	ldrh	r6, [r3, #0]
 8004006:	2f6f      	cmp	r7, #111	; 0x6f
 8004008:	bf0c      	ite	eq
 800400a:	2308      	moveq	r3, #8
 800400c:	230a      	movne	r3, #10
 800400e:	4852      	ldr	r0, [pc, #328]	; (8004158 <_printf_i+0x244>)
 8004010:	2100      	movs	r1, #0
 8004012:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004016:	6865      	ldr	r5, [r4, #4]
 8004018:	2d00      	cmp	r5, #0
 800401a:	bfa8      	it	ge
 800401c:	6821      	ldrge	r1, [r4, #0]
 800401e:	60a5      	str	r5, [r4, #8]
 8004020:	bfa4      	itt	ge
 8004022:	f021 0104 	bicge.w	r1, r1, #4
 8004026:	6021      	strge	r1, [r4, #0]
 8004028:	b90e      	cbnz	r6, 800402e <_printf_i+0x11a>
 800402a:	2d00      	cmp	r5, #0
 800402c:	d04d      	beq.n	80040ca <_printf_i+0x1b6>
 800402e:	4615      	mov	r5, r2
 8004030:	fbb6 f1f3 	udiv	r1, r6, r3
 8004034:	fb03 6711 	mls	r7, r3, r1, r6
 8004038:	5dc7      	ldrb	r7, [r0, r7]
 800403a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800403e:	4637      	mov	r7, r6
 8004040:	42bb      	cmp	r3, r7
 8004042:	460e      	mov	r6, r1
 8004044:	d9f4      	bls.n	8004030 <_printf_i+0x11c>
 8004046:	2b08      	cmp	r3, #8
 8004048:	d10b      	bne.n	8004062 <_printf_i+0x14e>
 800404a:	6823      	ldr	r3, [r4, #0]
 800404c:	07de      	lsls	r6, r3, #31
 800404e:	d508      	bpl.n	8004062 <_printf_i+0x14e>
 8004050:	6923      	ldr	r3, [r4, #16]
 8004052:	6861      	ldr	r1, [r4, #4]
 8004054:	4299      	cmp	r1, r3
 8004056:	bfde      	ittt	le
 8004058:	2330      	movle	r3, #48	; 0x30
 800405a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800405e:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8004062:	1b52      	subs	r2, r2, r5
 8004064:	6122      	str	r2, [r4, #16]
 8004066:	464b      	mov	r3, r9
 8004068:	4621      	mov	r1, r4
 800406a:	4640      	mov	r0, r8
 800406c:	f8cd a000 	str.w	sl, [sp]
 8004070:	aa03      	add	r2, sp, #12
 8004072:	f7ff fedf 	bl	8003e34 <_printf_common>
 8004076:	3001      	adds	r0, #1
 8004078:	d14c      	bne.n	8004114 <_printf_i+0x200>
 800407a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800407e:	b004      	add	sp, #16
 8004080:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004084:	4834      	ldr	r0, [pc, #208]	; (8004158 <_printf_i+0x244>)
 8004086:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800408a:	6829      	ldr	r1, [r5, #0]
 800408c:	6823      	ldr	r3, [r4, #0]
 800408e:	f851 6b04 	ldr.w	r6, [r1], #4
 8004092:	6029      	str	r1, [r5, #0]
 8004094:	061d      	lsls	r5, r3, #24
 8004096:	d514      	bpl.n	80040c2 <_printf_i+0x1ae>
 8004098:	07df      	lsls	r7, r3, #31
 800409a:	bf44      	itt	mi
 800409c:	f043 0320 	orrmi.w	r3, r3, #32
 80040a0:	6023      	strmi	r3, [r4, #0]
 80040a2:	b91e      	cbnz	r6, 80040ac <_printf_i+0x198>
 80040a4:	6823      	ldr	r3, [r4, #0]
 80040a6:	f023 0320 	bic.w	r3, r3, #32
 80040aa:	6023      	str	r3, [r4, #0]
 80040ac:	2310      	movs	r3, #16
 80040ae:	e7af      	b.n	8004010 <_printf_i+0xfc>
 80040b0:	6823      	ldr	r3, [r4, #0]
 80040b2:	f043 0320 	orr.w	r3, r3, #32
 80040b6:	6023      	str	r3, [r4, #0]
 80040b8:	2378      	movs	r3, #120	; 0x78
 80040ba:	4828      	ldr	r0, [pc, #160]	; (800415c <_printf_i+0x248>)
 80040bc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80040c0:	e7e3      	b.n	800408a <_printf_i+0x176>
 80040c2:	0659      	lsls	r1, r3, #25
 80040c4:	bf48      	it	mi
 80040c6:	b2b6      	uxthmi	r6, r6
 80040c8:	e7e6      	b.n	8004098 <_printf_i+0x184>
 80040ca:	4615      	mov	r5, r2
 80040cc:	e7bb      	b.n	8004046 <_printf_i+0x132>
 80040ce:	682b      	ldr	r3, [r5, #0]
 80040d0:	6826      	ldr	r6, [r4, #0]
 80040d2:	1d18      	adds	r0, r3, #4
 80040d4:	6961      	ldr	r1, [r4, #20]
 80040d6:	6028      	str	r0, [r5, #0]
 80040d8:	0635      	lsls	r5, r6, #24
 80040da:	681b      	ldr	r3, [r3, #0]
 80040dc:	d501      	bpl.n	80040e2 <_printf_i+0x1ce>
 80040de:	6019      	str	r1, [r3, #0]
 80040e0:	e002      	b.n	80040e8 <_printf_i+0x1d4>
 80040e2:	0670      	lsls	r0, r6, #25
 80040e4:	d5fb      	bpl.n	80040de <_printf_i+0x1ca>
 80040e6:	8019      	strh	r1, [r3, #0]
 80040e8:	2300      	movs	r3, #0
 80040ea:	4615      	mov	r5, r2
 80040ec:	6123      	str	r3, [r4, #16]
 80040ee:	e7ba      	b.n	8004066 <_printf_i+0x152>
 80040f0:	682b      	ldr	r3, [r5, #0]
 80040f2:	2100      	movs	r1, #0
 80040f4:	1d1a      	adds	r2, r3, #4
 80040f6:	602a      	str	r2, [r5, #0]
 80040f8:	681d      	ldr	r5, [r3, #0]
 80040fa:	6862      	ldr	r2, [r4, #4]
 80040fc:	4628      	mov	r0, r5
 80040fe:	f000 f82f 	bl	8004160 <memchr>
 8004102:	b108      	cbz	r0, 8004108 <_printf_i+0x1f4>
 8004104:	1b40      	subs	r0, r0, r5
 8004106:	6060      	str	r0, [r4, #4]
 8004108:	6863      	ldr	r3, [r4, #4]
 800410a:	6123      	str	r3, [r4, #16]
 800410c:	2300      	movs	r3, #0
 800410e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004112:	e7a8      	b.n	8004066 <_printf_i+0x152>
 8004114:	462a      	mov	r2, r5
 8004116:	4649      	mov	r1, r9
 8004118:	4640      	mov	r0, r8
 800411a:	6923      	ldr	r3, [r4, #16]
 800411c:	47d0      	blx	sl
 800411e:	3001      	adds	r0, #1
 8004120:	d0ab      	beq.n	800407a <_printf_i+0x166>
 8004122:	6823      	ldr	r3, [r4, #0]
 8004124:	079b      	lsls	r3, r3, #30
 8004126:	d413      	bmi.n	8004150 <_printf_i+0x23c>
 8004128:	68e0      	ldr	r0, [r4, #12]
 800412a:	9b03      	ldr	r3, [sp, #12]
 800412c:	4298      	cmp	r0, r3
 800412e:	bfb8      	it	lt
 8004130:	4618      	movlt	r0, r3
 8004132:	e7a4      	b.n	800407e <_printf_i+0x16a>
 8004134:	2301      	movs	r3, #1
 8004136:	4632      	mov	r2, r6
 8004138:	4649      	mov	r1, r9
 800413a:	4640      	mov	r0, r8
 800413c:	47d0      	blx	sl
 800413e:	3001      	adds	r0, #1
 8004140:	d09b      	beq.n	800407a <_printf_i+0x166>
 8004142:	3501      	adds	r5, #1
 8004144:	68e3      	ldr	r3, [r4, #12]
 8004146:	9903      	ldr	r1, [sp, #12]
 8004148:	1a5b      	subs	r3, r3, r1
 800414a:	42ab      	cmp	r3, r5
 800414c:	dcf2      	bgt.n	8004134 <_printf_i+0x220>
 800414e:	e7eb      	b.n	8004128 <_printf_i+0x214>
 8004150:	2500      	movs	r5, #0
 8004152:	f104 0619 	add.w	r6, r4, #25
 8004156:	e7f5      	b.n	8004144 <_printf_i+0x230>
 8004158:	0800448d 	.word	0x0800448d
 800415c:	0800449e 	.word	0x0800449e

08004160 <memchr>:
 8004160:	4603      	mov	r3, r0
 8004162:	b510      	push	{r4, lr}
 8004164:	b2c9      	uxtb	r1, r1
 8004166:	4402      	add	r2, r0
 8004168:	4293      	cmp	r3, r2
 800416a:	4618      	mov	r0, r3
 800416c:	d101      	bne.n	8004172 <memchr+0x12>
 800416e:	2000      	movs	r0, #0
 8004170:	e003      	b.n	800417a <memchr+0x1a>
 8004172:	7804      	ldrb	r4, [r0, #0]
 8004174:	3301      	adds	r3, #1
 8004176:	428c      	cmp	r4, r1
 8004178:	d1f6      	bne.n	8004168 <memchr+0x8>
 800417a:	bd10      	pop	{r4, pc}

0800417c <memcpy>:
 800417c:	440a      	add	r2, r1
 800417e:	4291      	cmp	r1, r2
 8004180:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8004184:	d100      	bne.n	8004188 <memcpy+0xc>
 8004186:	4770      	bx	lr
 8004188:	b510      	push	{r4, lr}
 800418a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800418e:	4291      	cmp	r1, r2
 8004190:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004194:	d1f9      	bne.n	800418a <memcpy+0xe>
 8004196:	bd10      	pop	{r4, pc}

08004198 <memmove>:
 8004198:	4288      	cmp	r0, r1
 800419a:	b510      	push	{r4, lr}
 800419c:	eb01 0402 	add.w	r4, r1, r2
 80041a0:	d902      	bls.n	80041a8 <memmove+0x10>
 80041a2:	4284      	cmp	r4, r0
 80041a4:	4623      	mov	r3, r4
 80041a6:	d807      	bhi.n	80041b8 <memmove+0x20>
 80041a8:	1e43      	subs	r3, r0, #1
 80041aa:	42a1      	cmp	r1, r4
 80041ac:	d008      	beq.n	80041c0 <memmove+0x28>
 80041ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 80041b2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80041b6:	e7f8      	b.n	80041aa <memmove+0x12>
 80041b8:	4601      	mov	r1, r0
 80041ba:	4402      	add	r2, r0
 80041bc:	428a      	cmp	r2, r1
 80041be:	d100      	bne.n	80041c2 <memmove+0x2a>
 80041c0:	bd10      	pop	{r4, pc}
 80041c2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80041c6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80041ca:	e7f7      	b.n	80041bc <memmove+0x24>

080041cc <_free_r>:
 80041cc:	b538      	push	{r3, r4, r5, lr}
 80041ce:	4605      	mov	r5, r0
 80041d0:	2900      	cmp	r1, #0
 80041d2:	d040      	beq.n	8004256 <_free_r+0x8a>
 80041d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80041d8:	1f0c      	subs	r4, r1, #4
 80041da:	2b00      	cmp	r3, #0
 80041dc:	bfb8      	it	lt
 80041de:	18e4      	addlt	r4, r4, r3
 80041e0:	f000 f910 	bl	8004404 <__malloc_lock>
 80041e4:	4a1c      	ldr	r2, [pc, #112]	; (8004258 <_free_r+0x8c>)
 80041e6:	6813      	ldr	r3, [r2, #0]
 80041e8:	b933      	cbnz	r3, 80041f8 <_free_r+0x2c>
 80041ea:	6063      	str	r3, [r4, #4]
 80041ec:	6014      	str	r4, [r2, #0]
 80041ee:	4628      	mov	r0, r5
 80041f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80041f4:	f000 b90c 	b.w	8004410 <__malloc_unlock>
 80041f8:	42a3      	cmp	r3, r4
 80041fa:	d908      	bls.n	800420e <_free_r+0x42>
 80041fc:	6820      	ldr	r0, [r4, #0]
 80041fe:	1821      	adds	r1, r4, r0
 8004200:	428b      	cmp	r3, r1
 8004202:	bf01      	itttt	eq
 8004204:	6819      	ldreq	r1, [r3, #0]
 8004206:	685b      	ldreq	r3, [r3, #4]
 8004208:	1809      	addeq	r1, r1, r0
 800420a:	6021      	streq	r1, [r4, #0]
 800420c:	e7ed      	b.n	80041ea <_free_r+0x1e>
 800420e:	461a      	mov	r2, r3
 8004210:	685b      	ldr	r3, [r3, #4]
 8004212:	b10b      	cbz	r3, 8004218 <_free_r+0x4c>
 8004214:	42a3      	cmp	r3, r4
 8004216:	d9fa      	bls.n	800420e <_free_r+0x42>
 8004218:	6811      	ldr	r1, [r2, #0]
 800421a:	1850      	adds	r0, r2, r1
 800421c:	42a0      	cmp	r0, r4
 800421e:	d10b      	bne.n	8004238 <_free_r+0x6c>
 8004220:	6820      	ldr	r0, [r4, #0]
 8004222:	4401      	add	r1, r0
 8004224:	1850      	adds	r0, r2, r1
 8004226:	4283      	cmp	r3, r0
 8004228:	6011      	str	r1, [r2, #0]
 800422a:	d1e0      	bne.n	80041ee <_free_r+0x22>
 800422c:	6818      	ldr	r0, [r3, #0]
 800422e:	685b      	ldr	r3, [r3, #4]
 8004230:	4401      	add	r1, r0
 8004232:	6011      	str	r1, [r2, #0]
 8004234:	6053      	str	r3, [r2, #4]
 8004236:	e7da      	b.n	80041ee <_free_r+0x22>
 8004238:	d902      	bls.n	8004240 <_free_r+0x74>
 800423a:	230c      	movs	r3, #12
 800423c:	602b      	str	r3, [r5, #0]
 800423e:	e7d6      	b.n	80041ee <_free_r+0x22>
 8004240:	6820      	ldr	r0, [r4, #0]
 8004242:	1821      	adds	r1, r4, r0
 8004244:	428b      	cmp	r3, r1
 8004246:	bf01      	itttt	eq
 8004248:	6819      	ldreq	r1, [r3, #0]
 800424a:	685b      	ldreq	r3, [r3, #4]
 800424c:	1809      	addeq	r1, r1, r0
 800424e:	6021      	streq	r1, [r4, #0]
 8004250:	6063      	str	r3, [r4, #4]
 8004252:	6054      	str	r4, [r2, #4]
 8004254:	e7cb      	b.n	80041ee <_free_r+0x22>
 8004256:	bd38      	pop	{r3, r4, r5, pc}
 8004258:	200007fc 	.word	0x200007fc

0800425c <sbrk_aligned>:
 800425c:	b570      	push	{r4, r5, r6, lr}
 800425e:	4e0e      	ldr	r6, [pc, #56]	; (8004298 <sbrk_aligned+0x3c>)
 8004260:	460c      	mov	r4, r1
 8004262:	6831      	ldr	r1, [r6, #0]
 8004264:	4605      	mov	r5, r0
 8004266:	b911      	cbnz	r1, 800426e <sbrk_aligned+0x12>
 8004268:	f000 f8bc 	bl	80043e4 <_sbrk_r>
 800426c:	6030      	str	r0, [r6, #0]
 800426e:	4621      	mov	r1, r4
 8004270:	4628      	mov	r0, r5
 8004272:	f000 f8b7 	bl	80043e4 <_sbrk_r>
 8004276:	1c43      	adds	r3, r0, #1
 8004278:	d00a      	beq.n	8004290 <sbrk_aligned+0x34>
 800427a:	1cc4      	adds	r4, r0, #3
 800427c:	f024 0403 	bic.w	r4, r4, #3
 8004280:	42a0      	cmp	r0, r4
 8004282:	d007      	beq.n	8004294 <sbrk_aligned+0x38>
 8004284:	1a21      	subs	r1, r4, r0
 8004286:	4628      	mov	r0, r5
 8004288:	f000 f8ac 	bl	80043e4 <_sbrk_r>
 800428c:	3001      	adds	r0, #1
 800428e:	d101      	bne.n	8004294 <sbrk_aligned+0x38>
 8004290:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004294:	4620      	mov	r0, r4
 8004296:	bd70      	pop	{r4, r5, r6, pc}
 8004298:	20000800 	.word	0x20000800

0800429c <_malloc_r>:
 800429c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042a0:	1ccd      	adds	r5, r1, #3
 80042a2:	f025 0503 	bic.w	r5, r5, #3
 80042a6:	3508      	adds	r5, #8
 80042a8:	2d0c      	cmp	r5, #12
 80042aa:	bf38      	it	cc
 80042ac:	250c      	movcc	r5, #12
 80042ae:	2d00      	cmp	r5, #0
 80042b0:	4607      	mov	r7, r0
 80042b2:	db01      	blt.n	80042b8 <_malloc_r+0x1c>
 80042b4:	42a9      	cmp	r1, r5
 80042b6:	d905      	bls.n	80042c4 <_malloc_r+0x28>
 80042b8:	230c      	movs	r3, #12
 80042ba:	2600      	movs	r6, #0
 80042bc:	603b      	str	r3, [r7, #0]
 80042be:	4630      	mov	r0, r6
 80042c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80042c4:	4e2e      	ldr	r6, [pc, #184]	; (8004380 <_malloc_r+0xe4>)
 80042c6:	f000 f89d 	bl	8004404 <__malloc_lock>
 80042ca:	6833      	ldr	r3, [r6, #0]
 80042cc:	461c      	mov	r4, r3
 80042ce:	bb34      	cbnz	r4, 800431e <_malloc_r+0x82>
 80042d0:	4629      	mov	r1, r5
 80042d2:	4638      	mov	r0, r7
 80042d4:	f7ff ffc2 	bl	800425c <sbrk_aligned>
 80042d8:	1c43      	adds	r3, r0, #1
 80042da:	4604      	mov	r4, r0
 80042dc:	d14d      	bne.n	800437a <_malloc_r+0xde>
 80042de:	6834      	ldr	r4, [r6, #0]
 80042e0:	4626      	mov	r6, r4
 80042e2:	2e00      	cmp	r6, #0
 80042e4:	d140      	bne.n	8004368 <_malloc_r+0xcc>
 80042e6:	6823      	ldr	r3, [r4, #0]
 80042e8:	4631      	mov	r1, r6
 80042ea:	4638      	mov	r0, r7
 80042ec:	eb04 0803 	add.w	r8, r4, r3
 80042f0:	f000 f878 	bl	80043e4 <_sbrk_r>
 80042f4:	4580      	cmp	r8, r0
 80042f6:	d13a      	bne.n	800436e <_malloc_r+0xd2>
 80042f8:	6821      	ldr	r1, [r4, #0]
 80042fa:	3503      	adds	r5, #3
 80042fc:	1a6d      	subs	r5, r5, r1
 80042fe:	f025 0503 	bic.w	r5, r5, #3
 8004302:	3508      	adds	r5, #8
 8004304:	2d0c      	cmp	r5, #12
 8004306:	bf38      	it	cc
 8004308:	250c      	movcc	r5, #12
 800430a:	4638      	mov	r0, r7
 800430c:	4629      	mov	r1, r5
 800430e:	f7ff ffa5 	bl	800425c <sbrk_aligned>
 8004312:	3001      	adds	r0, #1
 8004314:	d02b      	beq.n	800436e <_malloc_r+0xd2>
 8004316:	6823      	ldr	r3, [r4, #0]
 8004318:	442b      	add	r3, r5
 800431a:	6023      	str	r3, [r4, #0]
 800431c:	e00e      	b.n	800433c <_malloc_r+0xa0>
 800431e:	6822      	ldr	r2, [r4, #0]
 8004320:	1b52      	subs	r2, r2, r5
 8004322:	d41e      	bmi.n	8004362 <_malloc_r+0xc6>
 8004324:	2a0b      	cmp	r2, #11
 8004326:	d916      	bls.n	8004356 <_malloc_r+0xba>
 8004328:	1961      	adds	r1, r4, r5
 800432a:	42a3      	cmp	r3, r4
 800432c:	6025      	str	r5, [r4, #0]
 800432e:	bf18      	it	ne
 8004330:	6059      	strne	r1, [r3, #4]
 8004332:	6863      	ldr	r3, [r4, #4]
 8004334:	bf08      	it	eq
 8004336:	6031      	streq	r1, [r6, #0]
 8004338:	5162      	str	r2, [r4, r5]
 800433a:	604b      	str	r3, [r1, #4]
 800433c:	4638      	mov	r0, r7
 800433e:	f104 060b 	add.w	r6, r4, #11
 8004342:	f000 f865 	bl	8004410 <__malloc_unlock>
 8004346:	f026 0607 	bic.w	r6, r6, #7
 800434a:	1d23      	adds	r3, r4, #4
 800434c:	1af2      	subs	r2, r6, r3
 800434e:	d0b6      	beq.n	80042be <_malloc_r+0x22>
 8004350:	1b9b      	subs	r3, r3, r6
 8004352:	50a3      	str	r3, [r4, r2]
 8004354:	e7b3      	b.n	80042be <_malloc_r+0x22>
 8004356:	6862      	ldr	r2, [r4, #4]
 8004358:	42a3      	cmp	r3, r4
 800435a:	bf0c      	ite	eq
 800435c:	6032      	streq	r2, [r6, #0]
 800435e:	605a      	strne	r2, [r3, #4]
 8004360:	e7ec      	b.n	800433c <_malloc_r+0xa0>
 8004362:	4623      	mov	r3, r4
 8004364:	6864      	ldr	r4, [r4, #4]
 8004366:	e7b2      	b.n	80042ce <_malloc_r+0x32>
 8004368:	4634      	mov	r4, r6
 800436a:	6876      	ldr	r6, [r6, #4]
 800436c:	e7b9      	b.n	80042e2 <_malloc_r+0x46>
 800436e:	230c      	movs	r3, #12
 8004370:	4638      	mov	r0, r7
 8004372:	603b      	str	r3, [r7, #0]
 8004374:	f000 f84c 	bl	8004410 <__malloc_unlock>
 8004378:	e7a1      	b.n	80042be <_malloc_r+0x22>
 800437a:	6025      	str	r5, [r4, #0]
 800437c:	e7de      	b.n	800433c <_malloc_r+0xa0>
 800437e:	bf00      	nop
 8004380:	200007fc 	.word	0x200007fc

08004384 <_realloc_r>:
 8004384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004388:	4680      	mov	r8, r0
 800438a:	4614      	mov	r4, r2
 800438c:	460e      	mov	r6, r1
 800438e:	b921      	cbnz	r1, 800439a <_realloc_r+0x16>
 8004390:	4611      	mov	r1, r2
 8004392:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004396:	f7ff bf81 	b.w	800429c <_malloc_r>
 800439a:	b92a      	cbnz	r2, 80043a8 <_realloc_r+0x24>
 800439c:	f7ff ff16 	bl	80041cc <_free_r>
 80043a0:	4625      	mov	r5, r4
 80043a2:	4628      	mov	r0, r5
 80043a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043a8:	f000 f838 	bl	800441c <_malloc_usable_size_r>
 80043ac:	4284      	cmp	r4, r0
 80043ae:	4607      	mov	r7, r0
 80043b0:	d802      	bhi.n	80043b8 <_realloc_r+0x34>
 80043b2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80043b6:	d812      	bhi.n	80043de <_realloc_r+0x5a>
 80043b8:	4621      	mov	r1, r4
 80043ba:	4640      	mov	r0, r8
 80043bc:	f7ff ff6e 	bl	800429c <_malloc_r>
 80043c0:	4605      	mov	r5, r0
 80043c2:	2800      	cmp	r0, #0
 80043c4:	d0ed      	beq.n	80043a2 <_realloc_r+0x1e>
 80043c6:	42bc      	cmp	r4, r7
 80043c8:	4622      	mov	r2, r4
 80043ca:	4631      	mov	r1, r6
 80043cc:	bf28      	it	cs
 80043ce:	463a      	movcs	r2, r7
 80043d0:	f7ff fed4 	bl	800417c <memcpy>
 80043d4:	4631      	mov	r1, r6
 80043d6:	4640      	mov	r0, r8
 80043d8:	f7ff fef8 	bl	80041cc <_free_r>
 80043dc:	e7e1      	b.n	80043a2 <_realloc_r+0x1e>
 80043de:	4635      	mov	r5, r6
 80043e0:	e7df      	b.n	80043a2 <_realloc_r+0x1e>
	...

080043e4 <_sbrk_r>:
 80043e4:	b538      	push	{r3, r4, r5, lr}
 80043e6:	2300      	movs	r3, #0
 80043e8:	4d05      	ldr	r5, [pc, #20]	; (8004400 <_sbrk_r+0x1c>)
 80043ea:	4604      	mov	r4, r0
 80043ec:	4608      	mov	r0, r1
 80043ee:	602b      	str	r3, [r5, #0]
 80043f0:	f7fd f814 	bl	800141c <_sbrk>
 80043f4:	1c43      	adds	r3, r0, #1
 80043f6:	d102      	bne.n	80043fe <_sbrk_r+0x1a>
 80043f8:	682b      	ldr	r3, [r5, #0]
 80043fa:	b103      	cbz	r3, 80043fe <_sbrk_r+0x1a>
 80043fc:	6023      	str	r3, [r4, #0]
 80043fe:	bd38      	pop	{r3, r4, r5, pc}
 8004400:	20000804 	.word	0x20000804

08004404 <__malloc_lock>:
 8004404:	4801      	ldr	r0, [pc, #4]	; (800440c <__malloc_lock+0x8>)
 8004406:	f000 b811 	b.w	800442c <__retarget_lock_acquire_recursive>
 800440a:	bf00      	nop
 800440c:	20000808 	.word	0x20000808

08004410 <__malloc_unlock>:
 8004410:	4801      	ldr	r0, [pc, #4]	; (8004418 <__malloc_unlock+0x8>)
 8004412:	f000 b80c 	b.w	800442e <__retarget_lock_release_recursive>
 8004416:	bf00      	nop
 8004418:	20000808 	.word	0x20000808

0800441c <_malloc_usable_size_r>:
 800441c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004420:	1f18      	subs	r0, r3, #4
 8004422:	2b00      	cmp	r3, #0
 8004424:	bfbc      	itt	lt
 8004426:	580b      	ldrlt	r3, [r1, r0]
 8004428:	18c0      	addlt	r0, r0, r3
 800442a:	4770      	bx	lr

0800442c <__retarget_lock_acquire_recursive>:
 800442c:	4770      	bx	lr

0800442e <__retarget_lock_release_recursive>:
 800442e:	4770      	bx	lr

08004430 <_init>:
 8004430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004432:	bf00      	nop
 8004434:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004436:	bc08      	pop	{r3}
 8004438:	469e      	mov	lr, r3
 800443a:	4770      	bx	lr

0800443c <_fini>:
 800443c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800443e:	bf00      	nop
 8004440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004442:	bc08      	pop	{r3}
 8004444:	469e      	mov	lr, r3
 8004446:	4770      	bx	lr
