
4_Way_Traffic_Light.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000024e0  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  080025ec  080025ec  000125ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002614  08002614  00020058  2**0
                  CONTENTS
  4 .ARM          00000000  08002614  08002614  00020058  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002614  08002614  00020058  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002614  08002614  00012614  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002618  08002618  00012618  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000058  20000000  0800261c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003e4  20000058  08002674  00020058  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000043c  08002674  0002043c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020058  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000ab31  00000000  00000000  00020081  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000208b  00000000  00000000  0002abb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000cb0  00000000  00000000  0002cc40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000bb8  00000000  00000000  0002d8f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002fe5  00000000  00000000  0002e4a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e238  00000000  00000000  0003148d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008a7f2  00000000  00000000  0003f6c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000c9eb7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000032d8  00000000  00000000  000c9f08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000058 	.word	0x20000058
 8000128:	00000000 	.word	0x00000000
 800012c:	080025d4 	.word	0x080025d4

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000005c 	.word	0x2000005c
 8000148:	080025d4 	.word	0x080025d4

0800014c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800014c:	b580      	push	{r7, lr}
 800014e:	b088      	sub	sp, #32
 8000150:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000152:	f107 0310 	add.w	r3, r7, #16
 8000156:	2200      	movs	r2, #0
 8000158:	601a      	str	r2, [r3, #0]
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	609a      	str	r2, [r3, #8]
 800015e:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000160:	4b45      	ldr	r3, [pc, #276]	; (8000278 <MX_GPIO_Init+0x12c>)
 8000162:	699b      	ldr	r3, [r3, #24]
 8000164:	4a44      	ldr	r2, [pc, #272]	; (8000278 <MX_GPIO_Init+0x12c>)
 8000166:	f043 0310 	orr.w	r3, r3, #16
 800016a:	6193      	str	r3, [r2, #24]
 800016c:	4b42      	ldr	r3, [pc, #264]	; (8000278 <MX_GPIO_Init+0x12c>)
 800016e:	699b      	ldr	r3, [r3, #24]
 8000170:	f003 0310 	and.w	r3, r3, #16
 8000174:	60fb      	str	r3, [r7, #12]
 8000176:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000178:	4b3f      	ldr	r3, [pc, #252]	; (8000278 <MX_GPIO_Init+0x12c>)
 800017a:	699b      	ldr	r3, [r3, #24]
 800017c:	4a3e      	ldr	r2, [pc, #248]	; (8000278 <MX_GPIO_Init+0x12c>)
 800017e:	f043 0320 	orr.w	r3, r3, #32
 8000182:	6193      	str	r3, [r2, #24]
 8000184:	4b3c      	ldr	r3, [pc, #240]	; (8000278 <MX_GPIO_Init+0x12c>)
 8000186:	699b      	ldr	r3, [r3, #24]
 8000188:	f003 0320 	and.w	r3, r3, #32
 800018c:	60bb      	str	r3, [r7, #8]
 800018e:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000190:	4b39      	ldr	r3, [pc, #228]	; (8000278 <MX_GPIO_Init+0x12c>)
 8000192:	699b      	ldr	r3, [r3, #24]
 8000194:	4a38      	ldr	r2, [pc, #224]	; (8000278 <MX_GPIO_Init+0x12c>)
 8000196:	f043 0304 	orr.w	r3, r3, #4
 800019a:	6193      	str	r3, [r2, #24]
 800019c:	4b36      	ldr	r3, [pc, #216]	; (8000278 <MX_GPIO_Init+0x12c>)
 800019e:	699b      	ldr	r3, [r3, #24]
 80001a0:	f003 0304 	and.w	r3, r3, #4
 80001a4:	607b      	str	r3, [r7, #4]
 80001a6:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80001a8:	4b33      	ldr	r3, [pc, #204]	; (8000278 <MX_GPIO_Init+0x12c>)
 80001aa:	699b      	ldr	r3, [r3, #24]
 80001ac:	4a32      	ldr	r2, [pc, #200]	; (8000278 <MX_GPIO_Init+0x12c>)
 80001ae:	f043 0308 	orr.w	r3, r3, #8
 80001b2:	6193      	str	r3, [r2, #24]
 80001b4:	4b30      	ldr	r3, [pc, #192]	; (8000278 <MX_GPIO_Init+0x12c>)
 80001b6:	699b      	ldr	r3, [r3, #24]
 80001b8:	f003 0308 	and.w	r3, r3, #8
 80001bc:	603b      	str	r3, [r7, #0]
 80001be:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|D12_Pin|D7_Pin|D2_Pin, GPIO_PIN_RESET);
 80001c0:	2200      	movs	r2, #0
 80001c2:	f44f 61ac 	mov.w	r1, #1376	; 0x560
 80001c6:	482d      	ldr	r0, [pc, #180]	; (800027c <MX_GPIO_Init+0x130>)
 80001c8:	f001 f895 	bl	80012f6 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin, GPIO_PIN_RESET);
 80001cc:	2200      	movs	r2, #0
 80001ce:	f44f 6187 	mov.w	r1, #1080	; 0x438
 80001d2:	482b      	ldr	r0, [pc, #172]	; (8000280 <MX_GPIO_Init+0x134>)
 80001d4:	f001 f88f 	bl	80012f6 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 80001d8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80001dc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80001de:	4b29      	ldr	r3, [pc, #164]	; (8000284 <MX_GPIO_Init+0x138>)
 80001e0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80001e2:	2300      	movs	r3, #0
 80001e4:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80001e6:	f107 0310 	add.w	r3, r7, #16
 80001ea:	4619      	mov	r1, r3
 80001ec:	4826      	ldr	r0, [pc, #152]	; (8000288 <MX_GPIO_Init+0x13c>)
 80001ee:	f000 fee7 	bl	8000fc0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin;
 80001f2:	2313      	movs	r3, #19
 80001f4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80001f6:	2300      	movs	r3, #0
 80001f8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80001fa:	2300      	movs	r3, #0
 80001fc:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80001fe:	f107 0310 	add.w	r3, r7, #16
 8000202:	4619      	mov	r1, r3
 8000204:	481d      	ldr	r0, [pc, #116]	; (800027c <MX_GPIO_Init+0x130>)
 8000206:	f000 fedb 	bl	8000fc0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = LD2_Pin|D12_Pin|D7_Pin|D2_Pin;
 800020a:	f44f 63ac 	mov.w	r3, #1376	; 0x560
 800020e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000210:	2301      	movs	r3, #1
 8000212:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000214:	2300      	movs	r3, #0
 8000216:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000218:	2302      	movs	r3, #2
 800021a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800021c:	f107 0310 	add.w	r3, r7, #16
 8000220:	4619      	mov	r1, r3
 8000222:	4816      	ldr	r0, [pc, #88]	; (800027c <MX_GPIO_Init+0x130>)
 8000224:	f000 fecc 	bl	8000fc0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = A3_Pin;
 8000228:	2301      	movs	r3, #1
 800022a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800022c:	2300      	movs	r3, #0
 800022e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000230:	2300      	movs	r3, #0
 8000232:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 8000234:	f107 0310 	add.w	r3, r7, #16
 8000238:	4619      	mov	r1, r3
 800023a:	4811      	ldr	r0, [pc, #68]	; (8000280 <MX_GPIO_Init+0x134>)
 800023c:	f000 fec0 	bl	8000fc0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin;
 8000240:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000244:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000246:	2301      	movs	r3, #1
 8000248:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800024a:	2300      	movs	r3, #0
 800024c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800024e:	2302      	movs	r3, #2
 8000250:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000252:	f107 0310 	add.w	r3, r7, #16
 8000256:	4619      	mov	r1, r3
 8000258:	4809      	ldr	r0, [pc, #36]	; (8000280 <MX_GPIO_Init+0x134>)
 800025a:	f000 feb1 	bl	8000fc0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800025e:	2200      	movs	r2, #0
 8000260:	2100      	movs	r1, #0
 8000262:	2028      	movs	r0, #40	; 0x28
 8000264:	f000 fe75 	bl	8000f52 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000268:	2028      	movs	r0, #40	; 0x28
 800026a:	f000 fe8e 	bl	8000f8a <HAL_NVIC_EnableIRQ>

}
 800026e:	bf00      	nop
 8000270:	3720      	adds	r7, #32
 8000272:	46bd      	mov	sp, r7
 8000274:	bd80      	pop	{r7, pc}
 8000276:	bf00      	nop
 8000278:	40021000 	.word	0x40021000
 800027c:	40010800 	.word	0x40010800
 8000280:	40010c00 	.word	0x40010c00
 8000284:	10110000 	.word	0x10110000
 8000288:	40011000 	.word	0x40011000

0800028c <buttonRead>:
static uint8_t flagForButtonHold[NO_OF_BUTTONS];
//we define counter for automatically increasing the value
//after the button is pressed more than 1 second.
static uint16_t counterForButtonHold[NO_OF_BUTTONS] = {0, 0, 0, 0};

void buttonRead(void){
 800028c:	b580      	push	{r7, lr}
 800028e:	b082      	sub	sp, #8
 8000290:	af00      	add	r7, sp, #0
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000292:	2300      	movs	r3, #0
 8000294:	607b      	str	r3, [r7, #4]
 8000296:	e08e      	b.n	80003b6 <buttonRead+0x12a>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000298:	4a4b      	ldr	r2, [pc, #300]	; (80003c8 <buttonRead+0x13c>)
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4413      	add	r3, r2
 800029e:	7819      	ldrb	r1, [r3, #0]
 80002a0:	4a4a      	ldr	r2, [pc, #296]	; (80003cc <buttonRead+0x140>)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4413      	add	r3, r2
 80002a6:	460a      	mov	r2, r1
 80002a8:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 80002aa:	4a49      	ldr	r2, [pc, #292]	; (80003d0 <buttonRead+0x144>)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4413      	add	r3, r2
 80002b0:	7819      	ldrb	r1, [r3, #0]
 80002b2:	4a45      	ldr	r2, [pc, #276]	; (80003c8 <buttonRead+0x13c>)
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	4413      	add	r3, r2
 80002b8:	460a      	mov	r2, r1
 80002ba:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(buttonPort[i], buttonPin[i]);
 80002bc:	4a45      	ldr	r2, [pc, #276]	; (80003d4 <buttonRead+0x148>)
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80002c4:	4944      	ldr	r1, [pc, #272]	; (80003d8 <buttonRead+0x14c>)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80002cc:	4619      	mov	r1, r3
 80002ce:	4610      	mov	r0, r2
 80002d0:	f000 fffa 	bl	80012c8 <HAL_GPIO_ReadPin>
 80002d4:	4603      	mov	r3, r0
 80002d6:	4619      	mov	r1, r3
 80002d8:	4a3d      	ldr	r2, [pc, #244]	; (80003d0 <buttonRead+0x144>)
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	4413      	add	r3, r2
 80002de:	460a      	mov	r2, r1
 80002e0:	701a      	strb	r2, [r3, #0]
		if((debounceButtonBuffer2[i] == debounceButtonBuffer1[i]) && (debounceButtonBuffer1[i] == debounceButtonBuffer0[i])) {
 80002e2:	4a3a      	ldr	r2, [pc, #232]	; (80003cc <buttonRead+0x140>)
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4413      	add	r3, r2
 80002e8:	781a      	ldrb	r2, [r3, #0]
 80002ea:	4937      	ldr	r1, [pc, #220]	; (80003c8 <buttonRead+0x13c>)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	440b      	add	r3, r1
 80002f0:	781b      	ldrb	r3, [r3, #0]
 80002f2:	429a      	cmp	r2, r3
 80002f4:	d15c      	bne.n	80003b0 <buttonRead+0x124>
 80002f6:	4a34      	ldr	r2, [pc, #208]	; (80003c8 <buttonRead+0x13c>)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4413      	add	r3, r2
 80002fc:	781a      	ldrb	r2, [r3, #0]
 80002fe:	4934      	ldr	r1, [pc, #208]	; (80003d0 <buttonRead+0x144>)
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	440b      	add	r3, r1
 8000304:	781b      	ldrb	r3, [r3, #0]
 8000306:	429a      	cmp	r2, r3
 8000308:	d152      	bne.n	80003b0 <buttonRead+0x124>
			if(buttonBuffer[i] != debounceButtonBuffer0[i]) {
 800030a:	4a34      	ldr	r2, [pc, #208]	; (80003dc <buttonRead+0x150>)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4413      	add	r3, r2
 8000310:	781a      	ldrb	r2, [r3, #0]
 8000312:	492f      	ldr	r1, [pc, #188]	; (80003d0 <buttonRead+0x144>)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	440b      	add	r3, r1
 8000318:	781b      	ldrb	r3, [r3, #0]
 800031a:	429a      	cmp	r2, r3
 800031c:	d02d      	beq.n	800037a <buttonRead+0xee>
				buttonBuffer[i] = debounceButtonBuffer0[i];
 800031e:	4a2c      	ldr	r2, [pc, #176]	; (80003d0 <buttonRead+0x144>)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4413      	add	r3, r2
 8000324:	7819      	ldrb	r1, [r3, #0]
 8000326:	4a2d      	ldr	r2, [pc, #180]	; (80003dc <buttonRead+0x150>)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4413      	add	r3, r2
 800032c:	460a      	mov	r2, r1
 800032e:	701a      	strb	r2, [r3, #0]
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000330:	4a2a      	ldr	r2, [pc, #168]	; (80003dc <buttonRead+0x150>)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4413      	add	r3, r2
 8000336:	781b      	ldrb	r3, [r3, #0]
 8000338:	2b00      	cmp	r3, #0
 800033a:	d118      	bne.n	800036e <buttonRead+0xe2>
					counterForButtonHold[i] = DURATION_FOR_BUTTON_HOLD;
 800033c:	4a28      	ldr	r2, [pc, #160]	; (80003e0 <buttonRead+0x154>)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000344:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
					if(SYSTEM_DELAY > 0) counterForButtonHold[i] /= SYSTEM_DELAY;
 8000348:	4a25      	ldr	r2, [pc, #148]	; (80003e0 <buttonRead+0x154>)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000350:	4a24      	ldr	r2, [pc, #144]	; (80003e4 <buttonRead+0x158>)
 8000352:	fba2 2303 	umull	r2, r3, r2, r3
 8000356:	08db      	lsrs	r3, r3, #3
 8000358:	b299      	uxth	r1, r3
 800035a:	4a21      	ldr	r2, [pc, #132]	; (80003e0 <buttonRead+0x154>)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

					flagForButtonPressed[i] = 1;
 8000362:	4a21      	ldr	r2, [pc, #132]	; (80003e8 <buttonRead+0x15c>)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4413      	add	r3, r2
 8000368:	2201      	movs	r2, #1
 800036a:	701a      	strb	r2, [r3, #0]
 800036c:	e020      	b.n	80003b0 <buttonRead+0x124>
				}
				else {
					flagForButtonHold[i] = 0;
 800036e:	4a1f      	ldr	r2, [pc, #124]	; (80003ec <buttonRead+0x160>)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4413      	add	r3, r2
 8000374:	2200      	movs	r2, #0
 8000376:	701a      	strb	r2, [r3, #0]
 8000378:	e01a      	b.n	80003b0 <buttonRead+0x124>
				}
			}
			else {
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 800037a:	4a18      	ldr	r2, [pc, #96]	; (80003dc <buttonRead+0x150>)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4413      	add	r3, r2
 8000380:	781b      	ldrb	r3, [r3, #0]
 8000382:	2b00      	cmp	r3, #0
 8000384:	d114      	bne.n	80003b0 <buttonRead+0x124>
					counterForButtonHold[i]--;
 8000386:	4a16      	ldr	r2, [pc, #88]	; (80003e0 <buttonRead+0x154>)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800038e:	3b01      	subs	r3, #1
 8000390:	b299      	uxth	r1, r3
 8000392:	4a13      	ldr	r2, [pc, #76]	; (80003e0 <buttonRead+0x154>)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
					if(counterForButtonHold[i] == 0) {
 800039a:	4a11      	ldr	r2, [pc, #68]	; (80003e0 <buttonRead+0x154>)
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80003a2:	2b00      	cmp	r3, #0
 80003a4:	d104      	bne.n	80003b0 <buttonRead+0x124>
						flagForButtonHold[i] = 1;
 80003a6:	4a11      	ldr	r2, [pc, #68]	; (80003ec <buttonRead+0x160>)
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4413      	add	r3, r2
 80003ac:	2201      	movs	r2, #1
 80003ae:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	3301      	adds	r3, #1
 80003b4:	607b      	str	r3, [r7, #4]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	2b03      	cmp	r3, #3
 80003ba:	f77f af6d 	ble.w	8000298 <buttonRead+0xc>
					}
				}
			}
		}
	}
}
 80003be:	bf00      	nop
 80003c0:	bf00      	nop
 80003c2:	3708      	adds	r7, #8
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bd80      	pop	{r7, pc}
 80003c8:	20000020 	.word	0x20000020
 80003cc:	20000024 	.word	0x20000024
 80003d0:	2000001c 	.word	0x2000001c
 80003d4:	20000000 	.word	0x20000000
 80003d8:	20000010 	.word	0x20000010
 80003dc:	20000018 	.word	0x20000018
 80003e0:	2000007c 	.word	0x2000007c
 80003e4:	cccccccd 	.word	0xcccccccd
 80003e8:	20000074 	.word	0x20000074
 80003ec:	20000078 	.word	0x20000078

080003f0 <isButtonPressed>:

int isButtonPressed(int index) {
 80003f0:	b480      	push	{r7}
 80003f2:	b083      	sub	sp, #12
 80003f4:	af00      	add	r7, sp, #0
 80003f6:	6078      	str	r0, [r7, #4]
	if(index < 0 || index > NO_OF_BUTTONS) return 0;
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	2b00      	cmp	r3, #0
 80003fc:	db02      	blt.n	8000404 <isButtonPressed+0x14>
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	2b04      	cmp	r3, #4
 8000402:	dd01      	ble.n	8000408 <isButtonPressed+0x18>
 8000404:	2300      	movs	r3, #0
 8000406:	e00d      	b.n	8000424 <isButtonPressed+0x34>
	if(flagForButtonPressed[index] == 1) {
 8000408:	4a09      	ldr	r2, [pc, #36]	; (8000430 <isButtonPressed+0x40>)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4413      	add	r3, r2
 800040e:	781b      	ldrb	r3, [r3, #0]
 8000410:	2b01      	cmp	r3, #1
 8000412:	d106      	bne.n	8000422 <isButtonPressed+0x32>
		flagForButtonPressed[index] = 0;
 8000414:	4a06      	ldr	r2, [pc, #24]	; (8000430 <isButtonPressed+0x40>)
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4413      	add	r3, r2
 800041a:	2200      	movs	r2, #0
 800041c:	701a      	strb	r2, [r3, #0]
		return 1;
 800041e:	2301      	movs	r3, #1
 8000420:	e000      	b.n	8000424 <isButtonPressed+0x34>
	}
	return 0;
 8000422:	2300      	movs	r3, #0
}
 8000424:	4618      	mov	r0, r3
 8000426:	370c      	adds	r7, #12
 8000428:	46bd      	mov	sp, r7
 800042a:	bc80      	pop	{r7}
 800042c:	4770      	bx	lr
 800042e:	bf00      	nop
 8000430:	20000074 	.word	0x20000074

08000434 <task1>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void task1(void) {
 8000434:	b580      	push	{r7, lr}
 8000436:	af00      	add	r7, sp, #0
	if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 8000438:	2000      	movs	r0, #0
 800043a:	f7ff ffd9 	bl	80003f0 <isButtonPressed>
 800043e:	4603      	mov	r3, r0
 8000440:	2b00      	cmp	r3, #0
 8000442:	d001      	beq.n	8000448 <task1+0x14>
		pedestrianLightBlinkGrn();
 8000444:	f000 f89c 	bl	8000580 <pedestrianLightBlinkGrn>
	}
}
 8000448:	bf00      	nop
 800044a:	bd80      	pop	{r7, pc}

0800044c <task2>:

void task2(void) {
 800044c:	b580      	push	{r7, lr}
 800044e:	af00      	add	r7, sp, #0
	if(isButtonPressed(BUTTON_1)) {
 8000450:	2001      	movs	r0, #1
 8000452:	f7ff ffcd 	bl	80003f0 <isButtonPressed>
 8000456:	4603      	mov	r3, r0
 8000458:	2b00      	cmp	r3, #0
 800045a:	d002      	beq.n	8000462 <task2+0x16>
		trafficLightBlinkYel(TRAFFIC_LIGHT_1);
 800045c:	2000      	movs	r0, #0
 800045e:	f000 fb65 	bl	8000b2c <trafficLightBlinkYel>
	}
}
 8000462:	bf00      	nop
 8000464:	bd80      	pop	{r7, pc}

08000466 <task3>:

void task3(void) {
 8000466:	b580      	push	{r7, lr}
 8000468:	af00      	add	r7, sp, #0
	if(isButtonPressed(BUTTON_2)) {
 800046a:	2002      	movs	r0, #2
 800046c:	f7ff ffc0 	bl	80003f0 <isButtonPressed>
 8000470:	4603      	mov	r3, r0
 8000472:	2b00      	cmp	r3, #0
 8000474:	d002      	beq.n	800047c <task3+0x16>
		trafficLightBlinkRed(TRAFFIC_LIGHT_2);
 8000476:	2001      	movs	r0, #1
 8000478:	f000 fb7e 	bl	8000b78 <trafficLightBlinkRed>
	}
}
 800047c:	bf00      	nop
 800047e:	bd80      	pop	{r7, pc}

08000480 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000480:	b580      	push	{r7, lr}
 8000482:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000484:	f000 fc2c 	bl	8000ce0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000488:	f000 f82a 	bl	80004e0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800048c:	f7ff fe5e 	bl	800014c <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000490:	f000 fb98 	bl	8000bc4 <MX_USART2_UART_Init>
  MX_TIM3_Init();
 8000494:	f000 fad6 	bl	8000a44 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim3);
 8000498:	480c      	ldr	r0, [pc, #48]	; (80004cc <main+0x4c>)
 800049a:	f001 fbe9 	bl	8001c70 <HAL_TIM_Base_Start_IT>

  SCH_Add_Task(&buttonRead, 0, 10);
 800049e:	220a      	movs	r2, #10
 80004a0:	2100      	movs	r1, #0
 80004a2:	480b      	ldr	r0, [pc, #44]	; (80004d0 <main+0x50>)
 80004a4:	f000 f884 	bl	80005b0 <SCH_Add_Task>
  SCH_Add_Task(&task1, 0, 10);
 80004a8:	220a      	movs	r2, #10
 80004aa:	2100      	movs	r1, #0
 80004ac:	4809      	ldr	r0, [pc, #36]	; (80004d4 <main+0x54>)
 80004ae:	f000 f87f 	bl	80005b0 <SCH_Add_Task>
  SCH_Add_Task(&task2, 0, 10);
 80004b2:	220a      	movs	r2, #10
 80004b4:	2100      	movs	r1, #0
 80004b6:	4808      	ldr	r0, [pc, #32]	; (80004d8 <main+0x58>)
 80004b8:	f000 f87a 	bl	80005b0 <SCH_Add_Task>
  SCH_Add_Task(&task3, 0, 10);
 80004bc:	220a      	movs	r2, #10
 80004be:	2100      	movs	r1, #0
 80004c0:	4806      	ldr	r0, [pc, #24]	; (80004dc <main+0x5c>)
 80004c2:	f000 f875 	bl	80005b0 <SCH_Add_Task>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	SCH_Dispatch_Tasks();
 80004c6:	f000 f9ff 	bl	80008c8 <SCH_Dispatch_Tasks>
 80004ca:	e7fc      	b.n	80004c6 <main+0x46>
 80004cc:	200003ac 	.word	0x200003ac
 80004d0:	0800028d 	.word	0x0800028d
 80004d4:	08000435 	.word	0x08000435
 80004d8:	0800044d 	.word	0x0800044d
 80004dc:	08000467 	.word	0x08000467

080004e0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80004e0:	b580      	push	{r7, lr}
 80004e2:	b090      	sub	sp, #64	; 0x40
 80004e4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80004e6:	f107 0318 	add.w	r3, r7, #24
 80004ea:	2228      	movs	r2, #40	; 0x28
 80004ec:	2100      	movs	r1, #0
 80004ee:	4618      	mov	r0, r3
 80004f0:	f002 f868 	bl	80025c4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80004f4:	1d3b      	adds	r3, r7, #4
 80004f6:	2200      	movs	r2, #0
 80004f8:	601a      	str	r2, [r3, #0]
 80004fa:	605a      	str	r2, [r3, #4]
 80004fc:	609a      	str	r2, [r3, #8]
 80004fe:	60da      	str	r2, [r3, #12]
 8000500:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000502:	2302      	movs	r3, #2
 8000504:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000506:	2301      	movs	r3, #1
 8000508:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800050a:	2310      	movs	r3, #16
 800050c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800050e:	2302      	movs	r3, #2
 8000510:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000512:	2300      	movs	r3, #0
 8000514:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000516:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 800051a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800051c:	f107 0318 	add.w	r3, r7, #24
 8000520:	4618      	mov	r0, r3
 8000522:	f000 ff3b 	bl	800139c <HAL_RCC_OscConfig>
 8000526:	4603      	mov	r3, r0
 8000528:	2b00      	cmp	r3, #0
 800052a:	d001      	beq.n	8000530 <SystemClock_Config+0x50>
  {
    Error_Handler();
 800052c:	f000 f823 	bl	8000576 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000530:	230f      	movs	r3, #15
 8000532:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000534:	2302      	movs	r3, #2
 8000536:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000538:	2300      	movs	r3, #0
 800053a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800053c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000540:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000542:	2300      	movs	r3, #0
 8000544:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000546:	1d3b      	adds	r3, r7, #4
 8000548:	2102      	movs	r1, #2
 800054a:	4618      	mov	r0, r3
 800054c:	f001 f9a8 	bl	80018a0 <HAL_RCC_ClockConfig>
 8000550:	4603      	mov	r3, r0
 8000552:	2b00      	cmp	r3, #0
 8000554:	d001      	beq.n	800055a <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000556:	f000 f80e 	bl	8000576 <Error_Handler>
  }
}
 800055a:	bf00      	nop
 800055c:	3740      	adds	r7, #64	; 0x40
 800055e:	46bd      	mov	sp, r7
 8000560:	bd80      	pop	{r7, pc}

08000562 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
int count = 100;
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
{
 8000562:	b580      	push	{r7, lr}
 8000564:	b082      	sub	sp, #8
 8000566:	af00      	add	r7, sp, #0
 8000568:	6078      	str	r0, [r7, #4]
	SCH_Update();
 800056a:	f000 f9e3 	bl	8000934 <SCH_Update>
}
 800056e:	bf00      	nop
 8000570:	3708      	adds	r7, #8
 8000572:	46bd      	mov	sp, r7
 8000574:	bd80      	pop	{r7, pc}

08000576 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000576:	b480      	push	{r7}
 8000578:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800057a:	b672      	cpsid	i
}
 800057c:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800057e:	e7fe      	b.n	800057e <Error_Handler+0x8>

08000580 <pedestrianLightBlinkGrn>:
uint16_t pedestrianLightPin[NUM_OF_PORTS] = {
		D6_Pin,
		D7_Pin
};

void pedestrianLightBlinkGrn(void) {
 8000580:	b580      	push	{r7, lr}
 8000582:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT]);
 8000584:	4b08      	ldr	r3, [pc, #32]	; (80005a8 <pedestrianLightBlinkGrn+0x28>)
 8000586:	685b      	ldr	r3, [r3, #4]
 8000588:	4a08      	ldr	r2, [pc, #32]	; (80005ac <pedestrianLightBlinkGrn+0x2c>)
 800058a:	8852      	ldrh	r2, [r2, #2]
 800058c:	4611      	mov	r1, r2
 800058e:	4618      	mov	r0, r3
 8000590:	f000 fec9 	bl	8001326 <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000594:	4b04      	ldr	r3, [pc, #16]	; (80005a8 <pedestrianLightBlinkGrn+0x28>)
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	4a04      	ldr	r2, [pc, #16]	; (80005ac <pedestrianLightBlinkGrn+0x2c>)
 800059a:	8811      	ldrh	r1, [r2, #0]
 800059c:	2200      	movs	r2, #0
 800059e:	4618      	mov	r0, r3
 80005a0:	f000 fea9 	bl	80012f6 <HAL_GPIO_WritePin>
}
 80005a4:	bf00      	nop
 80005a6:	bd80      	pop	{r7, pc}
 80005a8:	20000028 	.word	0x20000028
 80005ac:	20000030 	.word	0x20000030

080005b0 <SCH_Add_Task>:
		SCH_tasks_G[Index].Period = 0;
		SCH_tasks_G[Index].RunMe = 0;
	}
}

uint32_t SCH_Add_Task(void (* pFunction)(void), uint32_t DELAY, uint32_t PERIOD) {
 80005b0:	b480      	push	{r7}
 80005b2:	b089      	sub	sp, #36	; 0x24
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	60f8      	str	r0, [r7, #12]
 80005b8:	60b9      	str	r1, [r7, #8]
 80005ba:	607a      	str	r2, [r7, #4]
	if(Size == SCH_MAX_TASKS - 1) return SCH_MAX_TASKS;
 80005bc:	4b7b      	ldr	r3, [pc, #492]	; (80007ac <SCH_Add_Task+0x1fc>)
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	2b27      	cmp	r3, #39	; 0x27
 80005c2:	d101      	bne.n	80005c8 <SCH_Add_Task+0x18>
 80005c4:	2328      	movs	r3, #40	; 0x28
 80005c6:	e0ec      	b.n	80007a2 <SCH_Add_Task+0x1f2>

	uint8_t flag = 0;
 80005c8:	2300      	movs	r3, #0
 80005ca:	77fb      	strb	r3, [r7, #31]
	uint32_t Index = 0;
 80005cc:	2300      	movs	r3, #0
 80005ce:	61bb      	str	r3, [r7, #24]
	if(SYSTEM_DELAY > 0) {
		DELAY /= SYSTEM_DELAY;
 80005d0:	68bb      	ldr	r3, [r7, #8]
 80005d2:	4a77      	ldr	r2, [pc, #476]	; (80007b0 <SCH_Add_Task+0x200>)
 80005d4:	fba2 2303 	umull	r2, r3, r2, r3
 80005d8:	08db      	lsrs	r3, r3, #3
 80005da:	60bb      	str	r3, [r7, #8]
	}
	for(; Index < Size && flag == 0; Index++) {
 80005dc:	e031      	b.n	8000642 <SCH_Add_Task+0x92>
		if(DELAY > SCH_tasks_G[Index].Delay) {
 80005de:	4975      	ldr	r1, [pc, #468]	; (80007b4 <SCH_Add_Task+0x204>)
 80005e0:	69ba      	ldr	r2, [r7, #24]
 80005e2:	4613      	mov	r3, r2
 80005e4:	009b      	lsls	r3, r3, #2
 80005e6:	4413      	add	r3, r2
 80005e8:	009b      	lsls	r3, r3, #2
 80005ea:	440b      	add	r3, r1
 80005ec:	3304      	adds	r3, #4
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	68ba      	ldr	r2, [r7, #8]
 80005f2:	429a      	cmp	r2, r3
 80005f4:	d90c      	bls.n	8000610 <SCH_Add_Task+0x60>
			DELAY -= SCH_tasks_G[Index].Delay;
 80005f6:	496f      	ldr	r1, [pc, #444]	; (80007b4 <SCH_Add_Task+0x204>)
 80005f8:	69ba      	ldr	r2, [r7, #24]
 80005fa:	4613      	mov	r3, r2
 80005fc:	009b      	lsls	r3, r3, #2
 80005fe:	4413      	add	r3, r2
 8000600:	009b      	lsls	r3, r3, #2
 8000602:	440b      	add	r3, r1
 8000604:	3304      	adds	r3, #4
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	68ba      	ldr	r2, [r7, #8]
 800060a:	1ad3      	subs	r3, r2, r3
 800060c:	60bb      	str	r3, [r7, #8]
 800060e:	e015      	b.n	800063c <SCH_Add_Task+0x8c>
		}
		else {
			flag = 1;
 8000610:	2301      	movs	r3, #1
 8000612:	77fb      	strb	r3, [r7, #31]
			SCH_tasks_G[Index].Delay -= DELAY;
 8000614:	4967      	ldr	r1, [pc, #412]	; (80007b4 <SCH_Add_Task+0x204>)
 8000616:	69ba      	ldr	r2, [r7, #24]
 8000618:	4613      	mov	r3, r2
 800061a:	009b      	lsls	r3, r3, #2
 800061c:	4413      	add	r3, r2
 800061e:	009b      	lsls	r3, r3, #2
 8000620:	440b      	add	r3, r1
 8000622:	3304      	adds	r3, #4
 8000624:	681a      	ldr	r2, [r3, #0]
 8000626:	68bb      	ldr	r3, [r7, #8]
 8000628:	1ad1      	subs	r1, r2, r3
 800062a:	4862      	ldr	r0, [pc, #392]	; (80007b4 <SCH_Add_Task+0x204>)
 800062c:	69ba      	ldr	r2, [r7, #24]
 800062e:	4613      	mov	r3, r2
 8000630:	009b      	lsls	r3, r3, #2
 8000632:	4413      	add	r3, r2
 8000634:	009b      	lsls	r3, r3, #2
 8000636:	4403      	add	r3, r0
 8000638:	3304      	adds	r3, #4
 800063a:	6019      	str	r1, [r3, #0]
	for(; Index < Size && flag == 0; Index++) {
 800063c:	69bb      	ldr	r3, [r7, #24]
 800063e:	3301      	adds	r3, #1
 8000640:	61bb      	str	r3, [r7, #24]
 8000642:	4b5a      	ldr	r3, [pc, #360]	; (80007ac <SCH_Add_Task+0x1fc>)
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	69ba      	ldr	r2, [r7, #24]
 8000648:	429a      	cmp	r2, r3
 800064a:	d202      	bcs.n	8000652 <SCH_Add_Task+0xa2>
 800064c:	7ffb      	ldrb	r3, [r7, #31]
 800064e:	2b00      	cmp	r3, #0
 8000650:	d0c5      	beq.n	80005de <SCH_Add_Task+0x2e>
		}
	}
	if(flag == 1) {
 8000652:	7ffb      	ldrb	r3, [r7, #31]
 8000654:	2b01      	cmp	r3, #1
 8000656:	d16d      	bne.n	8000734 <SCH_Add_Task+0x184>
		Index -= 1;
 8000658:	69bb      	ldr	r3, [r7, #24]
 800065a:	3b01      	subs	r3, #1
 800065c:	61bb      	str	r3, [r7, #24]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 800065e:	4b53      	ldr	r3, [pc, #332]	; (80007ac <SCH_Add_Task+0x1fc>)
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	617b      	str	r3, [r7, #20]
 8000664:	e062      	b.n	800072c <SCH_Add_Task+0x17c>
			SCH_tasks_G[Temp].pTask = SCH_tasks_G[Temp - 1].pTask;
 8000666:	697b      	ldr	r3, [r7, #20]
 8000668:	1e5a      	subs	r2, r3, #1
 800066a:	4952      	ldr	r1, [pc, #328]	; (80007b4 <SCH_Add_Task+0x204>)
 800066c:	4613      	mov	r3, r2
 800066e:	009b      	lsls	r3, r3, #2
 8000670:	4413      	add	r3, r2
 8000672:	009b      	lsls	r3, r3, #2
 8000674:	440b      	add	r3, r1
 8000676:	6819      	ldr	r1, [r3, #0]
 8000678:	484e      	ldr	r0, [pc, #312]	; (80007b4 <SCH_Add_Task+0x204>)
 800067a:	697a      	ldr	r2, [r7, #20]
 800067c:	4613      	mov	r3, r2
 800067e:	009b      	lsls	r3, r3, #2
 8000680:	4413      	add	r3, r2
 8000682:	009b      	lsls	r3, r3, #2
 8000684:	4403      	add	r3, r0
 8000686:	6019      	str	r1, [r3, #0]
			SCH_tasks_G[Temp].Delay = SCH_tasks_G[Temp - 1].Delay;
 8000688:	697b      	ldr	r3, [r7, #20]
 800068a:	1e5a      	subs	r2, r3, #1
 800068c:	4949      	ldr	r1, [pc, #292]	; (80007b4 <SCH_Add_Task+0x204>)
 800068e:	4613      	mov	r3, r2
 8000690:	009b      	lsls	r3, r3, #2
 8000692:	4413      	add	r3, r2
 8000694:	009b      	lsls	r3, r3, #2
 8000696:	440b      	add	r3, r1
 8000698:	3304      	adds	r3, #4
 800069a:	6819      	ldr	r1, [r3, #0]
 800069c:	4845      	ldr	r0, [pc, #276]	; (80007b4 <SCH_Add_Task+0x204>)
 800069e:	697a      	ldr	r2, [r7, #20]
 80006a0:	4613      	mov	r3, r2
 80006a2:	009b      	lsls	r3, r3, #2
 80006a4:	4413      	add	r3, r2
 80006a6:	009b      	lsls	r3, r3, #2
 80006a8:	4403      	add	r3, r0
 80006aa:	3304      	adds	r3, #4
 80006ac:	6019      	str	r1, [r3, #0]
			SCH_tasks_G[Temp].Period = SCH_tasks_G[Temp - 1].Period;
 80006ae:	697b      	ldr	r3, [r7, #20]
 80006b0:	1e5a      	subs	r2, r3, #1
 80006b2:	4940      	ldr	r1, [pc, #256]	; (80007b4 <SCH_Add_Task+0x204>)
 80006b4:	4613      	mov	r3, r2
 80006b6:	009b      	lsls	r3, r3, #2
 80006b8:	4413      	add	r3, r2
 80006ba:	009b      	lsls	r3, r3, #2
 80006bc:	440b      	add	r3, r1
 80006be:	3308      	adds	r3, #8
 80006c0:	6819      	ldr	r1, [r3, #0]
 80006c2:	483c      	ldr	r0, [pc, #240]	; (80007b4 <SCH_Add_Task+0x204>)
 80006c4:	697a      	ldr	r2, [r7, #20]
 80006c6:	4613      	mov	r3, r2
 80006c8:	009b      	lsls	r3, r3, #2
 80006ca:	4413      	add	r3, r2
 80006cc:	009b      	lsls	r3, r3, #2
 80006ce:	4403      	add	r3, r0
 80006d0:	3308      	adds	r3, #8
 80006d2:	6019      	str	r1, [r3, #0]
			SCH_tasks_G[Temp].RunMe = SCH_tasks_G[Temp - 1].RunMe;
 80006d4:	697b      	ldr	r3, [r7, #20]
 80006d6:	1e5a      	subs	r2, r3, #1
 80006d8:	4936      	ldr	r1, [pc, #216]	; (80007b4 <SCH_Add_Task+0x204>)
 80006da:	4613      	mov	r3, r2
 80006dc:	009b      	lsls	r3, r3, #2
 80006de:	4413      	add	r3, r2
 80006e0:	009b      	lsls	r3, r3, #2
 80006e2:	440b      	add	r3, r1
 80006e4:	330c      	adds	r3, #12
 80006e6:	7818      	ldrb	r0, [r3, #0]
 80006e8:	4932      	ldr	r1, [pc, #200]	; (80007b4 <SCH_Add_Task+0x204>)
 80006ea:	697a      	ldr	r2, [r7, #20]
 80006ec:	4613      	mov	r3, r2
 80006ee:	009b      	lsls	r3, r3, #2
 80006f0:	4413      	add	r3, r2
 80006f2:	009b      	lsls	r3, r3, #2
 80006f4:	440b      	add	r3, r1
 80006f6:	330c      	adds	r3, #12
 80006f8:	4602      	mov	r2, r0
 80006fa:	701a      	strb	r2, [r3, #0]
			SCH_tasks_G[Temp].TaskID = SCH_tasks_G[Temp - 1].RunMe + 1;
 80006fc:	697b      	ldr	r3, [r7, #20]
 80006fe:	1e5a      	subs	r2, r3, #1
 8000700:	492c      	ldr	r1, [pc, #176]	; (80007b4 <SCH_Add_Task+0x204>)
 8000702:	4613      	mov	r3, r2
 8000704:	009b      	lsls	r3, r3, #2
 8000706:	4413      	add	r3, r2
 8000708:	009b      	lsls	r3, r3, #2
 800070a:	440b      	add	r3, r1
 800070c:	330c      	adds	r3, #12
 800070e:	781b      	ldrb	r3, [r3, #0]
 8000710:	3301      	adds	r3, #1
 8000712:	4618      	mov	r0, r3
 8000714:	4927      	ldr	r1, [pc, #156]	; (80007b4 <SCH_Add_Task+0x204>)
 8000716:	697a      	ldr	r2, [r7, #20]
 8000718:	4613      	mov	r3, r2
 800071a:	009b      	lsls	r3, r3, #2
 800071c:	4413      	add	r3, r2
 800071e:	009b      	lsls	r3, r3, #2
 8000720:	440b      	add	r3, r1
 8000722:	3310      	adds	r3, #16
 8000724:	6018      	str	r0, [r3, #0]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 8000726:	697b      	ldr	r3, [r7, #20]
 8000728:	3b01      	subs	r3, #1
 800072a:	617b      	str	r3, [r7, #20]
 800072c:	697a      	ldr	r2, [r7, #20]
 800072e:	69bb      	ldr	r3, [r7, #24]
 8000730:	429a      	cmp	r2, r3
 8000732:	d898      	bhi.n	8000666 <SCH_Add_Task+0xb6>
		}
	}
	SCH_tasks_G[Index].pTask = pFunction;
 8000734:	491f      	ldr	r1, [pc, #124]	; (80007b4 <SCH_Add_Task+0x204>)
 8000736:	69ba      	ldr	r2, [r7, #24]
 8000738:	4613      	mov	r3, r2
 800073a:	009b      	lsls	r3, r3, #2
 800073c:	4413      	add	r3, r2
 800073e:	009b      	lsls	r3, r3, #2
 8000740:	440b      	add	r3, r1
 8000742:	68fa      	ldr	r2, [r7, #12]
 8000744:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Delay = DELAY;
 8000746:	491b      	ldr	r1, [pc, #108]	; (80007b4 <SCH_Add_Task+0x204>)
 8000748:	69ba      	ldr	r2, [r7, #24]
 800074a:	4613      	mov	r3, r2
 800074c:	009b      	lsls	r3, r3, #2
 800074e:	4413      	add	r3, r2
 8000750:	009b      	lsls	r3, r3, #2
 8000752:	440b      	add	r3, r1
 8000754:	3304      	adds	r3, #4
 8000756:	68ba      	ldr	r2, [r7, #8]
 8000758:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Period = PERIOD;
 800075a:	4916      	ldr	r1, [pc, #88]	; (80007b4 <SCH_Add_Task+0x204>)
 800075c:	69ba      	ldr	r2, [r7, #24]
 800075e:	4613      	mov	r3, r2
 8000760:	009b      	lsls	r3, r3, #2
 8000762:	4413      	add	r3, r2
 8000764:	009b      	lsls	r3, r3, #2
 8000766:	440b      	add	r3, r1
 8000768:	3308      	adds	r3, #8
 800076a:	687a      	ldr	r2, [r7, #4]
 800076c:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].RunMe = 0;
 800076e:	4911      	ldr	r1, [pc, #68]	; (80007b4 <SCH_Add_Task+0x204>)
 8000770:	69ba      	ldr	r2, [r7, #24]
 8000772:	4613      	mov	r3, r2
 8000774:	009b      	lsls	r3, r3, #2
 8000776:	4413      	add	r3, r2
 8000778:	009b      	lsls	r3, r3, #2
 800077a:	440b      	add	r3, r1
 800077c:	330c      	adds	r3, #12
 800077e:	2200      	movs	r2, #0
 8000780:	701a      	strb	r2, [r3, #0]
	SCH_tasks_G[Index].TaskID = Index;
 8000782:	490c      	ldr	r1, [pc, #48]	; (80007b4 <SCH_Add_Task+0x204>)
 8000784:	69ba      	ldr	r2, [r7, #24]
 8000786:	4613      	mov	r3, r2
 8000788:	009b      	lsls	r3, r3, #2
 800078a:	4413      	add	r3, r2
 800078c:	009b      	lsls	r3, r3, #2
 800078e:	440b      	add	r3, r1
 8000790:	3310      	adds	r3, #16
 8000792:	69ba      	ldr	r2, [r7, #24]
 8000794:	601a      	str	r2, [r3, #0]

	Size += 1;
 8000796:	4b05      	ldr	r3, [pc, #20]	; (80007ac <SCH_Add_Task+0x1fc>)
 8000798:	681b      	ldr	r3, [r3, #0]
 800079a:	3301      	adds	r3, #1
 800079c:	4a03      	ldr	r2, [pc, #12]	; (80007ac <SCH_Add_Task+0x1fc>)
 800079e:	6013      	str	r3, [r2, #0]

	return Index;
 80007a0:	69bb      	ldr	r3, [r7, #24]
}
 80007a2:	4618      	mov	r0, r3
 80007a4:	3724      	adds	r7, #36	; 0x24
 80007a6:	46bd      	mov	sp, r7
 80007a8:	bc80      	pop	{r7}
 80007aa:	4770      	bx	lr
 80007ac:	200003a8 	.word	0x200003a8
 80007b0:	cccccccd 	.word	0xcccccccd
 80007b4:	20000084 	.word	0x20000084

080007b8 <SCH_Delete_Task>:

void SCH_Delete_Task(uint32_t TASK_INDEX) {
 80007b8:	b480      	push	{r7}
 80007ba:	b085      	sub	sp, #20
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 80007c0:	493f      	ldr	r1, [pc, #252]	; (80008c0 <SCH_Delete_Task+0x108>)
 80007c2:	687a      	ldr	r2, [r7, #4]
 80007c4:	4613      	mov	r3, r2
 80007c6:	009b      	lsls	r3, r3, #2
 80007c8:	4413      	add	r3, r2
 80007ca:	009b      	lsls	r3, r3, #2
 80007cc:	440b      	add	r3, r1
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	2b00      	cmp	r3, #0
 80007d2:	d070      	beq.n	80008b6 <SCH_Delete_Task+0xfe>

	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	60fb      	str	r3, [r7, #12]
 80007d8:	e061      	b.n	800089e <SCH_Delete_Task+0xe6>
		SCH_tasks_G[Temp].pTask = SCH_tasks_G[Temp + 1].pTask;
 80007da:	68fb      	ldr	r3, [r7, #12]
 80007dc:	1c5a      	adds	r2, r3, #1
 80007de:	4938      	ldr	r1, [pc, #224]	; (80008c0 <SCH_Delete_Task+0x108>)
 80007e0:	4613      	mov	r3, r2
 80007e2:	009b      	lsls	r3, r3, #2
 80007e4:	4413      	add	r3, r2
 80007e6:	009b      	lsls	r3, r3, #2
 80007e8:	440b      	add	r3, r1
 80007ea:	6819      	ldr	r1, [r3, #0]
 80007ec:	4834      	ldr	r0, [pc, #208]	; (80008c0 <SCH_Delete_Task+0x108>)
 80007ee:	68fa      	ldr	r2, [r7, #12]
 80007f0:	4613      	mov	r3, r2
 80007f2:	009b      	lsls	r3, r3, #2
 80007f4:	4413      	add	r3, r2
 80007f6:	009b      	lsls	r3, r3, #2
 80007f8:	4403      	add	r3, r0
 80007fa:	6019      	str	r1, [r3, #0]
		SCH_tasks_G[Temp].Delay = SCH_tasks_G[Temp + 1].Delay;
 80007fc:	68fb      	ldr	r3, [r7, #12]
 80007fe:	1c5a      	adds	r2, r3, #1
 8000800:	492f      	ldr	r1, [pc, #188]	; (80008c0 <SCH_Delete_Task+0x108>)
 8000802:	4613      	mov	r3, r2
 8000804:	009b      	lsls	r3, r3, #2
 8000806:	4413      	add	r3, r2
 8000808:	009b      	lsls	r3, r3, #2
 800080a:	440b      	add	r3, r1
 800080c:	3304      	adds	r3, #4
 800080e:	6819      	ldr	r1, [r3, #0]
 8000810:	482b      	ldr	r0, [pc, #172]	; (80008c0 <SCH_Delete_Task+0x108>)
 8000812:	68fa      	ldr	r2, [r7, #12]
 8000814:	4613      	mov	r3, r2
 8000816:	009b      	lsls	r3, r3, #2
 8000818:	4413      	add	r3, r2
 800081a:	009b      	lsls	r3, r3, #2
 800081c:	4403      	add	r3, r0
 800081e:	3304      	adds	r3, #4
 8000820:	6019      	str	r1, [r3, #0]
		SCH_tasks_G[Temp].Period = SCH_tasks_G[Temp + 1].Period;
 8000822:	68fb      	ldr	r3, [r7, #12]
 8000824:	1c5a      	adds	r2, r3, #1
 8000826:	4926      	ldr	r1, [pc, #152]	; (80008c0 <SCH_Delete_Task+0x108>)
 8000828:	4613      	mov	r3, r2
 800082a:	009b      	lsls	r3, r3, #2
 800082c:	4413      	add	r3, r2
 800082e:	009b      	lsls	r3, r3, #2
 8000830:	440b      	add	r3, r1
 8000832:	3308      	adds	r3, #8
 8000834:	6819      	ldr	r1, [r3, #0]
 8000836:	4822      	ldr	r0, [pc, #136]	; (80008c0 <SCH_Delete_Task+0x108>)
 8000838:	68fa      	ldr	r2, [r7, #12]
 800083a:	4613      	mov	r3, r2
 800083c:	009b      	lsls	r3, r3, #2
 800083e:	4413      	add	r3, r2
 8000840:	009b      	lsls	r3, r3, #2
 8000842:	4403      	add	r3, r0
 8000844:	3308      	adds	r3, #8
 8000846:	6019      	str	r1, [r3, #0]
		SCH_tasks_G[Temp].RunMe = SCH_tasks_G[Temp + 1].RunMe;
 8000848:	68fb      	ldr	r3, [r7, #12]
 800084a:	1c5a      	adds	r2, r3, #1
 800084c:	491c      	ldr	r1, [pc, #112]	; (80008c0 <SCH_Delete_Task+0x108>)
 800084e:	4613      	mov	r3, r2
 8000850:	009b      	lsls	r3, r3, #2
 8000852:	4413      	add	r3, r2
 8000854:	009b      	lsls	r3, r3, #2
 8000856:	440b      	add	r3, r1
 8000858:	330c      	adds	r3, #12
 800085a:	7818      	ldrb	r0, [r3, #0]
 800085c:	4918      	ldr	r1, [pc, #96]	; (80008c0 <SCH_Delete_Task+0x108>)
 800085e:	68fa      	ldr	r2, [r7, #12]
 8000860:	4613      	mov	r3, r2
 8000862:	009b      	lsls	r3, r3, #2
 8000864:	4413      	add	r3, r2
 8000866:	009b      	lsls	r3, r3, #2
 8000868:	440b      	add	r3, r1
 800086a:	330c      	adds	r3, #12
 800086c:	4602      	mov	r2, r0
 800086e:	701a      	strb	r2, [r3, #0]
		SCH_tasks_G[Temp].TaskID = SCH_tasks_G[Temp + 1].TaskID - 1;
 8000870:	68fb      	ldr	r3, [r7, #12]
 8000872:	1c5a      	adds	r2, r3, #1
 8000874:	4912      	ldr	r1, [pc, #72]	; (80008c0 <SCH_Delete_Task+0x108>)
 8000876:	4613      	mov	r3, r2
 8000878:	009b      	lsls	r3, r3, #2
 800087a:	4413      	add	r3, r2
 800087c:	009b      	lsls	r3, r3, #2
 800087e:	440b      	add	r3, r1
 8000880:	3310      	adds	r3, #16
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	1e59      	subs	r1, r3, #1
 8000886:	480e      	ldr	r0, [pc, #56]	; (80008c0 <SCH_Delete_Task+0x108>)
 8000888:	68fa      	ldr	r2, [r7, #12]
 800088a:	4613      	mov	r3, r2
 800088c:	009b      	lsls	r3, r3, #2
 800088e:	4413      	add	r3, r2
 8000890:	009b      	lsls	r3, r3, #2
 8000892:	4403      	add	r3, r0
 8000894:	3310      	adds	r3, #16
 8000896:	6019      	str	r1, [r3, #0]
	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 8000898:	68fb      	ldr	r3, [r7, #12]
 800089a:	3301      	adds	r3, #1
 800089c:	60fb      	str	r3, [r7, #12]
 800089e:	4b09      	ldr	r3, [pc, #36]	; (80008c4 <SCH_Delete_Task+0x10c>)
 80008a0:	681b      	ldr	r3, [r3, #0]
 80008a2:	3b01      	subs	r3, #1
 80008a4:	68fa      	ldr	r2, [r7, #12]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	d397      	bcc.n	80007da <SCH_Delete_Task+0x22>
	}

	Size -= 1;
 80008aa:	4b06      	ldr	r3, [pc, #24]	; (80008c4 <SCH_Delete_Task+0x10c>)
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	3b01      	subs	r3, #1
 80008b0:	4a04      	ldr	r2, [pc, #16]	; (80008c4 <SCH_Delete_Task+0x10c>)
 80008b2:	6013      	str	r3, [r2, #0]
 80008b4:	e000      	b.n	80008b8 <SCH_Delete_Task+0x100>
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 80008b6:	bf00      	nop
}
 80008b8:	3714      	adds	r7, #20
 80008ba:	46bd      	mov	sp, r7
 80008bc:	bc80      	pop	{r7}
 80008be:	4770      	bx	lr
 80008c0:	20000084 	.word	0x20000084
 80008c4:	200003a8 	.word	0x200003a8

080008c8 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void) {
 80008c8:	b598      	push	{r3, r4, r7, lr}
 80008ca:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[0].RunMe == 1) {
 80008cc:	4b17      	ldr	r3, [pc, #92]	; (800092c <SCH_Dispatch_Tasks+0x64>)
 80008ce:	7b1b      	ldrb	r3, [r3, #12]
 80008d0:	2b01      	cmp	r3, #1
 80008d2:	d129      	bne.n	8000928 <SCH_Dispatch_Tasks+0x60>
		(*SCH_tasks_G[0].pTask)();
 80008d4:	4b15      	ldr	r3, [pc, #84]	; (800092c <SCH_Dispatch_Tasks+0x64>)
 80008d6:	681b      	ldr	r3, [r3, #0]
 80008d8:	4798      	blx	r3

		if(SCH_tasks_G[0].Period > 0) {
 80008da:	4b14      	ldr	r3, [pc, #80]	; (800092c <SCH_Dispatch_Tasks+0x64>)
 80008dc:	689b      	ldr	r3, [r3, #8]
 80008de:	2b00      	cmp	r3, #0
 80008e0:	d01f      	beq.n	8000922 <SCH_Dispatch_Tasks+0x5a>
			SCH_Add_Task(SCH_tasks_G[Current].pTask, SCH_tasks_G[Current].Period, SCH_tasks_G[Current].Period);
 80008e2:	4b13      	ldr	r3, [pc, #76]	; (8000930 <SCH_Dispatch_Tasks+0x68>)
 80008e4:	681a      	ldr	r2, [r3, #0]
 80008e6:	4911      	ldr	r1, [pc, #68]	; (800092c <SCH_Dispatch_Tasks+0x64>)
 80008e8:	4613      	mov	r3, r2
 80008ea:	009b      	lsls	r3, r3, #2
 80008ec:	4413      	add	r3, r2
 80008ee:	009b      	lsls	r3, r3, #2
 80008f0:	440b      	add	r3, r1
 80008f2:	6818      	ldr	r0, [r3, #0]
 80008f4:	4b0e      	ldr	r3, [pc, #56]	; (8000930 <SCH_Dispatch_Tasks+0x68>)
 80008f6:	681a      	ldr	r2, [r3, #0]
 80008f8:	490c      	ldr	r1, [pc, #48]	; (800092c <SCH_Dispatch_Tasks+0x64>)
 80008fa:	4613      	mov	r3, r2
 80008fc:	009b      	lsls	r3, r3, #2
 80008fe:	4413      	add	r3, r2
 8000900:	009b      	lsls	r3, r3, #2
 8000902:	440b      	add	r3, r1
 8000904:	3308      	adds	r3, #8
 8000906:	6819      	ldr	r1, [r3, #0]
 8000908:	4b09      	ldr	r3, [pc, #36]	; (8000930 <SCH_Dispatch_Tasks+0x68>)
 800090a:	681a      	ldr	r2, [r3, #0]
 800090c:	4c07      	ldr	r4, [pc, #28]	; (800092c <SCH_Dispatch_Tasks+0x64>)
 800090e:	4613      	mov	r3, r2
 8000910:	009b      	lsls	r3, r3, #2
 8000912:	4413      	add	r3, r2
 8000914:	009b      	lsls	r3, r3, #2
 8000916:	4423      	add	r3, r4
 8000918:	3308      	adds	r3, #8
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	461a      	mov	r2, r3
 800091e:	f7ff fe47 	bl	80005b0 <SCH_Add_Task>
		}

		SCH_Delete_Task(0);
 8000922:	2000      	movs	r0, #0
 8000924:	f7ff ff48 	bl	80007b8 <SCH_Delete_Task>
	}
}
 8000928:	bf00      	nop
 800092a:	bd98      	pop	{r3, r4, r7, pc}
 800092c:	20000084 	.word	0x20000084
 8000930:	200003a4 	.word	0x200003a4

08000934 <SCH_Update>:

void SCH_Update(void) {
 8000934:	b480      	push	{r7}
 8000936:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[0].Delay == 0) {
 8000938:	4b08      	ldr	r3, [pc, #32]	; (800095c <SCH_Update+0x28>)
 800093a:	685b      	ldr	r3, [r3, #4]
 800093c:	2b00      	cmp	r3, #0
 800093e:	d103      	bne.n	8000948 <SCH_Update+0x14>
		SCH_tasks_G[0].RunMe = 1;
 8000940:	4b06      	ldr	r3, [pc, #24]	; (800095c <SCH_Update+0x28>)
 8000942:	2201      	movs	r2, #1
 8000944:	731a      	strb	r2, [r3, #12]
	}
	else {
		SCH_tasks_G[0].Delay--;
	}
}
 8000946:	e004      	b.n	8000952 <SCH_Update+0x1e>
		SCH_tasks_G[0].Delay--;
 8000948:	4b04      	ldr	r3, [pc, #16]	; (800095c <SCH_Update+0x28>)
 800094a:	685b      	ldr	r3, [r3, #4]
 800094c:	3b01      	subs	r3, #1
 800094e:	4a03      	ldr	r2, [pc, #12]	; (800095c <SCH_Update+0x28>)
 8000950:	6053      	str	r3, [r2, #4]
}
 8000952:	bf00      	nop
 8000954:	46bd      	mov	sp, r7
 8000956:	bc80      	pop	{r7}
 8000958:	4770      	bx	lr
 800095a:	bf00      	nop
 800095c:	20000084 	.word	0x20000084

08000960 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000960:	b480      	push	{r7}
 8000962:	b085      	sub	sp, #20
 8000964:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000966:	4b15      	ldr	r3, [pc, #84]	; (80009bc <HAL_MspInit+0x5c>)
 8000968:	699b      	ldr	r3, [r3, #24]
 800096a:	4a14      	ldr	r2, [pc, #80]	; (80009bc <HAL_MspInit+0x5c>)
 800096c:	f043 0301 	orr.w	r3, r3, #1
 8000970:	6193      	str	r3, [r2, #24]
 8000972:	4b12      	ldr	r3, [pc, #72]	; (80009bc <HAL_MspInit+0x5c>)
 8000974:	699b      	ldr	r3, [r3, #24]
 8000976:	f003 0301 	and.w	r3, r3, #1
 800097a:	60bb      	str	r3, [r7, #8]
 800097c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800097e:	4b0f      	ldr	r3, [pc, #60]	; (80009bc <HAL_MspInit+0x5c>)
 8000980:	69db      	ldr	r3, [r3, #28]
 8000982:	4a0e      	ldr	r2, [pc, #56]	; (80009bc <HAL_MspInit+0x5c>)
 8000984:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000988:	61d3      	str	r3, [r2, #28]
 800098a:	4b0c      	ldr	r3, [pc, #48]	; (80009bc <HAL_MspInit+0x5c>)
 800098c:	69db      	ldr	r3, [r3, #28]
 800098e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000992:	607b      	str	r3, [r7, #4]
 8000994:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000996:	4b0a      	ldr	r3, [pc, #40]	; (80009c0 <HAL_MspInit+0x60>)
 8000998:	685b      	ldr	r3, [r3, #4]
 800099a:	60fb      	str	r3, [r7, #12]
 800099c:	68fb      	ldr	r3, [r7, #12]
 800099e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80009a2:	60fb      	str	r3, [r7, #12]
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80009aa:	60fb      	str	r3, [r7, #12]
 80009ac:	4a04      	ldr	r2, [pc, #16]	; (80009c0 <HAL_MspInit+0x60>)
 80009ae:	68fb      	ldr	r3, [r7, #12]
 80009b0:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80009b2:	bf00      	nop
 80009b4:	3714      	adds	r7, #20
 80009b6:	46bd      	mov	sp, r7
 80009b8:	bc80      	pop	{r7}
 80009ba:	4770      	bx	lr
 80009bc:	40021000 	.word	0x40021000
 80009c0:	40010000 	.word	0x40010000

080009c4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80009c4:	b480      	push	{r7}
 80009c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80009c8:	e7fe      	b.n	80009c8 <NMI_Handler+0x4>

080009ca <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80009ca:	b480      	push	{r7}
 80009cc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80009ce:	e7fe      	b.n	80009ce <HardFault_Handler+0x4>

080009d0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80009d0:	b480      	push	{r7}
 80009d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80009d4:	e7fe      	b.n	80009d4 <MemManage_Handler+0x4>

080009d6 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80009d6:	b480      	push	{r7}
 80009d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80009da:	e7fe      	b.n	80009da <BusFault_Handler+0x4>

080009dc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80009dc:	b480      	push	{r7}
 80009de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80009e0:	e7fe      	b.n	80009e0 <UsageFault_Handler+0x4>

080009e2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80009e2:	b480      	push	{r7}
 80009e4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80009e6:	bf00      	nop
 80009e8:	46bd      	mov	sp, r7
 80009ea:	bc80      	pop	{r7}
 80009ec:	4770      	bx	lr

080009ee <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80009ee:	b480      	push	{r7}
 80009f0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80009f2:	bf00      	nop
 80009f4:	46bd      	mov	sp, r7
 80009f6:	bc80      	pop	{r7}
 80009f8:	4770      	bx	lr

080009fa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80009fa:	b480      	push	{r7}
 80009fc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80009fe:	bf00      	nop
 8000a00:	46bd      	mov	sp, r7
 8000a02:	bc80      	pop	{r7}
 8000a04:	4770      	bx	lr

08000a06 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000a06:	b580      	push	{r7, lr}
 8000a08:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000a0a:	f000 f9af 	bl	8000d6c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000a0e:	bf00      	nop
 8000a10:	bd80      	pop	{r7, pc}
	...

08000a14 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8000a14:	b580      	push	{r7, lr}
 8000a16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8000a18:	4802      	ldr	r0, [pc, #8]	; (8000a24 <TIM3_IRQHandler+0x10>)
 8000a1a:	f001 f97b 	bl	8001d14 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8000a1e:	bf00      	nop
 8000a20:	bd80      	pop	{r7, pc}
 8000a22:	bf00      	nop
 8000a24:	200003ac 	.word	0x200003ac

08000a28 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8000a28:	b580      	push	{r7, lr}
 8000a2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8000a2c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8000a30:	f000 fc92 	bl	8001358 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8000a34:	bf00      	nop
 8000a36:	bd80      	pop	{r7, pc}

08000a38 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000a38:	b480      	push	{r7}
 8000a3a:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000a3c:	bf00      	nop
 8000a3e:	46bd      	mov	sp, r7
 8000a40:	bc80      	pop	{r7}
 8000a42:	4770      	bx	lr

08000a44 <MX_TIM3_Init>:

TIM_HandleTypeDef htim3;

/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8000a44:	b580      	push	{r7, lr}
 8000a46:	b086      	sub	sp, #24
 8000a48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000a4a:	f107 0308 	add.w	r3, r7, #8
 8000a4e:	2200      	movs	r2, #0
 8000a50:	601a      	str	r2, [r3, #0]
 8000a52:	605a      	str	r2, [r3, #4]
 8000a54:	609a      	str	r2, [r3, #8]
 8000a56:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000a58:	463b      	mov	r3, r7
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	601a      	str	r2, [r3, #0]
 8000a5e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000a60:	4b1d      	ldr	r3, [pc, #116]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a62:	4a1e      	ldr	r2, [pc, #120]	; (8000adc <MX_TIM3_Init+0x98>)
 8000a64:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63999;
 8000a66:	4b1c      	ldr	r3, [pc, #112]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a68:	f64f 12ff 	movw	r2, #63999	; 0xf9ff
 8000a6c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000a6e:	4b1a      	ldr	r3, [pc, #104]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a70:	2200      	movs	r2, #0
 8000a72:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 9;
 8000a74:	4b18      	ldr	r3, [pc, #96]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a76:	2209      	movs	r2, #9
 8000a78:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000a7a:	4b17      	ldr	r3, [pc, #92]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000a80:	4b15      	ldr	r3, [pc, #84]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a82:	2200      	movs	r2, #0
 8000a84:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000a86:	4814      	ldr	r0, [pc, #80]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000a88:	f001 f8a2 	bl	8001bd0 <HAL_TIM_Base_Init>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d001      	beq.n	8000a96 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 8000a92:	f7ff fd70 	bl	8000576 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000a96:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000a9a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000a9c:	f107 0308 	add.w	r3, r7, #8
 8000aa0:	4619      	mov	r1, r3
 8000aa2:	480d      	ldr	r0, [pc, #52]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000aa4:	f001 fa3e 	bl	8001f24 <HAL_TIM_ConfigClockSource>
 8000aa8:	4603      	mov	r3, r0
 8000aaa:	2b00      	cmp	r3, #0
 8000aac:	d001      	beq.n	8000ab2 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 8000aae:	f7ff fd62 	bl	8000576 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000ab2:	2300      	movs	r3, #0
 8000ab4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000aba:	463b      	mov	r3, r7
 8000abc:	4619      	mov	r1, r3
 8000abe:	4806      	ldr	r0, [pc, #24]	; (8000ad8 <MX_TIM3_Init+0x94>)
 8000ac0:	f001 fc10 	bl	80022e4 <HAL_TIMEx_MasterConfigSynchronization>
 8000ac4:	4603      	mov	r3, r0
 8000ac6:	2b00      	cmp	r3, #0
 8000ac8:	d001      	beq.n	8000ace <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 8000aca:	f7ff fd54 	bl	8000576 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8000ace:	bf00      	nop
 8000ad0:	3718      	adds	r7, #24
 8000ad2:	46bd      	mov	sp, r7
 8000ad4:	bd80      	pop	{r7, pc}
 8000ad6:	bf00      	nop
 8000ad8:	200003ac 	.word	0x200003ac
 8000adc:	40000400 	.word	0x40000400

08000ae0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8000ae0:	b580      	push	{r7, lr}
 8000ae2:	b084      	sub	sp, #16
 8000ae4:	af00      	add	r7, sp, #0
 8000ae6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM3)
 8000ae8:	687b      	ldr	r3, [r7, #4]
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	4a0d      	ldr	r2, [pc, #52]	; (8000b24 <HAL_TIM_Base_MspInit+0x44>)
 8000aee:	4293      	cmp	r3, r2
 8000af0:	d113      	bne.n	8000b1a <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8000af2:	4b0d      	ldr	r3, [pc, #52]	; (8000b28 <HAL_TIM_Base_MspInit+0x48>)
 8000af4:	69db      	ldr	r3, [r3, #28]
 8000af6:	4a0c      	ldr	r2, [pc, #48]	; (8000b28 <HAL_TIM_Base_MspInit+0x48>)
 8000af8:	f043 0302 	orr.w	r3, r3, #2
 8000afc:	61d3      	str	r3, [r2, #28]
 8000afe:	4b0a      	ldr	r3, [pc, #40]	; (8000b28 <HAL_TIM_Base_MspInit+0x48>)
 8000b00:	69db      	ldr	r3, [r3, #28]
 8000b02:	f003 0302 	and.w	r3, r3, #2
 8000b06:	60fb      	str	r3, [r7, #12]
 8000b08:	68fb      	ldr	r3, [r7, #12]

    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	2100      	movs	r1, #0
 8000b0e:	201d      	movs	r0, #29
 8000b10:	f000 fa1f 	bl	8000f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8000b14:	201d      	movs	r0, #29
 8000b16:	f000 fa38 	bl	8000f8a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 8000b1a:	bf00      	nop
 8000b1c:	3710      	adds	r7, #16
 8000b1e:	46bd      	mov	sp, r7
 8000b20:	bd80      	pop	{r7, pc}
 8000b22:	bf00      	nop
 8000b24:	40000400 	.word	0x40000400
 8000b28:	40021000 	.word	0x40021000

08000b2c <trafficLightBlinkYel>:
void trafficLightBlinkGrn(int index) {
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
}

void trafficLightBlinkYel(int index) {
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	b082      	sub	sp, #8
 8000b30:	af00      	add	r7, sp, #0
 8000b32:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 8000b34:	4a0e      	ldr	r2, [pc, #56]	; (8000b70 <trafficLightBlinkYel+0x44>)
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	00db      	lsls	r3, r3, #3
 8000b3a:	4413      	add	r3, r2
 8000b3c:	685a      	ldr	r2, [r3, #4]
 8000b3e:	490d      	ldr	r1, [pc, #52]	; (8000b74 <trafficLightBlinkYel+0x48>)
 8000b40:	687b      	ldr	r3, [r7, #4]
 8000b42:	009b      	lsls	r3, r3, #2
 8000b44:	440b      	add	r3, r1
 8000b46:	885b      	ldrh	r3, [r3, #2]
 8000b48:	4619      	mov	r1, r3
 8000b4a:	4610      	mov	r0, r2
 8000b4c:	f000 fbeb 	bl	8001326 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
 8000b50:	4a07      	ldr	r2, [pc, #28]	; (8000b70 <trafficLightBlinkYel+0x44>)
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8000b58:	4906      	ldr	r1, [pc, #24]	; (8000b74 <trafficLightBlinkYel+0x48>)
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	f831 3023 	ldrh.w	r3, [r1, r3, lsl #2]
 8000b60:	4619      	mov	r1, r3
 8000b62:	4610      	mov	r0, r2
 8000b64:	f000 fbdf 	bl	8001326 <HAL_GPIO_TogglePin>
}
 8000b68:	bf00      	nop
 8000b6a:	3708      	adds	r7, #8
 8000b6c:	46bd      	mov	sp, r7
 8000b6e:	bd80      	pop	{r7, pc}
 8000b70:	20000038 	.word	0x20000038
 8000b74:	20000048 	.word	0x20000048

08000b78 <trafficLightBlinkRed>:

void trafficLightBlinkRed(int index) {
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	b082      	sub	sp, #8
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
 8000b80:	4a0e      	ldr	r2, [pc, #56]	; (8000bbc <trafficLightBlinkRed+0x44>)
 8000b82:	687b      	ldr	r3, [r7, #4]
 8000b84:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8000b88:	490d      	ldr	r1, [pc, #52]	; (8000bc0 <trafficLightBlinkRed+0x48>)
 8000b8a:	687b      	ldr	r3, [r7, #4]
 8000b8c:	f831 3023 	ldrh.w	r3, [r1, r3, lsl #2]
 8000b90:	4619      	mov	r1, r3
 8000b92:	4610      	mov	r0, r2
 8000b94:	f000 fbc7 	bl	8001326 <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
 8000b98:	4a08      	ldr	r2, [pc, #32]	; (8000bbc <trafficLightBlinkRed+0x44>)
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	00db      	lsls	r3, r3, #3
 8000b9e:	4413      	add	r3, r2
 8000ba0:	6858      	ldr	r0, [r3, #4]
 8000ba2:	4a07      	ldr	r2, [pc, #28]	; (8000bc0 <trafficLightBlinkRed+0x48>)
 8000ba4:	687b      	ldr	r3, [r7, #4]
 8000ba6:	009b      	lsls	r3, r3, #2
 8000ba8:	4413      	add	r3, r2
 8000baa:	885b      	ldrh	r3, [r3, #2]
 8000bac:	2200      	movs	r2, #0
 8000bae:	4619      	mov	r1, r3
 8000bb0:	f000 fba1 	bl	80012f6 <HAL_GPIO_WritePin>
}
 8000bb4:	bf00      	nop
 8000bb6:	3708      	adds	r7, #8
 8000bb8:	46bd      	mov	sp, r7
 8000bba:	bd80      	pop	{r7, pc}
 8000bbc:	20000038 	.word	0x20000038
 8000bc0:	20000048 	.word	0x20000048

08000bc4 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000bc8:	4b11      	ldr	r3, [pc, #68]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bca:	4a12      	ldr	r2, [pc, #72]	; (8000c14 <MX_USART2_UART_Init+0x50>)
 8000bcc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000bce:	4b10      	ldr	r3, [pc, #64]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bd0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000bd4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000bd6:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bd8:	2200      	movs	r2, #0
 8000bda:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000bdc:	4b0c      	ldr	r3, [pc, #48]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bde:	2200      	movs	r2, #0
 8000be0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000be2:	4b0b      	ldr	r3, [pc, #44]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000be4:	2200      	movs	r2, #0
 8000be6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000be8:	4b09      	ldr	r3, [pc, #36]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bea:	220c      	movs	r2, #12
 8000bec:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000bee:	4b08      	ldr	r3, [pc, #32]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000bf4:	4b06      	ldr	r3, [pc, #24]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000bfa:	4805      	ldr	r0, [pc, #20]	; (8000c10 <MX_USART2_UART_Init+0x4c>)
 8000bfc:	f001 fbe2 	bl	80023c4 <HAL_UART_Init>
 8000c00:	4603      	mov	r3, r0
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d001      	beq.n	8000c0a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000c06:	f7ff fcb6 	bl	8000576 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000c0a:	bf00      	nop
 8000c0c:	bd80      	pop	{r7, pc}
 8000c0e:	bf00      	nop
 8000c10:	200003f4 	.word	0x200003f4
 8000c14:	40004400 	.word	0x40004400

08000c18 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8000c18:	b580      	push	{r7, lr}
 8000c1a:	b088      	sub	sp, #32
 8000c1c:	af00      	add	r7, sp, #0
 8000c1e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c20:	f107 0310 	add.w	r3, r7, #16
 8000c24:	2200      	movs	r2, #0
 8000c26:	601a      	str	r2, [r3, #0]
 8000c28:	605a      	str	r2, [r3, #4]
 8000c2a:	609a      	str	r2, [r3, #8]
 8000c2c:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART2)
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	681b      	ldr	r3, [r3, #0]
 8000c32:	4a15      	ldr	r2, [pc, #84]	; (8000c88 <HAL_UART_MspInit+0x70>)
 8000c34:	4293      	cmp	r3, r2
 8000c36:	d123      	bne.n	8000c80 <HAL_UART_MspInit+0x68>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8000c38:	4b14      	ldr	r3, [pc, #80]	; (8000c8c <HAL_UART_MspInit+0x74>)
 8000c3a:	69db      	ldr	r3, [r3, #28]
 8000c3c:	4a13      	ldr	r2, [pc, #76]	; (8000c8c <HAL_UART_MspInit+0x74>)
 8000c3e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000c42:	61d3      	str	r3, [r2, #28]
 8000c44:	4b11      	ldr	r3, [pc, #68]	; (8000c8c <HAL_UART_MspInit+0x74>)
 8000c46:	69db      	ldr	r3, [r3, #28]
 8000c48:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000c4c:	60fb      	str	r3, [r7, #12]
 8000c4e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c50:	4b0e      	ldr	r3, [pc, #56]	; (8000c8c <HAL_UART_MspInit+0x74>)
 8000c52:	699b      	ldr	r3, [r3, #24]
 8000c54:	4a0d      	ldr	r2, [pc, #52]	; (8000c8c <HAL_UART_MspInit+0x74>)
 8000c56:	f043 0304 	orr.w	r3, r3, #4
 8000c5a:	6193      	str	r3, [r2, #24]
 8000c5c:	4b0b      	ldr	r3, [pc, #44]	; (8000c8c <HAL_UART_MspInit+0x74>)
 8000c5e:	699b      	ldr	r3, [r3, #24]
 8000c60:	f003 0304 	and.w	r3, r3, #4
 8000c64:	60bb      	str	r3, [r7, #8]
 8000c66:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8000c68:	230c      	movs	r3, #12
 8000c6a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c6c:	2302      	movs	r3, #2
 8000c6e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c70:	2302      	movs	r3, #2
 8000c72:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c74:	f107 0310 	add.w	r3, r7, #16
 8000c78:	4619      	mov	r1, r3
 8000c7a:	4805      	ldr	r0, [pc, #20]	; (8000c90 <HAL_UART_MspInit+0x78>)
 8000c7c:	f000 f9a0 	bl	8000fc0 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8000c80:	bf00      	nop
 8000c82:	3720      	adds	r7, #32
 8000c84:	46bd      	mov	sp, r7
 8000c86:	bd80      	pop	{r7, pc}
 8000c88:	40004400 	.word	0x40004400
 8000c8c:	40021000 	.word	0x40021000
 8000c90:	40010800 	.word	0x40010800

08000c94 <Reset_Handler>:
 8000c94:	480c      	ldr	r0, [pc, #48]	; (8000cc8 <LoopFillZerobss+0x12>)
 8000c96:	490d      	ldr	r1, [pc, #52]	; (8000ccc <LoopFillZerobss+0x16>)
 8000c98:	4a0d      	ldr	r2, [pc, #52]	; (8000cd0 <LoopFillZerobss+0x1a>)
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	e002      	b.n	8000ca4 <LoopCopyDataInit>

08000c9e <CopyDataInit>:
 8000c9e:	58d4      	ldr	r4, [r2, r3]
 8000ca0:	50c4      	str	r4, [r0, r3]
 8000ca2:	3304      	adds	r3, #4

08000ca4 <LoopCopyDataInit>:
 8000ca4:	18c4      	adds	r4, r0, r3
 8000ca6:	428c      	cmp	r4, r1
 8000ca8:	d3f9      	bcc.n	8000c9e <CopyDataInit>
 8000caa:	4a0a      	ldr	r2, [pc, #40]	; (8000cd4 <LoopFillZerobss+0x1e>)
 8000cac:	4c0a      	ldr	r4, [pc, #40]	; (8000cd8 <LoopFillZerobss+0x22>)
 8000cae:	2300      	movs	r3, #0
 8000cb0:	e001      	b.n	8000cb6 <LoopFillZerobss>

08000cb2 <FillZerobss>:
 8000cb2:	6013      	str	r3, [r2, #0]
 8000cb4:	3204      	adds	r2, #4

08000cb6 <LoopFillZerobss>:
 8000cb6:	42a2      	cmp	r2, r4
 8000cb8:	d3fb      	bcc.n	8000cb2 <FillZerobss>
 8000cba:	f7ff febd 	bl	8000a38 <SystemInit>
 8000cbe:	f001 fc5d 	bl	800257c <__libc_init_array>
 8000cc2:	f7ff fbdd 	bl	8000480 <main>
 8000cc6:	4770      	bx	lr
 8000cc8:	20000000 	.word	0x20000000
 8000ccc:	20000058 	.word	0x20000058
 8000cd0:	0800261c 	.word	0x0800261c
 8000cd4:	20000058 	.word	0x20000058
 8000cd8:	2000043c 	.word	0x2000043c

08000cdc <ADC1_2_IRQHandler>:
 8000cdc:	e7fe      	b.n	8000cdc <ADC1_2_IRQHandler>
	...

08000ce0 <HAL_Init>:
 8000ce0:	b580      	push	{r7, lr}
 8000ce2:	af00      	add	r7, sp, #0
 8000ce4:	4b08      	ldr	r3, [pc, #32]	; (8000d08 <HAL_Init+0x28>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	4a07      	ldr	r2, [pc, #28]	; (8000d08 <HAL_Init+0x28>)
 8000cea:	f043 0310 	orr.w	r3, r3, #16
 8000cee:	6013      	str	r3, [r2, #0]
 8000cf0:	2003      	movs	r0, #3
 8000cf2:	f000 f923 	bl	8000f3c <HAL_NVIC_SetPriorityGrouping>
 8000cf6:	2000      	movs	r0, #0
 8000cf8:	f000 f808 	bl	8000d0c <HAL_InitTick>
 8000cfc:	f7ff fe30 	bl	8000960 <HAL_MspInit>
 8000d00:	2300      	movs	r3, #0
 8000d02:	4618      	mov	r0, r3
 8000d04:	bd80      	pop	{r7, pc}
 8000d06:	bf00      	nop
 8000d08:	40022000 	.word	0x40022000

08000d0c <HAL_InitTick>:
 8000d0c:	b580      	push	{r7, lr}
 8000d0e:	b082      	sub	sp, #8
 8000d10:	af00      	add	r7, sp, #0
 8000d12:	6078      	str	r0, [r7, #4]
 8000d14:	4b12      	ldr	r3, [pc, #72]	; (8000d60 <HAL_InitTick+0x54>)
 8000d16:	681a      	ldr	r2, [r3, #0]
 8000d18:	4b12      	ldr	r3, [pc, #72]	; (8000d64 <HAL_InitTick+0x58>)
 8000d1a:	781b      	ldrb	r3, [r3, #0]
 8000d1c:	4619      	mov	r1, r3
 8000d1e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000d22:	fbb3 f3f1 	udiv	r3, r3, r1
 8000d26:	fbb2 f3f3 	udiv	r3, r2, r3
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	f000 f93b 	bl	8000fa6 <HAL_SYSTICK_Config>
 8000d30:	4603      	mov	r3, r0
 8000d32:	2b00      	cmp	r3, #0
 8000d34:	d001      	beq.n	8000d3a <HAL_InitTick+0x2e>
 8000d36:	2301      	movs	r3, #1
 8000d38:	e00e      	b.n	8000d58 <HAL_InitTick+0x4c>
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	2b0f      	cmp	r3, #15
 8000d3e:	d80a      	bhi.n	8000d56 <HAL_InitTick+0x4a>
 8000d40:	2200      	movs	r2, #0
 8000d42:	6879      	ldr	r1, [r7, #4]
 8000d44:	f04f 30ff 	mov.w	r0, #4294967295
 8000d48:	f000 f903 	bl	8000f52 <HAL_NVIC_SetPriority>
 8000d4c:	4a06      	ldr	r2, [pc, #24]	; (8000d68 <HAL_InitTick+0x5c>)
 8000d4e:	687b      	ldr	r3, [r7, #4]
 8000d50:	6013      	str	r3, [r2, #0]
 8000d52:	2300      	movs	r3, #0
 8000d54:	e000      	b.n	8000d58 <HAL_InitTick+0x4c>
 8000d56:	2301      	movs	r3, #1
 8000d58:	4618      	mov	r0, r3
 8000d5a:	3708      	adds	r7, #8
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	bd80      	pop	{r7, pc}
 8000d60:	20000034 	.word	0x20000034
 8000d64:	20000054 	.word	0x20000054
 8000d68:	20000050 	.word	0x20000050

08000d6c <HAL_IncTick>:
 8000d6c:	b480      	push	{r7}
 8000d6e:	af00      	add	r7, sp, #0
 8000d70:	4b05      	ldr	r3, [pc, #20]	; (8000d88 <HAL_IncTick+0x1c>)
 8000d72:	781b      	ldrb	r3, [r3, #0]
 8000d74:	461a      	mov	r2, r3
 8000d76:	4b05      	ldr	r3, [pc, #20]	; (8000d8c <HAL_IncTick+0x20>)
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	4413      	add	r3, r2
 8000d7c:	4a03      	ldr	r2, [pc, #12]	; (8000d8c <HAL_IncTick+0x20>)
 8000d7e:	6013      	str	r3, [r2, #0]
 8000d80:	bf00      	nop
 8000d82:	46bd      	mov	sp, r7
 8000d84:	bc80      	pop	{r7}
 8000d86:	4770      	bx	lr
 8000d88:	20000054 	.word	0x20000054
 8000d8c:	20000438 	.word	0x20000438

08000d90 <HAL_GetTick>:
 8000d90:	b480      	push	{r7}
 8000d92:	af00      	add	r7, sp, #0
 8000d94:	4b02      	ldr	r3, [pc, #8]	; (8000da0 <HAL_GetTick+0x10>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	4618      	mov	r0, r3
 8000d9a:	46bd      	mov	sp, r7
 8000d9c:	bc80      	pop	{r7}
 8000d9e:	4770      	bx	lr
 8000da0:	20000438 	.word	0x20000438

08000da4 <__NVIC_SetPriorityGrouping>:
 8000da4:	b480      	push	{r7}
 8000da6:	b085      	sub	sp, #20
 8000da8:	af00      	add	r7, sp, #0
 8000daa:	6078      	str	r0, [r7, #4]
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	f003 0307 	and.w	r3, r3, #7
 8000db2:	60fb      	str	r3, [r7, #12]
 8000db4:	4b0c      	ldr	r3, [pc, #48]	; (8000de8 <__NVIC_SetPriorityGrouping+0x44>)
 8000db6:	68db      	ldr	r3, [r3, #12]
 8000db8:	60bb      	str	r3, [r7, #8]
 8000dba:	68ba      	ldr	r2, [r7, #8]
 8000dbc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000dc0:	4013      	ands	r3, r2
 8000dc2:	60bb      	str	r3, [r7, #8]
 8000dc4:	68fb      	ldr	r3, [r7, #12]
 8000dc6:	021a      	lsls	r2, r3, #8
 8000dc8:	68bb      	ldr	r3, [r7, #8]
 8000dca:	4313      	orrs	r3, r2
 8000dcc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000dd0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000dd4:	60bb      	str	r3, [r7, #8]
 8000dd6:	4a04      	ldr	r2, [pc, #16]	; (8000de8 <__NVIC_SetPriorityGrouping+0x44>)
 8000dd8:	68bb      	ldr	r3, [r7, #8]
 8000dda:	60d3      	str	r3, [r2, #12]
 8000ddc:	bf00      	nop
 8000dde:	3714      	adds	r7, #20
 8000de0:	46bd      	mov	sp, r7
 8000de2:	bc80      	pop	{r7}
 8000de4:	4770      	bx	lr
 8000de6:	bf00      	nop
 8000de8:	e000ed00 	.word	0xe000ed00

08000dec <__NVIC_GetPriorityGrouping>:
 8000dec:	b480      	push	{r7}
 8000dee:	af00      	add	r7, sp, #0
 8000df0:	4b04      	ldr	r3, [pc, #16]	; (8000e04 <__NVIC_GetPriorityGrouping+0x18>)
 8000df2:	68db      	ldr	r3, [r3, #12]
 8000df4:	0a1b      	lsrs	r3, r3, #8
 8000df6:	f003 0307 	and.w	r3, r3, #7
 8000dfa:	4618      	mov	r0, r3
 8000dfc:	46bd      	mov	sp, r7
 8000dfe:	bc80      	pop	{r7}
 8000e00:	4770      	bx	lr
 8000e02:	bf00      	nop
 8000e04:	e000ed00 	.word	0xe000ed00

08000e08 <__NVIC_EnableIRQ>:
 8000e08:	b480      	push	{r7}
 8000e0a:	b083      	sub	sp, #12
 8000e0c:	af00      	add	r7, sp, #0
 8000e0e:	4603      	mov	r3, r0
 8000e10:	71fb      	strb	r3, [r7, #7]
 8000e12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e16:	2b00      	cmp	r3, #0
 8000e18:	db0b      	blt.n	8000e32 <__NVIC_EnableIRQ+0x2a>
 8000e1a:	79fb      	ldrb	r3, [r7, #7]
 8000e1c:	f003 021f 	and.w	r2, r3, #31
 8000e20:	4906      	ldr	r1, [pc, #24]	; (8000e3c <__NVIC_EnableIRQ+0x34>)
 8000e22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e26:	095b      	lsrs	r3, r3, #5
 8000e28:	2001      	movs	r0, #1
 8000e2a:	fa00 f202 	lsl.w	r2, r0, r2
 8000e2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000e32:	bf00      	nop
 8000e34:	370c      	adds	r7, #12
 8000e36:	46bd      	mov	sp, r7
 8000e38:	bc80      	pop	{r7}
 8000e3a:	4770      	bx	lr
 8000e3c:	e000e100 	.word	0xe000e100

08000e40 <__NVIC_SetPriority>:
 8000e40:	b480      	push	{r7}
 8000e42:	b083      	sub	sp, #12
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	4603      	mov	r3, r0
 8000e48:	6039      	str	r1, [r7, #0]
 8000e4a:	71fb      	strb	r3, [r7, #7]
 8000e4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	db0a      	blt.n	8000e6a <__NVIC_SetPriority+0x2a>
 8000e54:	683b      	ldr	r3, [r7, #0]
 8000e56:	b2da      	uxtb	r2, r3
 8000e58:	490c      	ldr	r1, [pc, #48]	; (8000e8c <__NVIC_SetPriority+0x4c>)
 8000e5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e5e:	0112      	lsls	r2, r2, #4
 8000e60:	b2d2      	uxtb	r2, r2
 8000e62:	440b      	add	r3, r1
 8000e64:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000e68:	e00a      	b.n	8000e80 <__NVIC_SetPriority+0x40>
 8000e6a:	683b      	ldr	r3, [r7, #0]
 8000e6c:	b2da      	uxtb	r2, r3
 8000e6e:	4908      	ldr	r1, [pc, #32]	; (8000e90 <__NVIC_SetPriority+0x50>)
 8000e70:	79fb      	ldrb	r3, [r7, #7]
 8000e72:	f003 030f 	and.w	r3, r3, #15
 8000e76:	3b04      	subs	r3, #4
 8000e78:	0112      	lsls	r2, r2, #4
 8000e7a:	b2d2      	uxtb	r2, r2
 8000e7c:	440b      	add	r3, r1
 8000e7e:	761a      	strb	r2, [r3, #24]
 8000e80:	bf00      	nop
 8000e82:	370c      	adds	r7, #12
 8000e84:	46bd      	mov	sp, r7
 8000e86:	bc80      	pop	{r7}
 8000e88:	4770      	bx	lr
 8000e8a:	bf00      	nop
 8000e8c:	e000e100 	.word	0xe000e100
 8000e90:	e000ed00 	.word	0xe000ed00

08000e94 <NVIC_EncodePriority>:
 8000e94:	b480      	push	{r7}
 8000e96:	b089      	sub	sp, #36	; 0x24
 8000e98:	af00      	add	r7, sp, #0
 8000e9a:	60f8      	str	r0, [r7, #12]
 8000e9c:	60b9      	str	r1, [r7, #8]
 8000e9e:	607a      	str	r2, [r7, #4]
 8000ea0:	68fb      	ldr	r3, [r7, #12]
 8000ea2:	f003 0307 	and.w	r3, r3, #7
 8000ea6:	61fb      	str	r3, [r7, #28]
 8000ea8:	69fb      	ldr	r3, [r7, #28]
 8000eaa:	f1c3 0307 	rsb	r3, r3, #7
 8000eae:	2b04      	cmp	r3, #4
 8000eb0:	bf28      	it	cs
 8000eb2:	2304      	movcs	r3, #4
 8000eb4:	61bb      	str	r3, [r7, #24]
 8000eb6:	69fb      	ldr	r3, [r7, #28]
 8000eb8:	3304      	adds	r3, #4
 8000eba:	2b06      	cmp	r3, #6
 8000ebc:	d902      	bls.n	8000ec4 <NVIC_EncodePriority+0x30>
 8000ebe:	69fb      	ldr	r3, [r7, #28]
 8000ec0:	3b03      	subs	r3, #3
 8000ec2:	e000      	b.n	8000ec6 <NVIC_EncodePriority+0x32>
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	617b      	str	r3, [r7, #20]
 8000ec8:	f04f 32ff 	mov.w	r2, #4294967295
 8000ecc:	69bb      	ldr	r3, [r7, #24]
 8000ece:	fa02 f303 	lsl.w	r3, r2, r3
 8000ed2:	43da      	mvns	r2, r3
 8000ed4:	68bb      	ldr	r3, [r7, #8]
 8000ed6:	401a      	ands	r2, r3
 8000ed8:	697b      	ldr	r3, [r7, #20]
 8000eda:	409a      	lsls	r2, r3
 8000edc:	f04f 31ff 	mov.w	r1, #4294967295
 8000ee0:	697b      	ldr	r3, [r7, #20]
 8000ee2:	fa01 f303 	lsl.w	r3, r1, r3
 8000ee6:	43d9      	mvns	r1, r3
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	400b      	ands	r3, r1
 8000eec:	4313      	orrs	r3, r2
 8000eee:	4618      	mov	r0, r3
 8000ef0:	3724      	adds	r7, #36	; 0x24
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bc80      	pop	{r7}
 8000ef6:	4770      	bx	lr

08000ef8 <SysTick_Config>:
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b082      	sub	sp, #8
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	3b01      	subs	r3, #1
 8000f04:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000f08:	d301      	bcc.n	8000f0e <SysTick_Config+0x16>
 8000f0a:	2301      	movs	r3, #1
 8000f0c:	e00f      	b.n	8000f2e <SysTick_Config+0x36>
 8000f0e:	4a0a      	ldr	r2, [pc, #40]	; (8000f38 <SysTick_Config+0x40>)
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	3b01      	subs	r3, #1
 8000f14:	6053      	str	r3, [r2, #4]
 8000f16:	210f      	movs	r1, #15
 8000f18:	f04f 30ff 	mov.w	r0, #4294967295
 8000f1c:	f7ff ff90 	bl	8000e40 <__NVIC_SetPriority>
 8000f20:	4b05      	ldr	r3, [pc, #20]	; (8000f38 <SysTick_Config+0x40>)
 8000f22:	2200      	movs	r2, #0
 8000f24:	609a      	str	r2, [r3, #8]
 8000f26:	4b04      	ldr	r3, [pc, #16]	; (8000f38 <SysTick_Config+0x40>)
 8000f28:	2207      	movs	r2, #7
 8000f2a:	601a      	str	r2, [r3, #0]
 8000f2c:	2300      	movs	r3, #0
 8000f2e:	4618      	mov	r0, r3
 8000f30:	3708      	adds	r7, #8
 8000f32:	46bd      	mov	sp, r7
 8000f34:	bd80      	pop	{r7, pc}
 8000f36:	bf00      	nop
 8000f38:	e000e010 	.word	0xe000e010

08000f3c <HAL_NVIC_SetPriorityGrouping>:
 8000f3c:	b580      	push	{r7, lr}
 8000f3e:	b082      	sub	sp, #8
 8000f40:	af00      	add	r7, sp, #0
 8000f42:	6078      	str	r0, [r7, #4]
 8000f44:	6878      	ldr	r0, [r7, #4]
 8000f46:	f7ff ff2d 	bl	8000da4 <__NVIC_SetPriorityGrouping>
 8000f4a:	bf00      	nop
 8000f4c:	3708      	adds	r7, #8
 8000f4e:	46bd      	mov	sp, r7
 8000f50:	bd80      	pop	{r7, pc}

08000f52 <HAL_NVIC_SetPriority>:
 8000f52:	b580      	push	{r7, lr}
 8000f54:	b086      	sub	sp, #24
 8000f56:	af00      	add	r7, sp, #0
 8000f58:	4603      	mov	r3, r0
 8000f5a:	60b9      	str	r1, [r7, #8]
 8000f5c:	607a      	str	r2, [r7, #4]
 8000f5e:	73fb      	strb	r3, [r7, #15]
 8000f60:	2300      	movs	r3, #0
 8000f62:	617b      	str	r3, [r7, #20]
 8000f64:	f7ff ff42 	bl	8000dec <__NVIC_GetPriorityGrouping>
 8000f68:	6178      	str	r0, [r7, #20]
 8000f6a:	687a      	ldr	r2, [r7, #4]
 8000f6c:	68b9      	ldr	r1, [r7, #8]
 8000f6e:	6978      	ldr	r0, [r7, #20]
 8000f70:	f7ff ff90 	bl	8000e94 <NVIC_EncodePriority>
 8000f74:	4602      	mov	r2, r0
 8000f76:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f7a:	4611      	mov	r1, r2
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	f7ff ff5f 	bl	8000e40 <__NVIC_SetPriority>
 8000f82:	bf00      	nop
 8000f84:	3718      	adds	r7, #24
 8000f86:	46bd      	mov	sp, r7
 8000f88:	bd80      	pop	{r7, pc}

08000f8a <HAL_NVIC_EnableIRQ>:
 8000f8a:	b580      	push	{r7, lr}
 8000f8c:	b082      	sub	sp, #8
 8000f8e:	af00      	add	r7, sp, #0
 8000f90:	4603      	mov	r3, r0
 8000f92:	71fb      	strb	r3, [r7, #7]
 8000f94:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f98:	4618      	mov	r0, r3
 8000f9a:	f7ff ff35 	bl	8000e08 <__NVIC_EnableIRQ>
 8000f9e:	bf00      	nop
 8000fa0:	3708      	adds	r7, #8
 8000fa2:	46bd      	mov	sp, r7
 8000fa4:	bd80      	pop	{r7, pc}

08000fa6 <HAL_SYSTICK_Config>:
 8000fa6:	b580      	push	{r7, lr}
 8000fa8:	b082      	sub	sp, #8
 8000faa:	af00      	add	r7, sp, #0
 8000fac:	6078      	str	r0, [r7, #4]
 8000fae:	6878      	ldr	r0, [r7, #4]
 8000fb0:	f7ff ffa2 	bl	8000ef8 <SysTick_Config>
 8000fb4:	4603      	mov	r3, r0
 8000fb6:	4618      	mov	r0, r3
 8000fb8:	3708      	adds	r7, #8
 8000fba:	46bd      	mov	sp, r7
 8000fbc:	bd80      	pop	{r7, pc}
	...

08000fc0 <HAL_GPIO_Init>:
 8000fc0:	b480      	push	{r7}
 8000fc2:	b08b      	sub	sp, #44	; 0x2c
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	6078      	str	r0, [r7, #4]
 8000fc8:	6039      	str	r1, [r7, #0]
 8000fca:	2300      	movs	r3, #0
 8000fcc:	627b      	str	r3, [r7, #36]	; 0x24
 8000fce:	2300      	movs	r3, #0
 8000fd0:	623b      	str	r3, [r7, #32]
 8000fd2:	e169      	b.n	80012a8 <HAL_GPIO_Init+0x2e8>
 8000fd4:	2201      	movs	r2, #1
 8000fd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fd8:	fa02 f303 	lsl.w	r3, r2, r3
 8000fdc:	61fb      	str	r3, [r7, #28]
 8000fde:	683b      	ldr	r3, [r7, #0]
 8000fe0:	681b      	ldr	r3, [r3, #0]
 8000fe2:	69fa      	ldr	r2, [r7, #28]
 8000fe4:	4013      	ands	r3, r2
 8000fe6:	61bb      	str	r3, [r7, #24]
 8000fe8:	69ba      	ldr	r2, [r7, #24]
 8000fea:	69fb      	ldr	r3, [r7, #28]
 8000fec:	429a      	cmp	r2, r3
 8000fee:	f040 8158 	bne.w	80012a2 <HAL_GPIO_Init+0x2e2>
 8000ff2:	683b      	ldr	r3, [r7, #0]
 8000ff4:	685b      	ldr	r3, [r3, #4]
 8000ff6:	4a9a      	ldr	r2, [pc, #616]	; (8001260 <HAL_GPIO_Init+0x2a0>)
 8000ff8:	4293      	cmp	r3, r2
 8000ffa:	d05e      	beq.n	80010ba <HAL_GPIO_Init+0xfa>
 8000ffc:	4a98      	ldr	r2, [pc, #608]	; (8001260 <HAL_GPIO_Init+0x2a0>)
 8000ffe:	4293      	cmp	r3, r2
 8001000:	d875      	bhi.n	80010ee <HAL_GPIO_Init+0x12e>
 8001002:	4a98      	ldr	r2, [pc, #608]	; (8001264 <HAL_GPIO_Init+0x2a4>)
 8001004:	4293      	cmp	r3, r2
 8001006:	d058      	beq.n	80010ba <HAL_GPIO_Init+0xfa>
 8001008:	4a96      	ldr	r2, [pc, #600]	; (8001264 <HAL_GPIO_Init+0x2a4>)
 800100a:	4293      	cmp	r3, r2
 800100c:	d86f      	bhi.n	80010ee <HAL_GPIO_Init+0x12e>
 800100e:	4a96      	ldr	r2, [pc, #600]	; (8001268 <HAL_GPIO_Init+0x2a8>)
 8001010:	4293      	cmp	r3, r2
 8001012:	d052      	beq.n	80010ba <HAL_GPIO_Init+0xfa>
 8001014:	4a94      	ldr	r2, [pc, #592]	; (8001268 <HAL_GPIO_Init+0x2a8>)
 8001016:	4293      	cmp	r3, r2
 8001018:	d869      	bhi.n	80010ee <HAL_GPIO_Init+0x12e>
 800101a:	4a94      	ldr	r2, [pc, #592]	; (800126c <HAL_GPIO_Init+0x2ac>)
 800101c:	4293      	cmp	r3, r2
 800101e:	d04c      	beq.n	80010ba <HAL_GPIO_Init+0xfa>
 8001020:	4a92      	ldr	r2, [pc, #584]	; (800126c <HAL_GPIO_Init+0x2ac>)
 8001022:	4293      	cmp	r3, r2
 8001024:	d863      	bhi.n	80010ee <HAL_GPIO_Init+0x12e>
 8001026:	4a92      	ldr	r2, [pc, #584]	; (8001270 <HAL_GPIO_Init+0x2b0>)
 8001028:	4293      	cmp	r3, r2
 800102a:	d046      	beq.n	80010ba <HAL_GPIO_Init+0xfa>
 800102c:	4a90      	ldr	r2, [pc, #576]	; (8001270 <HAL_GPIO_Init+0x2b0>)
 800102e:	4293      	cmp	r3, r2
 8001030:	d85d      	bhi.n	80010ee <HAL_GPIO_Init+0x12e>
 8001032:	2b12      	cmp	r3, #18
 8001034:	d82a      	bhi.n	800108c <HAL_GPIO_Init+0xcc>
 8001036:	2b12      	cmp	r3, #18
 8001038:	d859      	bhi.n	80010ee <HAL_GPIO_Init+0x12e>
 800103a:	a201      	add	r2, pc, #4	; (adr r2, 8001040 <HAL_GPIO_Init+0x80>)
 800103c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001040:	080010bb 	.word	0x080010bb
 8001044:	08001095 	.word	0x08001095
 8001048:	080010a7 	.word	0x080010a7
 800104c:	080010e9 	.word	0x080010e9
 8001050:	080010ef 	.word	0x080010ef
 8001054:	080010ef 	.word	0x080010ef
 8001058:	080010ef 	.word	0x080010ef
 800105c:	080010ef 	.word	0x080010ef
 8001060:	080010ef 	.word	0x080010ef
 8001064:	080010ef 	.word	0x080010ef
 8001068:	080010ef 	.word	0x080010ef
 800106c:	080010ef 	.word	0x080010ef
 8001070:	080010ef 	.word	0x080010ef
 8001074:	080010ef 	.word	0x080010ef
 8001078:	080010ef 	.word	0x080010ef
 800107c:	080010ef 	.word	0x080010ef
 8001080:	080010ef 	.word	0x080010ef
 8001084:	0800109d 	.word	0x0800109d
 8001088:	080010b1 	.word	0x080010b1
 800108c:	4a79      	ldr	r2, [pc, #484]	; (8001274 <HAL_GPIO_Init+0x2b4>)
 800108e:	4293      	cmp	r3, r2
 8001090:	d013      	beq.n	80010ba <HAL_GPIO_Init+0xfa>
 8001092:	e02c      	b.n	80010ee <HAL_GPIO_Init+0x12e>
 8001094:	683b      	ldr	r3, [r7, #0]
 8001096:	68db      	ldr	r3, [r3, #12]
 8001098:	623b      	str	r3, [r7, #32]
 800109a:	e029      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 800109c:	683b      	ldr	r3, [r7, #0]
 800109e:	68db      	ldr	r3, [r3, #12]
 80010a0:	3304      	adds	r3, #4
 80010a2:	623b      	str	r3, [r7, #32]
 80010a4:	e024      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010a6:	683b      	ldr	r3, [r7, #0]
 80010a8:	68db      	ldr	r3, [r3, #12]
 80010aa:	3308      	adds	r3, #8
 80010ac:	623b      	str	r3, [r7, #32]
 80010ae:	e01f      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010b0:	683b      	ldr	r3, [r7, #0]
 80010b2:	68db      	ldr	r3, [r3, #12]
 80010b4:	330c      	adds	r3, #12
 80010b6:	623b      	str	r3, [r7, #32]
 80010b8:	e01a      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010ba:	683b      	ldr	r3, [r7, #0]
 80010bc:	689b      	ldr	r3, [r3, #8]
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d102      	bne.n	80010c8 <HAL_GPIO_Init+0x108>
 80010c2:	2304      	movs	r3, #4
 80010c4:	623b      	str	r3, [r7, #32]
 80010c6:	e013      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010c8:	683b      	ldr	r3, [r7, #0]
 80010ca:	689b      	ldr	r3, [r3, #8]
 80010cc:	2b01      	cmp	r3, #1
 80010ce:	d105      	bne.n	80010dc <HAL_GPIO_Init+0x11c>
 80010d0:	2308      	movs	r3, #8
 80010d2:	623b      	str	r3, [r7, #32]
 80010d4:	687b      	ldr	r3, [r7, #4]
 80010d6:	69fa      	ldr	r2, [r7, #28]
 80010d8:	611a      	str	r2, [r3, #16]
 80010da:	e009      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010dc:	2308      	movs	r3, #8
 80010de:	623b      	str	r3, [r7, #32]
 80010e0:	687b      	ldr	r3, [r7, #4]
 80010e2:	69fa      	ldr	r2, [r7, #28]
 80010e4:	615a      	str	r2, [r3, #20]
 80010e6:	e003      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010e8:	2300      	movs	r3, #0
 80010ea:	623b      	str	r3, [r7, #32]
 80010ec:	e000      	b.n	80010f0 <HAL_GPIO_Init+0x130>
 80010ee:	bf00      	nop
 80010f0:	69bb      	ldr	r3, [r7, #24]
 80010f2:	2bff      	cmp	r3, #255	; 0xff
 80010f4:	d801      	bhi.n	80010fa <HAL_GPIO_Init+0x13a>
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	e001      	b.n	80010fe <HAL_GPIO_Init+0x13e>
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	3304      	adds	r3, #4
 80010fe:	617b      	str	r3, [r7, #20]
 8001100:	69bb      	ldr	r3, [r7, #24]
 8001102:	2bff      	cmp	r3, #255	; 0xff
 8001104:	d802      	bhi.n	800110c <HAL_GPIO_Init+0x14c>
 8001106:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001108:	009b      	lsls	r3, r3, #2
 800110a:	e002      	b.n	8001112 <HAL_GPIO_Init+0x152>
 800110c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800110e:	3b08      	subs	r3, #8
 8001110:	009b      	lsls	r3, r3, #2
 8001112:	613b      	str	r3, [r7, #16]
 8001114:	697b      	ldr	r3, [r7, #20]
 8001116:	681a      	ldr	r2, [r3, #0]
 8001118:	210f      	movs	r1, #15
 800111a:	693b      	ldr	r3, [r7, #16]
 800111c:	fa01 f303 	lsl.w	r3, r1, r3
 8001120:	43db      	mvns	r3, r3
 8001122:	401a      	ands	r2, r3
 8001124:	6a39      	ldr	r1, [r7, #32]
 8001126:	693b      	ldr	r3, [r7, #16]
 8001128:	fa01 f303 	lsl.w	r3, r1, r3
 800112c:	431a      	orrs	r2, r3
 800112e:	697b      	ldr	r3, [r7, #20]
 8001130:	601a      	str	r2, [r3, #0]
 8001132:	683b      	ldr	r3, [r7, #0]
 8001134:	685b      	ldr	r3, [r3, #4]
 8001136:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800113a:	2b00      	cmp	r3, #0
 800113c:	f000 80b1 	beq.w	80012a2 <HAL_GPIO_Init+0x2e2>
 8001140:	4b4d      	ldr	r3, [pc, #308]	; (8001278 <HAL_GPIO_Init+0x2b8>)
 8001142:	699b      	ldr	r3, [r3, #24]
 8001144:	4a4c      	ldr	r2, [pc, #304]	; (8001278 <HAL_GPIO_Init+0x2b8>)
 8001146:	f043 0301 	orr.w	r3, r3, #1
 800114a:	6193      	str	r3, [r2, #24]
 800114c:	4b4a      	ldr	r3, [pc, #296]	; (8001278 <HAL_GPIO_Init+0x2b8>)
 800114e:	699b      	ldr	r3, [r3, #24]
 8001150:	f003 0301 	and.w	r3, r3, #1
 8001154:	60bb      	str	r3, [r7, #8]
 8001156:	68bb      	ldr	r3, [r7, #8]
 8001158:	4a48      	ldr	r2, [pc, #288]	; (800127c <HAL_GPIO_Init+0x2bc>)
 800115a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800115c:	089b      	lsrs	r3, r3, #2
 800115e:	3302      	adds	r3, #2
 8001160:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001164:	60fb      	str	r3, [r7, #12]
 8001166:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001168:	f003 0303 	and.w	r3, r3, #3
 800116c:	009b      	lsls	r3, r3, #2
 800116e:	220f      	movs	r2, #15
 8001170:	fa02 f303 	lsl.w	r3, r2, r3
 8001174:	43db      	mvns	r3, r3
 8001176:	68fa      	ldr	r2, [r7, #12]
 8001178:	4013      	ands	r3, r2
 800117a:	60fb      	str	r3, [r7, #12]
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	4a40      	ldr	r2, [pc, #256]	; (8001280 <HAL_GPIO_Init+0x2c0>)
 8001180:	4293      	cmp	r3, r2
 8001182:	d013      	beq.n	80011ac <HAL_GPIO_Init+0x1ec>
 8001184:	687b      	ldr	r3, [r7, #4]
 8001186:	4a3f      	ldr	r2, [pc, #252]	; (8001284 <HAL_GPIO_Init+0x2c4>)
 8001188:	4293      	cmp	r3, r2
 800118a:	d00d      	beq.n	80011a8 <HAL_GPIO_Init+0x1e8>
 800118c:	687b      	ldr	r3, [r7, #4]
 800118e:	4a3e      	ldr	r2, [pc, #248]	; (8001288 <HAL_GPIO_Init+0x2c8>)
 8001190:	4293      	cmp	r3, r2
 8001192:	d007      	beq.n	80011a4 <HAL_GPIO_Init+0x1e4>
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	4a3d      	ldr	r2, [pc, #244]	; (800128c <HAL_GPIO_Init+0x2cc>)
 8001198:	4293      	cmp	r3, r2
 800119a:	d101      	bne.n	80011a0 <HAL_GPIO_Init+0x1e0>
 800119c:	2303      	movs	r3, #3
 800119e:	e006      	b.n	80011ae <HAL_GPIO_Init+0x1ee>
 80011a0:	2304      	movs	r3, #4
 80011a2:	e004      	b.n	80011ae <HAL_GPIO_Init+0x1ee>
 80011a4:	2302      	movs	r3, #2
 80011a6:	e002      	b.n	80011ae <HAL_GPIO_Init+0x1ee>
 80011a8:	2301      	movs	r3, #1
 80011aa:	e000      	b.n	80011ae <HAL_GPIO_Init+0x1ee>
 80011ac:	2300      	movs	r3, #0
 80011ae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80011b0:	f002 0203 	and.w	r2, r2, #3
 80011b4:	0092      	lsls	r2, r2, #2
 80011b6:	4093      	lsls	r3, r2
 80011b8:	68fa      	ldr	r2, [r7, #12]
 80011ba:	4313      	orrs	r3, r2
 80011bc:	60fb      	str	r3, [r7, #12]
 80011be:	492f      	ldr	r1, [pc, #188]	; (800127c <HAL_GPIO_Init+0x2bc>)
 80011c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011c2:	089b      	lsrs	r3, r3, #2
 80011c4:	3302      	adds	r3, #2
 80011c6:	68fa      	ldr	r2, [r7, #12]
 80011c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80011cc:	683b      	ldr	r3, [r7, #0]
 80011ce:	685b      	ldr	r3, [r3, #4]
 80011d0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	d006      	beq.n	80011e6 <HAL_GPIO_Init+0x226>
 80011d8:	4b2d      	ldr	r3, [pc, #180]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 80011da:	681a      	ldr	r2, [r3, #0]
 80011dc:	492c      	ldr	r1, [pc, #176]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 80011de:	69bb      	ldr	r3, [r7, #24]
 80011e0:	4313      	orrs	r3, r2
 80011e2:	600b      	str	r3, [r1, #0]
 80011e4:	e006      	b.n	80011f4 <HAL_GPIO_Init+0x234>
 80011e6:	4b2a      	ldr	r3, [pc, #168]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 80011e8:	681a      	ldr	r2, [r3, #0]
 80011ea:	69bb      	ldr	r3, [r7, #24]
 80011ec:	43db      	mvns	r3, r3
 80011ee:	4928      	ldr	r1, [pc, #160]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 80011f0:	4013      	ands	r3, r2
 80011f2:	600b      	str	r3, [r1, #0]
 80011f4:	683b      	ldr	r3, [r7, #0]
 80011f6:	685b      	ldr	r3, [r3, #4]
 80011f8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d006      	beq.n	800120e <HAL_GPIO_Init+0x24e>
 8001200:	4b23      	ldr	r3, [pc, #140]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001202:	685a      	ldr	r2, [r3, #4]
 8001204:	4922      	ldr	r1, [pc, #136]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001206:	69bb      	ldr	r3, [r7, #24]
 8001208:	4313      	orrs	r3, r2
 800120a:	604b      	str	r3, [r1, #4]
 800120c:	e006      	b.n	800121c <HAL_GPIO_Init+0x25c>
 800120e:	4b20      	ldr	r3, [pc, #128]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001210:	685a      	ldr	r2, [r3, #4]
 8001212:	69bb      	ldr	r3, [r7, #24]
 8001214:	43db      	mvns	r3, r3
 8001216:	491e      	ldr	r1, [pc, #120]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001218:	4013      	ands	r3, r2
 800121a:	604b      	str	r3, [r1, #4]
 800121c:	683b      	ldr	r3, [r7, #0]
 800121e:	685b      	ldr	r3, [r3, #4]
 8001220:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001224:	2b00      	cmp	r3, #0
 8001226:	d006      	beq.n	8001236 <HAL_GPIO_Init+0x276>
 8001228:	4b19      	ldr	r3, [pc, #100]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 800122a:	689a      	ldr	r2, [r3, #8]
 800122c:	4918      	ldr	r1, [pc, #96]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 800122e:	69bb      	ldr	r3, [r7, #24]
 8001230:	4313      	orrs	r3, r2
 8001232:	608b      	str	r3, [r1, #8]
 8001234:	e006      	b.n	8001244 <HAL_GPIO_Init+0x284>
 8001236:	4b16      	ldr	r3, [pc, #88]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001238:	689a      	ldr	r2, [r3, #8]
 800123a:	69bb      	ldr	r3, [r7, #24]
 800123c:	43db      	mvns	r3, r3
 800123e:	4914      	ldr	r1, [pc, #80]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001240:	4013      	ands	r3, r2
 8001242:	608b      	str	r3, [r1, #8]
 8001244:	683b      	ldr	r3, [r7, #0]
 8001246:	685b      	ldr	r3, [r3, #4]
 8001248:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800124c:	2b00      	cmp	r3, #0
 800124e:	d021      	beq.n	8001294 <HAL_GPIO_Init+0x2d4>
 8001250:	4b0f      	ldr	r3, [pc, #60]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001252:	68da      	ldr	r2, [r3, #12]
 8001254:	490e      	ldr	r1, [pc, #56]	; (8001290 <HAL_GPIO_Init+0x2d0>)
 8001256:	69bb      	ldr	r3, [r7, #24]
 8001258:	4313      	orrs	r3, r2
 800125a:	60cb      	str	r3, [r1, #12]
 800125c:	e021      	b.n	80012a2 <HAL_GPIO_Init+0x2e2>
 800125e:	bf00      	nop
 8001260:	10320000 	.word	0x10320000
 8001264:	10310000 	.word	0x10310000
 8001268:	10220000 	.word	0x10220000
 800126c:	10210000 	.word	0x10210000
 8001270:	10120000 	.word	0x10120000
 8001274:	10110000 	.word	0x10110000
 8001278:	40021000 	.word	0x40021000
 800127c:	40010000 	.word	0x40010000
 8001280:	40010800 	.word	0x40010800
 8001284:	40010c00 	.word	0x40010c00
 8001288:	40011000 	.word	0x40011000
 800128c:	40011400 	.word	0x40011400
 8001290:	40010400 	.word	0x40010400
 8001294:	4b0b      	ldr	r3, [pc, #44]	; (80012c4 <HAL_GPIO_Init+0x304>)
 8001296:	68da      	ldr	r2, [r3, #12]
 8001298:	69bb      	ldr	r3, [r7, #24]
 800129a:	43db      	mvns	r3, r3
 800129c:	4909      	ldr	r1, [pc, #36]	; (80012c4 <HAL_GPIO_Init+0x304>)
 800129e:	4013      	ands	r3, r2
 80012a0:	60cb      	str	r3, [r1, #12]
 80012a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012a4:	3301      	adds	r3, #1
 80012a6:	627b      	str	r3, [r7, #36]	; 0x24
 80012a8:	683b      	ldr	r3, [r7, #0]
 80012aa:	681a      	ldr	r2, [r3, #0]
 80012ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012ae:	fa22 f303 	lsr.w	r3, r2, r3
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	f47f ae8e 	bne.w	8000fd4 <HAL_GPIO_Init+0x14>
 80012b8:	bf00      	nop
 80012ba:	bf00      	nop
 80012bc:	372c      	adds	r7, #44	; 0x2c
 80012be:	46bd      	mov	sp, r7
 80012c0:	bc80      	pop	{r7}
 80012c2:	4770      	bx	lr
 80012c4:	40010400 	.word	0x40010400

080012c8 <HAL_GPIO_ReadPin>:
 80012c8:	b480      	push	{r7}
 80012ca:	b085      	sub	sp, #20
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	6078      	str	r0, [r7, #4]
 80012d0:	460b      	mov	r3, r1
 80012d2:	807b      	strh	r3, [r7, #2]
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	689a      	ldr	r2, [r3, #8]
 80012d8:	887b      	ldrh	r3, [r7, #2]
 80012da:	4013      	ands	r3, r2
 80012dc:	2b00      	cmp	r3, #0
 80012de:	d002      	beq.n	80012e6 <HAL_GPIO_ReadPin+0x1e>
 80012e0:	2301      	movs	r3, #1
 80012e2:	73fb      	strb	r3, [r7, #15]
 80012e4:	e001      	b.n	80012ea <HAL_GPIO_ReadPin+0x22>
 80012e6:	2300      	movs	r3, #0
 80012e8:	73fb      	strb	r3, [r7, #15]
 80012ea:	7bfb      	ldrb	r3, [r7, #15]
 80012ec:	4618      	mov	r0, r3
 80012ee:	3714      	adds	r7, #20
 80012f0:	46bd      	mov	sp, r7
 80012f2:	bc80      	pop	{r7}
 80012f4:	4770      	bx	lr

080012f6 <HAL_GPIO_WritePin>:
 80012f6:	b480      	push	{r7}
 80012f8:	b083      	sub	sp, #12
 80012fa:	af00      	add	r7, sp, #0
 80012fc:	6078      	str	r0, [r7, #4]
 80012fe:	460b      	mov	r3, r1
 8001300:	807b      	strh	r3, [r7, #2]
 8001302:	4613      	mov	r3, r2
 8001304:	707b      	strb	r3, [r7, #1]
 8001306:	787b      	ldrb	r3, [r7, #1]
 8001308:	2b00      	cmp	r3, #0
 800130a:	d003      	beq.n	8001314 <HAL_GPIO_WritePin+0x1e>
 800130c:	887a      	ldrh	r2, [r7, #2]
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	611a      	str	r2, [r3, #16]
 8001312:	e003      	b.n	800131c <HAL_GPIO_WritePin+0x26>
 8001314:	887b      	ldrh	r3, [r7, #2]
 8001316:	041a      	lsls	r2, r3, #16
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	611a      	str	r2, [r3, #16]
 800131c:	bf00      	nop
 800131e:	370c      	adds	r7, #12
 8001320:	46bd      	mov	sp, r7
 8001322:	bc80      	pop	{r7}
 8001324:	4770      	bx	lr

08001326 <HAL_GPIO_TogglePin>:
 8001326:	b480      	push	{r7}
 8001328:	b085      	sub	sp, #20
 800132a:	af00      	add	r7, sp, #0
 800132c:	6078      	str	r0, [r7, #4]
 800132e:	460b      	mov	r3, r1
 8001330:	807b      	strh	r3, [r7, #2]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	68db      	ldr	r3, [r3, #12]
 8001336:	60fb      	str	r3, [r7, #12]
 8001338:	887a      	ldrh	r2, [r7, #2]
 800133a:	68fb      	ldr	r3, [r7, #12]
 800133c:	4013      	ands	r3, r2
 800133e:	041a      	lsls	r2, r3, #16
 8001340:	68fb      	ldr	r3, [r7, #12]
 8001342:	43d9      	mvns	r1, r3
 8001344:	887b      	ldrh	r3, [r7, #2]
 8001346:	400b      	ands	r3, r1
 8001348:	431a      	orrs	r2, r3
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	611a      	str	r2, [r3, #16]
 800134e:	bf00      	nop
 8001350:	3714      	adds	r7, #20
 8001352:	46bd      	mov	sp, r7
 8001354:	bc80      	pop	{r7}
 8001356:	4770      	bx	lr

08001358 <HAL_GPIO_EXTI_IRQHandler>:
 8001358:	b580      	push	{r7, lr}
 800135a:	b082      	sub	sp, #8
 800135c:	af00      	add	r7, sp, #0
 800135e:	4603      	mov	r3, r0
 8001360:	80fb      	strh	r3, [r7, #6]
 8001362:	4b08      	ldr	r3, [pc, #32]	; (8001384 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001364:	695a      	ldr	r2, [r3, #20]
 8001366:	88fb      	ldrh	r3, [r7, #6]
 8001368:	4013      	ands	r3, r2
 800136a:	2b00      	cmp	r3, #0
 800136c:	d006      	beq.n	800137c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800136e:	4a05      	ldr	r2, [pc, #20]	; (8001384 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001370:	88fb      	ldrh	r3, [r7, #6]
 8001372:	6153      	str	r3, [r2, #20]
 8001374:	88fb      	ldrh	r3, [r7, #6]
 8001376:	4618      	mov	r0, r3
 8001378:	f000 f806 	bl	8001388 <HAL_GPIO_EXTI_Callback>
 800137c:	bf00      	nop
 800137e:	3708      	adds	r7, #8
 8001380:	46bd      	mov	sp, r7
 8001382:	bd80      	pop	{r7, pc}
 8001384:	40010400 	.word	0x40010400

08001388 <HAL_GPIO_EXTI_Callback>:
 8001388:	b480      	push	{r7}
 800138a:	b083      	sub	sp, #12
 800138c:	af00      	add	r7, sp, #0
 800138e:	4603      	mov	r3, r0
 8001390:	80fb      	strh	r3, [r7, #6]
 8001392:	bf00      	nop
 8001394:	370c      	adds	r7, #12
 8001396:	46bd      	mov	sp, r7
 8001398:	bc80      	pop	{r7}
 800139a:	4770      	bx	lr

0800139c <HAL_RCC_OscConfig>:
 800139c:	b580      	push	{r7, lr}
 800139e:	b086      	sub	sp, #24
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d101      	bne.n	80013ae <HAL_RCC_OscConfig+0x12>
 80013aa:	2301      	movs	r3, #1
 80013ac:	e272      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	f003 0301 	and.w	r3, r3, #1
 80013b6:	2b00      	cmp	r3, #0
 80013b8:	f000 8087 	beq.w	80014ca <HAL_RCC_OscConfig+0x12e>
 80013bc:	4b92      	ldr	r3, [pc, #584]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80013be:	685b      	ldr	r3, [r3, #4]
 80013c0:	f003 030c 	and.w	r3, r3, #12
 80013c4:	2b04      	cmp	r3, #4
 80013c6:	d00c      	beq.n	80013e2 <HAL_RCC_OscConfig+0x46>
 80013c8:	4b8f      	ldr	r3, [pc, #572]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80013ca:	685b      	ldr	r3, [r3, #4]
 80013cc:	f003 030c 	and.w	r3, r3, #12
 80013d0:	2b08      	cmp	r3, #8
 80013d2:	d112      	bne.n	80013fa <HAL_RCC_OscConfig+0x5e>
 80013d4:	4b8c      	ldr	r3, [pc, #560]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80013d6:	685b      	ldr	r3, [r3, #4]
 80013d8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80013dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80013e0:	d10b      	bne.n	80013fa <HAL_RCC_OscConfig+0x5e>
 80013e2:	4b89      	ldr	r3, [pc, #548]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d06c      	beq.n	80014c8 <HAL_RCC_OscConfig+0x12c>
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	685b      	ldr	r3, [r3, #4]
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d168      	bne.n	80014c8 <HAL_RCC_OscConfig+0x12c>
 80013f6:	2301      	movs	r3, #1
 80013f8:	e24c      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	685b      	ldr	r3, [r3, #4]
 80013fe:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001402:	d106      	bne.n	8001412 <HAL_RCC_OscConfig+0x76>
 8001404:	4b80      	ldr	r3, [pc, #512]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	4a7f      	ldr	r2, [pc, #508]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800140a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800140e:	6013      	str	r3, [r2, #0]
 8001410:	e02e      	b.n	8001470 <HAL_RCC_OscConfig+0xd4>
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	685b      	ldr	r3, [r3, #4]
 8001416:	2b00      	cmp	r3, #0
 8001418:	d10c      	bne.n	8001434 <HAL_RCC_OscConfig+0x98>
 800141a:	4b7b      	ldr	r3, [pc, #492]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800141c:	681b      	ldr	r3, [r3, #0]
 800141e:	4a7a      	ldr	r2, [pc, #488]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001420:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001424:	6013      	str	r3, [r2, #0]
 8001426:	4b78      	ldr	r3, [pc, #480]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	4a77      	ldr	r2, [pc, #476]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800142c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001430:	6013      	str	r3, [r2, #0]
 8001432:	e01d      	b.n	8001470 <HAL_RCC_OscConfig+0xd4>
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	685b      	ldr	r3, [r3, #4]
 8001438:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800143c:	d10c      	bne.n	8001458 <HAL_RCC_OscConfig+0xbc>
 800143e:	4b72      	ldr	r3, [pc, #456]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001440:	681b      	ldr	r3, [r3, #0]
 8001442:	4a71      	ldr	r2, [pc, #452]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001444:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001448:	6013      	str	r3, [r2, #0]
 800144a:	4b6f      	ldr	r3, [pc, #444]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	4a6e      	ldr	r2, [pc, #440]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001450:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001454:	6013      	str	r3, [r2, #0]
 8001456:	e00b      	b.n	8001470 <HAL_RCC_OscConfig+0xd4>
 8001458:	4b6b      	ldr	r3, [pc, #428]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	4a6a      	ldr	r2, [pc, #424]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800145e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001462:	6013      	str	r3, [r2, #0]
 8001464:	4b68      	ldr	r3, [pc, #416]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	4a67      	ldr	r2, [pc, #412]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800146a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800146e:	6013      	str	r3, [r2, #0]
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	685b      	ldr	r3, [r3, #4]
 8001474:	2b00      	cmp	r3, #0
 8001476:	d013      	beq.n	80014a0 <HAL_RCC_OscConfig+0x104>
 8001478:	f7ff fc8a 	bl	8000d90 <HAL_GetTick>
 800147c:	6138      	str	r0, [r7, #16]
 800147e:	e008      	b.n	8001492 <HAL_RCC_OscConfig+0xf6>
 8001480:	f7ff fc86 	bl	8000d90 <HAL_GetTick>
 8001484:	4602      	mov	r2, r0
 8001486:	693b      	ldr	r3, [r7, #16]
 8001488:	1ad3      	subs	r3, r2, r3
 800148a:	2b64      	cmp	r3, #100	; 0x64
 800148c:	d901      	bls.n	8001492 <HAL_RCC_OscConfig+0xf6>
 800148e:	2303      	movs	r3, #3
 8001490:	e200      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001492:	4b5d      	ldr	r3, [pc, #372]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800149a:	2b00      	cmp	r3, #0
 800149c:	d0f0      	beq.n	8001480 <HAL_RCC_OscConfig+0xe4>
 800149e:	e014      	b.n	80014ca <HAL_RCC_OscConfig+0x12e>
 80014a0:	f7ff fc76 	bl	8000d90 <HAL_GetTick>
 80014a4:	6138      	str	r0, [r7, #16]
 80014a6:	e008      	b.n	80014ba <HAL_RCC_OscConfig+0x11e>
 80014a8:	f7ff fc72 	bl	8000d90 <HAL_GetTick>
 80014ac:	4602      	mov	r2, r0
 80014ae:	693b      	ldr	r3, [r7, #16]
 80014b0:	1ad3      	subs	r3, r2, r3
 80014b2:	2b64      	cmp	r3, #100	; 0x64
 80014b4:	d901      	bls.n	80014ba <HAL_RCC_OscConfig+0x11e>
 80014b6:	2303      	movs	r3, #3
 80014b8:	e1ec      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 80014ba:	4b53      	ldr	r3, [pc, #332]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d1f0      	bne.n	80014a8 <HAL_RCC_OscConfig+0x10c>
 80014c6:	e000      	b.n	80014ca <HAL_RCC_OscConfig+0x12e>
 80014c8:	bf00      	nop
 80014ca:	687b      	ldr	r3, [r7, #4]
 80014cc:	681b      	ldr	r3, [r3, #0]
 80014ce:	f003 0302 	and.w	r3, r3, #2
 80014d2:	2b00      	cmp	r3, #0
 80014d4:	d063      	beq.n	800159e <HAL_RCC_OscConfig+0x202>
 80014d6:	4b4c      	ldr	r3, [pc, #304]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80014d8:	685b      	ldr	r3, [r3, #4]
 80014da:	f003 030c 	and.w	r3, r3, #12
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d00b      	beq.n	80014fa <HAL_RCC_OscConfig+0x15e>
 80014e2:	4b49      	ldr	r3, [pc, #292]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80014e4:	685b      	ldr	r3, [r3, #4]
 80014e6:	f003 030c 	and.w	r3, r3, #12
 80014ea:	2b08      	cmp	r3, #8
 80014ec:	d11c      	bne.n	8001528 <HAL_RCC_OscConfig+0x18c>
 80014ee:	4b46      	ldr	r3, [pc, #280]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80014f0:	685b      	ldr	r3, [r3, #4]
 80014f2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d116      	bne.n	8001528 <HAL_RCC_OscConfig+0x18c>
 80014fa:	4b43      	ldr	r3, [pc, #268]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	f003 0302 	and.w	r3, r3, #2
 8001502:	2b00      	cmp	r3, #0
 8001504:	d005      	beq.n	8001512 <HAL_RCC_OscConfig+0x176>
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	691b      	ldr	r3, [r3, #16]
 800150a:	2b01      	cmp	r3, #1
 800150c:	d001      	beq.n	8001512 <HAL_RCC_OscConfig+0x176>
 800150e:	2301      	movs	r3, #1
 8001510:	e1c0      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001512:	4b3d      	ldr	r3, [pc, #244]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	695b      	ldr	r3, [r3, #20]
 800151e:	00db      	lsls	r3, r3, #3
 8001520:	4939      	ldr	r1, [pc, #228]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001522:	4313      	orrs	r3, r2
 8001524:	600b      	str	r3, [r1, #0]
 8001526:	e03a      	b.n	800159e <HAL_RCC_OscConfig+0x202>
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	691b      	ldr	r3, [r3, #16]
 800152c:	2b00      	cmp	r3, #0
 800152e:	d020      	beq.n	8001572 <HAL_RCC_OscConfig+0x1d6>
 8001530:	4b36      	ldr	r3, [pc, #216]	; (800160c <HAL_RCC_OscConfig+0x270>)
 8001532:	2201      	movs	r2, #1
 8001534:	601a      	str	r2, [r3, #0]
 8001536:	f7ff fc2b 	bl	8000d90 <HAL_GetTick>
 800153a:	6138      	str	r0, [r7, #16]
 800153c:	e008      	b.n	8001550 <HAL_RCC_OscConfig+0x1b4>
 800153e:	f7ff fc27 	bl	8000d90 <HAL_GetTick>
 8001542:	4602      	mov	r2, r0
 8001544:	693b      	ldr	r3, [r7, #16]
 8001546:	1ad3      	subs	r3, r2, r3
 8001548:	2b02      	cmp	r3, #2
 800154a:	d901      	bls.n	8001550 <HAL_RCC_OscConfig+0x1b4>
 800154c:	2303      	movs	r3, #3
 800154e:	e1a1      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001550:	4b2d      	ldr	r3, [pc, #180]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	f003 0302 	and.w	r3, r3, #2
 8001558:	2b00      	cmp	r3, #0
 800155a:	d0f0      	beq.n	800153e <HAL_RCC_OscConfig+0x1a2>
 800155c:	4b2a      	ldr	r3, [pc, #168]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001564:	687b      	ldr	r3, [r7, #4]
 8001566:	695b      	ldr	r3, [r3, #20]
 8001568:	00db      	lsls	r3, r3, #3
 800156a:	4927      	ldr	r1, [pc, #156]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 800156c:	4313      	orrs	r3, r2
 800156e:	600b      	str	r3, [r1, #0]
 8001570:	e015      	b.n	800159e <HAL_RCC_OscConfig+0x202>
 8001572:	4b26      	ldr	r3, [pc, #152]	; (800160c <HAL_RCC_OscConfig+0x270>)
 8001574:	2200      	movs	r2, #0
 8001576:	601a      	str	r2, [r3, #0]
 8001578:	f7ff fc0a 	bl	8000d90 <HAL_GetTick>
 800157c:	6138      	str	r0, [r7, #16]
 800157e:	e008      	b.n	8001592 <HAL_RCC_OscConfig+0x1f6>
 8001580:	f7ff fc06 	bl	8000d90 <HAL_GetTick>
 8001584:	4602      	mov	r2, r0
 8001586:	693b      	ldr	r3, [r7, #16]
 8001588:	1ad3      	subs	r3, r2, r3
 800158a:	2b02      	cmp	r3, #2
 800158c:	d901      	bls.n	8001592 <HAL_RCC_OscConfig+0x1f6>
 800158e:	2303      	movs	r3, #3
 8001590:	e180      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001592:	4b1d      	ldr	r3, [pc, #116]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	f003 0302 	and.w	r3, r3, #2
 800159a:	2b00      	cmp	r3, #0
 800159c:	d1f0      	bne.n	8001580 <HAL_RCC_OscConfig+0x1e4>
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	f003 0308 	and.w	r3, r3, #8
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d03a      	beq.n	8001620 <HAL_RCC_OscConfig+0x284>
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	699b      	ldr	r3, [r3, #24]
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d019      	beq.n	80015e6 <HAL_RCC_OscConfig+0x24a>
 80015b2:	4b17      	ldr	r3, [pc, #92]	; (8001610 <HAL_RCC_OscConfig+0x274>)
 80015b4:	2201      	movs	r2, #1
 80015b6:	601a      	str	r2, [r3, #0]
 80015b8:	f7ff fbea 	bl	8000d90 <HAL_GetTick>
 80015bc:	6138      	str	r0, [r7, #16]
 80015be:	e008      	b.n	80015d2 <HAL_RCC_OscConfig+0x236>
 80015c0:	f7ff fbe6 	bl	8000d90 <HAL_GetTick>
 80015c4:	4602      	mov	r2, r0
 80015c6:	693b      	ldr	r3, [r7, #16]
 80015c8:	1ad3      	subs	r3, r2, r3
 80015ca:	2b02      	cmp	r3, #2
 80015cc:	d901      	bls.n	80015d2 <HAL_RCC_OscConfig+0x236>
 80015ce:	2303      	movs	r3, #3
 80015d0:	e160      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 80015d2:	4b0d      	ldr	r3, [pc, #52]	; (8001608 <HAL_RCC_OscConfig+0x26c>)
 80015d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80015d6:	f003 0302 	and.w	r3, r3, #2
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d0f0      	beq.n	80015c0 <HAL_RCC_OscConfig+0x224>
 80015de:	2001      	movs	r0, #1
 80015e0:	f000 fad8 	bl	8001b94 <RCC_Delay>
 80015e4:	e01c      	b.n	8001620 <HAL_RCC_OscConfig+0x284>
 80015e6:	4b0a      	ldr	r3, [pc, #40]	; (8001610 <HAL_RCC_OscConfig+0x274>)
 80015e8:	2200      	movs	r2, #0
 80015ea:	601a      	str	r2, [r3, #0]
 80015ec:	f7ff fbd0 	bl	8000d90 <HAL_GetTick>
 80015f0:	6138      	str	r0, [r7, #16]
 80015f2:	e00f      	b.n	8001614 <HAL_RCC_OscConfig+0x278>
 80015f4:	f7ff fbcc 	bl	8000d90 <HAL_GetTick>
 80015f8:	4602      	mov	r2, r0
 80015fa:	693b      	ldr	r3, [r7, #16]
 80015fc:	1ad3      	subs	r3, r2, r3
 80015fe:	2b02      	cmp	r3, #2
 8001600:	d908      	bls.n	8001614 <HAL_RCC_OscConfig+0x278>
 8001602:	2303      	movs	r3, #3
 8001604:	e146      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001606:	bf00      	nop
 8001608:	40021000 	.word	0x40021000
 800160c:	42420000 	.word	0x42420000
 8001610:	42420480 	.word	0x42420480
 8001614:	4b92      	ldr	r3, [pc, #584]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001616:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001618:	f003 0302 	and.w	r3, r3, #2
 800161c:	2b00      	cmp	r3, #0
 800161e:	d1e9      	bne.n	80015f4 <HAL_RCC_OscConfig+0x258>
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	f003 0304 	and.w	r3, r3, #4
 8001628:	2b00      	cmp	r3, #0
 800162a:	f000 80a6 	beq.w	800177a <HAL_RCC_OscConfig+0x3de>
 800162e:	2300      	movs	r3, #0
 8001630:	75fb      	strb	r3, [r7, #23]
 8001632:	4b8b      	ldr	r3, [pc, #556]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001634:	69db      	ldr	r3, [r3, #28]
 8001636:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800163a:	2b00      	cmp	r3, #0
 800163c:	d10d      	bne.n	800165a <HAL_RCC_OscConfig+0x2be>
 800163e:	4b88      	ldr	r3, [pc, #544]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001640:	69db      	ldr	r3, [r3, #28]
 8001642:	4a87      	ldr	r2, [pc, #540]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001644:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001648:	61d3      	str	r3, [r2, #28]
 800164a:	4b85      	ldr	r3, [pc, #532]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 800164c:	69db      	ldr	r3, [r3, #28]
 800164e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001652:	60bb      	str	r3, [r7, #8]
 8001654:	68bb      	ldr	r3, [r7, #8]
 8001656:	2301      	movs	r3, #1
 8001658:	75fb      	strb	r3, [r7, #23]
 800165a:	4b82      	ldr	r3, [pc, #520]	; (8001864 <HAL_RCC_OscConfig+0x4c8>)
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001662:	2b00      	cmp	r3, #0
 8001664:	d118      	bne.n	8001698 <HAL_RCC_OscConfig+0x2fc>
 8001666:	4b7f      	ldr	r3, [pc, #508]	; (8001864 <HAL_RCC_OscConfig+0x4c8>)
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	4a7e      	ldr	r2, [pc, #504]	; (8001864 <HAL_RCC_OscConfig+0x4c8>)
 800166c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001670:	6013      	str	r3, [r2, #0]
 8001672:	f7ff fb8d 	bl	8000d90 <HAL_GetTick>
 8001676:	6138      	str	r0, [r7, #16]
 8001678:	e008      	b.n	800168c <HAL_RCC_OscConfig+0x2f0>
 800167a:	f7ff fb89 	bl	8000d90 <HAL_GetTick>
 800167e:	4602      	mov	r2, r0
 8001680:	693b      	ldr	r3, [r7, #16]
 8001682:	1ad3      	subs	r3, r2, r3
 8001684:	2b64      	cmp	r3, #100	; 0x64
 8001686:	d901      	bls.n	800168c <HAL_RCC_OscConfig+0x2f0>
 8001688:	2303      	movs	r3, #3
 800168a:	e103      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 800168c:	4b75      	ldr	r3, [pc, #468]	; (8001864 <HAL_RCC_OscConfig+0x4c8>)
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001694:	2b00      	cmp	r3, #0
 8001696:	d0f0      	beq.n	800167a <HAL_RCC_OscConfig+0x2de>
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	68db      	ldr	r3, [r3, #12]
 800169c:	2b01      	cmp	r3, #1
 800169e:	d106      	bne.n	80016ae <HAL_RCC_OscConfig+0x312>
 80016a0:	4b6f      	ldr	r3, [pc, #444]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016a2:	6a1b      	ldr	r3, [r3, #32]
 80016a4:	4a6e      	ldr	r2, [pc, #440]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016a6:	f043 0301 	orr.w	r3, r3, #1
 80016aa:	6213      	str	r3, [r2, #32]
 80016ac:	e02d      	b.n	800170a <HAL_RCC_OscConfig+0x36e>
 80016ae:	687b      	ldr	r3, [r7, #4]
 80016b0:	68db      	ldr	r3, [r3, #12]
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d10c      	bne.n	80016d0 <HAL_RCC_OscConfig+0x334>
 80016b6:	4b6a      	ldr	r3, [pc, #424]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016b8:	6a1b      	ldr	r3, [r3, #32]
 80016ba:	4a69      	ldr	r2, [pc, #420]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016bc:	f023 0301 	bic.w	r3, r3, #1
 80016c0:	6213      	str	r3, [r2, #32]
 80016c2:	4b67      	ldr	r3, [pc, #412]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016c4:	6a1b      	ldr	r3, [r3, #32]
 80016c6:	4a66      	ldr	r2, [pc, #408]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016c8:	f023 0304 	bic.w	r3, r3, #4
 80016cc:	6213      	str	r3, [r2, #32]
 80016ce:	e01c      	b.n	800170a <HAL_RCC_OscConfig+0x36e>
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	68db      	ldr	r3, [r3, #12]
 80016d4:	2b05      	cmp	r3, #5
 80016d6:	d10c      	bne.n	80016f2 <HAL_RCC_OscConfig+0x356>
 80016d8:	4b61      	ldr	r3, [pc, #388]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016da:	6a1b      	ldr	r3, [r3, #32]
 80016dc:	4a60      	ldr	r2, [pc, #384]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016de:	f043 0304 	orr.w	r3, r3, #4
 80016e2:	6213      	str	r3, [r2, #32]
 80016e4:	4b5e      	ldr	r3, [pc, #376]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016e6:	6a1b      	ldr	r3, [r3, #32]
 80016e8:	4a5d      	ldr	r2, [pc, #372]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016ea:	f043 0301 	orr.w	r3, r3, #1
 80016ee:	6213      	str	r3, [r2, #32]
 80016f0:	e00b      	b.n	800170a <HAL_RCC_OscConfig+0x36e>
 80016f2:	4b5b      	ldr	r3, [pc, #364]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016f4:	6a1b      	ldr	r3, [r3, #32]
 80016f6:	4a5a      	ldr	r2, [pc, #360]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80016f8:	f023 0301 	bic.w	r3, r3, #1
 80016fc:	6213      	str	r3, [r2, #32]
 80016fe:	4b58      	ldr	r3, [pc, #352]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001700:	6a1b      	ldr	r3, [r3, #32]
 8001702:	4a57      	ldr	r2, [pc, #348]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001704:	f023 0304 	bic.w	r3, r3, #4
 8001708:	6213      	str	r3, [r2, #32]
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	68db      	ldr	r3, [r3, #12]
 800170e:	2b00      	cmp	r3, #0
 8001710:	d015      	beq.n	800173e <HAL_RCC_OscConfig+0x3a2>
 8001712:	f7ff fb3d 	bl	8000d90 <HAL_GetTick>
 8001716:	6138      	str	r0, [r7, #16]
 8001718:	e00a      	b.n	8001730 <HAL_RCC_OscConfig+0x394>
 800171a:	f7ff fb39 	bl	8000d90 <HAL_GetTick>
 800171e:	4602      	mov	r2, r0
 8001720:	693b      	ldr	r3, [r7, #16]
 8001722:	1ad3      	subs	r3, r2, r3
 8001724:	f241 3288 	movw	r2, #5000	; 0x1388
 8001728:	4293      	cmp	r3, r2
 800172a:	d901      	bls.n	8001730 <HAL_RCC_OscConfig+0x394>
 800172c:	2303      	movs	r3, #3
 800172e:	e0b1      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001730:	4b4b      	ldr	r3, [pc, #300]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001732:	6a1b      	ldr	r3, [r3, #32]
 8001734:	f003 0302 	and.w	r3, r3, #2
 8001738:	2b00      	cmp	r3, #0
 800173a:	d0ee      	beq.n	800171a <HAL_RCC_OscConfig+0x37e>
 800173c:	e014      	b.n	8001768 <HAL_RCC_OscConfig+0x3cc>
 800173e:	f7ff fb27 	bl	8000d90 <HAL_GetTick>
 8001742:	6138      	str	r0, [r7, #16]
 8001744:	e00a      	b.n	800175c <HAL_RCC_OscConfig+0x3c0>
 8001746:	f7ff fb23 	bl	8000d90 <HAL_GetTick>
 800174a:	4602      	mov	r2, r0
 800174c:	693b      	ldr	r3, [r7, #16]
 800174e:	1ad3      	subs	r3, r2, r3
 8001750:	f241 3288 	movw	r2, #5000	; 0x1388
 8001754:	4293      	cmp	r3, r2
 8001756:	d901      	bls.n	800175c <HAL_RCC_OscConfig+0x3c0>
 8001758:	2303      	movs	r3, #3
 800175a:	e09b      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 800175c:	4b40      	ldr	r3, [pc, #256]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 800175e:	6a1b      	ldr	r3, [r3, #32]
 8001760:	f003 0302 	and.w	r3, r3, #2
 8001764:	2b00      	cmp	r3, #0
 8001766:	d1ee      	bne.n	8001746 <HAL_RCC_OscConfig+0x3aa>
 8001768:	7dfb      	ldrb	r3, [r7, #23]
 800176a:	2b01      	cmp	r3, #1
 800176c:	d105      	bne.n	800177a <HAL_RCC_OscConfig+0x3de>
 800176e:	4b3c      	ldr	r3, [pc, #240]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001770:	69db      	ldr	r3, [r3, #28]
 8001772:	4a3b      	ldr	r2, [pc, #236]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001774:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001778:	61d3      	str	r3, [r2, #28]
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	69db      	ldr	r3, [r3, #28]
 800177e:	2b00      	cmp	r3, #0
 8001780:	f000 8087 	beq.w	8001892 <HAL_RCC_OscConfig+0x4f6>
 8001784:	4b36      	ldr	r3, [pc, #216]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	f003 030c 	and.w	r3, r3, #12
 800178c:	2b08      	cmp	r3, #8
 800178e:	d061      	beq.n	8001854 <HAL_RCC_OscConfig+0x4b8>
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	69db      	ldr	r3, [r3, #28]
 8001794:	2b02      	cmp	r3, #2
 8001796:	d146      	bne.n	8001826 <HAL_RCC_OscConfig+0x48a>
 8001798:	4b33      	ldr	r3, [pc, #204]	; (8001868 <HAL_RCC_OscConfig+0x4cc>)
 800179a:	2200      	movs	r2, #0
 800179c:	601a      	str	r2, [r3, #0]
 800179e:	f7ff faf7 	bl	8000d90 <HAL_GetTick>
 80017a2:	6138      	str	r0, [r7, #16]
 80017a4:	e008      	b.n	80017b8 <HAL_RCC_OscConfig+0x41c>
 80017a6:	f7ff faf3 	bl	8000d90 <HAL_GetTick>
 80017aa:	4602      	mov	r2, r0
 80017ac:	693b      	ldr	r3, [r7, #16]
 80017ae:	1ad3      	subs	r3, r2, r3
 80017b0:	2b02      	cmp	r3, #2
 80017b2:	d901      	bls.n	80017b8 <HAL_RCC_OscConfig+0x41c>
 80017b4:	2303      	movs	r3, #3
 80017b6:	e06d      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 80017b8:	4b29      	ldr	r3, [pc, #164]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d1f0      	bne.n	80017a6 <HAL_RCC_OscConfig+0x40a>
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	6a1b      	ldr	r3, [r3, #32]
 80017c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017cc:	d108      	bne.n	80017e0 <HAL_RCC_OscConfig+0x444>
 80017ce:	4b24      	ldr	r3, [pc, #144]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80017d0:	685b      	ldr	r3, [r3, #4]
 80017d2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	689b      	ldr	r3, [r3, #8]
 80017da:	4921      	ldr	r1, [pc, #132]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80017dc:	4313      	orrs	r3, r2
 80017de:	604b      	str	r3, [r1, #4]
 80017e0:	4b1f      	ldr	r3, [pc, #124]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80017e2:	685b      	ldr	r3, [r3, #4]
 80017e4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	6a19      	ldr	r1, [r3, #32]
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017f0:	430b      	orrs	r3, r1
 80017f2:	491b      	ldr	r1, [pc, #108]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 80017f4:	4313      	orrs	r3, r2
 80017f6:	604b      	str	r3, [r1, #4]
 80017f8:	4b1b      	ldr	r3, [pc, #108]	; (8001868 <HAL_RCC_OscConfig+0x4cc>)
 80017fa:	2201      	movs	r2, #1
 80017fc:	601a      	str	r2, [r3, #0]
 80017fe:	f7ff fac7 	bl	8000d90 <HAL_GetTick>
 8001802:	6138      	str	r0, [r7, #16]
 8001804:	e008      	b.n	8001818 <HAL_RCC_OscConfig+0x47c>
 8001806:	f7ff fac3 	bl	8000d90 <HAL_GetTick>
 800180a:	4602      	mov	r2, r0
 800180c:	693b      	ldr	r3, [r7, #16]
 800180e:	1ad3      	subs	r3, r2, r3
 8001810:	2b02      	cmp	r3, #2
 8001812:	d901      	bls.n	8001818 <HAL_RCC_OscConfig+0x47c>
 8001814:	2303      	movs	r3, #3
 8001816:	e03d      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001818:	4b11      	ldr	r3, [pc, #68]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001820:	2b00      	cmp	r3, #0
 8001822:	d0f0      	beq.n	8001806 <HAL_RCC_OscConfig+0x46a>
 8001824:	e035      	b.n	8001892 <HAL_RCC_OscConfig+0x4f6>
 8001826:	4b10      	ldr	r3, [pc, #64]	; (8001868 <HAL_RCC_OscConfig+0x4cc>)
 8001828:	2200      	movs	r2, #0
 800182a:	601a      	str	r2, [r3, #0]
 800182c:	f7ff fab0 	bl	8000d90 <HAL_GetTick>
 8001830:	6138      	str	r0, [r7, #16]
 8001832:	e008      	b.n	8001846 <HAL_RCC_OscConfig+0x4aa>
 8001834:	f7ff faac 	bl	8000d90 <HAL_GetTick>
 8001838:	4602      	mov	r2, r0
 800183a:	693b      	ldr	r3, [r7, #16]
 800183c:	1ad3      	subs	r3, r2, r3
 800183e:	2b02      	cmp	r3, #2
 8001840:	d901      	bls.n	8001846 <HAL_RCC_OscConfig+0x4aa>
 8001842:	2303      	movs	r3, #3
 8001844:	e026      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001846:	4b06      	ldr	r3, [pc, #24]	; (8001860 <HAL_RCC_OscConfig+0x4c4>)
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800184e:	2b00      	cmp	r3, #0
 8001850:	d1f0      	bne.n	8001834 <HAL_RCC_OscConfig+0x498>
 8001852:	e01e      	b.n	8001892 <HAL_RCC_OscConfig+0x4f6>
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	69db      	ldr	r3, [r3, #28]
 8001858:	2b01      	cmp	r3, #1
 800185a:	d107      	bne.n	800186c <HAL_RCC_OscConfig+0x4d0>
 800185c:	2301      	movs	r3, #1
 800185e:	e019      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001860:	40021000 	.word	0x40021000
 8001864:	40007000 	.word	0x40007000
 8001868:	42420060 	.word	0x42420060
 800186c:	4b0b      	ldr	r3, [pc, #44]	; (800189c <HAL_RCC_OscConfig+0x500>)
 800186e:	685b      	ldr	r3, [r3, #4]
 8001870:	60fb      	str	r3, [r7, #12]
 8001872:	68fb      	ldr	r3, [r7, #12]
 8001874:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	6a1b      	ldr	r3, [r3, #32]
 800187c:	429a      	cmp	r2, r3
 800187e:	d106      	bne.n	800188e <HAL_RCC_OscConfig+0x4f2>
 8001880:	68fb      	ldr	r3, [r7, #12]
 8001882:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800188a:	429a      	cmp	r2, r3
 800188c:	d001      	beq.n	8001892 <HAL_RCC_OscConfig+0x4f6>
 800188e:	2301      	movs	r3, #1
 8001890:	e000      	b.n	8001894 <HAL_RCC_OscConfig+0x4f8>
 8001892:	2300      	movs	r3, #0
 8001894:	4618      	mov	r0, r3
 8001896:	3718      	adds	r7, #24
 8001898:	46bd      	mov	sp, r7
 800189a:	bd80      	pop	{r7, pc}
 800189c:	40021000 	.word	0x40021000

080018a0 <HAL_RCC_ClockConfig>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b084      	sub	sp, #16
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	6078      	str	r0, [r7, #4]
 80018a8:	6039      	str	r1, [r7, #0]
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d101      	bne.n	80018b4 <HAL_RCC_ClockConfig+0x14>
 80018b0:	2301      	movs	r3, #1
 80018b2:	e0d0      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80018b4:	4b6a      	ldr	r3, [pc, #424]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	f003 0307 	and.w	r3, r3, #7
 80018bc:	683a      	ldr	r2, [r7, #0]
 80018be:	429a      	cmp	r2, r3
 80018c0:	d910      	bls.n	80018e4 <HAL_RCC_ClockConfig+0x44>
 80018c2:	4b67      	ldr	r3, [pc, #412]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	f023 0207 	bic.w	r2, r3, #7
 80018ca:	4965      	ldr	r1, [pc, #404]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018cc:	683b      	ldr	r3, [r7, #0]
 80018ce:	4313      	orrs	r3, r2
 80018d0:	600b      	str	r3, [r1, #0]
 80018d2:	4b63      	ldr	r3, [pc, #396]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f003 0307 	and.w	r3, r3, #7
 80018da:	683a      	ldr	r2, [r7, #0]
 80018dc:	429a      	cmp	r2, r3
 80018de:	d001      	beq.n	80018e4 <HAL_RCC_ClockConfig+0x44>
 80018e0:	2301      	movs	r3, #1
 80018e2:	e0b8      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	f003 0302 	and.w	r3, r3, #2
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d020      	beq.n	8001932 <HAL_RCC_ClockConfig+0x92>
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	f003 0304 	and.w	r3, r3, #4
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d005      	beq.n	8001908 <HAL_RCC_ClockConfig+0x68>
 80018fc:	4b59      	ldr	r3, [pc, #356]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 80018fe:	685b      	ldr	r3, [r3, #4]
 8001900:	4a58      	ldr	r2, [pc, #352]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001902:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001906:	6053      	str	r3, [r2, #4]
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	f003 0308 	and.w	r3, r3, #8
 8001910:	2b00      	cmp	r3, #0
 8001912:	d005      	beq.n	8001920 <HAL_RCC_ClockConfig+0x80>
 8001914:	4b53      	ldr	r3, [pc, #332]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001916:	685b      	ldr	r3, [r3, #4]
 8001918:	4a52      	ldr	r2, [pc, #328]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 800191a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800191e:	6053      	str	r3, [r2, #4]
 8001920:	4b50      	ldr	r3, [pc, #320]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001922:	685b      	ldr	r3, [r3, #4]
 8001924:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	689b      	ldr	r3, [r3, #8]
 800192c:	494d      	ldr	r1, [pc, #308]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 800192e:	4313      	orrs	r3, r2
 8001930:	604b      	str	r3, [r1, #4]
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	681b      	ldr	r3, [r3, #0]
 8001936:	f003 0301 	and.w	r3, r3, #1
 800193a:	2b00      	cmp	r3, #0
 800193c:	d040      	beq.n	80019c0 <HAL_RCC_ClockConfig+0x120>
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	685b      	ldr	r3, [r3, #4]
 8001942:	2b01      	cmp	r3, #1
 8001944:	d107      	bne.n	8001956 <HAL_RCC_ClockConfig+0xb6>
 8001946:	4b47      	ldr	r3, [pc, #284]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800194e:	2b00      	cmp	r3, #0
 8001950:	d115      	bne.n	800197e <HAL_RCC_ClockConfig+0xde>
 8001952:	2301      	movs	r3, #1
 8001954:	e07f      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	2b02      	cmp	r3, #2
 800195c:	d107      	bne.n	800196e <HAL_RCC_ClockConfig+0xce>
 800195e:	4b41      	ldr	r3, [pc, #260]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001966:	2b00      	cmp	r3, #0
 8001968:	d109      	bne.n	800197e <HAL_RCC_ClockConfig+0xde>
 800196a:	2301      	movs	r3, #1
 800196c:	e073      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 800196e:	4b3d      	ldr	r3, [pc, #244]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f003 0302 	and.w	r3, r3, #2
 8001976:	2b00      	cmp	r3, #0
 8001978:	d101      	bne.n	800197e <HAL_RCC_ClockConfig+0xde>
 800197a:	2301      	movs	r3, #1
 800197c:	e06b      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 800197e:	4b39      	ldr	r3, [pc, #228]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001980:	685b      	ldr	r3, [r3, #4]
 8001982:	f023 0203 	bic.w	r2, r3, #3
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	685b      	ldr	r3, [r3, #4]
 800198a:	4936      	ldr	r1, [pc, #216]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 800198c:	4313      	orrs	r3, r2
 800198e:	604b      	str	r3, [r1, #4]
 8001990:	f7ff f9fe 	bl	8000d90 <HAL_GetTick>
 8001994:	60f8      	str	r0, [r7, #12]
 8001996:	e00a      	b.n	80019ae <HAL_RCC_ClockConfig+0x10e>
 8001998:	f7ff f9fa 	bl	8000d90 <HAL_GetTick>
 800199c:	4602      	mov	r2, r0
 800199e:	68fb      	ldr	r3, [r7, #12]
 80019a0:	1ad3      	subs	r3, r2, r3
 80019a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80019a6:	4293      	cmp	r3, r2
 80019a8:	d901      	bls.n	80019ae <HAL_RCC_ClockConfig+0x10e>
 80019aa:	2303      	movs	r3, #3
 80019ac:	e053      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80019ae:	4b2d      	ldr	r3, [pc, #180]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 80019b0:	685b      	ldr	r3, [r3, #4]
 80019b2:	f003 020c 	and.w	r2, r3, #12
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	685b      	ldr	r3, [r3, #4]
 80019ba:	009b      	lsls	r3, r3, #2
 80019bc:	429a      	cmp	r2, r3
 80019be:	d1eb      	bne.n	8001998 <HAL_RCC_ClockConfig+0xf8>
 80019c0:	4b27      	ldr	r3, [pc, #156]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	f003 0307 	and.w	r3, r3, #7
 80019c8:	683a      	ldr	r2, [r7, #0]
 80019ca:	429a      	cmp	r2, r3
 80019cc:	d210      	bcs.n	80019f0 <HAL_RCC_ClockConfig+0x150>
 80019ce:	4b24      	ldr	r3, [pc, #144]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	f023 0207 	bic.w	r2, r3, #7
 80019d6:	4922      	ldr	r1, [pc, #136]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019d8:	683b      	ldr	r3, [r7, #0]
 80019da:	4313      	orrs	r3, r2
 80019dc:	600b      	str	r3, [r1, #0]
 80019de:	4b20      	ldr	r3, [pc, #128]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	f003 0307 	and.w	r3, r3, #7
 80019e6:	683a      	ldr	r2, [r7, #0]
 80019e8:	429a      	cmp	r2, r3
 80019ea:	d001      	beq.n	80019f0 <HAL_RCC_ClockConfig+0x150>
 80019ec:	2301      	movs	r3, #1
 80019ee:	e032      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	f003 0304 	and.w	r3, r3, #4
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d008      	beq.n	8001a0e <HAL_RCC_ClockConfig+0x16e>
 80019fc:	4b19      	ldr	r3, [pc, #100]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 80019fe:	685b      	ldr	r3, [r3, #4]
 8001a00:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	68db      	ldr	r3, [r3, #12]
 8001a08:	4916      	ldr	r1, [pc, #88]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a0a:	4313      	orrs	r3, r2
 8001a0c:	604b      	str	r3, [r1, #4]
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	681b      	ldr	r3, [r3, #0]
 8001a12:	f003 0308 	and.w	r3, r3, #8
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d009      	beq.n	8001a2e <HAL_RCC_ClockConfig+0x18e>
 8001a1a:	4b12      	ldr	r3, [pc, #72]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a1c:	685b      	ldr	r3, [r3, #4]
 8001a1e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	691b      	ldr	r3, [r3, #16]
 8001a26:	00db      	lsls	r3, r3, #3
 8001a28:	490e      	ldr	r1, [pc, #56]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a2a:	4313      	orrs	r3, r2
 8001a2c:	604b      	str	r3, [r1, #4]
 8001a2e:	f000 f821 	bl	8001a74 <HAL_RCC_GetSysClockFreq>
 8001a32:	4602      	mov	r2, r0
 8001a34:	4b0b      	ldr	r3, [pc, #44]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a36:	685b      	ldr	r3, [r3, #4]
 8001a38:	091b      	lsrs	r3, r3, #4
 8001a3a:	f003 030f 	and.w	r3, r3, #15
 8001a3e:	490a      	ldr	r1, [pc, #40]	; (8001a68 <HAL_RCC_ClockConfig+0x1c8>)
 8001a40:	5ccb      	ldrb	r3, [r1, r3]
 8001a42:	fa22 f303 	lsr.w	r3, r2, r3
 8001a46:	4a09      	ldr	r2, [pc, #36]	; (8001a6c <HAL_RCC_ClockConfig+0x1cc>)
 8001a48:	6013      	str	r3, [r2, #0]
 8001a4a:	4b09      	ldr	r3, [pc, #36]	; (8001a70 <HAL_RCC_ClockConfig+0x1d0>)
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	4618      	mov	r0, r3
 8001a50:	f7ff f95c 	bl	8000d0c <HAL_InitTick>
 8001a54:	2300      	movs	r3, #0
 8001a56:	4618      	mov	r0, r3
 8001a58:	3710      	adds	r7, #16
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}
 8001a5e:	bf00      	nop
 8001a60:	40022000 	.word	0x40022000
 8001a64:	40021000 	.word	0x40021000
 8001a68:	080025fc 	.word	0x080025fc
 8001a6c:	20000034 	.word	0x20000034
 8001a70:	20000050 	.word	0x20000050

08001a74 <HAL_RCC_GetSysClockFreq>:
 8001a74:	b490      	push	{r4, r7}
 8001a76:	b08a      	sub	sp, #40	; 0x28
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	4b29      	ldr	r3, [pc, #164]	; (8001b20 <HAL_RCC_GetSysClockFreq+0xac>)
 8001a7c:	1d3c      	adds	r4, r7, #4
 8001a7e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001a80:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001a84:	f240 2301 	movw	r3, #513	; 0x201
 8001a88:	803b      	strh	r3, [r7, #0]
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	61fb      	str	r3, [r7, #28]
 8001a8e:	2300      	movs	r3, #0
 8001a90:	61bb      	str	r3, [r7, #24]
 8001a92:	2300      	movs	r3, #0
 8001a94:	627b      	str	r3, [r7, #36]	; 0x24
 8001a96:	2300      	movs	r3, #0
 8001a98:	617b      	str	r3, [r7, #20]
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	623b      	str	r3, [r7, #32]
 8001a9e:	4b21      	ldr	r3, [pc, #132]	; (8001b24 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001aa0:	685b      	ldr	r3, [r3, #4]
 8001aa2:	61fb      	str	r3, [r7, #28]
 8001aa4:	69fb      	ldr	r3, [r7, #28]
 8001aa6:	f003 030c 	and.w	r3, r3, #12
 8001aaa:	2b04      	cmp	r3, #4
 8001aac:	d002      	beq.n	8001ab4 <HAL_RCC_GetSysClockFreq+0x40>
 8001aae:	2b08      	cmp	r3, #8
 8001ab0:	d003      	beq.n	8001aba <HAL_RCC_GetSysClockFreq+0x46>
 8001ab2:	e02b      	b.n	8001b0c <HAL_RCC_GetSysClockFreq+0x98>
 8001ab4:	4b1c      	ldr	r3, [pc, #112]	; (8001b28 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001ab6:	623b      	str	r3, [r7, #32]
 8001ab8:	e02b      	b.n	8001b12 <HAL_RCC_GetSysClockFreq+0x9e>
 8001aba:	69fb      	ldr	r3, [r7, #28]
 8001abc:	0c9b      	lsrs	r3, r3, #18
 8001abe:	f003 030f 	and.w	r3, r3, #15
 8001ac2:	3328      	adds	r3, #40	; 0x28
 8001ac4:	443b      	add	r3, r7
 8001ac6:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001aca:	617b      	str	r3, [r7, #20]
 8001acc:	69fb      	ldr	r3, [r7, #28]
 8001ace:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	d012      	beq.n	8001afc <HAL_RCC_GetSysClockFreq+0x88>
 8001ad6:	4b13      	ldr	r3, [pc, #76]	; (8001b24 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001ad8:	685b      	ldr	r3, [r3, #4]
 8001ada:	0c5b      	lsrs	r3, r3, #17
 8001adc:	f003 0301 	and.w	r3, r3, #1
 8001ae0:	3328      	adds	r3, #40	; 0x28
 8001ae2:	443b      	add	r3, r7
 8001ae4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001ae8:	61bb      	str	r3, [r7, #24]
 8001aea:	697b      	ldr	r3, [r7, #20]
 8001aec:	4a0e      	ldr	r2, [pc, #56]	; (8001b28 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001aee:	fb03 f202 	mul.w	r2, r3, r2
 8001af2:	69bb      	ldr	r3, [r7, #24]
 8001af4:	fbb2 f3f3 	udiv	r3, r2, r3
 8001af8:	627b      	str	r3, [r7, #36]	; 0x24
 8001afa:	e004      	b.n	8001b06 <HAL_RCC_GetSysClockFreq+0x92>
 8001afc:	697b      	ldr	r3, [r7, #20]
 8001afe:	4a0b      	ldr	r2, [pc, #44]	; (8001b2c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001b00:	fb02 f303 	mul.w	r3, r2, r3
 8001b04:	627b      	str	r3, [r7, #36]	; 0x24
 8001b06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b08:	623b      	str	r3, [r7, #32]
 8001b0a:	e002      	b.n	8001b12 <HAL_RCC_GetSysClockFreq+0x9e>
 8001b0c:	4b06      	ldr	r3, [pc, #24]	; (8001b28 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001b0e:	623b      	str	r3, [r7, #32]
 8001b10:	bf00      	nop
 8001b12:	6a3b      	ldr	r3, [r7, #32]
 8001b14:	4618      	mov	r0, r3
 8001b16:	3728      	adds	r7, #40	; 0x28
 8001b18:	46bd      	mov	sp, r7
 8001b1a:	bc90      	pop	{r4, r7}
 8001b1c:	4770      	bx	lr
 8001b1e:	bf00      	nop
 8001b20:	080025ec 	.word	0x080025ec
 8001b24:	40021000 	.word	0x40021000
 8001b28:	007a1200 	.word	0x007a1200
 8001b2c:	003d0900 	.word	0x003d0900

08001b30 <HAL_RCC_GetHCLKFreq>:
 8001b30:	b480      	push	{r7}
 8001b32:	af00      	add	r7, sp, #0
 8001b34:	4b02      	ldr	r3, [pc, #8]	; (8001b40 <HAL_RCC_GetHCLKFreq+0x10>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	4618      	mov	r0, r3
 8001b3a:	46bd      	mov	sp, r7
 8001b3c:	bc80      	pop	{r7}
 8001b3e:	4770      	bx	lr
 8001b40:	20000034 	.word	0x20000034

08001b44 <HAL_RCC_GetPCLK1Freq>:
 8001b44:	b580      	push	{r7, lr}
 8001b46:	af00      	add	r7, sp, #0
 8001b48:	f7ff fff2 	bl	8001b30 <HAL_RCC_GetHCLKFreq>
 8001b4c:	4602      	mov	r2, r0
 8001b4e:	4b05      	ldr	r3, [pc, #20]	; (8001b64 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001b50:	685b      	ldr	r3, [r3, #4]
 8001b52:	0a1b      	lsrs	r3, r3, #8
 8001b54:	f003 0307 	and.w	r3, r3, #7
 8001b58:	4903      	ldr	r1, [pc, #12]	; (8001b68 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001b5a:	5ccb      	ldrb	r3, [r1, r3]
 8001b5c:	fa22 f303 	lsr.w	r3, r2, r3
 8001b60:	4618      	mov	r0, r3
 8001b62:	bd80      	pop	{r7, pc}
 8001b64:	40021000 	.word	0x40021000
 8001b68:	0800260c 	.word	0x0800260c

08001b6c <HAL_RCC_GetPCLK2Freq>:
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	f7ff ffde 	bl	8001b30 <HAL_RCC_GetHCLKFreq>
 8001b74:	4602      	mov	r2, r0
 8001b76:	4b05      	ldr	r3, [pc, #20]	; (8001b8c <HAL_RCC_GetPCLK2Freq+0x20>)
 8001b78:	685b      	ldr	r3, [r3, #4]
 8001b7a:	0adb      	lsrs	r3, r3, #11
 8001b7c:	f003 0307 	and.w	r3, r3, #7
 8001b80:	4903      	ldr	r1, [pc, #12]	; (8001b90 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001b82:	5ccb      	ldrb	r3, [r1, r3]
 8001b84:	fa22 f303 	lsr.w	r3, r2, r3
 8001b88:	4618      	mov	r0, r3
 8001b8a:	bd80      	pop	{r7, pc}
 8001b8c:	40021000 	.word	0x40021000
 8001b90:	0800260c 	.word	0x0800260c

08001b94 <RCC_Delay>:
 8001b94:	b480      	push	{r7}
 8001b96:	b085      	sub	sp, #20
 8001b98:	af00      	add	r7, sp, #0
 8001b9a:	6078      	str	r0, [r7, #4]
 8001b9c:	4b0a      	ldr	r3, [pc, #40]	; (8001bc8 <RCC_Delay+0x34>)
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	4a0a      	ldr	r2, [pc, #40]	; (8001bcc <RCC_Delay+0x38>)
 8001ba2:	fba2 2303 	umull	r2, r3, r2, r3
 8001ba6:	0a5b      	lsrs	r3, r3, #9
 8001ba8:	687a      	ldr	r2, [r7, #4]
 8001baa:	fb02 f303 	mul.w	r3, r2, r3
 8001bae:	60fb      	str	r3, [r7, #12]
 8001bb0:	bf00      	nop
 8001bb2:	68fb      	ldr	r3, [r7, #12]
 8001bb4:	1e5a      	subs	r2, r3, #1
 8001bb6:	60fa      	str	r2, [r7, #12]
 8001bb8:	2b00      	cmp	r3, #0
 8001bba:	d1f9      	bne.n	8001bb0 <RCC_Delay+0x1c>
 8001bbc:	bf00      	nop
 8001bbe:	bf00      	nop
 8001bc0:	3714      	adds	r7, #20
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	bc80      	pop	{r7}
 8001bc6:	4770      	bx	lr
 8001bc8:	20000034 	.word	0x20000034
 8001bcc:	10624dd3 	.word	0x10624dd3

08001bd0 <HAL_TIM_Base_Init>:
 8001bd0:	b580      	push	{r7, lr}
 8001bd2:	b082      	sub	sp, #8
 8001bd4:	af00      	add	r7, sp, #0
 8001bd6:	6078      	str	r0, [r7, #4]
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d101      	bne.n	8001be2 <HAL_TIM_Base_Init+0x12>
 8001bde:	2301      	movs	r3, #1
 8001be0:	e041      	b.n	8001c66 <HAL_TIM_Base_Init+0x96>
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001be8:	b2db      	uxtb	r3, r3
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d106      	bne.n	8001bfc <HAL_TIM_Base_Init+0x2c>
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	2200      	movs	r2, #0
 8001bf2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001bf6:	6878      	ldr	r0, [r7, #4]
 8001bf8:	f7fe ff72 	bl	8000ae0 <HAL_TIM_Base_MspInit>
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	2202      	movs	r2, #2
 8001c00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	681a      	ldr	r2, [r3, #0]
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	3304      	adds	r3, #4
 8001c0c:	4619      	mov	r1, r3
 8001c0e:	4610      	mov	r0, r2
 8001c10:	f000 fa70 	bl	80020f4 <TIM_Base_SetConfig>
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	2201      	movs	r2, #1
 8001c18:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	2201      	movs	r2, #1
 8001c20:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	2201      	movs	r2, #1
 8001c28:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	2201      	movs	r2, #1
 8001c30:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	2201      	movs	r2, #1
 8001c38:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	2201      	movs	r2, #1
 8001c40:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	2201      	movs	r2, #1
 8001c48:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	2201      	movs	r2, #1
 8001c50:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	2201      	movs	r2, #1
 8001c58:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	2201      	movs	r2, #1
 8001c60:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001c64:	2300      	movs	r3, #0
 8001c66:	4618      	mov	r0, r3
 8001c68:	3708      	adds	r7, #8
 8001c6a:	46bd      	mov	sp, r7
 8001c6c:	bd80      	pop	{r7, pc}
	...

08001c70 <HAL_TIM_Base_Start_IT>:
 8001c70:	b480      	push	{r7}
 8001c72:	b085      	sub	sp, #20
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	6078      	str	r0, [r7, #4]
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001c7e:	b2db      	uxtb	r3, r3
 8001c80:	2b01      	cmp	r3, #1
 8001c82:	d001      	beq.n	8001c88 <HAL_TIM_Base_Start_IT+0x18>
 8001c84:	2301      	movs	r3, #1
 8001c86:	e03a      	b.n	8001cfe <HAL_TIM_Base_Start_IT+0x8e>
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	2202      	movs	r2, #2
 8001c8c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	68da      	ldr	r2, [r3, #12]
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	f042 0201 	orr.w	r2, r2, #1
 8001c9e:	60da      	str	r2, [r3, #12]
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	4a18      	ldr	r2, [pc, #96]	; (8001d08 <HAL_TIM_Base_Start_IT+0x98>)
 8001ca6:	4293      	cmp	r3, r2
 8001ca8:	d00e      	beq.n	8001cc8 <HAL_TIM_Base_Start_IT+0x58>
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001cb2:	d009      	beq.n	8001cc8 <HAL_TIM_Base_Start_IT+0x58>
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	4a14      	ldr	r2, [pc, #80]	; (8001d0c <HAL_TIM_Base_Start_IT+0x9c>)
 8001cba:	4293      	cmp	r3, r2
 8001cbc:	d004      	beq.n	8001cc8 <HAL_TIM_Base_Start_IT+0x58>
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	681b      	ldr	r3, [r3, #0]
 8001cc2:	4a13      	ldr	r2, [pc, #76]	; (8001d10 <HAL_TIM_Base_Start_IT+0xa0>)
 8001cc4:	4293      	cmp	r3, r2
 8001cc6:	d111      	bne.n	8001cec <HAL_TIM_Base_Start_IT+0x7c>
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	689b      	ldr	r3, [r3, #8]
 8001cce:	f003 0307 	and.w	r3, r3, #7
 8001cd2:	60fb      	str	r3, [r7, #12]
 8001cd4:	68fb      	ldr	r3, [r7, #12]
 8001cd6:	2b06      	cmp	r3, #6
 8001cd8:	d010      	beq.n	8001cfc <HAL_TIM_Base_Start_IT+0x8c>
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	681a      	ldr	r2, [r3, #0]
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	f042 0201 	orr.w	r2, r2, #1
 8001ce8:	601a      	str	r2, [r3, #0]
 8001cea:	e007      	b.n	8001cfc <HAL_TIM_Base_Start_IT+0x8c>
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	681a      	ldr	r2, [r3, #0]
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	f042 0201 	orr.w	r2, r2, #1
 8001cfa:	601a      	str	r2, [r3, #0]
 8001cfc:	2300      	movs	r3, #0
 8001cfe:	4618      	mov	r0, r3
 8001d00:	3714      	adds	r7, #20
 8001d02:	46bd      	mov	sp, r7
 8001d04:	bc80      	pop	{r7}
 8001d06:	4770      	bx	lr
 8001d08:	40012c00 	.word	0x40012c00
 8001d0c:	40000400 	.word	0x40000400
 8001d10:	40000800 	.word	0x40000800

08001d14 <HAL_TIM_IRQHandler>:
 8001d14:	b580      	push	{r7, lr}
 8001d16:	b082      	sub	sp, #8
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	6078      	str	r0, [r7, #4]
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	691b      	ldr	r3, [r3, #16]
 8001d22:	f003 0302 	and.w	r3, r3, #2
 8001d26:	2b02      	cmp	r3, #2
 8001d28:	d122      	bne.n	8001d70 <HAL_TIM_IRQHandler+0x5c>
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	68db      	ldr	r3, [r3, #12]
 8001d30:	f003 0302 	and.w	r3, r3, #2
 8001d34:	2b02      	cmp	r3, #2
 8001d36:	d11b      	bne.n	8001d70 <HAL_TIM_IRQHandler+0x5c>
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	f06f 0202 	mvn.w	r2, #2
 8001d40:	611a      	str	r2, [r3, #16]
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	2201      	movs	r2, #1
 8001d46:	771a      	strb	r2, [r3, #28]
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	699b      	ldr	r3, [r3, #24]
 8001d4e:	f003 0303 	and.w	r3, r3, #3
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d003      	beq.n	8001d5e <HAL_TIM_IRQHandler+0x4a>
 8001d56:	6878      	ldr	r0, [r7, #4]
 8001d58:	f000 f9b1 	bl	80020be <HAL_TIM_IC_CaptureCallback>
 8001d5c:	e005      	b.n	8001d6a <HAL_TIM_IRQHandler+0x56>
 8001d5e:	6878      	ldr	r0, [r7, #4]
 8001d60:	f000 f9a4 	bl	80020ac <HAL_TIM_OC_DelayElapsedCallback>
 8001d64:	6878      	ldr	r0, [r7, #4]
 8001d66:	f000 f9b3 	bl	80020d0 <HAL_TIM_PWM_PulseFinishedCallback>
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	2200      	movs	r2, #0
 8001d6e:	771a      	strb	r2, [r3, #28]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	691b      	ldr	r3, [r3, #16]
 8001d76:	f003 0304 	and.w	r3, r3, #4
 8001d7a:	2b04      	cmp	r3, #4
 8001d7c:	d122      	bne.n	8001dc4 <HAL_TIM_IRQHandler+0xb0>
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	681b      	ldr	r3, [r3, #0]
 8001d82:	68db      	ldr	r3, [r3, #12]
 8001d84:	f003 0304 	and.w	r3, r3, #4
 8001d88:	2b04      	cmp	r3, #4
 8001d8a:	d11b      	bne.n	8001dc4 <HAL_TIM_IRQHandler+0xb0>
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	f06f 0204 	mvn.w	r2, #4
 8001d94:	611a      	str	r2, [r3, #16]
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	2202      	movs	r2, #2
 8001d9a:	771a      	strb	r2, [r3, #28]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	699b      	ldr	r3, [r3, #24]
 8001da2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d003      	beq.n	8001db2 <HAL_TIM_IRQHandler+0x9e>
 8001daa:	6878      	ldr	r0, [r7, #4]
 8001dac:	f000 f987 	bl	80020be <HAL_TIM_IC_CaptureCallback>
 8001db0:	e005      	b.n	8001dbe <HAL_TIM_IRQHandler+0xaa>
 8001db2:	6878      	ldr	r0, [r7, #4]
 8001db4:	f000 f97a 	bl	80020ac <HAL_TIM_OC_DelayElapsedCallback>
 8001db8:	6878      	ldr	r0, [r7, #4]
 8001dba:	f000 f989 	bl	80020d0 <HAL_TIM_PWM_PulseFinishedCallback>
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	2200      	movs	r2, #0
 8001dc2:	771a      	strb	r2, [r3, #28]
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	691b      	ldr	r3, [r3, #16]
 8001dca:	f003 0308 	and.w	r3, r3, #8
 8001dce:	2b08      	cmp	r3, #8
 8001dd0:	d122      	bne.n	8001e18 <HAL_TIM_IRQHandler+0x104>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	68db      	ldr	r3, [r3, #12]
 8001dd8:	f003 0308 	and.w	r3, r3, #8
 8001ddc:	2b08      	cmp	r3, #8
 8001dde:	d11b      	bne.n	8001e18 <HAL_TIM_IRQHandler+0x104>
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	f06f 0208 	mvn.w	r2, #8
 8001de8:	611a      	str	r2, [r3, #16]
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	2204      	movs	r2, #4
 8001dee:	771a      	strb	r2, [r3, #28]
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	69db      	ldr	r3, [r3, #28]
 8001df6:	f003 0303 	and.w	r3, r3, #3
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d003      	beq.n	8001e06 <HAL_TIM_IRQHandler+0xf2>
 8001dfe:	6878      	ldr	r0, [r7, #4]
 8001e00:	f000 f95d 	bl	80020be <HAL_TIM_IC_CaptureCallback>
 8001e04:	e005      	b.n	8001e12 <HAL_TIM_IRQHandler+0xfe>
 8001e06:	6878      	ldr	r0, [r7, #4]
 8001e08:	f000 f950 	bl	80020ac <HAL_TIM_OC_DelayElapsedCallback>
 8001e0c:	6878      	ldr	r0, [r7, #4]
 8001e0e:	f000 f95f 	bl	80020d0 <HAL_TIM_PWM_PulseFinishedCallback>
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	2200      	movs	r2, #0
 8001e16:	771a      	strb	r2, [r3, #28]
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	691b      	ldr	r3, [r3, #16]
 8001e1e:	f003 0310 	and.w	r3, r3, #16
 8001e22:	2b10      	cmp	r3, #16
 8001e24:	d122      	bne.n	8001e6c <HAL_TIM_IRQHandler+0x158>
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	68db      	ldr	r3, [r3, #12]
 8001e2c:	f003 0310 	and.w	r3, r3, #16
 8001e30:	2b10      	cmp	r3, #16
 8001e32:	d11b      	bne.n	8001e6c <HAL_TIM_IRQHandler+0x158>
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	f06f 0210 	mvn.w	r2, #16
 8001e3c:	611a      	str	r2, [r3, #16]
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	2208      	movs	r2, #8
 8001e42:	771a      	strb	r2, [r3, #28]
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	69db      	ldr	r3, [r3, #28]
 8001e4a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001e4e:	2b00      	cmp	r3, #0
 8001e50:	d003      	beq.n	8001e5a <HAL_TIM_IRQHandler+0x146>
 8001e52:	6878      	ldr	r0, [r7, #4]
 8001e54:	f000 f933 	bl	80020be <HAL_TIM_IC_CaptureCallback>
 8001e58:	e005      	b.n	8001e66 <HAL_TIM_IRQHandler+0x152>
 8001e5a:	6878      	ldr	r0, [r7, #4]
 8001e5c:	f000 f926 	bl	80020ac <HAL_TIM_OC_DelayElapsedCallback>
 8001e60:	6878      	ldr	r0, [r7, #4]
 8001e62:	f000 f935 	bl	80020d0 <HAL_TIM_PWM_PulseFinishedCallback>
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	2200      	movs	r2, #0
 8001e6a:	771a      	strb	r2, [r3, #28]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	691b      	ldr	r3, [r3, #16]
 8001e72:	f003 0301 	and.w	r3, r3, #1
 8001e76:	2b01      	cmp	r3, #1
 8001e78:	d10e      	bne.n	8001e98 <HAL_TIM_IRQHandler+0x184>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	68db      	ldr	r3, [r3, #12]
 8001e80:	f003 0301 	and.w	r3, r3, #1
 8001e84:	2b01      	cmp	r3, #1
 8001e86:	d107      	bne.n	8001e98 <HAL_TIM_IRQHandler+0x184>
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	f06f 0201 	mvn.w	r2, #1
 8001e90:	611a      	str	r2, [r3, #16]
 8001e92:	6878      	ldr	r0, [r7, #4]
 8001e94:	f7fe fb65 	bl	8000562 <HAL_TIM_PeriodElapsedCallback>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	691b      	ldr	r3, [r3, #16]
 8001e9e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001ea2:	2b80      	cmp	r3, #128	; 0x80
 8001ea4:	d10e      	bne.n	8001ec4 <HAL_TIM_IRQHandler+0x1b0>
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	68db      	ldr	r3, [r3, #12]
 8001eac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001eb0:	2b80      	cmp	r3, #128	; 0x80
 8001eb2:	d107      	bne.n	8001ec4 <HAL_TIM_IRQHandler+0x1b0>
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8001ebc:	611a      	str	r2, [r3, #16]
 8001ebe:	6878      	ldr	r0, [r7, #4]
 8001ec0:	f000 fa77 	bl	80023b2 <HAL_TIMEx_BreakCallback>
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	691b      	ldr	r3, [r3, #16]
 8001eca:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001ece:	2b40      	cmp	r3, #64	; 0x40
 8001ed0:	d10e      	bne.n	8001ef0 <HAL_TIM_IRQHandler+0x1dc>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	68db      	ldr	r3, [r3, #12]
 8001ed8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001edc:	2b40      	cmp	r3, #64	; 0x40
 8001ede:	d107      	bne.n	8001ef0 <HAL_TIM_IRQHandler+0x1dc>
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8001ee8:	611a      	str	r2, [r3, #16]
 8001eea:	6878      	ldr	r0, [r7, #4]
 8001eec:	f000 f8f9 	bl	80020e2 <HAL_TIM_TriggerCallback>
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	691b      	ldr	r3, [r3, #16]
 8001ef6:	f003 0320 	and.w	r3, r3, #32
 8001efa:	2b20      	cmp	r3, #32
 8001efc:	d10e      	bne.n	8001f1c <HAL_TIM_IRQHandler+0x208>
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	68db      	ldr	r3, [r3, #12]
 8001f04:	f003 0320 	and.w	r3, r3, #32
 8001f08:	2b20      	cmp	r3, #32
 8001f0a:	d107      	bne.n	8001f1c <HAL_TIM_IRQHandler+0x208>
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	f06f 0220 	mvn.w	r2, #32
 8001f14:	611a      	str	r2, [r3, #16]
 8001f16:	6878      	ldr	r0, [r7, #4]
 8001f18:	f000 fa42 	bl	80023a0 <HAL_TIMEx_CommutCallback>
 8001f1c:	bf00      	nop
 8001f1e:	3708      	adds	r7, #8
 8001f20:	46bd      	mov	sp, r7
 8001f22:	bd80      	pop	{r7, pc}

08001f24 <HAL_TIM_ConfigClockSource>:
 8001f24:	b580      	push	{r7, lr}
 8001f26:	b084      	sub	sp, #16
 8001f28:	af00      	add	r7, sp, #0
 8001f2a:	6078      	str	r0, [r7, #4]
 8001f2c:	6039      	str	r1, [r7, #0]
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001f34:	2b01      	cmp	r3, #1
 8001f36:	d101      	bne.n	8001f3c <HAL_TIM_ConfigClockSource+0x18>
 8001f38:	2302      	movs	r3, #2
 8001f3a:	e0b3      	b.n	80020a4 <HAL_TIM_ConfigClockSource+0x180>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	2201      	movs	r2, #1
 8001f40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	2202      	movs	r2, #2
 8001f48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	689b      	ldr	r3, [r3, #8]
 8001f52:	60fb      	str	r3, [r7, #12]
 8001f54:	68fb      	ldr	r3, [r7, #12]
 8001f56:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8001f5a:	60fb      	str	r3, [r7, #12]
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001f62:	60fb      	str	r3, [r7, #12]
 8001f64:	687b      	ldr	r3, [r7, #4]
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	68fa      	ldr	r2, [r7, #12]
 8001f6a:	609a      	str	r2, [r3, #8]
 8001f6c:	683b      	ldr	r3, [r7, #0]
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001f74:	d03e      	beq.n	8001ff4 <HAL_TIM_ConfigClockSource+0xd0>
 8001f76:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001f7a:	f200 8087 	bhi.w	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001f7e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001f82:	f000 8085 	beq.w	8002090 <HAL_TIM_ConfigClockSource+0x16c>
 8001f86:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001f8a:	d87f      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001f8c:	2b70      	cmp	r3, #112	; 0x70
 8001f8e:	d01a      	beq.n	8001fc6 <HAL_TIM_ConfigClockSource+0xa2>
 8001f90:	2b70      	cmp	r3, #112	; 0x70
 8001f92:	d87b      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001f94:	2b60      	cmp	r3, #96	; 0x60
 8001f96:	d050      	beq.n	800203a <HAL_TIM_ConfigClockSource+0x116>
 8001f98:	2b60      	cmp	r3, #96	; 0x60
 8001f9a:	d877      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001f9c:	2b50      	cmp	r3, #80	; 0x50
 8001f9e:	d03c      	beq.n	800201a <HAL_TIM_ConfigClockSource+0xf6>
 8001fa0:	2b50      	cmp	r3, #80	; 0x50
 8001fa2:	d873      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001fa4:	2b40      	cmp	r3, #64	; 0x40
 8001fa6:	d058      	beq.n	800205a <HAL_TIM_ConfigClockSource+0x136>
 8001fa8:	2b40      	cmp	r3, #64	; 0x40
 8001faa:	d86f      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001fac:	2b30      	cmp	r3, #48	; 0x30
 8001fae:	d064      	beq.n	800207a <HAL_TIM_ConfigClockSource+0x156>
 8001fb0:	2b30      	cmp	r3, #48	; 0x30
 8001fb2:	d86b      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001fb4:	2b20      	cmp	r3, #32
 8001fb6:	d060      	beq.n	800207a <HAL_TIM_ConfigClockSource+0x156>
 8001fb8:	2b20      	cmp	r3, #32
 8001fba:	d867      	bhi.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001fbc:	2b00      	cmp	r3, #0
 8001fbe:	d05c      	beq.n	800207a <HAL_TIM_ConfigClockSource+0x156>
 8001fc0:	2b10      	cmp	r3, #16
 8001fc2:	d05a      	beq.n	800207a <HAL_TIM_ConfigClockSource+0x156>
 8001fc4:	e062      	b.n	800208c <HAL_TIM_ConfigClockSource+0x168>
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	6818      	ldr	r0, [r3, #0]
 8001fca:	683b      	ldr	r3, [r7, #0]
 8001fcc:	6899      	ldr	r1, [r3, #8]
 8001fce:	683b      	ldr	r3, [r7, #0]
 8001fd0:	685a      	ldr	r2, [r3, #4]
 8001fd2:	683b      	ldr	r3, [r7, #0]
 8001fd4:	68db      	ldr	r3, [r3, #12]
 8001fd6:	f000 f966 	bl	80022a6 <TIM_ETR_SetConfig>
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	689b      	ldr	r3, [r3, #8]
 8001fe0:	60fb      	str	r3, [r7, #12]
 8001fe2:	68fb      	ldr	r3, [r7, #12]
 8001fe4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8001fe8:	60fb      	str	r3, [r7, #12]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	68fa      	ldr	r2, [r7, #12]
 8001ff0:	609a      	str	r2, [r3, #8]
 8001ff2:	e04e      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	6818      	ldr	r0, [r3, #0]
 8001ff8:	683b      	ldr	r3, [r7, #0]
 8001ffa:	6899      	ldr	r1, [r3, #8]
 8001ffc:	683b      	ldr	r3, [r7, #0]
 8001ffe:	685a      	ldr	r2, [r3, #4]
 8002000:	683b      	ldr	r3, [r7, #0]
 8002002:	68db      	ldr	r3, [r3, #12]
 8002004:	f000 f94f 	bl	80022a6 <TIM_ETR_SetConfig>
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	689a      	ldr	r2, [r3, #8]
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	681b      	ldr	r3, [r3, #0]
 8002012:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002016:	609a      	str	r2, [r3, #8]
 8002018:	e03b      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	6818      	ldr	r0, [r3, #0]
 800201e:	683b      	ldr	r3, [r7, #0]
 8002020:	6859      	ldr	r1, [r3, #4]
 8002022:	683b      	ldr	r3, [r7, #0]
 8002024:	68db      	ldr	r3, [r3, #12]
 8002026:	461a      	mov	r2, r3
 8002028:	f000 f8c6 	bl	80021b8 <TIM_TI1_ConfigInputStage>
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	2150      	movs	r1, #80	; 0x50
 8002032:	4618      	mov	r0, r3
 8002034:	f000 f91d 	bl	8002272 <TIM_ITRx_SetConfig>
 8002038:	e02b      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	6818      	ldr	r0, [r3, #0]
 800203e:	683b      	ldr	r3, [r7, #0]
 8002040:	6859      	ldr	r1, [r3, #4]
 8002042:	683b      	ldr	r3, [r7, #0]
 8002044:	68db      	ldr	r3, [r3, #12]
 8002046:	461a      	mov	r2, r3
 8002048:	f000 f8e4 	bl	8002214 <TIM_TI2_ConfigInputStage>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	2160      	movs	r1, #96	; 0x60
 8002052:	4618      	mov	r0, r3
 8002054:	f000 f90d 	bl	8002272 <TIM_ITRx_SetConfig>
 8002058:	e01b      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	6818      	ldr	r0, [r3, #0]
 800205e:	683b      	ldr	r3, [r7, #0]
 8002060:	6859      	ldr	r1, [r3, #4]
 8002062:	683b      	ldr	r3, [r7, #0]
 8002064:	68db      	ldr	r3, [r3, #12]
 8002066:	461a      	mov	r2, r3
 8002068:	f000 f8a6 	bl	80021b8 <TIM_TI1_ConfigInputStage>
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2140      	movs	r1, #64	; 0x40
 8002072:	4618      	mov	r0, r3
 8002074:	f000 f8fd 	bl	8002272 <TIM_ITRx_SetConfig>
 8002078:	e00b      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	681a      	ldr	r2, [r3, #0]
 800207e:	683b      	ldr	r3, [r7, #0]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	4619      	mov	r1, r3
 8002084:	4610      	mov	r0, r2
 8002086:	f000 f8f4 	bl	8002272 <TIM_ITRx_SetConfig>
 800208a:	e002      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 800208c:	bf00      	nop
 800208e:	e000      	b.n	8002092 <HAL_TIM_ConfigClockSource+0x16e>
 8002090:	bf00      	nop
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	2201      	movs	r2, #1
 8002096:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	2200      	movs	r2, #0
 800209e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80020a2:	2300      	movs	r3, #0
 80020a4:	4618      	mov	r0, r3
 80020a6:	3710      	adds	r7, #16
 80020a8:	46bd      	mov	sp, r7
 80020aa:	bd80      	pop	{r7, pc}

080020ac <HAL_TIM_OC_DelayElapsedCallback>:
 80020ac:	b480      	push	{r7}
 80020ae:	b083      	sub	sp, #12
 80020b0:	af00      	add	r7, sp, #0
 80020b2:	6078      	str	r0, [r7, #4]
 80020b4:	bf00      	nop
 80020b6:	370c      	adds	r7, #12
 80020b8:	46bd      	mov	sp, r7
 80020ba:	bc80      	pop	{r7}
 80020bc:	4770      	bx	lr

080020be <HAL_TIM_IC_CaptureCallback>:
 80020be:	b480      	push	{r7}
 80020c0:	b083      	sub	sp, #12
 80020c2:	af00      	add	r7, sp, #0
 80020c4:	6078      	str	r0, [r7, #4]
 80020c6:	bf00      	nop
 80020c8:	370c      	adds	r7, #12
 80020ca:	46bd      	mov	sp, r7
 80020cc:	bc80      	pop	{r7}
 80020ce:	4770      	bx	lr

080020d0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80020d0:	b480      	push	{r7}
 80020d2:	b083      	sub	sp, #12
 80020d4:	af00      	add	r7, sp, #0
 80020d6:	6078      	str	r0, [r7, #4]
 80020d8:	bf00      	nop
 80020da:	370c      	adds	r7, #12
 80020dc:	46bd      	mov	sp, r7
 80020de:	bc80      	pop	{r7}
 80020e0:	4770      	bx	lr

080020e2 <HAL_TIM_TriggerCallback>:
 80020e2:	b480      	push	{r7}
 80020e4:	b083      	sub	sp, #12
 80020e6:	af00      	add	r7, sp, #0
 80020e8:	6078      	str	r0, [r7, #4]
 80020ea:	bf00      	nop
 80020ec:	370c      	adds	r7, #12
 80020ee:	46bd      	mov	sp, r7
 80020f0:	bc80      	pop	{r7}
 80020f2:	4770      	bx	lr

080020f4 <TIM_Base_SetConfig>:
 80020f4:	b480      	push	{r7}
 80020f6:	b085      	sub	sp, #20
 80020f8:	af00      	add	r7, sp, #0
 80020fa:	6078      	str	r0, [r7, #4]
 80020fc:	6039      	str	r1, [r7, #0]
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	60fb      	str	r3, [r7, #12]
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	4a29      	ldr	r2, [pc, #164]	; (80021ac <TIM_Base_SetConfig+0xb8>)
 8002108:	4293      	cmp	r3, r2
 800210a:	d00b      	beq.n	8002124 <TIM_Base_SetConfig+0x30>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002112:	d007      	beq.n	8002124 <TIM_Base_SetConfig+0x30>
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	4a26      	ldr	r2, [pc, #152]	; (80021b0 <TIM_Base_SetConfig+0xbc>)
 8002118:	4293      	cmp	r3, r2
 800211a:	d003      	beq.n	8002124 <TIM_Base_SetConfig+0x30>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	4a25      	ldr	r2, [pc, #148]	; (80021b4 <TIM_Base_SetConfig+0xc0>)
 8002120:	4293      	cmp	r3, r2
 8002122:	d108      	bne.n	8002136 <TIM_Base_SetConfig+0x42>
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800212a:	60fb      	str	r3, [r7, #12]
 800212c:	683b      	ldr	r3, [r7, #0]
 800212e:	685b      	ldr	r3, [r3, #4]
 8002130:	68fa      	ldr	r2, [r7, #12]
 8002132:	4313      	orrs	r3, r2
 8002134:	60fb      	str	r3, [r7, #12]
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	4a1c      	ldr	r2, [pc, #112]	; (80021ac <TIM_Base_SetConfig+0xb8>)
 800213a:	4293      	cmp	r3, r2
 800213c:	d00b      	beq.n	8002156 <TIM_Base_SetConfig+0x62>
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002144:	d007      	beq.n	8002156 <TIM_Base_SetConfig+0x62>
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	4a19      	ldr	r2, [pc, #100]	; (80021b0 <TIM_Base_SetConfig+0xbc>)
 800214a:	4293      	cmp	r3, r2
 800214c:	d003      	beq.n	8002156 <TIM_Base_SetConfig+0x62>
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	4a18      	ldr	r2, [pc, #96]	; (80021b4 <TIM_Base_SetConfig+0xc0>)
 8002152:	4293      	cmp	r3, r2
 8002154:	d108      	bne.n	8002168 <TIM_Base_SetConfig+0x74>
 8002156:	68fb      	ldr	r3, [r7, #12]
 8002158:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800215c:	60fb      	str	r3, [r7, #12]
 800215e:	683b      	ldr	r3, [r7, #0]
 8002160:	68db      	ldr	r3, [r3, #12]
 8002162:	68fa      	ldr	r2, [r7, #12]
 8002164:	4313      	orrs	r3, r2
 8002166:	60fb      	str	r3, [r7, #12]
 8002168:	68fb      	ldr	r3, [r7, #12]
 800216a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800216e:	683b      	ldr	r3, [r7, #0]
 8002170:	695b      	ldr	r3, [r3, #20]
 8002172:	4313      	orrs	r3, r2
 8002174:	60fb      	str	r3, [r7, #12]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	68fa      	ldr	r2, [r7, #12]
 800217a:	601a      	str	r2, [r3, #0]
 800217c:	683b      	ldr	r3, [r7, #0]
 800217e:	689a      	ldr	r2, [r3, #8]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	62da      	str	r2, [r3, #44]	; 0x2c
 8002184:	683b      	ldr	r3, [r7, #0]
 8002186:	681a      	ldr	r2, [r3, #0]
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	629a      	str	r2, [r3, #40]	; 0x28
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	4a07      	ldr	r2, [pc, #28]	; (80021ac <TIM_Base_SetConfig+0xb8>)
 8002190:	4293      	cmp	r3, r2
 8002192:	d103      	bne.n	800219c <TIM_Base_SetConfig+0xa8>
 8002194:	683b      	ldr	r3, [r7, #0]
 8002196:	691a      	ldr	r2, [r3, #16]
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	631a      	str	r2, [r3, #48]	; 0x30
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	2201      	movs	r2, #1
 80021a0:	615a      	str	r2, [r3, #20]
 80021a2:	bf00      	nop
 80021a4:	3714      	adds	r7, #20
 80021a6:	46bd      	mov	sp, r7
 80021a8:	bc80      	pop	{r7}
 80021aa:	4770      	bx	lr
 80021ac:	40012c00 	.word	0x40012c00
 80021b0:	40000400 	.word	0x40000400
 80021b4:	40000800 	.word	0x40000800

080021b8 <TIM_TI1_ConfigInputStage>:
 80021b8:	b480      	push	{r7}
 80021ba:	b087      	sub	sp, #28
 80021bc:	af00      	add	r7, sp, #0
 80021be:	60f8      	str	r0, [r7, #12]
 80021c0:	60b9      	str	r1, [r7, #8]
 80021c2:	607a      	str	r2, [r7, #4]
 80021c4:	68fb      	ldr	r3, [r7, #12]
 80021c6:	6a1b      	ldr	r3, [r3, #32]
 80021c8:	617b      	str	r3, [r7, #20]
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	6a1b      	ldr	r3, [r3, #32]
 80021ce:	f023 0201 	bic.w	r2, r3, #1
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	621a      	str	r2, [r3, #32]
 80021d6:	68fb      	ldr	r3, [r7, #12]
 80021d8:	699b      	ldr	r3, [r3, #24]
 80021da:	613b      	str	r3, [r7, #16]
 80021dc:	693b      	ldr	r3, [r7, #16]
 80021de:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80021e2:	613b      	str	r3, [r7, #16]
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	011b      	lsls	r3, r3, #4
 80021e8:	693a      	ldr	r2, [r7, #16]
 80021ea:	4313      	orrs	r3, r2
 80021ec:	613b      	str	r3, [r7, #16]
 80021ee:	697b      	ldr	r3, [r7, #20]
 80021f0:	f023 030a 	bic.w	r3, r3, #10
 80021f4:	617b      	str	r3, [r7, #20]
 80021f6:	697a      	ldr	r2, [r7, #20]
 80021f8:	68bb      	ldr	r3, [r7, #8]
 80021fa:	4313      	orrs	r3, r2
 80021fc:	617b      	str	r3, [r7, #20]
 80021fe:	68fb      	ldr	r3, [r7, #12]
 8002200:	693a      	ldr	r2, [r7, #16]
 8002202:	619a      	str	r2, [r3, #24]
 8002204:	68fb      	ldr	r3, [r7, #12]
 8002206:	697a      	ldr	r2, [r7, #20]
 8002208:	621a      	str	r2, [r3, #32]
 800220a:	bf00      	nop
 800220c:	371c      	adds	r7, #28
 800220e:	46bd      	mov	sp, r7
 8002210:	bc80      	pop	{r7}
 8002212:	4770      	bx	lr

08002214 <TIM_TI2_ConfigInputStage>:
 8002214:	b480      	push	{r7}
 8002216:	b087      	sub	sp, #28
 8002218:	af00      	add	r7, sp, #0
 800221a:	60f8      	str	r0, [r7, #12]
 800221c:	60b9      	str	r1, [r7, #8]
 800221e:	607a      	str	r2, [r7, #4]
 8002220:	68fb      	ldr	r3, [r7, #12]
 8002222:	6a1b      	ldr	r3, [r3, #32]
 8002224:	f023 0210 	bic.w	r2, r3, #16
 8002228:	68fb      	ldr	r3, [r7, #12]
 800222a:	621a      	str	r2, [r3, #32]
 800222c:	68fb      	ldr	r3, [r7, #12]
 800222e:	699b      	ldr	r3, [r3, #24]
 8002230:	617b      	str	r3, [r7, #20]
 8002232:	68fb      	ldr	r3, [r7, #12]
 8002234:	6a1b      	ldr	r3, [r3, #32]
 8002236:	613b      	str	r3, [r7, #16]
 8002238:	697b      	ldr	r3, [r7, #20]
 800223a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800223e:	617b      	str	r3, [r7, #20]
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	031b      	lsls	r3, r3, #12
 8002244:	697a      	ldr	r2, [r7, #20]
 8002246:	4313      	orrs	r3, r2
 8002248:	617b      	str	r3, [r7, #20]
 800224a:	693b      	ldr	r3, [r7, #16]
 800224c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002250:	613b      	str	r3, [r7, #16]
 8002252:	68bb      	ldr	r3, [r7, #8]
 8002254:	011b      	lsls	r3, r3, #4
 8002256:	693a      	ldr	r2, [r7, #16]
 8002258:	4313      	orrs	r3, r2
 800225a:	613b      	str	r3, [r7, #16]
 800225c:	68fb      	ldr	r3, [r7, #12]
 800225e:	697a      	ldr	r2, [r7, #20]
 8002260:	619a      	str	r2, [r3, #24]
 8002262:	68fb      	ldr	r3, [r7, #12]
 8002264:	693a      	ldr	r2, [r7, #16]
 8002266:	621a      	str	r2, [r3, #32]
 8002268:	bf00      	nop
 800226a:	371c      	adds	r7, #28
 800226c:	46bd      	mov	sp, r7
 800226e:	bc80      	pop	{r7}
 8002270:	4770      	bx	lr

08002272 <TIM_ITRx_SetConfig>:
 8002272:	b480      	push	{r7}
 8002274:	b085      	sub	sp, #20
 8002276:	af00      	add	r7, sp, #0
 8002278:	6078      	str	r0, [r7, #4]
 800227a:	6039      	str	r1, [r7, #0]
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	689b      	ldr	r3, [r3, #8]
 8002280:	60fb      	str	r3, [r7, #12]
 8002282:	68fb      	ldr	r3, [r7, #12]
 8002284:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002288:	60fb      	str	r3, [r7, #12]
 800228a:	683a      	ldr	r2, [r7, #0]
 800228c:	68fb      	ldr	r3, [r7, #12]
 800228e:	4313      	orrs	r3, r2
 8002290:	f043 0307 	orr.w	r3, r3, #7
 8002294:	60fb      	str	r3, [r7, #12]
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	68fa      	ldr	r2, [r7, #12]
 800229a:	609a      	str	r2, [r3, #8]
 800229c:	bf00      	nop
 800229e:	3714      	adds	r7, #20
 80022a0:	46bd      	mov	sp, r7
 80022a2:	bc80      	pop	{r7}
 80022a4:	4770      	bx	lr

080022a6 <TIM_ETR_SetConfig>:
 80022a6:	b480      	push	{r7}
 80022a8:	b087      	sub	sp, #28
 80022aa:	af00      	add	r7, sp, #0
 80022ac:	60f8      	str	r0, [r7, #12]
 80022ae:	60b9      	str	r1, [r7, #8]
 80022b0:	607a      	str	r2, [r7, #4]
 80022b2:	603b      	str	r3, [r7, #0]
 80022b4:	68fb      	ldr	r3, [r7, #12]
 80022b6:	689b      	ldr	r3, [r3, #8]
 80022b8:	617b      	str	r3, [r7, #20]
 80022ba:	697b      	ldr	r3, [r7, #20]
 80022bc:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80022c0:	617b      	str	r3, [r7, #20]
 80022c2:	683b      	ldr	r3, [r7, #0]
 80022c4:	021a      	lsls	r2, r3, #8
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	431a      	orrs	r2, r3
 80022ca:	68bb      	ldr	r3, [r7, #8]
 80022cc:	4313      	orrs	r3, r2
 80022ce:	697a      	ldr	r2, [r7, #20]
 80022d0:	4313      	orrs	r3, r2
 80022d2:	617b      	str	r3, [r7, #20]
 80022d4:	68fb      	ldr	r3, [r7, #12]
 80022d6:	697a      	ldr	r2, [r7, #20]
 80022d8:	609a      	str	r2, [r3, #8]
 80022da:	bf00      	nop
 80022dc:	371c      	adds	r7, #28
 80022de:	46bd      	mov	sp, r7
 80022e0:	bc80      	pop	{r7}
 80022e2:	4770      	bx	lr

080022e4 <HAL_TIMEx_MasterConfigSynchronization>:
 80022e4:	b480      	push	{r7}
 80022e6:	b085      	sub	sp, #20
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	6078      	str	r0, [r7, #4]
 80022ec:	6039      	str	r1, [r7, #0]
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80022f4:	2b01      	cmp	r3, #1
 80022f6:	d101      	bne.n	80022fc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80022f8:	2302      	movs	r3, #2
 80022fa:	e046      	b.n	800238a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	2201      	movs	r2, #1
 8002300:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	2202      	movs	r2, #2
 8002308:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	685b      	ldr	r3, [r3, #4]
 8002312:	60fb      	str	r3, [r7, #12]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	689b      	ldr	r3, [r3, #8]
 800231a:	60bb      	str	r3, [r7, #8]
 800231c:	68fb      	ldr	r3, [r7, #12]
 800231e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002322:	60fb      	str	r3, [r7, #12]
 8002324:	683b      	ldr	r3, [r7, #0]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	68fa      	ldr	r2, [r7, #12]
 800232a:	4313      	orrs	r3, r2
 800232c:	60fb      	str	r3, [r7, #12]
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	68fa      	ldr	r2, [r7, #12]
 8002334:	605a      	str	r2, [r3, #4]
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	4a16      	ldr	r2, [pc, #88]	; (8002394 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 800233c:	4293      	cmp	r3, r2
 800233e:	d00e      	beq.n	800235e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002348:	d009      	beq.n	800235e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	4a12      	ldr	r2, [pc, #72]	; (8002398 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002350:	4293      	cmp	r3, r2
 8002352:	d004      	beq.n	800235e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	4a10      	ldr	r2, [pc, #64]	; (800239c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800235a:	4293      	cmp	r3, r2
 800235c:	d10c      	bne.n	8002378 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800235e:	68bb      	ldr	r3, [r7, #8]
 8002360:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002364:	60bb      	str	r3, [r7, #8]
 8002366:	683b      	ldr	r3, [r7, #0]
 8002368:	685b      	ldr	r3, [r3, #4]
 800236a:	68ba      	ldr	r2, [r7, #8]
 800236c:	4313      	orrs	r3, r2
 800236e:	60bb      	str	r3, [r7, #8]
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	68ba      	ldr	r2, [r7, #8]
 8002376:	609a      	str	r2, [r3, #8]
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	2201      	movs	r2, #1
 800237c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	2200      	movs	r2, #0
 8002384:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002388:	2300      	movs	r3, #0
 800238a:	4618      	mov	r0, r3
 800238c:	3714      	adds	r7, #20
 800238e:	46bd      	mov	sp, r7
 8002390:	bc80      	pop	{r7}
 8002392:	4770      	bx	lr
 8002394:	40012c00 	.word	0x40012c00
 8002398:	40000400 	.word	0x40000400
 800239c:	40000800 	.word	0x40000800

080023a0 <HAL_TIMEx_CommutCallback>:
 80023a0:	b480      	push	{r7}
 80023a2:	b083      	sub	sp, #12
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
 80023a8:	bf00      	nop
 80023aa:	370c      	adds	r7, #12
 80023ac:	46bd      	mov	sp, r7
 80023ae:	bc80      	pop	{r7}
 80023b0:	4770      	bx	lr

080023b2 <HAL_TIMEx_BreakCallback>:
 80023b2:	b480      	push	{r7}
 80023b4:	b083      	sub	sp, #12
 80023b6:	af00      	add	r7, sp, #0
 80023b8:	6078      	str	r0, [r7, #4]
 80023ba:	bf00      	nop
 80023bc:	370c      	adds	r7, #12
 80023be:	46bd      	mov	sp, r7
 80023c0:	bc80      	pop	{r7}
 80023c2:	4770      	bx	lr

080023c4 <HAL_UART_Init>:
 80023c4:	b580      	push	{r7, lr}
 80023c6:	b082      	sub	sp, #8
 80023c8:	af00      	add	r7, sp, #0
 80023ca:	6078      	str	r0, [r7, #4]
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d101      	bne.n	80023d6 <HAL_UART_Init+0x12>
 80023d2:	2301      	movs	r3, #1
 80023d4:	e03f      	b.n	8002456 <HAL_UART_Init+0x92>
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80023dc:	b2db      	uxtb	r3, r3
 80023de:	2b00      	cmp	r3, #0
 80023e0:	d106      	bne.n	80023f0 <HAL_UART_Init+0x2c>
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	2200      	movs	r2, #0
 80023e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023ea:	6878      	ldr	r0, [r7, #4]
 80023ec:	f7fe fc14 	bl	8000c18 <HAL_UART_MspInit>
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	2224      	movs	r2, #36	; 0x24
 80023f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	68da      	ldr	r2, [r3, #12]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002406:	60da      	str	r2, [r3, #12]
 8002408:	6878      	ldr	r0, [r7, #4]
 800240a:	f000 f829 	bl	8002460 <UART_SetConfig>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	691a      	ldr	r2, [r3, #16]
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800241c:	611a      	str	r2, [r3, #16]
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	695a      	ldr	r2, [r3, #20]
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800242c:	615a      	str	r2, [r3, #20]
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	68da      	ldr	r2, [r3, #12]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800243c:	60da      	str	r2, [r3, #12]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	2200      	movs	r2, #0
 8002442:	641a      	str	r2, [r3, #64]	; 0x40
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	2220      	movs	r2, #32
 8002448:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	2220      	movs	r2, #32
 8002450:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002454:	2300      	movs	r3, #0
 8002456:	4618      	mov	r0, r3
 8002458:	3708      	adds	r7, #8
 800245a:	46bd      	mov	sp, r7
 800245c:	bd80      	pop	{r7, pc}
	...

08002460 <UART_SetConfig>:
 8002460:	b580      	push	{r7, lr}
 8002462:	b084      	sub	sp, #16
 8002464:	af00      	add	r7, sp, #0
 8002466:	6078      	str	r0, [r7, #4]
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	691b      	ldr	r3, [r3, #16]
 800246e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	68da      	ldr	r2, [r3, #12]
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	681b      	ldr	r3, [r3, #0]
 800247a:	430a      	orrs	r2, r1
 800247c:	611a      	str	r2, [r3, #16]
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	689a      	ldr	r2, [r3, #8]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	691b      	ldr	r3, [r3, #16]
 8002486:	431a      	orrs	r2, r3
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	695b      	ldr	r3, [r3, #20]
 800248c:	4313      	orrs	r3, r2
 800248e:	60bb      	str	r3, [r7, #8]
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	681b      	ldr	r3, [r3, #0]
 8002494:	68db      	ldr	r3, [r3, #12]
 8002496:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800249a:	f023 030c 	bic.w	r3, r3, #12
 800249e:	687a      	ldr	r2, [r7, #4]
 80024a0:	6812      	ldr	r2, [r2, #0]
 80024a2:	68b9      	ldr	r1, [r7, #8]
 80024a4:	430b      	orrs	r3, r1
 80024a6:	60d3      	str	r3, [r2, #12]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	695b      	ldr	r3, [r3, #20]
 80024ae:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	699a      	ldr	r2, [r3, #24]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	430a      	orrs	r2, r1
 80024bc:	615a      	str	r2, [r3, #20]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	4a2c      	ldr	r2, [pc, #176]	; (8002574 <UART_SetConfig+0x114>)
 80024c4:	4293      	cmp	r3, r2
 80024c6:	d103      	bne.n	80024d0 <UART_SetConfig+0x70>
 80024c8:	f7ff fb50 	bl	8001b6c <HAL_RCC_GetPCLK2Freq>
 80024cc:	60f8      	str	r0, [r7, #12]
 80024ce:	e002      	b.n	80024d6 <UART_SetConfig+0x76>
 80024d0:	f7ff fb38 	bl	8001b44 <HAL_RCC_GetPCLK1Freq>
 80024d4:	60f8      	str	r0, [r7, #12]
 80024d6:	68fa      	ldr	r2, [r7, #12]
 80024d8:	4613      	mov	r3, r2
 80024da:	009b      	lsls	r3, r3, #2
 80024dc:	4413      	add	r3, r2
 80024de:	009a      	lsls	r2, r3, #2
 80024e0:	441a      	add	r2, r3
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	685b      	ldr	r3, [r3, #4]
 80024e6:	009b      	lsls	r3, r3, #2
 80024e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80024ec:	4a22      	ldr	r2, [pc, #136]	; (8002578 <UART_SetConfig+0x118>)
 80024ee:	fba2 2303 	umull	r2, r3, r2, r3
 80024f2:	095b      	lsrs	r3, r3, #5
 80024f4:	0119      	lsls	r1, r3, #4
 80024f6:	68fa      	ldr	r2, [r7, #12]
 80024f8:	4613      	mov	r3, r2
 80024fa:	009b      	lsls	r3, r3, #2
 80024fc:	4413      	add	r3, r2
 80024fe:	009a      	lsls	r2, r3, #2
 8002500:	441a      	add	r2, r3
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	685b      	ldr	r3, [r3, #4]
 8002506:	009b      	lsls	r3, r3, #2
 8002508:	fbb2 f2f3 	udiv	r2, r2, r3
 800250c:	4b1a      	ldr	r3, [pc, #104]	; (8002578 <UART_SetConfig+0x118>)
 800250e:	fba3 0302 	umull	r0, r3, r3, r2
 8002512:	095b      	lsrs	r3, r3, #5
 8002514:	2064      	movs	r0, #100	; 0x64
 8002516:	fb00 f303 	mul.w	r3, r0, r3
 800251a:	1ad3      	subs	r3, r2, r3
 800251c:	011b      	lsls	r3, r3, #4
 800251e:	3332      	adds	r3, #50	; 0x32
 8002520:	4a15      	ldr	r2, [pc, #84]	; (8002578 <UART_SetConfig+0x118>)
 8002522:	fba2 2303 	umull	r2, r3, r2, r3
 8002526:	095b      	lsrs	r3, r3, #5
 8002528:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800252c:	4419      	add	r1, r3
 800252e:	68fa      	ldr	r2, [r7, #12]
 8002530:	4613      	mov	r3, r2
 8002532:	009b      	lsls	r3, r3, #2
 8002534:	4413      	add	r3, r2
 8002536:	009a      	lsls	r2, r3, #2
 8002538:	441a      	add	r2, r3
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	685b      	ldr	r3, [r3, #4]
 800253e:	009b      	lsls	r3, r3, #2
 8002540:	fbb2 f2f3 	udiv	r2, r2, r3
 8002544:	4b0c      	ldr	r3, [pc, #48]	; (8002578 <UART_SetConfig+0x118>)
 8002546:	fba3 0302 	umull	r0, r3, r3, r2
 800254a:	095b      	lsrs	r3, r3, #5
 800254c:	2064      	movs	r0, #100	; 0x64
 800254e:	fb00 f303 	mul.w	r3, r0, r3
 8002552:	1ad3      	subs	r3, r2, r3
 8002554:	011b      	lsls	r3, r3, #4
 8002556:	3332      	adds	r3, #50	; 0x32
 8002558:	4a07      	ldr	r2, [pc, #28]	; (8002578 <UART_SetConfig+0x118>)
 800255a:	fba2 2303 	umull	r2, r3, r2, r3
 800255e:	095b      	lsrs	r3, r3, #5
 8002560:	f003 020f 	and.w	r2, r3, #15
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	440a      	add	r2, r1
 800256a:	609a      	str	r2, [r3, #8]
 800256c:	bf00      	nop
 800256e:	3710      	adds	r7, #16
 8002570:	46bd      	mov	sp, r7
 8002572:	bd80      	pop	{r7, pc}
 8002574:	40013800 	.word	0x40013800
 8002578:	51eb851f 	.word	0x51eb851f

0800257c <__libc_init_array>:
 800257c:	b570      	push	{r4, r5, r6, lr}
 800257e:	2600      	movs	r6, #0
 8002580:	4d0c      	ldr	r5, [pc, #48]	; (80025b4 <__libc_init_array+0x38>)
 8002582:	4c0d      	ldr	r4, [pc, #52]	; (80025b8 <__libc_init_array+0x3c>)
 8002584:	1b64      	subs	r4, r4, r5
 8002586:	10a4      	asrs	r4, r4, #2
 8002588:	42a6      	cmp	r6, r4
 800258a:	d109      	bne.n	80025a0 <__libc_init_array+0x24>
 800258c:	f000 f822 	bl	80025d4 <_init>
 8002590:	2600      	movs	r6, #0
 8002592:	4d0a      	ldr	r5, [pc, #40]	; (80025bc <__libc_init_array+0x40>)
 8002594:	4c0a      	ldr	r4, [pc, #40]	; (80025c0 <__libc_init_array+0x44>)
 8002596:	1b64      	subs	r4, r4, r5
 8002598:	10a4      	asrs	r4, r4, #2
 800259a:	42a6      	cmp	r6, r4
 800259c:	d105      	bne.n	80025aa <__libc_init_array+0x2e>
 800259e:	bd70      	pop	{r4, r5, r6, pc}
 80025a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80025a4:	4798      	blx	r3
 80025a6:	3601      	adds	r6, #1
 80025a8:	e7ee      	b.n	8002588 <__libc_init_array+0xc>
 80025aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80025ae:	4798      	blx	r3
 80025b0:	3601      	adds	r6, #1
 80025b2:	e7f2      	b.n	800259a <__libc_init_array+0x1e>
 80025b4:	08002614 	.word	0x08002614
 80025b8:	08002614 	.word	0x08002614
 80025bc:	08002614 	.word	0x08002614
 80025c0:	08002618 	.word	0x08002618

080025c4 <memset>:
 80025c4:	4603      	mov	r3, r0
 80025c6:	4402      	add	r2, r0
 80025c8:	4293      	cmp	r3, r2
 80025ca:	d100      	bne.n	80025ce <memset+0xa>
 80025cc:	4770      	bx	lr
 80025ce:	f803 1b01 	strb.w	r1, [r3], #1
 80025d2:	e7f9      	b.n	80025c8 <memset+0x4>

080025d4 <_init>:
 80025d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025d6:	bf00      	nop
 80025d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80025da:	bc08      	pop	{r3}
 80025dc:	469e      	mov	lr, r3
 80025de:	4770      	bx	lr

080025e0 <_fini>:
 80025e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025e2:	bf00      	nop
 80025e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80025e6:	bc08      	pop	{r3}
 80025e8:	469e      	mov	lr, r3
 80025ea:	4770      	bx	lr
