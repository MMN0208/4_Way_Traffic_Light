
4_Way_Traffic_Light.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004238  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000068  08004344  08004344  00014344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080043ac  080043ac  00020390  2**0
                  CONTENTS
  4 .ARM          00000000  080043ac  080043ac  00020390  2**0
                  CONTENTS
  5 .preinit_array 00000000  080043ac  080043ac  00020390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080043ac  080043ac  000143ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080043b0  080043b0  000143b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000390  20000000  080043b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000470  20000390  08004744  00020390  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000800  08004744  00020800  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020390  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c3b8  00000000  00000000  000203b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000027ed  00000000  00000000  0002c771  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000da0  00000000  00000000  0002ef60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c30  00000000  00000000  0002fd00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a7c3  00000000  00000000  00030930  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000130eb  00000000  00000000  0004b0f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b5de  00000000  00000000  0005e1de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e97bc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000038d4  00000000  00000000  000e980c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000390 	.word	0x20000390
 8000128:	00000000 	.word	0x00000000
 800012c:	0800432c 	.word	0x0800432c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000394 	.word	0x20000394
 8000148:	0800432c 	.word	0x0800432c

0800014c <grnBuzzer>:
  4,16,4,
  4,8,4,4,4,
  4,20,
};

void grnBuzzer(void) {
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
	int counter = sizeof(music1)/sizeof(music1[0]);
 8000152:	234e      	movs	r3, #78	; 0x4e
 8000154:	607b      	str	r3, [r7, #4]
//		grnBuzzerCounter++;
//	}
//	else {
//		grnBuzzerCounter = 10;
//	}
	if (grnBuzzerCounter < counter){
 8000156:	4b16      	ldr	r3, [pc, #88]	; (80001b0 <grnBuzzer+0x64>)
 8000158:	681b      	ldr	r3, [r3, #0]
 800015a:	687a      	ldr	r2, [r7, #4]
 800015c:	429a      	cmp	r2, r3
 800015e:	dd1f      	ble.n	80001a0 <grnBuzzer+0x54>
		__HAL_TIM_SET_AUTORELOAD(&htim3, 1000000/music1[grnBuzzerCounter]);
 8000160:	4b13      	ldr	r3, [pc, #76]	; (80001b0 <grnBuzzer+0x64>)
 8000162:	681b      	ldr	r3, [r3, #0]
 8000164:	4a13      	ldr	r2, [pc, #76]	; (80001b4 <grnBuzzer+0x68>)
 8000166:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800016a:	4a13      	ldr	r2, [pc, #76]	; (80001b8 <grnBuzzer+0x6c>)
 800016c:	fb92 f2f3 	sdiv	r2, r2, r3
 8000170:	4b12      	ldr	r3, [pc, #72]	; (80001bc <grnBuzzer+0x70>)
 8000172:	681b      	ldr	r3, [r3, #0]
 8000174:	62da      	str	r2, [r3, #44]	; 0x2c
 8000176:	4b0e      	ldr	r3, [pc, #56]	; (80001b0 <grnBuzzer+0x64>)
 8000178:	681b      	ldr	r3, [r3, #0]
 800017a:	4a0e      	ldr	r2, [pc, #56]	; (80001b4 <grnBuzzer+0x68>)
 800017c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000180:	4a0d      	ldr	r2, [pc, #52]	; (80001b8 <grnBuzzer+0x6c>)
 8000182:	fb92 f3f3 	sdiv	r3, r2, r3
 8000186:	461a      	mov	r2, r3
 8000188:	4b0c      	ldr	r3, [pc, #48]	; (80001bc <grnBuzzer+0x70>)
 800018a:	60da      	str	r2, [r3, #12]
		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 15);
 800018c:	4b0b      	ldr	r3, [pc, #44]	; (80001bc <grnBuzzer+0x70>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	220f      	movs	r2, #15
 8000192:	635a      	str	r2, [r3, #52]	; 0x34
		grnBuzzerCounter++;
 8000194:	4b06      	ldr	r3, [pc, #24]	; (80001b0 <grnBuzzer+0x64>)
 8000196:	681b      	ldr	r3, [r3, #0]
 8000198:	3301      	adds	r3, #1
 800019a:	4a05      	ldr	r2, [pc, #20]	; (80001b0 <grnBuzzer+0x64>)
 800019c:	6013      	str	r3, [r2, #0]
	} else {
		grnBuzzerCounter = 0;
	}
}
 800019e:	e002      	b.n	80001a6 <grnBuzzer+0x5a>
		grnBuzzerCounter = 0;
 80001a0:	4b03      	ldr	r3, [pc, #12]	; (80001b0 <grnBuzzer+0x64>)
 80001a2:	2200      	movs	r2, #0
 80001a4:	601a      	str	r2, [r3, #0]
}
 80001a6:	bf00      	nop
 80001a8:	370c      	adds	r7, #12
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bc80      	pop	{r7}
 80001ae:	4770      	bx	lr
 80001b0:	200003ac 	.word	0x200003ac
 80001b4:	20000000 	.word	0x20000000
 80001b8:	000f4240 	.word	0x000f4240
 80001bc:	20000760 	.word	0x20000760

080001c0 <redBuzzer>:

void redBuzzer(void) {
 80001c0:	b480      	push	{r7}
 80001c2:	b083      	sub	sp, #12
 80001c4:	af00      	add	r7, sp, #0
	int counter = sizeof(music2)/sizeof(music2[0]);
 80001c6:	2363      	movs	r3, #99	; 0x63
 80001c8:	607b      	str	r3, [r7, #4]
	if(redBuzzerCounter < counter) {
 80001ca:	4b13      	ldr	r3, [pc, #76]	; (8000218 <redBuzzer+0x58>)
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	687a      	ldr	r2, [r7, #4]
 80001d0:	429a      	cmp	r2, r3
 80001d2:	dd19      	ble.n	8000208 <redBuzzer+0x48>
		__HAL_TIM_SET_AUTORELOAD(&htim3, music2[redBuzzerCounter]);
 80001d4:	4b10      	ldr	r3, [pc, #64]	; (8000218 <redBuzzer+0x58>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a10      	ldr	r2, [pc, #64]	; (800021c <redBuzzer+0x5c>)
 80001da:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001de:	4b10      	ldr	r3, [pc, #64]	; (8000220 <redBuzzer+0x60>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	62da      	str	r2, [r3, #44]	; 0x2c
 80001e4:	4b0c      	ldr	r3, [pc, #48]	; (8000218 <redBuzzer+0x58>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a0c      	ldr	r2, [pc, #48]	; (800021c <redBuzzer+0x5c>)
 80001ea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80001ee:	461a      	mov	r2, r3
 80001f0:	4b0b      	ldr	r3, [pc, #44]	; (8000220 <redBuzzer+0x60>)
 80001f2:	60da      	str	r2, [r3, #12]
		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 15);
 80001f4:	4b0a      	ldr	r3, [pc, #40]	; (8000220 <redBuzzer+0x60>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	220f      	movs	r2, #15
 80001fa:	635a      	str	r2, [r3, #52]	; 0x34
//		__HAL_TIM_SET_PRESCALER(&htim3,music2[redBuzzerCounter]);
		redBuzzerCounter ++;
 80001fc:	4b06      	ldr	r3, [pc, #24]	; (8000218 <redBuzzer+0x58>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	3301      	adds	r3, #1
 8000202:	4a05      	ldr	r2, [pc, #20]	; (8000218 <redBuzzer+0x58>)
 8000204:	6013      	str	r3, [r2, #0]
	}
	else {
		redBuzzerCounter  = 0;
	}
}
 8000206:	e002      	b.n	800020e <redBuzzer+0x4e>
		redBuzzerCounter  = 0;
 8000208:	4b03      	ldr	r3, [pc, #12]	; (8000218 <redBuzzer+0x58>)
 800020a:	2200      	movs	r2, #0
 800020c:	601a      	str	r2, [r3, #0]
}
 800020e:	bf00      	nop
 8000210:	370c      	adds	r7, #12
 8000212:	46bd      	mov	sp, r7
 8000214:	bc80      	pop	{r7}
 8000216:	4770      	bx	lr
 8000218:	200003b0 	.word	0x200003b0
 800021c:	20000138 	.word	0x20000138
 8000220:	20000760 	.word	0x20000760

08000224 <stopBuzzer>:

void stopBuzzer(void) {
 8000224:	b480      	push	{r7}
 8000226:	af00      	add	r7, sp, #0
	__HAL_TIM_SET_AUTORELOAD(&htim3, 0);
 8000228:	4b07      	ldr	r3, [pc, #28]	; (8000248 <stopBuzzer+0x24>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	2200      	movs	r2, #0
 800022e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000230:	4b05      	ldr	r3, [pc, #20]	; (8000248 <stopBuzzer+0x24>)
 8000232:	2200      	movs	r2, #0
 8000234:	60da      	str	r2, [r3, #12]
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 0);
 8000236:	4b04      	ldr	r3, [pc, #16]	; (8000248 <stopBuzzer+0x24>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	2200      	movs	r2, #0
 800023c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800023e:	bf00      	nop
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop
 8000248:	20000760 	.word	0x20000760

0800024c <fsm_multi_mode_run>:

int newGrnTime = 0;
int newYelTime = 0;

void fsm_multi_mode_run(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
    switch (sysStatus) {
 8000250:	4ba9      	ldr	r3, [pc, #676]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000252:	781b      	ldrb	r3, [r3, #0]
 8000254:	2b06      	cmp	r3, #6
 8000256:	f200 825e 	bhi.w	8000716 <fsm_multi_mode_run+0x4ca>
 800025a:	a201      	add	r2, pc, #4	; (adr r2, 8000260 <fsm_multi_mode_run+0x14>)
 800025c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000260:	0800027d 	.word	0x0800027d
 8000264:	080002b3 	.word	0x080002b3
 8000268:	08000375 	.word	0x08000375
 800026c:	08000437 	.word	0x08000437
 8000270:	08000515 	.word	0x08000515
 8000274:	08000673 	.word	0x08000673
 8000278:	080005d7 	.word	0x080005d7
    case INIT:
        // init timer 1 for countdown updating
        setTimer(&timer1, SECOND);
 800027c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000280:	489e      	ldr	r0, [pc, #632]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 8000282:	f000 ffa9 	bl	80011d8 <setTimer>


        // init countdown
        countdown = grnTime;
 8000286:	4b9e      	ldr	r3, [pc, #632]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	4a9e      	ldr	r2, [pc, #632]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 800028c:	6013      	str	r3, [r2, #0]

        auto_mode = 1;
 800028e:	4b9e      	ldr	r3, [pc, #632]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 8000290:	2201      	movs	r2, #1
 8000292:	601a      	str	r2, [r3, #0]

        sysStatus = RED__GRN;
 8000294:	4b98      	ldr	r3, [pc, #608]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000296:	2201      	movs	r2, #1
 8000298:	701a      	strb	r2, [r3, #0]
        trafficLightRed(TRAFFIC_LIGHT_1);
 800029a:	2000      	movs	r0, #0
 800029c:	f001 fa3c 	bl	8001718 <trafficLightRed>
        trafficLightGrn(TRAFFIC_LIGHT_2);
 80002a0:	2001      	movs	r0, #1
 80002a2:	f001 f9ed 	bl	8001680 <trafficLightGrn>
        displayCountdown(countdown);
 80002a6:	4b97      	ldr	r3, [pc, #604]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4618      	mov	r0, r3
 80002ac:	f001 fa5a 	bl	8001764 <displayCountdown>
        break;
 80002b0:	e23e      	b.n	8000730 <fsm_multi_mode_run+0x4e4>

    case RED__GRN:
        if (auto_mode == 1) {
 80002b2:	4b95      	ldr	r3, [pc, #596]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d12e      	bne.n	8000318 <fsm_multi_mode_run+0xcc>
            if (timer1.flag == 1) {
 80002ba:	4b90      	ldr	r3, [pc, #576]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 80002bc:	685b      	ldr	r3, [r3, #4]
 80002be:	2b01      	cmp	r3, #1
 80002c0:	d11f      	bne.n	8000302 <fsm_multi_mode_run+0xb6>
                setTimer(&timer1, SECOND);
 80002c2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80002c6:	488d      	ldr	r0, [pc, #564]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 80002c8:	f000 ff86 	bl	80011d8 <setTimer>
                countdown -= 1;
 80002cc:	4b8d      	ldr	r3, [pc, #564]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	3b01      	subs	r3, #1
 80002d2:	4a8c      	ldr	r2, [pc, #560]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002d4:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 80002d6:	4b8b      	ldr	r3, [pc, #556]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d10c      	bne.n	80002f8 <fsm_multi_mode_run+0xac>
                    countdown = yelTime;
 80002de:	4b8b      	ldr	r3, [pc, #556]	; (800050c <fsm_multi_mode_run+0x2c0>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	4a88      	ldr	r2, [pc, #544]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002e4:	6013      	str	r3, [r2, #0]
                    sysStatus = RED__YEL;
 80002e6:	4b84      	ldr	r3, [pc, #528]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80002e8:	2202      	movs	r2, #2
 80002ea:	701a      	strb	r2, [r3, #0]
                    trafficLightRed(TRAFFIC_LIGHT_1);
 80002ec:	2000      	movs	r0, #0
 80002ee:	f001 fa13 	bl	8001718 <trafficLightRed>
                    trafficLightYel(TRAFFIC_LIGHT_2);
 80002f2:	2001      	movs	r0, #1
 80002f4:	f001 f9ea 	bl	80016cc <trafficLightYel>
                }
                displayCountdown(countdown);
 80002f8:	4b82      	ldr	r3, [pc, #520]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f001 fa31 	bl	8001764 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 8000302:	2001      	movs	r0, #1
 8000304:	f000 fc9e 	bl	8000c44 <isButtonPressed>
 8000308:	4603      	mov	r3, r0
 800030a:	2b00      	cmp	r3, #0
 800030c:	f000 8205 	beq.w	800071a <fsm_multi_mode_run+0x4ce>
                auto_mode = 0;
 8000310:	4b7d      	ldr	r3, [pc, #500]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 8000312:	2200      	movs	r2, #0
 8000314:	601a      	str	r2, [r3, #0]
                trafficLightRed(TRAFFIC_LIGHT_1);
                trafficLightYel(TRAFFIC_LIGHT_2);
            }
        }

        break;
 8000316:	e200      	b.n	800071a <fsm_multi_mode_run+0x4ce>
            if (isButtonPressed(BUTTON_1)) {
 8000318:	2001      	movs	r0, #1
 800031a:	f000 fc93 	bl	8000c44 <isButtonPressed>
 800031e:	4603      	mov	r3, r0
 8000320:	2b00      	cmp	r3, #0
 8000322:	d016      	beq.n	8000352 <fsm_multi_mode_run+0x106>
                setTimer(&timer1, LED_BLINK);
 8000324:	2164      	movs	r1, #100	; 0x64
 8000326:	4875      	ldr	r0, [pc, #468]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 8000328:	f000 ff56 	bl	80011d8 <setTimer>
                newGrnTime = grnTime;
 800032c:	4b74      	ldr	r3, [pc, #464]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	4a77      	ldr	r2, [pc, #476]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 8000332:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 8000334:	4b70      	ldr	r3, [pc, #448]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000336:	2206      	movs	r2, #6
 8000338:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 800033a:	2000      	movs	r0, #0
 800033c:	f001 f9a0 	bl	8001680 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 8000340:	2001      	movs	r0, #1
 8000342:	f001 f99d 	bl	8001680 <trafficLightGrn>
                displayCountdown(newGrnTime);
 8000346:	4b72      	ldr	r3, [pc, #456]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	4618      	mov	r0, r3
 800034c:	f001 fa0a 	bl	8001764 <displayCountdown>
        break;
 8000350:	e1e3      	b.n	800071a <fsm_multi_mode_run+0x4ce>
            } else if (isButtonPressed(BUTTON_2)) {
 8000352:	2002      	movs	r0, #2
 8000354:	f000 fc76 	bl	8000c44 <isButtonPressed>
 8000358:	4603      	mov	r3, r0
 800035a:	2b00      	cmp	r3, #0
 800035c:	f000 81dd 	beq.w	800071a <fsm_multi_mode_run+0x4ce>
                sysStatus = RED__YEL;
 8000360:	4b65      	ldr	r3, [pc, #404]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000362:	2202      	movs	r2, #2
 8000364:	701a      	strb	r2, [r3, #0]
                trafficLightRed(TRAFFIC_LIGHT_1);
 8000366:	2000      	movs	r0, #0
 8000368:	f001 f9d6 	bl	8001718 <trafficLightRed>
                trafficLightYel(TRAFFIC_LIGHT_2);
 800036c:	2001      	movs	r0, #1
 800036e:	f001 f9ad 	bl	80016cc <trafficLightYel>
        break;
 8000372:	e1d2      	b.n	800071a <fsm_multi_mode_run+0x4ce>

    case RED__YEL:
        if (auto_mode == 1) {
 8000374:	4b64      	ldr	r3, [pc, #400]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	2b01      	cmp	r3, #1
 800037a:	d12e      	bne.n	80003da <fsm_multi_mode_run+0x18e>
            if (timer1.flag == 1) {
 800037c:	4b5f      	ldr	r3, [pc, #380]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 800037e:	685b      	ldr	r3, [r3, #4]
 8000380:	2b01      	cmp	r3, #1
 8000382:	d11f      	bne.n	80003c4 <fsm_multi_mode_run+0x178>
                setTimer(&timer1, SECOND);
 8000384:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000388:	485c      	ldr	r0, [pc, #368]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 800038a:	f000 ff25 	bl	80011d8 <setTimer>
                countdown--;
 800038e:	4b5d      	ldr	r3, [pc, #372]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	3b01      	subs	r3, #1
 8000394:	4a5b      	ldr	r2, [pc, #364]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000396:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 8000398:	4b5a      	ldr	r3, [pc, #360]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	2b00      	cmp	r3, #0
 800039e:	d10c      	bne.n	80003ba <fsm_multi_mode_run+0x16e>
                    countdown = grnTime;
 80003a0:	4b57      	ldr	r3, [pc, #348]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	4a57      	ldr	r2, [pc, #348]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80003a6:	6013      	str	r3, [r2, #0]
                    sysStatus = GRN__RED;
 80003a8:	4b53      	ldr	r3, [pc, #332]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80003aa:	2203      	movs	r2, #3
 80003ac:	701a      	strb	r2, [r3, #0]
                    trafficLightGrn(TRAFFIC_LIGHT_1);
 80003ae:	2000      	movs	r0, #0
 80003b0:	f001 f966 	bl	8001680 <trafficLightGrn>
                    trafficLightRed(TRAFFIC_LIGHT_2);
 80003b4:	2001      	movs	r0, #1
 80003b6:	f001 f9af 	bl	8001718 <trafficLightRed>
                }
                displayCountdown(countdown);
 80003ba:	4b52      	ldr	r3, [pc, #328]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	4618      	mov	r0, r3
 80003c0:	f001 f9d0 	bl	8001764 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 80003c4:	2001      	movs	r0, #1
 80003c6:	f000 fc3d 	bl	8000c44 <isButtonPressed>
 80003ca:	4603      	mov	r3, r0
 80003cc:	2b00      	cmp	r3, #0
 80003ce:	f000 81a6 	beq.w	800071e <fsm_multi_mode_run+0x4d2>
                auto_mode = 0;
 80003d2:	4b4d      	ldr	r3, [pc, #308]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 80003d4:	2200      	movs	r2, #0
 80003d6:	601a      	str	r2, [r3, #0]
                sysStatus = GRN__RED;
                trafficLightGrn(TRAFFIC_LIGHT_1);
                trafficLightRed(TRAFFIC_LIGHT_2);
            }
        }
        break;
 80003d8:	e1a1      	b.n	800071e <fsm_multi_mode_run+0x4d2>
            if (isButtonPressed(BUTTON_1)) {
 80003da:	2001      	movs	r0, #1
 80003dc:	f000 fc32 	bl	8000c44 <isButtonPressed>
 80003e0:	4603      	mov	r3, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d016      	beq.n	8000414 <fsm_multi_mode_run+0x1c8>
                setTimer(&timer1, LED_BLINK);
 80003e6:	2164      	movs	r1, #100	; 0x64
 80003e8:	4844      	ldr	r0, [pc, #272]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 80003ea:	f000 fef5 	bl	80011d8 <setTimer>
                newGrnTime = grnTime;
 80003ee:	4b44      	ldr	r3, [pc, #272]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a47      	ldr	r2, [pc, #284]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 80003f4:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 80003f6:	4b40      	ldr	r3, [pc, #256]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80003f8:	2206      	movs	r2, #6
 80003fa:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 80003fc:	2000      	movs	r0, #0
 80003fe:	f001 f93f 	bl	8001680 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 8000402:	2001      	movs	r0, #1
 8000404:	f001 f93c 	bl	8001680 <trafficLightGrn>
                displayCountdown(newGrnTime);
 8000408:	4b41      	ldr	r3, [pc, #260]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	4618      	mov	r0, r3
 800040e:	f001 f9a9 	bl	8001764 <displayCountdown>
        break;
 8000412:	e184      	b.n	800071e <fsm_multi_mode_run+0x4d2>
            } else if (isButtonPressed(BUTTON_2)) {
 8000414:	2002      	movs	r0, #2
 8000416:	f000 fc15 	bl	8000c44 <isButtonPressed>
 800041a:	4603      	mov	r3, r0
 800041c:	2b00      	cmp	r3, #0
 800041e:	f000 817e 	beq.w	800071e <fsm_multi_mode_run+0x4d2>
                sysStatus = GRN__RED;
 8000422:	4b35      	ldr	r3, [pc, #212]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 8000424:	2203      	movs	r2, #3
 8000426:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 8000428:	2000      	movs	r0, #0
 800042a:	f001 f929 	bl	8001680 <trafficLightGrn>
                trafficLightRed(TRAFFIC_LIGHT_2);
 800042e:	2001      	movs	r0, #1
 8000430:	f001 f972 	bl	8001718 <trafficLightRed>
        break;
 8000434:	e173      	b.n	800071e <fsm_multi_mode_run+0x4d2>

    case GRN__RED:
        if (auto_mode == 1) {
 8000436:	4b34      	ldr	r3, [pc, #208]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	2b01      	cmp	r3, #1
 800043c:	d12e      	bne.n	800049c <fsm_multi_mode_run+0x250>
            if (timer1.flag == 1) {
 800043e:	4b2f      	ldr	r3, [pc, #188]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 8000440:	685b      	ldr	r3, [r3, #4]
 8000442:	2b01      	cmp	r3, #1
 8000444:	d11f      	bne.n	8000486 <fsm_multi_mode_run+0x23a>
                setTimer(&timer1, SECOND);
 8000446:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800044a:	482c      	ldr	r0, [pc, #176]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 800044c:	f000 fec4 	bl	80011d8 <setTimer>
                countdown--;
 8000450:	4b2c      	ldr	r3, [pc, #176]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	3b01      	subs	r3, #1
 8000456:	4a2b      	ldr	r2, [pc, #172]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000458:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 800045a:	4b2a      	ldr	r3, [pc, #168]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	2b00      	cmp	r3, #0
 8000460:	d10c      	bne.n	800047c <fsm_multi_mode_run+0x230>
                    countdown = yelTime;
 8000462:	4b2a      	ldr	r3, [pc, #168]	; (800050c <fsm_multi_mode_run+0x2c0>)
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4a27      	ldr	r2, [pc, #156]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 8000468:	6013      	str	r3, [r2, #0]
                    sysStatus = YEL__RED;
 800046a:	4b23      	ldr	r3, [pc, #140]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 800046c:	2204      	movs	r2, #4
 800046e:	701a      	strb	r2, [r3, #0]
                    trafficLightYel(TRAFFIC_LIGHT_1);
 8000470:	2000      	movs	r0, #0
 8000472:	f001 f92b 	bl	80016cc <trafficLightYel>
                    trafficLightRed(TRAFFIC_LIGHT_2);
 8000476:	2001      	movs	r0, #1
 8000478:	f001 f94e 	bl	8001718 <trafficLightRed>
                }
                displayCountdown(countdown);
 800047c:	4b21      	ldr	r3, [pc, #132]	; (8000504 <fsm_multi_mode_run+0x2b8>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4618      	mov	r0, r3
 8000482:	f001 f96f 	bl	8001764 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 8000486:	2001      	movs	r0, #1
 8000488:	f000 fbdc 	bl	8000c44 <isButtonPressed>
 800048c:	4603      	mov	r3, r0
 800048e:	2b00      	cmp	r3, #0
 8000490:	f000 8147 	beq.w	8000722 <fsm_multi_mode_run+0x4d6>
                auto_mode = 0;
 8000494:	4b1c      	ldr	r3, [pc, #112]	; (8000508 <fsm_multi_mode_run+0x2bc>)
 8000496:	2200      	movs	r2, #0
 8000498:	601a      	str	r2, [r3, #0]
                sysStatus = YEL__RED;
                trafficLightYel(TRAFFIC_LIGHT_1);
                trafficLightRed(TRAFFIC_LIGHT_2);
            }
        }
        break;
 800049a:	e142      	b.n	8000722 <fsm_multi_mode_run+0x4d6>
            if (isButtonPressed(BUTTON_1)) {
 800049c:	2001      	movs	r0, #1
 800049e:	f000 fbd1 	bl	8000c44 <isButtonPressed>
 80004a2:	4603      	mov	r3, r0
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	d016      	beq.n	80004d6 <fsm_multi_mode_run+0x28a>
                setTimer(&timer1, LED_BLINK);
 80004a8:	2164      	movs	r1, #100	; 0x64
 80004aa:	4814      	ldr	r0, [pc, #80]	; (80004fc <fsm_multi_mode_run+0x2b0>)
 80004ac:	f000 fe94 	bl	80011d8 <setTimer>
                newGrnTime = grnTime;
 80004b0:	4b13      	ldr	r3, [pc, #76]	; (8000500 <fsm_multi_mode_run+0x2b4>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4a16      	ldr	r2, [pc, #88]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 80004b6:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 80004b8:	4b0f      	ldr	r3, [pc, #60]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80004ba:	2206      	movs	r2, #6
 80004bc:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 80004be:	2000      	movs	r0, #0
 80004c0:	f001 f8de 	bl	8001680 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80004c4:	2001      	movs	r0, #1
 80004c6:	f001 f8db 	bl	8001680 <trafficLightGrn>
                displayCountdown(newGrnTime);
 80004ca:	4b11      	ldr	r3, [pc, #68]	; (8000510 <fsm_multi_mode_run+0x2c4>)
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	4618      	mov	r0, r3
 80004d0:	f001 f948 	bl	8001764 <displayCountdown>
        break;
 80004d4:	e125      	b.n	8000722 <fsm_multi_mode_run+0x4d6>
            } else if (isButtonPressed(BUTTON_2)) {
 80004d6:	2002      	movs	r0, #2
 80004d8:	f000 fbb4 	bl	8000c44 <isButtonPressed>
 80004dc:	4603      	mov	r3, r0
 80004de:	2b00      	cmp	r3, #0
 80004e0:	f000 811f 	beq.w	8000722 <fsm_multi_mode_run+0x4d6>
                sysStatus = YEL__RED;
 80004e4:	4b04      	ldr	r3, [pc, #16]	; (80004f8 <fsm_multi_mode_run+0x2ac>)
 80004e6:	2204      	movs	r2, #4
 80004e8:	701a      	strb	r2, [r3, #0]
                trafficLightYel(TRAFFIC_LIGHT_1);
 80004ea:	2000      	movs	r0, #0
 80004ec:	f001 f8ee 	bl	80016cc <trafficLightYel>
                trafficLightRed(TRAFFIC_LIGHT_2);
 80004f0:	2001      	movs	r0, #1
 80004f2:	f001 f911 	bl	8001718 <trafficLightRed>
        break;
 80004f6:	e114      	b.n	8000722 <fsm_multi_mode_run+0x4d6>
 80004f8:	200003c0 	.word	0x200003c0
 80004fc:	200006fc 	.word	0x200006fc
 8000500:	200002cc 	.word	0x200002cc
 8000504:	200003c4 	.word	0x200003c4
 8000508:	200002d0 	.word	0x200002d0
 800050c:	200002c8 	.word	0x200002c8
 8000510:	200003b4 	.word	0x200003b4

    case YEL__RED:
        if (auto_mode == 1) {
 8000514:	4b87      	ldr	r3, [pc, #540]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	2b01      	cmp	r3, #1
 800051a:	d12e      	bne.n	800057a <fsm_multi_mode_run+0x32e>
            if (timer1.flag == 1) {
 800051c:	4b86      	ldr	r3, [pc, #536]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 800051e:	685b      	ldr	r3, [r3, #4]
 8000520:	2b01      	cmp	r3, #1
 8000522:	d11f      	bne.n	8000564 <fsm_multi_mode_run+0x318>
                setTimer(&timer1, SECOND);
 8000524:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000528:	4883      	ldr	r0, [pc, #524]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 800052a:	f000 fe55 	bl	80011d8 <setTimer>
                countdown--;
 800052e:	4b83      	ldr	r3, [pc, #524]	; (800073c <fsm_multi_mode_run+0x4f0>)
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	3b01      	subs	r3, #1
 8000534:	4a81      	ldr	r2, [pc, #516]	; (800073c <fsm_multi_mode_run+0x4f0>)
 8000536:	6013      	str	r3, [r2, #0]
                if (countdown == 0) {
 8000538:	4b80      	ldr	r3, [pc, #512]	; (800073c <fsm_multi_mode_run+0x4f0>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	2b00      	cmp	r3, #0
 800053e:	d10c      	bne.n	800055a <fsm_multi_mode_run+0x30e>
                    countdown = grnTime;
 8000540:	4b7f      	ldr	r3, [pc, #508]	; (8000740 <fsm_multi_mode_run+0x4f4>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	4a7d      	ldr	r2, [pc, #500]	; (800073c <fsm_multi_mode_run+0x4f0>)
 8000546:	6013      	str	r3, [r2, #0]
                    sysStatus = RED__GRN;
 8000548:	4b7e      	ldr	r3, [pc, #504]	; (8000744 <fsm_multi_mode_run+0x4f8>)
 800054a:	2201      	movs	r2, #1
 800054c:	701a      	strb	r2, [r3, #0]
                    trafficLightRed(TRAFFIC_LIGHT_1);
 800054e:	2000      	movs	r0, #0
 8000550:	f001 f8e2 	bl	8001718 <trafficLightRed>
                    trafficLightGrn(TRAFFIC_LIGHT_2);
 8000554:	2001      	movs	r0, #1
 8000556:	f001 f893 	bl	8001680 <trafficLightGrn>
                }
                displayCountdown(countdown);
 800055a:	4b78      	ldr	r3, [pc, #480]	; (800073c <fsm_multi_mode_run+0x4f0>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	4618      	mov	r0, r3
 8000560:	f001 f900 	bl	8001764 <displayCountdown>
            }

            if (isButtonPressed(BUTTON_1)) {
 8000564:	2001      	movs	r0, #1
 8000566:	f000 fb6d 	bl	8000c44 <isButtonPressed>
 800056a:	4603      	mov	r3, r0
 800056c:	2b00      	cmp	r3, #0
 800056e:	f000 80da 	beq.w	8000726 <fsm_multi_mode_run+0x4da>
                auto_mode = 0;
 8000572:	4b70      	ldr	r3, [pc, #448]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 8000574:	2200      	movs	r2, #0
 8000576:	601a      	str	r2, [r3, #0]
                sysStatus = RED__GRN;
                trafficLightRed(TRAFFIC_LIGHT_1);
                trafficLightGrn(TRAFFIC_LIGHT_2);
            }
        }
        break;
 8000578:	e0d5      	b.n	8000726 <fsm_multi_mode_run+0x4da>
            if (isButtonPressed(BUTTON_1)) {
 800057a:	2001      	movs	r0, #1
 800057c:	f000 fb62 	bl	8000c44 <isButtonPressed>
 8000580:	4603      	mov	r3, r0
 8000582:	2b00      	cmp	r3, #0
 8000584:	d016      	beq.n	80005b4 <fsm_multi_mode_run+0x368>
                setTimer(&timer1, LED_BLINK);
 8000586:	2164      	movs	r1, #100	; 0x64
 8000588:	486b      	ldr	r0, [pc, #428]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 800058a:	f000 fe25 	bl	80011d8 <setTimer>
                newGrnTime = grnTime;
 800058e:	4b6c      	ldr	r3, [pc, #432]	; (8000740 <fsm_multi_mode_run+0x4f4>)
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	4a6d      	ldr	r2, [pc, #436]	; (8000748 <fsm_multi_mode_run+0x4fc>)
 8000594:	6013      	str	r3, [r2, #0]
                sysStatus = SET_GRN;
 8000596:	4b6b      	ldr	r3, [pc, #428]	; (8000744 <fsm_multi_mode_run+0x4f8>)
 8000598:	2206      	movs	r2, #6
 800059a:	701a      	strb	r2, [r3, #0]
                trafficLightGrn(TRAFFIC_LIGHT_1);
 800059c:	2000      	movs	r0, #0
 800059e:	f001 f86f 	bl	8001680 <trafficLightGrn>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80005a2:	2001      	movs	r0, #1
 80005a4:	f001 f86c 	bl	8001680 <trafficLightGrn>
                displayCountdown(newGrnTime);
 80005a8:	4b67      	ldr	r3, [pc, #412]	; (8000748 <fsm_multi_mode_run+0x4fc>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	4618      	mov	r0, r3
 80005ae:	f001 f8d9 	bl	8001764 <displayCountdown>
        break;
 80005b2:	e0b8      	b.n	8000726 <fsm_multi_mode_run+0x4da>
            } else if (isButtonPressed(BUTTON_2)) {
 80005b4:	2002      	movs	r0, #2
 80005b6:	f000 fb45 	bl	8000c44 <isButtonPressed>
 80005ba:	4603      	mov	r3, r0
 80005bc:	2b00      	cmp	r3, #0
 80005be:	f000 80b2 	beq.w	8000726 <fsm_multi_mode_run+0x4da>
                sysStatus = RED__GRN;
 80005c2:	4b60      	ldr	r3, [pc, #384]	; (8000744 <fsm_multi_mode_run+0x4f8>)
 80005c4:	2201      	movs	r2, #1
 80005c6:	701a      	strb	r2, [r3, #0]
                trafficLightRed(TRAFFIC_LIGHT_1);
 80005c8:	2000      	movs	r0, #0
 80005ca:	f001 f8a5 	bl	8001718 <trafficLightRed>
                trafficLightGrn(TRAFFIC_LIGHT_2);
 80005ce:	2001      	movs	r0, #1
 80005d0:	f001 f856 	bl	8001680 <trafficLightGrn>
        break;
 80005d4:	e0a7      	b.n	8000726 <fsm_multi_mode_run+0x4da>

    case SET_GRN:
        if (isButtonPressed(BUTTON_1)) {
 80005d6:	2001      	movs	r0, #1
 80005d8:	f000 fb34 	bl	8000c44 <isButtonPressed>
 80005dc:	4603      	mov	r3, r0
 80005de:	2b00      	cmp	r3, #0
 80005e0:	d016      	beq.n	8000610 <fsm_multi_mode_run+0x3c4>
            setTimer(&timer1, LED_BLINK);
 80005e2:	2164      	movs	r1, #100	; 0x64
 80005e4:	4854      	ldr	r0, [pc, #336]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80005e6:	f000 fdf7 	bl	80011d8 <setTimer>
            newYelTime = yelTime;
 80005ea:	4b58      	ldr	r3, [pc, #352]	; (800074c <fsm_multi_mode_run+0x500>)
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a58      	ldr	r2, [pc, #352]	; (8000750 <fsm_multi_mode_run+0x504>)
 80005f0:	6013      	str	r3, [r2, #0]
            sysStatus = SET_YEL;
 80005f2:	4b54      	ldr	r3, [pc, #336]	; (8000744 <fsm_multi_mode_run+0x4f8>)
 80005f4:	2205      	movs	r2, #5
 80005f6:	701a      	strb	r2, [r3, #0]
            trafficLightYel(TRAFFIC_LIGHT_1);
 80005f8:	2000      	movs	r0, #0
 80005fa:	f001 f867 	bl	80016cc <trafficLightYel>
            trafficLightYel(TRAFFIC_LIGHT_2);
 80005fe:	2001      	movs	r0, #1
 8000600:	f001 f864 	bl	80016cc <trafficLightYel>
            displayCountdown(newYelTime);
 8000604:	4b52      	ldr	r3, [pc, #328]	; (8000750 <fsm_multi_mode_run+0x504>)
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4618      	mov	r0, r3
 800060a:	f001 f8ab 	bl	8001764 <displayCountdown>
 800060e:	e021      	b.n	8000654 <fsm_multi_mode_run+0x408>
        } else if (isButtonPressed(BUTTON_2)) {
 8000610:	2002      	movs	r0, #2
 8000612:	f000 fb17 	bl	8000c44 <isButtonPressed>
 8000616:	4603      	mov	r3, r0
 8000618:	2b00      	cmp	r3, #0
 800061a:	d00a      	beq.n	8000632 <fsm_multi_mode_run+0x3e6>
            newGrnTime++;
 800061c:	4b4a      	ldr	r3, [pc, #296]	; (8000748 <fsm_multi_mode_run+0x4fc>)
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	3301      	adds	r3, #1
 8000622:	4a49      	ldr	r2, [pc, #292]	; (8000748 <fsm_multi_mode_run+0x4fc>)
 8000624:	6013      	str	r3, [r2, #0]
            displayCountdown(newGrnTime);
 8000626:	4b48      	ldr	r3, [pc, #288]	; (8000748 <fsm_multi_mode_run+0x4fc>)
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	4618      	mov	r0, r3
 800062c:	f001 f89a 	bl	8001764 <displayCountdown>
 8000630:	e010      	b.n	8000654 <fsm_multi_mode_run+0x408>
        } else if (isButtonPressed(BUTTON_3)) {
 8000632:	2003      	movs	r0, #3
 8000634:	f000 fb06 	bl	8000c44 <isButtonPressed>
 8000638:	4603      	mov	r3, r0
 800063a:	2b00      	cmp	r3, #0
 800063c:	d00a      	beq.n	8000654 <fsm_multi_mode_run+0x408>
            grnTime = newGrnTime;
 800063e:	4b42      	ldr	r3, [pc, #264]	; (8000748 <fsm_multi_mode_run+0x4fc>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	4a3f      	ldr	r2, [pc, #252]	; (8000740 <fsm_multi_mode_run+0x4f4>)
 8000644:	6013      	str	r3, [r2, #0]
            redTime = grnTime + yelTime;
 8000646:	4b3e      	ldr	r3, [pc, #248]	; (8000740 <fsm_multi_mode_run+0x4f4>)
 8000648:	681a      	ldr	r2, [r3, #0]
 800064a:	4b40      	ldr	r3, [pc, #256]	; (800074c <fsm_multi_mode_run+0x500>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	4413      	add	r3, r2
 8000650:	4a40      	ldr	r2, [pc, #256]	; (8000754 <fsm_multi_mode_run+0x508>)
 8000652:	6013      	str	r3, [r2, #0]
        }

        if (timer1.flag == 1) {
 8000654:	4b38      	ldr	r3, [pc, #224]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 8000656:	685b      	ldr	r3, [r3, #4]
 8000658:	2b01      	cmp	r3, #1
 800065a:	d166      	bne.n	800072a <fsm_multi_mode_run+0x4de>
            setTimer(&timer1, LED_BLINK);
 800065c:	2164      	movs	r1, #100	; 0x64
 800065e:	4836      	ldr	r0, [pc, #216]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 8000660:	f000 fdba 	bl	80011d8 <setTimer>
            trafficLightBlinkGrn(TRAFFIC_LIGHT_1);
 8000664:	2000      	movs	r0, #0
 8000666:	f000 ffbf 	bl	80015e8 <trafficLightBlinkGrn>
            trafficLightBlinkGrn(TRAFFIC_LIGHT_2);
 800066a:	2001      	movs	r0, #1
 800066c:	f000 ffbc 	bl	80015e8 <trafficLightBlinkGrn>
        }
        break;
 8000670:	e05b      	b.n	800072a <fsm_multi_mode_run+0x4de>

    case SET_YEL:
        if (isButtonPressed(BUTTON_1)) {
 8000672:	2001      	movs	r0, #1
 8000674:	f000 fae6 	bl	8000c44 <isButtonPressed>
 8000678:	4603      	mov	r3, r0
 800067a:	2b00      	cmp	r3, #0
 800067c:	d01a      	beq.n	80006b4 <fsm_multi_mode_run+0x468>
            setTimer(&timer1, SECOND);
 800067e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000682:	482d      	ldr	r0, [pc, #180]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 8000684:	f000 fda8 	bl	80011d8 <setTimer>
            countdown = grnTime;
 8000688:	4b2d      	ldr	r3, [pc, #180]	; (8000740 <fsm_multi_mode_run+0x4f4>)
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	4a2b      	ldr	r2, [pc, #172]	; (800073c <fsm_multi_mode_run+0x4f0>)
 800068e:	6013      	str	r3, [r2, #0]
            auto_mode = 1;
 8000690:	4b28      	ldr	r3, [pc, #160]	; (8000734 <fsm_multi_mode_run+0x4e8>)
 8000692:	2201      	movs	r2, #1
 8000694:	601a      	str	r2, [r3, #0]
            sysStatus = RED__GRN;
 8000696:	4b2b      	ldr	r3, [pc, #172]	; (8000744 <fsm_multi_mode_run+0x4f8>)
 8000698:	2201      	movs	r2, #1
 800069a:	701a      	strb	r2, [r3, #0]
            trafficLightRed(TRAFFIC_LIGHT_1);
 800069c:	2000      	movs	r0, #0
 800069e:	f001 f83b 	bl	8001718 <trafficLightRed>
            trafficLightGrn(TRAFFIC_LIGHT_2);
 80006a2:	2001      	movs	r0, #1
 80006a4:	f000 ffec 	bl	8001680 <trafficLightGrn>
            displayCountdown(countdown);
 80006a8:	4b24      	ldr	r3, [pc, #144]	; (800073c <fsm_multi_mode_run+0x4f0>)
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	4618      	mov	r0, r3
 80006ae:	f001 f859 	bl	8001764 <displayCountdown>
 80006b2:	e021      	b.n	80006f8 <fsm_multi_mode_run+0x4ac>
        } else if (isButtonPressed(BUTTON_2)) {
 80006b4:	2002      	movs	r0, #2
 80006b6:	f000 fac5 	bl	8000c44 <isButtonPressed>
 80006ba:	4603      	mov	r3, r0
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d00a      	beq.n	80006d6 <fsm_multi_mode_run+0x48a>
            newYelTime++;
 80006c0:	4b23      	ldr	r3, [pc, #140]	; (8000750 <fsm_multi_mode_run+0x504>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	3301      	adds	r3, #1
 80006c6:	4a22      	ldr	r2, [pc, #136]	; (8000750 <fsm_multi_mode_run+0x504>)
 80006c8:	6013      	str	r3, [r2, #0]
            displayCountdown(newYelTime);
 80006ca:	4b21      	ldr	r3, [pc, #132]	; (8000750 <fsm_multi_mode_run+0x504>)
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	4618      	mov	r0, r3
 80006d0:	f001 f848 	bl	8001764 <displayCountdown>
 80006d4:	e010      	b.n	80006f8 <fsm_multi_mode_run+0x4ac>
        } else if (isButtonPressed(BUTTON_3)) {
 80006d6:	2003      	movs	r0, #3
 80006d8:	f000 fab4 	bl	8000c44 <isButtonPressed>
 80006dc:	4603      	mov	r3, r0
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d00a      	beq.n	80006f8 <fsm_multi_mode_run+0x4ac>
            yelTime = newYelTime;
 80006e2:	4b1b      	ldr	r3, [pc, #108]	; (8000750 <fsm_multi_mode_run+0x504>)
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	4a19      	ldr	r2, [pc, #100]	; (800074c <fsm_multi_mode_run+0x500>)
 80006e8:	6013      	str	r3, [r2, #0]
            redTime = grnTime + yelTime;
 80006ea:	4b15      	ldr	r3, [pc, #84]	; (8000740 <fsm_multi_mode_run+0x4f4>)
 80006ec:	681a      	ldr	r2, [r3, #0]
 80006ee:	4b17      	ldr	r3, [pc, #92]	; (800074c <fsm_multi_mode_run+0x500>)
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	4413      	add	r3, r2
 80006f4:	4a17      	ldr	r2, [pc, #92]	; (8000754 <fsm_multi_mode_run+0x508>)
 80006f6:	6013      	str	r3, [r2, #0]
        }

        if (timer1.flag == 1) {
 80006f8:	4b0f      	ldr	r3, [pc, #60]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 80006fa:	685b      	ldr	r3, [r3, #4]
 80006fc:	2b01      	cmp	r3, #1
 80006fe:	d116      	bne.n	800072e <fsm_multi_mode_run+0x4e2>
            setTimer(&timer1, LED_BLINK);
 8000700:	2164      	movs	r1, #100	; 0x64
 8000702:	480d      	ldr	r0, [pc, #52]	; (8000738 <fsm_multi_mode_run+0x4ec>)
 8000704:	f000 fd68 	bl	80011d8 <setTimer>
            trafficLightBlinkYel(TRAFFIC_LIGHT_1);
 8000708:	2000      	movs	r0, #0
 800070a:	f000 ff93 	bl	8001634 <trafficLightBlinkYel>
            trafficLightBlinkYel(TRAFFIC_LIGHT_2);
 800070e:	2001      	movs	r0, #1
 8000710:	f000 ff90 	bl	8001634 <trafficLightBlinkYel>
        }
        break;
 8000714:	e00b      	b.n	800072e <fsm_multi_mode_run+0x4e2>

    default:
        break;
 8000716:	bf00      	nop
 8000718:	e00a      	b.n	8000730 <fsm_multi_mode_run+0x4e4>
        break;
 800071a:	bf00      	nop
 800071c:	e008      	b.n	8000730 <fsm_multi_mode_run+0x4e4>
        break;
 800071e:	bf00      	nop
 8000720:	e006      	b.n	8000730 <fsm_multi_mode_run+0x4e4>
        break;
 8000722:	bf00      	nop
 8000724:	e004      	b.n	8000730 <fsm_multi_mode_run+0x4e4>
        break;
 8000726:	bf00      	nop
 8000728:	e002      	b.n	8000730 <fsm_multi_mode_run+0x4e4>
        break;
 800072a:	bf00      	nop
 800072c:	e000      	b.n	8000730 <fsm_multi_mode_run+0x4e4>
        break;
 800072e:	bf00      	nop
    }
}
 8000730:	bf00      	nop
 8000732:	bd80      	pop	{r7, pc}
 8000734:	200002d0 	.word	0x200002d0
 8000738:	200006fc 	.word	0x200006fc
 800073c:	200003c4 	.word	0x200003c4
 8000740:	200002cc 	.word	0x200002cc
 8000744:	200003c0 	.word	0x200003c0
 8000748:	200003b4 	.word	0x200003b4
 800074c:	200002c8 	.word	0x200002c8
 8000750:	200003b8 	.word	0x200003b8
 8000754:	200002c4 	.word	0x200002c4

08000758 <fsm_for_pedestrian>:

#include "fsm_for_pedestrian.h"

int timeOut;

void fsm_for_pedestrian(void) {
 8000758:	b580      	push	{r7, lr}
 800075a:	af00      	add	r7, sp, #0
	switch(pedestrianStatus) {
 800075c:	4b88      	ldr	r3, [pc, #544]	; (8000980 <fsm_for_pedestrian+0x228>)
 800075e:	781b      	ldrb	r3, [r3, #0]
 8000760:	2b02      	cmp	r3, #2
 8000762:	f000 80a7 	beq.w	80008b4 <fsm_for_pedestrian+0x15c>
 8000766:	2b02      	cmp	r3, #2
 8000768:	f300 8108 	bgt.w	800097c <fsm_for_pedestrian+0x224>
 800076c:	2b00      	cmp	r3, #0
 800076e:	d002      	beq.n	8000776 <fsm_for_pedestrian+0x1e>
 8000770:	2b01      	cmp	r3, #1
 8000772:	d040      	beq.n	80007f6 <fsm_for_pedestrian+0x9e>
			}
		}

		break;
	}
}
 8000774:	e102      	b.n	800097c <fsm_for_pedestrian+0x224>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 8000776:	2000      	movs	r0, #0
 8000778:	f000 fa64 	bl	8000c44 <isButtonPressed>
 800077c:	4603      	mov	r3, r0
 800077e:	2b00      	cmp	r3, #0
 8000780:	f000 80f7 	beq.w	8000972 <fsm_for_pedestrian+0x21a>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 8000784:	4b7f      	ldr	r3, [pc, #508]	; (8000984 <fsm_for_pedestrian+0x22c>)
 8000786:	681a      	ldr	r2, [r3, #0]
 8000788:	4b7f      	ldr	r3, [pc, #508]	; (8000988 <fsm_for_pedestrian+0x230>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	441a      	add	r2, r3
 800078e:	4b7f      	ldr	r3, [pc, #508]	; (800098c <fsm_for_pedestrian+0x234>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	4413      	add	r3, r2
 8000794:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000798:	fb02 f303 	mul.w	r3, r2, r3
 800079c:	4a7c      	ldr	r2, [pc, #496]	; (8000990 <fsm_for_pedestrian+0x238>)
 800079e:	6013      	str	r3, [r2, #0]
			setTimer(&timer2, timeOut);
 80007a0:	4b7b      	ldr	r3, [pc, #492]	; (8000990 <fsm_for_pedestrian+0x238>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	4619      	mov	r1, r3
 80007a6:	487b      	ldr	r0, [pc, #492]	; (8000994 <fsm_for_pedestrian+0x23c>)
 80007a8:	f000 fd16 	bl	80011d8 <setTimer>
			setTimer(&timer3, TIMER_INIT);
 80007ac:	210a      	movs	r1, #10
 80007ae:	487a      	ldr	r0, [pc, #488]	; (8000998 <fsm_for_pedestrian+0x240>)
 80007b0:	f000 fd12 	bl	80011d8 <setTimer>
			if(sysStatus == RED__GRN || sysStatus == RED__YEL) {
 80007b4:	4b79      	ldr	r3, [pc, #484]	; (800099c <fsm_for_pedestrian+0x244>)
 80007b6:	781b      	ldrb	r3, [r3, #0]
 80007b8:	2b01      	cmp	r3, #1
 80007ba:	d003      	beq.n	80007c4 <fsm_for_pedestrian+0x6c>
 80007bc:	4b77      	ldr	r3, [pc, #476]	; (800099c <fsm_for_pedestrian+0x244>)
 80007be:	781b      	ldrb	r3, [r3, #0]
 80007c0:	2b02      	cmp	r3, #2
 80007c2:	d107      	bne.n	80007d4 <fsm_for_pedestrian+0x7c>
				pedestrianStatus = GRN;
 80007c4:	4b6e      	ldr	r3, [pc, #440]	; (8000980 <fsm_for_pedestrian+0x228>)
 80007c6:	2201      	movs	r2, #1
 80007c8:	701a      	strb	r2, [r3, #0]
				pedestrianLightGrn();
 80007ca:	f000 fb29 	bl	8000e20 <pedestrianLightGrn>
				grnBuzzer();
 80007ce:	f7ff fcbd 	bl	800014c <grnBuzzer>
		break;
 80007d2:	e0ce      	b.n	8000972 <fsm_for_pedestrian+0x21a>
			else if(sysStatus == GRN__RED || sysStatus == YEL__RED) {
 80007d4:	4b71      	ldr	r3, [pc, #452]	; (800099c <fsm_for_pedestrian+0x244>)
 80007d6:	781b      	ldrb	r3, [r3, #0]
 80007d8:	2b03      	cmp	r3, #3
 80007da:	d004      	beq.n	80007e6 <fsm_for_pedestrian+0x8e>
 80007dc:	4b6f      	ldr	r3, [pc, #444]	; (800099c <fsm_for_pedestrian+0x244>)
 80007de:	781b      	ldrb	r3, [r3, #0]
 80007e0:	2b04      	cmp	r3, #4
 80007e2:	f040 80c6 	bne.w	8000972 <fsm_for_pedestrian+0x21a>
				pedestrianStatus = RED;
 80007e6:	4b66      	ldr	r3, [pc, #408]	; (8000980 <fsm_for_pedestrian+0x228>)
 80007e8:	2202      	movs	r2, #2
 80007ea:	701a      	strb	r2, [r3, #0]
				pedestrianLightRed();
 80007ec:	f000 fb30 	bl	8000e50 <pedestrianLightRed>
				redBuzzer();
 80007f0:	f7ff fce6 	bl	80001c0 <redBuzzer>
		break;
 80007f4:	e0bd      	b.n	8000972 <fsm_for_pedestrian+0x21a>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 80007f6:	2000      	movs	r0, #0
 80007f8:	f000 fa24 	bl	8000c44 <isButtonPressed>
 80007fc:	4603      	mov	r3, r0
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d013      	beq.n	800082a <fsm_for_pedestrian+0xd2>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 8000802:	4b60      	ldr	r3, [pc, #384]	; (8000984 <fsm_for_pedestrian+0x22c>)
 8000804:	681a      	ldr	r2, [r3, #0]
 8000806:	4b60      	ldr	r3, [pc, #384]	; (8000988 <fsm_for_pedestrian+0x230>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	441a      	add	r2, r3
 800080c:	4b5f      	ldr	r3, [pc, #380]	; (800098c <fsm_for_pedestrian+0x234>)
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	4413      	add	r3, r2
 8000812:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000816:	fb02 f303 	mul.w	r3, r2, r3
 800081a:	4a5d      	ldr	r2, [pc, #372]	; (8000990 <fsm_for_pedestrian+0x238>)
 800081c:	6013      	str	r3, [r2, #0]
			setTimer(&timer2, timeOut);
 800081e:	4b5c      	ldr	r3, [pc, #368]	; (8000990 <fsm_for_pedestrian+0x238>)
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	4619      	mov	r1, r3
 8000824:	485b      	ldr	r0, [pc, #364]	; (8000994 <fsm_for_pedestrian+0x23c>)
 8000826:	f000 fcd7 	bl	80011d8 <setTimer>
		if(sysStatus == SET_GRN || sysStatus == SET_YEL) {
 800082a:	4b5c      	ldr	r3, [pc, #368]	; (800099c <fsm_for_pedestrian+0x244>)
 800082c:	781b      	ldrb	r3, [r3, #0]
 800082e:	2b06      	cmp	r3, #6
 8000830:	d003      	beq.n	800083a <fsm_for_pedestrian+0xe2>
 8000832:	4b5a      	ldr	r3, [pc, #360]	; (800099c <fsm_for_pedestrian+0x244>)
 8000834:	781b      	ldrb	r3, [r3, #0]
 8000836:	2b05      	cmp	r3, #5
 8000838:	d10a      	bne.n	8000850 <fsm_for_pedestrian+0xf8>
			setTimer(&timer2, 0);
 800083a:	2100      	movs	r1, #0
 800083c:	4855      	ldr	r0, [pc, #340]	; (8000994 <fsm_for_pedestrian+0x23c>)
 800083e:	f000 fccb 	bl	80011d8 <setTimer>
			pedestrianStatus = WAIT;
 8000842:	4b4f      	ldr	r3, [pc, #316]	; (8000980 <fsm_for_pedestrian+0x228>)
 8000844:	2200      	movs	r2, #0
 8000846:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000848:	f000 fb1a 	bl	8000e80 <pedestrianLightOff>
			stopBuzzer();
 800084c:	f7ff fcea 	bl	8000224 <stopBuzzer>
		if(timer2.flag == 1) {
 8000850:	4b50      	ldr	r3, [pc, #320]	; (8000994 <fsm_for_pedestrian+0x23c>)
 8000852:	685b      	ldr	r3, [r3, #4]
 8000854:	2b01      	cmp	r3, #1
 8000856:	d10a      	bne.n	800086e <fsm_for_pedestrian+0x116>
			setTimer(&timer2, 0);
 8000858:	2100      	movs	r1, #0
 800085a:	484e      	ldr	r0, [pc, #312]	; (8000994 <fsm_for_pedestrian+0x23c>)
 800085c:	f000 fcbc 	bl	80011d8 <setTimer>
			pedestrianStatus = WAIT;
 8000860:	4b47      	ldr	r3, [pc, #284]	; (8000980 <fsm_for_pedestrian+0x228>)
 8000862:	2200      	movs	r2, #0
 8000864:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000866:	f000 fb0b 	bl	8000e80 <pedestrianLightOff>
			stopBuzzer();
 800086a:	f7ff fcdb 	bl	8000224 <stopBuzzer>
		if(sysStatus == GRN__RED) {
 800086e:	4b4b      	ldr	r3, [pc, #300]	; (800099c <fsm_for_pedestrian+0x244>)
 8000870:	781b      	ldrb	r3, [r3, #0]
 8000872:	2b03      	cmp	r3, #3
 8000874:	d106      	bne.n	8000884 <fsm_for_pedestrian+0x12c>
			pedestrianStatus = RED;
 8000876:	4b42      	ldr	r3, [pc, #264]	; (8000980 <fsm_for_pedestrian+0x228>)
 8000878:	2202      	movs	r2, #2
 800087a:	701a      	strb	r2, [r3, #0]
			pedestrianLightRed();
 800087c:	f000 fae8 	bl	8000e50 <pedestrianLightRed>
			redBuzzer();
 8000880:	f7ff fc9e 	bl	80001c0 <redBuzzer>
		if(timer3.flag == 1) {
 8000884:	4b44      	ldr	r3, [pc, #272]	; (8000998 <fsm_for_pedestrian+0x240>)
 8000886:	685b      	ldr	r3, [r3, #4]
 8000888:	2b01      	cmp	r3, #1
 800088a:	d174      	bne.n	8000976 <fsm_for_pedestrian+0x21e>
			if(sysStatus == RED__YEL) {
 800088c:	4b43      	ldr	r3, [pc, #268]	; (800099c <fsm_for_pedestrian+0x244>)
 800088e:	781b      	ldrb	r3, [r3, #0]
 8000890:	2b02      	cmp	r3, #2
 8000892:	d108      	bne.n	80008a6 <fsm_for_pedestrian+0x14e>
				setTimer(&timer3, LED_BLINK);
 8000894:	2164      	movs	r1, #100	; 0x64
 8000896:	4840      	ldr	r0, [pc, #256]	; (8000998 <fsm_for_pedestrian+0x240>)
 8000898:	f000 fc9e 	bl	80011d8 <setTimer>
				pedestrianLightBlinkGrn();
 800089c:	f000 fa90 	bl	8000dc0 <pedestrianLightBlinkGrn>
				grnBuzzer();
 80008a0:	f7ff fc54 	bl	800014c <grnBuzzer>
		break;
 80008a4:	e067      	b.n	8000976 <fsm_for_pedestrian+0x21e>
				setTimer(&timer3, 200);
 80008a6:	21c8      	movs	r1, #200	; 0xc8
 80008a8:	483b      	ldr	r0, [pc, #236]	; (8000998 <fsm_for_pedestrian+0x240>)
 80008aa:	f000 fc95 	bl	80011d8 <setTimer>
				grnBuzzer();
 80008ae:	f7ff fc4d 	bl	800014c <grnBuzzer>
		break;
 80008b2:	e060      	b.n	8000976 <fsm_for_pedestrian+0x21e>
		if(isButtonPressed(PEDESTRIAN_BUTTON)) {
 80008b4:	2000      	movs	r0, #0
 80008b6:	f000 f9c5 	bl	8000c44 <isButtonPressed>
 80008ba:	4603      	mov	r3, r0
 80008bc:	2b00      	cmp	r3, #0
 80008be:	d013      	beq.n	80008e8 <fsm_for_pedestrian+0x190>
			timeOut = (redTime + yelTime + grnTime) * SECOND;
 80008c0:	4b30      	ldr	r3, [pc, #192]	; (8000984 <fsm_for_pedestrian+0x22c>)
 80008c2:	681a      	ldr	r2, [r3, #0]
 80008c4:	4b30      	ldr	r3, [pc, #192]	; (8000988 <fsm_for_pedestrian+0x230>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	441a      	add	r2, r3
 80008ca:	4b30      	ldr	r3, [pc, #192]	; (800098c <fsm_for_pedestrian+0x234>)
 80008cc:	681b      	ldr	r3, [r3, #0]
 80008ce:	4413      	add	r3, r2
 80008d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80008d4:	fb02 f303 	mul.w	r3, r2, r3
 80008d8:	4a2d      	ldr	r2, [pc, #180]	; (8000990 <fsm_for_pedestrian+0x238>)
 80008da:	6013      	str	r3, [r2, #0]
			setTimer(&timer2, timeOut);
 80008dc:	4b2c      	ldr	r3, [pc, #176]	; (8000990 <fsm_for_pedestrian+0x238>)
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	4619      	mov	r1, r3
 80008e2:	482c      	ldr	r0, [pc, #176]	; (8000994 <fsm_for_pedestrian+0x23c>)
 80008e4:	f000 fc78 	bl	80011d8 <setTimer>
		if(sysStatus == SET_GRN || sysStatus == SET_YEL) {
 80008e8:	4b2c      	ldr	r3, [pc, #176]	; (800099c <fsm_for_pedestrian+0x244>)
 80008ea:	781b      	ldrb	r3, [r3, #0]
 80008ec:	2b06      	cmp	r3, #6
 80008ee:	d003      	beq.n	80008f8 <fsm_for_pedestrian+0x1a0>
 80008f0:	4b2a      	ldr	r3, [pc, #168]	; (800099c <fsm_for_pedestrian+0x244>)
 80008f2:	781b      	ldrb	r3, [r3, #0]
 80008f4:	2b05      	cmp	r3, #5
 80008f6:	d10a      	bne.n	800090e <fsm_for_pedestrian+0x1b6>
			setTimer(&timer2, 0);
 80008f8:	2100      	movs	r1, #0
 80008fa:	4826      	ldr	r0, [pc, #152]	; (8000994 <fsm_for_pedestrian+0x23c>)
 80008fc:	f000 fc6c 	bl	80011d8 <setTimer>
			pedestrianStatus = WAIT;
 8000900:	4b1f      	ldr	r3, [pc, #124]	; (8000980 <fsm_for_pedestrian+0x228>)
 8000902:	2200      	movs	r2, #0
 8000904:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000906:	f000 fabb 	bl	8000e80 <pedestrianLightOff>
			stopBuzzer();
 800090a:	f7ff fc8b 	bl	8000224 <stopBuzzer>
		if(timer2.flag == 1) {
 800090e:	4b21      	ldr	r3, [pc, #132]	; (8000994 <fsm_for_pedestrian+0x23c>)
 8000910:	685b      	ldr	r3, [r3, #4]
 8000912:	2b01      	cmp	r3, #1
 8000914:	d10a      	bne.n	800092c <fsm_for_pedestrian+0x1d4>
			setTimer(&timer2, 0);
 8000916:	2100      	movs	r1, #0
 8000918:	481e      	ldr	r0, [pc, #120]	; (8000994 <fsm_for_pedestrian+0x23c>)
 800091a:	f000 fc5d 	bl	80011d8 <setTimer>
			pedestrianStatus = WAIT;
 800091e:	4b18      	ldr	r3, [pc, #96]	; (8000980 <fsm_for_pedestrian+0x228>)
 8000920:	2200      	movs	r2, #0
 8000922:	701a      	strb	r2, [r3, #0]
			pedestrianLightOff();
 8000924:	f000 faac 	bl	8000e80 <pedestrianLightOff>
			stopBuzzer();
 8000928:	f7ff fc7c 	bl	8000224 <stopBuzzer>
		if(sysStatus == RED__GRN) {
 800092c:	4b1b      	ldr	r3, [pc, #108]	; (800099c <fsm_for_pedestrian+0x244>)
 800092e:	781b      	ldrb	r3, [r3, #0]
 8000930:	2b01      	cmp	r3, #1
 8000932:	d106      	bne.n	8000942 <fsm_for_pedestrian+0x1ea>
			pedestrianStatus = GRN;
 8000934:	4b12      	ldr	r3, [pc, #72]	; (8000980 <fsm_for_pedestrian+0x228>)
 8000936:	2201      	movs	r2, #1
 8000938:	701a      	strb	r2, [r3, #0]
			pedestrianLightGrn();
 800093a:	f000 fa71 	bl	8000e20 <pedestrianLightGrn>
			grnBuzzer();
 800093e:	f7ff fc05 	bl	800014c <grnBuzzer>
		if(timer3.flag == 1) {
 8000942:	4b15      	ldr	r3, [pc, #84]	; (8000998 <fsm_for_pedestrian+0x240>)
 8000944:	685b      	ldr	r3, [r3, #4]
 8000946:	2b01      	cmp	r3, #1
 8000948:	d117      	bne.n	800097a <fsm_for_pedestrian+0x222>
			if(sysStatus == YEL__RED) {
 800094a:	4b14      	ldr	r3, [pc, #80]	; (800099c <fsm_for_pedestrian+0x244>)
 800094c:	781b      	ldrb	r3, [r3, #0]
 800094e:	2b04      	cmp	r3, #4
 8000950:	d108      	bne.n	8000964 <fsm_for_pedestrian+0x20c>
				setTimer(&timer3, LED_BLINK);
 8000952:	2164      	movs	r1, #100	; 0x64
 8000954:	4810      	ldr	r0, [pc, #64]	; (8000998 <fsm_for_pedestrian+0x240>)
 8000956:	f000 fc3f 	bl	80011d8 <setTimer>
				pedestrianLightBlinkRed();
 800095a:	f000 fa49 	bl	8000df0 <pedestrianLightBlinkRed>
				redBuzzer();
 800095e:	f7ff fc2f 	bl	80001c0 <redBuzzer>
		break;
 8000962:	e00a      	b.n	800097a <fsm_for_pedestrian+0x222>
				setTimer(&timer3, 200);
 8000964:	21c8      	movs	r1, #200	; 0xc8
 8000966:	480c      	ldr	r0, [pc, #48]	; (8000998 <fsm_for_pedestrian+0x240>)
 8000968:	f000 fc36 	bl	80011d8 <setTimer>
				redBuzzer();
 800096c:	f7ff fc28 	bl	80001c0 <redBuzzer>
		break;
 8000970:	e003      	b.n	800097a <fsm_for_pedestrian+0x222>
		break;
 8000972:	bf00      	nop
 8000974:	e002      	b.n	800097c <fsm_for_pedestrian+0x224>
		break;
 8000976:	bf00      	nop
 8000978:	e000      	b.n	800097c <fsm_for_pedestrian+0x224>
		break;
 800097a:	bf00      	nop
}
 800097c:	bf00      	nop
 800097e:	bd80      	pop	{r7, pc}
 8000980:	200003c1 	.word	0x200003c1
 8000984:	200002c4 	.word	0x200002c4
 8000988:	200002c8 	.word	0x200002c8
 800098c:	200002cc 	.word	0x200002cc
 8000990:	200003bc 	.word	0x200003bc
 8000994:	20000704 	.word	0x20000704
 8000998:	2000070c 	.word	0x2000070c
 800099c:	200003c0 	.word	0x200003c0

080009a0 <MX_GPIO_Init>:
 80009a0:	b580      	push	{r7, lr}
 80009a2:	b088      	sub	sp, #32
 80009a4:	af00      	add	r7, sp, #0
 80009a6:	f107 0310 	add.w	r3, r7, #16
 80009aa:	2200      	movs	r2, #0
 80009ac:	601a      	str	r2, [r3, #0]
 80009ae:	605a      	str	r2, [r3, #4]
 80009b0:	609a      	str	r2, [r3, #8]
 80009b2:	60da      	str	r2, [r3, #12]
 80009b4:	4b45      	ldr	r3, [pc, #276]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009b6:	699b      	ldr	r3, [r3, #24]
 80009b8:	4a44      	ldr	r2, [pc, #272]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009ba:	f043 0310 	orr.w	r3, r3, #16
 80009be:	6193      	str	r3, [r2, #24]
 80009c0:	4b42      	ldr	r3, [pc, #264]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009c2:	699b      	ldr	r3, [r3, #24]
 80009c4:	f003 0310 	and.w	r3, r3, #16
 80009c8:	60fb      	str	r3, [r7, #12]
 80009ca:	68fb      	ldr	r3, [r7, #12]
 80009cc:	4b3f      	ldr	r3, [pc, #252]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009ce:	699b      	ldr	r3, [r3, #24]
 80009d0:	4a3e      	ldr	r2, [pc, #248]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009d2:	f043 0320 	orr.w	r3, r3, #32
 80009d6:	6193      	str	r3, [r2, #24]
 80009d8:	4b3c      	ldr	r3, [pc, #240]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009da:	699b      	ldr	r3, [r3, #24]
 80009dc:	f003 0320 	and.w	r3, r3, #32
 80009e0:	60bb      	str	r3, [r7, #8]
 80009e2:	68bb      	ldr	r3, [r7, #8]
 80009e4:	4b39      	ldr	r3, [pc, #228]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009e6:	699b      	ldr	r3, [r3, #24]
 80009e8:	4a38      	ldr	r2, [pc, #224]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009ea:	f043 0304 	orr.w	r3, r3, #4
 80009ee:	6193      	str	r3, [r2, #24]
 80009f0:	4b36      	ldr	r3, [pc, #216]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009f2:	699b      	ldr	r3, [r3, #24]
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	607b      	str	r3, [r7, #4]
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	4b33      	ldr	r3, [pc, #204]	; (8000acc <MX_GPIO_Init+0x12c>)
 80009fe:	699b      	ldr	r3, [r3, #24]
 8000a00:	4a32      	ldr	r2, [pc, #200]	; (8000acc <MX_GPIO_Init+0x12c>)
 8000a02:	f043 0308 	orr.w	r3, r3, #8
 8000a06:	6193      	str	r3, [r2, #24]
 8000a08:	4b30      	ldr	r3, [pc, #192]	; (8000acc <MX_GPIO_Init+0x12c>)
 8000a0a:	699b      	ldr	r3, [r3, #24]
 8000a0c:	f003 0308 	and.w	r3, r3, #8
 8000a10:	603b      	str	r3, [r7, #0]
 8000a12:	683b      	ldr	r3, [r7, #0]
 8000a14:	2200      	movs	r2, #0
 8000a16:	f44f 61a4 	mov.w	r1, #1312	; 0x520
 8000a1a:	482d      	ldr	r0, [pc, #180]	; (8000ad0 <MX_GPIO_Init+0x130>)
 8000a1c:	f001 fa57 	bl	8001ece <HAL_GPIO_WritePin>
 8000a20:	2200      	movs	r2, #0
 8000a22:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000a26:	482b      	ldr	r0, [pc, #172]	; (8000ad4 <MX_GPIO_Init+0x134>)
 8000a28:	f001 fa51 	bl	8001ece <HAL_GPIO_WritePin>
 8000a2c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000a30:	613b      	str	r3, [r7, #16]
 8000a32:	4b29      	ldr	r3, [pc, #164]	; (8000ad8 <MX_GPIO_Init+0x138>)
 8000a34:	617b      	str	r3, [r7, #20]
 8000a36:	2300      	movs	r3, #0
 8000a38:	61bb      	str	r3, [r7, #24]
 8000a3a:	f107 0310 	add.w	r3, r7, #16
 8000a3e:	4619      	mov	r1, r3
 8000a40:	4826      	ldr	r0, [pc, #152]	; (8000adc <MX_GPIO_Init+0x13c>)
 8000a42:	f001 f8a9 	bl	8001b98 <HAL_GPIO_Init>
 8000a46:	2313      	movs	r3, #19
 8000a48:	613b      	str	r3, [r7, #16]
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	617b      	str	r3, [r7, #20]
 8000a4e:	2300      	movs	r3, #0
 8000a50:	61bb      	str	r3, [r7, #24]
 8000a52:	f107 0310 	add.w	r3, r7, #16
 8000a56:	4619      	mov	r1, r3
 8000a58:	481d      	ldr	r0, [pc, #116]	; (8000ad0 <MX_GPIO_Init+0x130>)
 8000a5a:	f001 f89d 	bl	8001b98 <HAL_GPIO_Init>
 8000a5e:	f44f 63a4 	mov.w	r3, #1312	; 0x520
 8000a62:	613b      	str	r3, [r7, #16]
 8000a64:	2301      	movs	r3, #1
 8000a66:	617b      	str	r3, [r7, #20]
 8000a68:	2300      	movs	r3, #0
 8000a6a:	61bb      	str	r3, [r7, #24]
 8000a6c:	2302      	movs	r3, #2
 8000a6e:	61fb      	str	r3, [r7, #28]
 8000a70:	f107 0310 	add.w	r3, r7, #16
 8000a74:	4619      	mov	r1, r3
 8000a76:	4816      	ldr	r0, [pc, #88]	; (8000ad0 <MX_GPIO_Init+0x130>)
 8000a78:	f001 f88e 	bl	8001b98 <HAL_GPIO_Init>
 8000a7c:	2301      	movs	r3, #1
 8000a7e:	613b      	str	r3, [r7, #16]
 8000a80:	2300      	movs	r3, #0
 8000a82:	617b      	str	r3, [r7, #20]
 8000a84:	2300      	movs	r3, #0
 8000a86:	61bb      	str	r3, [r7, #24]
 8000a88:	f107 0310 	add.w	r3, r7, #16
 8000a8c:	4619      	mov	r1, r3
 8000a8e:	4811      	ldr	r0, [pc, #68]	; (8000ad4 <MX_GPIO_Init+0x134>)
 8000a90:	f001 f882 	bl	8001b98 <HAL_GPIO_Init>
 8000a94:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000a98:	613b      	str	r3, [r7, #16]
 8000a9a:	2301      	movs	r3, #1
 8000a9c:	617b      	str	r3, [r7, #20]
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	61bb      	str	r3, [r7, #24]
 8000aa2:	2302      	movs	r3, #2
 8000aa4:	61fb      	str	r3, [r7, #28]
 8000aa6:	f107 0310 	add.w	r3, r7, #16
 8000aaa:	4619      	mov	r1, r3
 8000aac:	4809      	ldr	r0, [pc, #36]	; (8000ad4 <MX_GPIO_Init+0x134>)
 8000aae:	f001 f873 	bl	8001b98 <HAL_GPIO_Init>
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	2100      	movs	r1, #0
 8000ab6:	2028      	movs	r0, #40	; 0x28
 8000ab8:	f001 f837 	bl	8001b2a <HAL_NVIC_SetPriority>
 8000abc:	2028      	movs	r0, #40	; 0x28
 8000abe:	f001 f850 	bl	8001b62 <HAL_NVIC_EnableIRQ>
 8000ac2:	bf00      	nop
 8000ac4:	3720      	adds	r7, #32
 8000ac6:	46bd      	mov	sp, r7
 8000ac8:	bd80      	pop	{r7, pc}
 8000aca:	bf00      	nop
 8000acc:	40021000 	.word	0x40021000
 8000ad0:	40010800 	.word	0x40010800
 8000ad4:	40010c00 	.word	0x40010c00
 8000ad8:	10110000 	.word	0x10110000
 8000adc:	40011000 	.word	0x40011000

08000ae0 <buttonRead>:
static uint8_t flagForButtonHold[NO_OF_BUTTONS];
//we define counter for automatically increasing the value
//after the button is pressed more than 1 second.
static uint16_t counterForButtonHold[NO_OF_BUTTONS] = {0, 0, 0, 0};

void buttonRead(void){
 8000ae0:	b580      	push	{r7, lr}
 8000ae2:	b082      	sub	sp, #8
 8000ae4:	af00      	add	r7, sp, #0
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	607b      	str	r3, [r7, #4]
 8000aea:	e08e      	b.n	8000c0a <buttonRead+0x12a>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000aec:	4a4b      	ldr	r2, [pc, #300]	; (8000c1c <buttonRead+0x13c>)
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	4413      	add	r3, r2
 8000af2:	7819      	ldrb	r1, [r3, #0]
 8000af4:	4a4a      	ldr	r2, [pc, #296]	; (8000c20 <buttonRead+0x140>)
 8000af6:	687b      	ldr	r3, [r7, #4]
 8000af8:	4413      	add	r3, r2
 8000afa:	460a      	mov	r2, r1
 8000afc:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 8000afe:	4a49      	ldr	r2, [pc, #292]	; (8000c24 <buttonRead+0x144>)
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	4413      	add	r3, r2
 8000b04:	7819      	ldrb	r1, [r3, #0]
 8000b06:	4a45      	ldr	r2, [pc, #276]	; (8000c1c <buttonRead+0x13c>)
 8000b08:	687b      	ldr	r3, [r7, #4]
 8000b0a:	4413      	add	r3, r2
 8000b0c:	460a      	mov	r2, r1
 8000b0e:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(buttonPort[i], buttonPin[i]);
 8000b10:	4a45      	ldr	r2, [pc, #276]	; (8000c28 <buttonRead+0x148>)
 8000b12:	687b      	ldr	r3, [r7, #4]
 8000b14:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000b18:	4944      	ldr	r1, [pc, #272]	; (8000c2c <buttonRead+0x14c>)
 8000b1a:	687b      	ldr	r3, [r7, #4]
 8000b1c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000b20:	4619      	mov	r1, r3
 8000b22:	4610      	mov	r0, r2
 8000b24:	f001 f9bc 	bl	8001ea0 <HAL_GPIO_ReadPin>
 8000b28:	4603      	mov	r3, r0
 8000b2a:	4619      	mov	r1, r3
 8000b2c:	4a3d      	ldr	r2, [pc, #244]	; (8000c24 <buttonRead+0x144>)
 8000b2e:	687b      	ldr	r3, [r7, #4]
 8000b30:	4413      	add	r3, r2
 8000b32:	460a      	mov	r2, r1
 8000b34:	701a      	strb	r2, [r3, #0]
		if((debounceButtonBuffer2[i] == debounceButtonBuffer1[i]) && (debounceButtonBuffer1[i] == debounceButtonBuffer0[i])) {
 8000b36:	4a3a      	ldr	r2, [pc, #232]	; (8000c20 <buttonRead+0x140>)
 8000b38:	687b      	ldr	r3, [r7, #4]
 8000b3a:	4413      	add	r3, r2
 8000b3c:	781a      	ldrb	r2, [r3, #0]
 8000b3e:	4937      	ldr	r1, [pc, #220]	; (8000c1c <buttonRead+0x13c>)
 8000b40:	687b      	ldr	r3, [r7, #4]
 8000b42:	440b      	add	r3, r1
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	429a      	cmp	r2, r3
 8000b48:	d15c      	bne.n	8000c04 <buttonRead+0x124>
 8000b4a:	4a34      	ldr	r2, [pc, #208]	; (8000c1c <buttonRead+0x13c>)
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	4413      	add	r3, r2
 8000b50:	781a      	ldrb	r2, [r3, #0]
 8000b52:	4934      	ldr	r1, [pc, #208]	; (8000c24 <buttonRead+0x144>)
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	440b      	add	r3, r1
 8000b58:	781b      	ldrb	r3, [r3, #0]
 8000b5a:	429a      	cmp	r2, r3
 8000b5c:	d152      	bne.n	8000c04 <buttonRead+0x124>
			if(buttonBuffer[i] != debounceButtonBuffer0[i]) {
 8000b5e:	4a34      	ldr	r2, [pc, #208]	; (8000c30 <buttonRead+0x150>)
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	4413      	add	r3, r2
 8000b64:	781a      	ldrb	r2, [r3, #0]
 8000b66:	492f      	ldr	r1, [pc, #188]	; (8000c24 <buttonRead+0x144>)
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	440b      	add	r3, r1
 8000b6c:	781b      	ldrb	r3, [r3, #0]
 8000b6e:	429a      	cmp	r2, r3
 8000b70:	d02d      	beq.n	8000bce <buttonRead+0xee>
				buttonBuffer[i] = debounceButtonBuffer0[i];
 8000b72:	4a2c      	ldr	r2, [pc, #176]	; (8000c24 <buttonRead+0x144>)
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	4413      	add	r3, r2
 8000b78:	7819      	ldrb	r1, [r3, #0]
 8000b7a:	4a2d      	ldr	r2, [pc, #180]	; (8000c30 <buttonRead+0x150>)
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	4413      	add	r3, r2
 8000b80:	460a      	mov	r2, r1
 8000b82:	701a      	strb	r2, [r3, #0]
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000b84:	4a2a      	ldr	r2, [pc, #168]	; (8000c30 <buttonRead+0x150>)
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	4413      	add	r3, r2
 8000b8a:	781b      	ldrb	r3, [r3, #0]
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d118      	bne.n	8000bc2 <buttonRead+0xe2>
					counterForButtonHold[i] = DURATION_FOR_BUTTON_HOLD;
 8000b90:	4a28      	ldr	r2, [pc, #160]	; (8000c34 <buttonRead+0x154>)
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000b98:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
					if(SYSTEM_DELAY > 0) counterForButtonHold[i] /= SYSTEM_DELAY;
 8000b9c:	4a25      	ldr	r2, [pc, #148]	; (8000c34 <buttonRead+0x154>)
 8000b9e:	687b      	ldr	r3, [r7, #4]
 8000ba0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000ba4:	4a24      	ldr	r2, [pc, #144]	; (8000c38 <buttonRead+0x158>)
 8000ba6:	fba2 2303 	umull	r2, r3, r2, r3
 8000baa:	08db      	lsrs	r3, r3, #3
 8000bac:	b299      	uxth	r1, r3
 8000bae:	4a21      	ldr	r2, [pc, #132]	; (8000c34 <buttonRead+0x154>)
 8000bb0:	687b      	ldr	r3, [r7, #4]
 8000bb2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

					flagForButtonPressed[i] = 1;
 8000bb6:	4a21      	ldr	r2, [pc, #132]	; (8000c3c <buttonRead+0x15c>)
 8000bb8:	687b      	ldr	r3, [r7, #4]
 8000bba:	4413      	add	r3, r2
 8000bbc:	2201      	movs	r2, #1
 8000bbe:	701a      	strb	r2, [r3, #0]
 8000bc0:	e020      	b.n	8000c04 <buttonRead+0x124>
				}
				else {
					flagForButtonHold[i] = 0;
 8000bc2:	4a1f      	ldr	r2, [pc, #124]	; (8000c40 <buttonRead+0x160>)
 8000bc4:	687b      	ldr	r3, [r7, #4]
 8000bc6:	4413      	add	r3, r2
 8000bc8:	2200      	movs	r2, #0
 8000bca:	701a      	strb	r2, [r3, #0]
 8000bcc:	e01a      	b.n	8000c04 <buttonRead+0x124>
				}
			}
			else {
				if(buttonBuffer[i] == BUTTON_IS_PRESSED) {
 8000bce:	4a18      	ldr	r2, [pc, #96]	; (8000c30 <buttonRead+0x150>)
 8000bd0:	687b      	ldr	r3, [r7, #4]
 8000bd2:	4413      	add	r3, r2
 8000bd4:	781b      	ldrb	r3, [r3, #0]
 8000bd6:	2b00      	cmp	r3, #0
 8000bd8:	d114      	bne.n	8000c04 <buttonRead+0x124>
					counterForButtonHold[i]--;
 8000bda:	4a16      	ldr	r2, [pc, #88]	; (8000c34 <buttonRead+0x154>)
 8000bdc:	687b      	ldr	r3, [r7, #4]
 8000bde:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000be2:	3b01      	subs	r3, #1
 8000be4:	b299      	uxth	r1, r3
 8000be6:	4a13      	ldr	r2, [pc, #76]	; (8000c34 <buttonRead+0x154>)
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
					if(counterForButtonHold[i] == 0) {
 8000bee:	4a11      	ldr	r2, [pc, #68]	; (8000c34 <buttonRead+0x154>)
 8000bf0:	687b      	ldr	r3, [r7, #4]
 8000bf2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d104      	bne.n	8000c04 <buttonRead+0x124>
						flagForButtonHold[i] = 1;
 8000bfa:	4a11      	ldr	r2, [pc, #68]	; (8000c40 <buttonRead+0x160>)
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	4413      	add	r3, r2
 8000c00:	2201      	movs	r2, #1
 8000c02:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < NO_OF_BUTTONS; i++) {
 8000c04:	687b      	ldr	r3, [r7, #4]
 8000c06:	3301      	adds	r3, #1
 8000c08:	607b      	str	r3, [r7, #4]
 8000c0a:	687b      	ldr	r3, [r7, #4]
 8000c0c:	2b03      	cmp	r3, #3
 8000c0e:	f77f af6d 	ble.w	8000aec <buttonRead+0xc>
					}
				}
			}
		}
	}
}
 8000c12:	bf00      	nop
 8000c14:	bf00      	nop
 8000c16:	3708      	adds	r7, #8
 8000c18:	46bd      	mov	sp, r7
 8000c1a:	bd80      	pop	{r7, pc}
 8000c1c:	200002f4 	.word	0x200002f4
 8000c20:	200002f8 	.word	0x200002f8
 8000c24:	200002f0 	.word	0x200002f0
 8000c28:	200002d4 	.word	0x200002d4
 8000c2c:	200002e4 	.word	0x200002e4
 8000c30:	200002ec 	.word	0x200002ec
 8000c34:	200003d0 	.word	0x200003d0
 8000c38:	cccccccd 	.word	0xcccccccd
 8000c3c:	200003c8 	.word	0x200003c8
 8000c40:	200003cc 	.word	0x200003cc

08000c44 <isButtonPressed>:

int isButtonPressed(int index) {
 8000c44:	b480      	push	{r7}
 8000c46:	b083      	sub	sp, #12
 8000c48:	af00      	add	r7, sp, #0
 8000c4a:	6078      	str	r0, [r7, #4]
	if(index < 0 || index > NO_OF_BUTTONS) return 0;
 8000c4c:	687b      	ldr	r3, [r7, #4]
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	db02      	blt.n	8000c58 <isButtonPressed+0x14>
 8000c52:	687b      	ldr	r3, [r7, #4]
 8000c54:	2b04      	cmp	r3, #4
 8000c56:	dd01      	ble.n	8000c5c <isButtonPressed+0x18>
 8000c58:	2300      	movs	r3, #0
 8000c5a:	e00d      	b.n	8000c78 <isButtonPressed+0x34>
	if(flagForButtonPressed[index] == 1) {
 8000c5c:	4a09      	ldr	r2, [pc, #36]	; (8000c84 <isButtonPressed+0x40>)
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	4413      	add	r3, r2
 8000c62:	781b      	ldrb	r3, [r3, #0]
 8000c64:	2b01      	cmp	r3, #1
 8000c66:	d106      	bne.n	8000c76 <isButtonPressed+0x32>
		flagForButtonPressed[index] = 0;
 8000c68:	4a06      	ldr	r2, [pc, #24]	; (8000c84 <isButtonPressed+0x40>)
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	4413      	add	r3, r2
 8000c6e:	2200      	movs	r2, #0
 8000c70:	701a      	strb	r2, [r3, #0]
		return 1;
 8000c72:	2301      	movs	r3, #1
 8000c74:	e000      	b.n	8000c78 <isButtonPressed+0x34>
	}
	return 0;
 8000c76:	2300      	movs	r3, #0
}
 8000c78:	4618      	mov	r0, r3
 8000c7a:	370c      	adds	r7, #12
 8000c7c:	46bd      	mov	sp, r7
 8000c7e:	bc80      	pop	{r7}
 8000c80:	4770      	bx	lr
 8000c82:	bf00      	nop
 8000c84:	200003c8 	.word	0x200003c8

08000c88 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000c88:	b580      	push	{r7, lr}
 8000c8a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000c8c:	f000 fe14 	bl	80018b8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000c90:	f000 f846 	bl	8000d20 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000c94:	f7ff fe84 	bl	80009a0 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000c98:	f000 fd80 	bl	800179c <MX_USART2_UART_Init>
  MX_TIM3_Init();
 8000c9c:	f000 fbc4 	bl	8001428 <MX_TIM3_Init>
  MX_TIM2_Init();
 8000ca0:	f000 fb76 	bl	8001390 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000ca4:	480e      	ldr	r0, [pc, #56]	; (8000ce0 <main+0x58>)
 8000ca6:	f001 fdcf 	bl	8002848 <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000caa:	2100      	movs	r1, #0
 8000cac:	480d      	ldr	r0, [pc, #52]	; (8000ce4 <main+0x5c>)
 8000cae:	f001 fe75 	bl	800299c <HAL_TIM_PWM_Start>

  // SCH_Add_Task(&timerRun, 0, 10);
  SCH_Add_Task(&UpdateTimer, 0, 10);
 8000cb2:	220a      	movs	r2, #10
 8000cb4:	2100      	movs	r1, #0
 8000cb6:	480c      	ldr	r0, [pc, #48]	; (8000ce8 <main+0x60>)
 8000cb8:	f000 f8fa 	bl	8000eb0 <SCH_Add_Task>
  SCH_Add_Task(&buttonRead, 10, 10);
 8000cbc:	220a      	movs	r2, #10
 8000cbe:	210a      	movs	r1, #10
 8000cc0:	480a      	ldr	r0, [pc, #40]	; (8000cec <main+0x64>)
 8000cc2:	f000 f8f5 	bl	8000eb0 <SCH_Add_Task>
  SCH_Add_Task(&fsm_multi_mode_run, 20, 10);
 8000cc6:	220a      	movs	r2, #10
 8000cc8:	2114      	movs	r1, #20
 8000cca:	4809      	ldr	r0, [pc, #36]	; (8000cf0 <main+0x68>)
 8000ccc:	f000 f8f0 	bl	8000eb0 <SCH_Add_Task>
  SCH_Add_Task(&fsm_for_pedestrian, 30, 10);
 8000cd0:	220a      	movs	r2, #10
 8000cd2:	211e      	movs	r1, #30
 8000cd4:	4807      	ldr	r0, [pc, #28]	; (8000cf4 <main+0x6c>)
 8000cd6:	f000 f8eb 	bl	8000eb0 <SCH_Add_Task>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	SCH_Dispatch_Tasks();
 8000cda:	f000 fa41 	bl	8001160 <SCH_Dispatch_Tasks>
 8000cde:	e7fc      	b.n	8000cda <main+0x52>
 8000ce0:	20000718 	.word	0x20000718
 8000ce4:	20000760 	.word	0x20000760
 8000ce8:	08000cf9 	.word	0x08000cf9
 8000cec:	08000ae1 	.word	0x08000ae1
 8000cf0:	0800024d 	.word	0x0800024d
 8000cf4:	08000759 	.word	0x08000759

08000cf8 <UpdateTimer>:
    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

void UpdateTimer(void) {
 8000cf8:	b580      	push	{r7, lr}
 8000cfa:	af00      	add	r7, sp, #0
  timerBreath(&timer1);
 8000cfc:	4805      	ldr	r0, [pc, #20]	; (8000d14 <UpdateTimer+0x1c>)
 8000cfe:	f000 fa85 	bl	800120c <timerBreath>
  timerBreath(&timer2);
 8000d02:	4805      	ldr	r0, [pc, #20]	; (8000d18 <UpdateTimer+0x20>)
 8000d04:	f000 fa82 	bl	800120c <timerBreath>
  timerBreath(&timer3);
 8000d08:	4804      	ldr	r0, [pc, #16]	; (8000d1c <UpdateTimer+0x24>)
 8000d0a:	f000 fa7f 	bl	800120c <timerBreath>
}
 8000d0e:	bf00      	nop
 8000d10:	bd80      	pop	{r7, pc}
 8000d12:	bf00      	nop
 8000d14:	200006fc 	.word	0x200006fc
 8000d18:	20000704 	.word	0x20000704
 8000d1c:	2000070c 	.word	0x2000070c

08000d20 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000d20:	b580      	push	{r7, lr}
 8000d22:	b090      	sub	sp, #64	; 0x40
 8000d24:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000d26:	f107 0318 	add.w	r3, r7, #24
 8000d2a:	2228      	movs	r2, #40	; 0x28
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	4618      	mov	r0, r3
 8000d30:	f002 fe7a 	bl	8003a28 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000d34:	1d3b      	adds	r3, r7, #4
 8000d36:	2200      	movs	r2, #0
 8000d38:	601a      	str	r2, [r3, #0]
 8000d3a:	605a      	str	r2, [r3, #4]
 8000d3c:	609a      	str	r2, [r3, #8]
 8000d3e:	60da      	str	r2, [r3, #12]
 8000d40:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000d42:	2302      	movs	r3, #2
 8000d44:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000d46:	2301      	movs	r3, #1
 8000d48:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000d4a:	2310      	movs	r3, #16
 8000d4c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000d4e:	2302      	movs	r3, #2
 8000d50:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000d52:	2300      	movs	r3, #0
 8000d54:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000d56:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000d5a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000d5c:	f107 0318 	add.w	r3, r7, #24
 8000d60:	4618      	mov	r0, r3
 8000d62:	f001 f907 	bl	8001f74 <HAL_RCC_OscConfig>
 8000d66:	4603      	mov	r3, r0
 8000d68:	2b00      	cmp	r3, #0
 8000d6a:	d001      	beq.n	8000d70 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000d6c:	f000 f823 	bl	8000db6 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000d70:	230f      	movs	r3, #15
 8000d72:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000d74:	2302      	movs	r3, #2
 8000d76:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000d78:	2300      	movs	r3, #0
 8000d7a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000d7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d80:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000d82:	2300      	movs	r3, #0
 8000d84:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000d86:	1d3b      	adds	r3, r7, #4
 8000d88:	2102      	movs	r1, #2
 8000d8a:	4618      	mov	r0, r3
 8000d8c:	f001 fb74 	bl	8002478 <HAL_RCC_ClockConfig>
 8000d90:	4603      	mov	r3, r0
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d001      	beq.n	8000d9a <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000d96:	f000 f80e 	bl	8000db6 <Error_Handler>
  }
}
 8000d9a:	bf00      	nop
 8000d9c:	3740      	adds	r7, #64	; 0x40
 8000d9e:	46bd      	mov	sp, r7
 8000da0:	bd80      	pop	{r7, pc}

08000da2 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
{
 8000da2:	b580      	push	{r7, lr}
 8000da4:	b082      	sub	sp, #8
 8000da6:	af00      	add	r7, sp, #0
 8000da8:	6078      	str	r0, [r7, #4]
	SCH_Update();
 8000daa:	f000 f9fd 	bl	80011a8 <SCH_Update>
}
 8000dae:	bf00      	nop
 8000db0:	3708      	adds	r7, #8
 8000db2:	46bd      	mov	sp, r7
 8000db4:	bd80      	pop	{r7, pc}

08000db6 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000db6:	b480      	push	{r7}
 8000db8:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000dba:	b672      	cpsid	i
}
 8000dbc:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000dbe:	e7fe      	b.n	8000dbe <Error_Handler+0x8>

08000dc0 <pedestrianLightBlinkGrn>:
uint16_t pedestrianLightPin[NUM_OF_PORTS] = {
		D6_Pin,
		D7_Pin
};

void pedestrianLightBlinkGrn(void) {
 8000dc0:	b580      	push	{r7, lr}
 8000dc2:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT]);
 8000dc4:	4b08      	ldr	r3, [pc, #32]	; (8000de8 <pedestrianLightBlinkGrn+0x28>)
 8000dc6:	685b      	ldr	r3, [r3, #4]
 8000dc8:	4a08      	ldr	r2, [pc, #32]	; (8000dec <pedestrianLightBlinkGrn+0x2c>)
 8000dca:	8852      	ldrh	r2, [r2, #2]
 8000dcc:	4611      	mov	r1, r2
 8000dce:	4618      	mov	r0, r3
 8000dd0:	f001 f895 	bl	8001efe <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000dd4:	4b04      	ldr	r3, [pc, #16]	; (8000de8 <pedestrianLightBlinkGrn+0x28>)
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	4a04      	ldr	r2, [pc, #16]	; (8000dec <pedestrianLightBlinkGrn+0x2c>)
 8000dda:	8811      	ldrh	r1, [r2, #0]
 8000ddc:	2200      	movs	r2, #0
 8000dde:	4618      	mov	r0, r3
 8000de0:	f001 f875 	bl	8001ece <HAL_GPIO_WritePin>
}
 8000de4:	bf00      	nop
 8000de6:	bd80      	pop	{r7, pc}
 8000de8:	200002fc 	.word	0x200002fc
 8000dec:	20000304 	.word	0x20000304

08000df0 <pedestrianLightBlinkRed>:

void pedestrianLightBlinkRed(void) {
 8000df0:	b580      	push	{r7, lr}
 8000df2:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT]);
 8000df4:	4b08      	ldr	r3, [pc, #32]	; (8000e18 <pedestrianLightBlinkRed+0x28>)
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	4a08      	ldr	r2, [pc, #32]	; (8000e1c <pedestrianLightBlinkRed+0x2c>)
 8000dfa:	8812      	ldrh	r2, [r2, #0]
 8000dfc:	4611      	mov	r1, r2
 8000dfe:	4618      	mov	r0, r3
 8000e00:	f001 f87d 	bl	8001efe <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000e04:	4b04      	ldr	r3, [pc, #16]	; (8000e18 <pedestrianLightBlinkRed+0x28>)
 8000e06:	685b      	ldr	r3, [r3, #4]
 8000e08:	4a04      	ldr	r2, [pc, #16]	; (8000e1c <pedestrianLightBlinkRed+0x2c>)
 8000e0a:	8851      	ldrh	r1, [r2, #2]
 8000e0c:	2200      	movs	r2, #0
 8000e0e:	4618      	mov	r0, r3
 8000e10:	f001 f85d 	bl	8001ece <HAL_GPIO_WritePin>
}
 8000e14:	bf00      	nop
 8000e16:	bd80      	pop	{r7, pc}
 8000e18:	200002fc 	.word	0x200002fc
 8000e1c:	20000304 	.word	0x20000304

08000e20 <pedestrianLightGrn>:

void pedestrianLightGrn(void) {
 8000e20:	b580      	push	{r7, lr}
 8000e22:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], ON);
 8000e24:	4b08      	ldr	r3, [pc, #32]	; (8000e48 <pedestrianLightGrn+0x28>)
 8000e26:	685b      	ldr	r3, [r3, #4]
 8000e28:	4a08      	ldr	r2, [pc, #32]	; (8000e4c <pedestrianLightGrn+0x2c>)
 8000e2a:	8851      	ldrh	r1, [r2, #2]
 8000e2c:	2201      	movs	r2, #1
 8000e2e:	4618      	mov	r0, r3
 8000e30:	f001 f84d 	bl	8001ece <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000e34:	4b04      	ldr	r3, [pc, #16]	; (8000e48 <pedestrianLightGrn+0x28>)
 8000e36:	681b      	ldr	r3, [r3, #0]
 8000e38:	4a04      	ldr	r2, [pc, #16]	; (8000e4c <pedestrianLightGrn+0x2c>)
 8000e3a:	8811      	ldrh	r1, [r2, #0]
 8000e3c:	2200      	movs	r2, #0
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f001 f845 	bl	8001ece <HAL_GPIO_WritePin>
}
 8000e44:	bf00      	nop
 8000e46:	bd80      	pop	{r7, pc}
 8000e48:	200002fc 	.word	0x200002fc
 8000e4c:	20000304 	.word	0x20000304

08000e50 <pedestrianLightRed>:

void pedestrianLightRed(void) {
 8000e50:	b580      	push	{r7, lr}
 8000e52:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], ON);
 8000e54:	4b08      	ldr	r3, [pc, #32]	; (8000e78 <pedestrianLightRed+0x28>)
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	4a08      	ldr	r2, [pc, #32]	; (8000e7c <pedestrianLightRed+0x2c>)
 8000e5a:	8811      	ldrh	r1, [r2, #0]
 8000e5c:	2201      	movs	r2, #1
 8000e5e:	4618      	mov	r0, r3
 8000e60:	f001 f835 	bl	8001ece <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000e64:	4b04      	ldr	r3, [pc, #16]	; (8000e78 <pedestrianLightRed+0x28>)
 8000e66:	685b      	ldr	r3, [r3, #4]
 8000e68:	4a04      	ldr	r2, [pc, #16]	; (8000e7c <pedestrianLightRed+0x2c>)
 8000e6a:	8851      	ldrh	r1, [r2, #2]
 8000e6c:	2200      	movs	r2, #0
 8000e6e:	4618      	mov	r0, r3
 8000e70:	f001 f82d 	bl	8001ece <HAL_GPIO_WritePin>
}
 8000e74:	bf00      	nop
 8000e76:	bd80      	pop	{r7, pc}
 8000e78:	200002fc 	.word	0x200002fc
 8000e7c:	20000304 	.word	0x20000304

08000e80 <pedestrianLightOff>:

void pedestrianLightOff(void) {
 8000e80:	b580      	push	{r7, lr}
 8000e82:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(pedestrianLightPort[GRN_LIGHT], pedestrianLightPin[GRN_LIGHT], OFF);
 8000e84:	4b08      	ldr	r3, [pc, #32]	; (8000ea8 <pedestrianLightOff+0x28>)
 8000e86:	685b      	ldr	r3, [r3, #4]
 8000e88:	4a08      	ldr	r2, [pc, #32]	; (8000eac <pedestrianLightOff+0x2c>)
 8000e8a:	8851      	ldrh	r1, [r2, #2]
 8000e8c:	2200      	movs	r2, #0
 8000e8e:	4618      	mov	r0, r3
 8000e90:	f001 f81d 	bl	8001ece <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(pedestrianLightPort[RED_LIGHT], pedestrianLightPin[RED_LIGHT], OFF);
 8000e94:	4b04      	ldr	r3, [pc, #16]	; (8000ea8 <pedestrianLightOff+0x28>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	4a04      	ldr	r2, [pc, #16]	; (8000eac <pedestrianLightOff+0x2c>)
 8000e9a:	8811      	ldrh	r1, [r2, #0]
 8000e9c:	2200      	movs	r2, #0
 8000e9e:	4618      	mov	r0, r3
 8000ea0:	f001 f815 	bl	8001ece <HAL_GPIO_WritePin>
}
 8000ea4:	bf00      	nop
 8000ea6:	bd80      	pop	{r7, pc}
 8000ea8:	200002fc 	.word	0x200002fc
 8000eac:	20000304 	.word	0x20000304

08000eb0 <SCH_Add_Task>:
		SCH_tasks_G[Index].Period = 0;
		SCH_tasks_G[Index].RunMe = 0;
	}
}

uint32_t SCH_Add_Task(void (* pFunction)(void), uint32_t DELAY, uint32_t PERIOD) {
 8000eb0:	b4b0      	push	{r4, r5, r7}
 8000eb2:	b089      	sub	sp, #36	; 0x24
 8000eb4:	af00      	add	r7, sp, #0
 8000eb6:	60f8      	str	r0, [r7, #12]
 8000eb8:	60b9      	str	r1, [r7, #8]
 8000eba:	607a      	str	r2, [r7, #4]
	if(Size == SCH_MAX_TASKS - 1) return SCH_MAX_TASKS;
 8000ebc:	4b6d      	ldr	r3, [pc, #436]	; (8001074 <SCH_Add_Task+0x1c4>)
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	2b27      	cmp	r3, #39	; 0x27
 8000ec2:	d101      	bne.n	8000ec8 <SCH_Add_Task+0x18>
 8000ec4:	2328      	movs	r3, #40	; 0x28
 8000ec6:	e0d0      	b.n	800106a <SCH_Add_Task+0x1ba>

	uint8_t flag = 0;
 8000ec8:	2300      	movs	r3, #0
 8000eca:	77fb      	strb	r3, [r7, #31]
	uint32_t Index = 0;
 8000ecc:	2300      	movs	r3, #0
 8000ece:	61bb      	str	r3, [r7, #24]
	if(SYSTEM_DELAY > 0) {
		DELAY /= SYSTEM_DELAY;
 8000ed0:	68bb      	ldr	r3, [r7, #8]
 8000ed2:	4a69      	ldr	r2, [pc, #420]	; (8001078 <SCH_Add_Task+0x1c8>)
 8000ed4:	fba2 2303 	umull	r2, r3, r2, r3
 8000ed8:	08db      	lsrs	r3, r3, #3
 8000eda:	60bb      	str	r3, [r7, #8]
	}

	for(; Index < Size && flag == 0; Index++) {
 8000edc:	e046      	b.n	8000f6c <SCH_Add_Task+0xbc>
		if(DELAY > SCH_tasks_G[Index].Delay) {
 8000ede:	4967      	ldr	r1, [pc, #412]	; (800107c <SCH_Add_Task+0x1cc>)
 8000ee0:	69ba      	ldr	r2, [r7, #24]
 8000ee2:	4613      	mov	r3, r2
 8000ee4:	009b      	lsls	r3, r3, #2
 8000ee6:	4413      	add	r3, r2
 8000ee8:	009b      	lsls	r3, r3, #2
 8000eea:	440b      	add	r3, r1
 8000eec:	3304      	adds	r3, #4
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	68ba      	ldr	r2, [r7, #8]
 8000ef2:	429a      	cmp	r2, r3
 8000ef4:	d90c      	bls.n	8000f10 <SCH_Add_Task+0x60>
			DELAY -= SCH_tasks_G[Index].Delay;
 8000ef6:	4961      	ldr	r1, [pc, #388]	; (800107c <SCH_Add_Task+0x1cc>)
 8000ef8:	69ba      	ldr	r2, [r7, #24]
 8000efa:	4613      	mov	r3, r2
 8000efc:	009b      	lsls	r3, r3, #2
 8000efe:	4413      	add	r3, r2
 8000f00:	009b      	lsls	r3, r3, #2
 8000f02:	440b      	add	r3, r1
 8000f04:	3304      	adds	r3, #4
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	68ba      	ldr	r2, [r7, #8]
 8000f0a:	1ad3      	subs	r3, r2, r3
 8000f0c:	60bb      	str	r3, [r7, #8]
 8000f0e:	e02a      	b.n	8000f66 <SCH_Add_Task+0xb6>
		}
		else {
			flag = 1;
 8000f10:	2301      	movs	r3, #1
 8000f12:	77fb      	strb	r3, [r7, #31]
			SCH_tasks_G[Index].Delay -= DELAY;
 8000f14:	4959      	ldr	r1, [pc, #356]	; (800107c <SCH_Add_Task+0x1cc>)
 8000f16:	69ba      	ldr	r2, [r7, #24]
 8000f18:	4613      	mov	r3, r2
 8000f1a:	009b      	lsls	r3, r3, #2
 8000f1c:	4413      	add	r3, r2
 8000f1e:	009b      	lsls	r3, r3, #2
 8000f20:	440b      	add	r3, r1
 8000f22:	3304      	adds	r3, #4
 8000f24:	681a      	ldr	r2, [r3, #0]
 8000f26:	68bb      	ldr	r3, [r7, #8]
 8000f28:	1ad1      	subs	r1, r2, r3
 8000f2a:	4854      	ldr	r0, [pc, #336]	; (800107c <SCH_Add_Task+0x1cc>)
 8000f2c:	69ba      	ldr	r2, [r7, #24]
 8000f2e:	4613      	mov	r3, r2
 8000f30:	009b      	lsls	r3, r3, #2
 8000f32:	4413      	add	r3, r2
 8000f34:	009b      	lsls	r3, r3, #2
 8000f36:	4403      	add	r3, r0
 8000f38:	3304      	adds	r3, #4
 8000f3a:	6019      	str	r1, [r3, #0]
			if(SCH_tasks_G[Index].Delay == 0) {
 8000f3c:	494f      	ldr	r1, [pc, #316]	; (800107c <SCH_Add_Task+0x1cc>)
 8000f3e:	69ba      	ldr	r2, [r7, #24]
 8000f40:	4613      	mov	r3, r2
 8000f42:	009b      	lsls	r3, r3, #2
 8000f44:	4413      	add	r3, r2
 8000f46:	009b      	lsls	r3, r3, #2
 8000f48:	440b      	add	r3, r1
 8000f4a:	3304      	adds	r3, #4
 8000f4c:	681b      	ldr	r3, [r3, #0]
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d109      	bne.n	8000f66 <SCH_Add_Task+0xb6>
				SCH_tasks_G[Index].RunMe = 1;
 8000f52:	494a      	ldr	r1, [pc, #296]	; (800107c <SCH_Add_Task+0x1cc>)
 8000f54:	69ba      	ldr	r2, [r7, #24]
 8000f56:	4613      	mov	r3, r2
 8000f58:	009b      	lsls	r3, r3, #2
 8000f5a:	4413      	add	r3, r2
 8000f5c:	009b      	lsls	r3, r3, #2
 8000f5e:	440b      	add	r3, r1
 8000f60:	330c      	adds	r3, #12
 8000f62:	2201      	movs	r2, #1
 8000f64:	701a      	strb	r2, [r3, #0]
	for(; Index < Size && flag == 0; Index++) {
 8000f66:	69bb      	ldr	r3, [r7, #24]
 8000f68:	3301      	adds	r3, #1
 8000f6a:	61bb      	str	r3, [r7, #24]
 8000f6c:	4b41      	ldr	r3, [pc, #260]	; (8001074 <SCH_Add_Task+0x1c4>)
 8000f6e:	681b      	ldr	r3, [r3, #0]
 8000f70:	69ba      	ldr	r2, [r7, #24]
 8000f72:	429a      	cmp	r2, r3
 8000f74:	d202      	bcs.n	8000f7c <SCH_Add_Task+0xcc>
 8000f76:	7ffb      	ldrb	r3, [r7, #31]
 8000f78:	2b00      	cmp	r3, #0
 8000f7a:	d0b0      	beq.n	8000ede <SCH_Add_Task+0x2e>
			}
		}
	}

	if(flag == 1) {
 8000f7c:	7ffb      	ldrb	r3, [r7, #31]
 8000f7e:	2b01      	cmp	r3, #1
 8000f80:	d135      	bne.n	8000fee <SCH_Add_Task+0x13e>
		Index -= 1;
 8000f82:	69bb      	ldr	r3, [r7, #24]
 8000f84:	3b01      	subs	r3, #1
 8000f86:	61bb      	str	r3, [r7, #24]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 8000f88:	4b3a      	ldr	r3, [pc, #232]	; (8001074 <SCH_Add_Task+0x1c4>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	617b      	str	r3, [r7, #20]
 8000f8e:	e02a      	b.n	8000fe6 <SCH_Add_Task+0x136>
			SCH_tasks_G[Temp] = SCH_tasks_G[Temp - 1];
 8000f90:	697b      	ldr	r3, [r7, #20]
 8000f92:	1e5a      	subs	r2, r3, #1
 8000f94:	4839      	ldr	r0, [pc, #228]	; (800107c <SCH_Add_Task+0x1cc>)
 8000f96:	6979      	ldr	r1, [r7, #20]
 8000f98:	460b      	mov	r3, r1
 8000f9a:	009b      	lsls	r3, r3, #2
 8000f9c:	440b      	add	r3, r1
 8000f9e:	009b      	lsls	r3, r3, #2
 8000fa0:	4418      	add	r0, r3
 8000fa2:	4936      	ldr	r1, [pc, #216]	; (800107c <SCH_Add_Task+0x1cc>)
 8000fa4:	4613      	mov	r3, r2
 8000fa6:	009b      	lsls	r3, r3, #2
 8000fa8:	4413      	add	r3, r2
 8000faa:	009b      	lsls	r3, r3, #2
 8000fac:	440b      	add	r3, r1
 8000fae:	4604      	mov	r4, r0
 8000fb0:	461d      	mov	r5, r3
 8000fb2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000fb4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000fb6:	682b      	ldr	r3, [r5, #0]
 8000fb8:	6023      	str	r3, [r4, #0]
			SCH_tasks_G[Temp].TaskID += 1;
 8000fba:	4930      	ldr	r1, [pc, #192]	; (800107c <SCH_Add_Task+0x1cc>)
 8000fbc:	697a      	ldr	r2, [r7, #20]
 8000fbe:	4613      	mov	r3, r2
 8000fc0:	009b      	lsls	r3, r3, #2
 8000fc2:	4413      	add	r3, r2
 8000fc4:	009b      	lsls	r3, r3, #2
 8000fc6:	440b      	add	r3, r1
 8000fc8:	3310      	adds	r3, #16
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	1c59      	adds	r1, r3, #1
 8000fce:	482b      	ldr	r0, [pc, #172]	; (800107c <SCH_Add_Task+0x1cc>)
 8000fd0:	697a      	ldr	r2, [r7, #20]
 8000fd2:	4613      	mov	r3, r2
 8000fd4:	009b      	lsls	r3, r3, #2
 8000fd6:	4413      	add	r3, r2
 8000fd8:	009b      	lsls	r3, r3, #2
 8000fda:	4403      	add	r3, r0
 8000fdc:	3310      	adds	r3, #16
 8000fde:	6019      	str	r1, [r3, #0]
		for(uint32_t Temp = Size; Temp > Index; Temp--) {
 8000fe0:	697b      	ldr	r3, [r7, #20]
 8000fe2:	3b01      	subs	r3, #1
 8000fe4:	617b      	str	r3, [r7, #20]
 8000fe6:	697a      	ldr	r2, [r7, #20]
 8000fe8:	69bb      	ldr	r3, [r7, #24]
 8000fea:	429a      	cmp	r2, r3
 8000fec:	d8d0      	bhi.n	8000f90 <SCH_Add_Task+0xe0>
		}
	}
	SCH_tasks_G[Index].pTask = pFunction;
 8000fee:	4923      	ldr	r1, [pc, #140]	; (800107c <SCH_Add_Task+0x1cc>)
 8000ff0:	69ba      	ldr	r2, [r7, #24]
 8000ff2:	4613      	mov	r3, r2
 8000ff4:	009b      	lsls	r3, r3, #2
 8000ff6:	4413      	add	r3, r2
 8000ff8:	009b      	lsls	r3, r3, #2
 8000ffa:	440b      	add	r3, r1
 8000ffc:	68fa      	ldr	r2, [r7, #12]
 8000ffe:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Delay = DELAY;
 8001000:	491e      	ldr	r1, [pc, #120]	; (800107c <SCH_Add_Task+0x1cc>)
 8001002:	69ba      	ldr	r2, [r7, #24]
 8001004:	4613      	mov	r3, r2
 8001006:	009b      	lsls	r3, r3, #2
 8001008:	4413      	add	r3, r2
 800100a:	009b      	lsls	r3, r3, #2
 800100c:	440b      	add	r3, r1
 800100e:	3304      	adds	r3, #4
 8001010:	68ba      	ldr	r2, [r7, #8]
 8001012:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].Period = PERIOD;
 8001014:	4919      	ldr	r1, [pc, #100]	; (800107c <SCH_Add_Task+0x1cc>)
 8001016:	69ba      	ldr	r2, [r7, #24]
 8001018:	4613      	mov	r3, r2
 800101a:	009b      	lsls	r3, r3, #2
 800101c:	4413      	add	r3, r2
 800101e:	009b      	lsls	r3, r3, #2
 8001020:	440b      	add	r3, r1
 8001022:	3308      	adds	r3, #8
 8001024:	687a      	ldr	r2, [r7, #4]
 8001026:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[Index].RunMe = (DELAY == 0) ? 1 : 0;
 8001028:	68bb      	ldr	r3, [r7, #8]
 800102a:	2b00      	cmp	r3, #0
 800102c:	bf0c      	ite	eq
 800102e:	2301      	moveq	r3, #1
 8001030:	2300      	movne	r3, #0
 8001032:	b2db      	uxtb	r3, r3
 8001034:	4618      	mov	r0, r3
 8001036:	4911      	ldr	r1, [pc, #68]	; (800107c <SCH_Add_Task+0x1cc>)
 8001038:	69ba      	ldr	r2, [r7, #24]
 800103a:	4613      	mov	r3, r2
 800103c:	009b      	lsls	r3, r3, #2
 800103e:	4413      	add	r3, r2
 8001040:	009b      	lsls	r3, r3, #2
 8001042:	440b      	add	r3, r1
 8001044:	330c      	adds	r3, #12
 8001046:	4602      	mov	r2, r0
 8001048:	701a      	strb	r2, [r3, #0]
	SCH_tasks_G[Index].TaskID = Index;
 800104a:	490c      	ldr	r1, [pc, #48]	; (800107c <SCH_Add_Task+0x1cc>)
 800104c:	69ba      	ldr	r2, [r7, #24]
 800104e:	4613      	mov	r3, r2
 8001050:	009b      	lsls	r3, r3, #2
 8001052:	4413      	add	r3, r2
 8001054:	009b      	lsls	r3, r3, #2
 8001056:	440b      	add	r3, r1
 8001058:	3310      	adds	r3, #16
 800105a:	69ba      	ldr	r2, [r7, #24]
 800105c:	601a      	str	r2, [r3, #0]

	Size += 1;
 800105e:	4b05      	ldr	r3, [pc, #20]	; (8001074 <SCH_Add_Task+0x1c4>)
 8001060:	681b      	ldr	r3, [r3, #0]
 8001062:	3301      	adds	r3, #1
 8001064:	4a03      	ldr	r2, [pc, #12]	; (8001074 <SCH_Add_Task+0x1c4>)
 8001066:	6013      	str	r3, [r2, #0]

	return Index;
 8001068:	69bb      	ldr	r3, [r7, #24]
}
 800106a:	4618      	mov	r0, r3
 800106c:	3724      	adds	r7, #36	; 0x24
 800106e:	46bd      	mov	sp, r7
 8001070:	bcb0      	pop	{r4, r5, r7}
 8001072:	4770      	bx	lr
 8001074:	200006f8 	.word	0x200006f8
 8001078:	cccccccd 	.word	0xcccccccd
 800107c:	200003d8 	.word	0x200003d8

08001080 <SCH_Delete_Task>:

void SCH_Delete_Task(uint32_t TASK_INDEX) {
 8001080:	b4b0      	push	{r4, r5, r7}
 8001082:	b085      	sub	sp, #20
 8001084:	af00      	add	r7, sp, #0
 8001086:	6078      	str	r0, [r7, #4]
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 8001088:	4933      	ldr	r1, [pc, #204]	; (8001158 <SCH_Delete_Task+0xd8>)
 800108a:	687a      	ldr	r2, [r7, #4]
 800108c:	4613      	mov	r3, r2
 800108e:	009b      	lsls	r3, r3, #2
 8001090:	4413      	add	r3, r2
 8001092:	009b      	lsls	r3, r3, #2
 8001094:	440b      	add	r3, r1
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	2b00      	cmp	r3, #0
 800109a:	d057      	beq.n	800114c <SCH_Delete_Task+0xcc>

	SCH_tasks_G[TASK_INDEX + 1].Delay += SCH_tasks_G[TASK_INDEX].Delay;
 800109c:	687b      	ldr	r3, [r7, #4]
 800109e:	1c5a      	adds	r2, r3, #1
 80010a0:	492d      	ldr	r1, [pc, #180]	; (8001158 <SCH_Delete_Task+0xd8>)
 80010a2:	4613      	mov	r3, r2
 80010a4:	009b      	lsls	r3, r3, #2
 80010a6:	4413      	add	r3, r2
 80010a8:	009b      	lsls	r3, r3, #2
 80010aa:	440b      	add	r3, r1
 80010ac:	3304      	adds	r3, #4
 80010ae:	6819      	ldr	r1, [r3, #0]
 80010b0:	4829      	ldr	r0, [pc, #164]	; (8001158 <SCH_Delete_Task+0xd8>)
 80010b2:	687a      	ldr	r2, [r7, #4]
 80010b4:	4613      	mov	r3, r2
 80010b6:	009b      	lsls	r3, r3, #2
 80010b8:	4413      	add	r3, r2
 80010ba:	009b      	lsls	r3, r3, #2
 80010bc:	4403      	add	r3, r0
 80010be:	3304      	adds	r3, #4
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	687a      	ldr	r2, [r7, #4]
 80010c4:	3201      	adds	r2, #1
 80010c6:	4419      	add	r1, r3
 80010c8:	4823      	ldr	r0, [pc, #140]	; (8001158 <SCH_Delete_Task+0xd8>)
 80010ca:	4613      	mov	r3, r2
 80010cc:	009b      	lsls	r3, r3, #2
 80010ce:	4413      	add	r3, r2
 80010d0:	009b      	lsls	r3, r3, #2
 80010d2:	4403      	add	r3, r0
 80010d4:	3304      	adds	r3, #4
 80010d6:	6019      	str	r1, [r3, #0]

	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	60fb      	str	r3, [r7, #12]
 80010dc:	e02a      	b.n	8001134 <SCH_Delete_Task+0xb4>
		SCH_tasks_G[Temp] = SCH_tasks_G[Temp + 1];
 80010de:	68fb      	ldr	r3, [r7, #12]
 80010e0:	1c5a      	adds	r2, r3, #1
 80010e2:	481d      	ldr	r0, [pc, #116]	; (8001158 <SCH_Delete_Task+0xd8>)
 80010e4:	68f9      	ldr	r1, [r7, #12]
 80010e6:	460b      	mov	r3, r1
 80010e8:	009b      	lsls	r3, r3, #2
 80010ea:	440b      	add	r3, r1
 80010ec:	009b      	lsls	r3, r3, #2
 80010ee:	4418      	add	r0, r3
 80010f0:	4919      	ldr	r1, [pc, #100]	; (8001158 <SCH_Delete_Task+0xd8>)
 80010f2:	4613      	mov	r3, r2
 80010f4:	009b      	lsls	r3, r3, #2
 80010f6:	4413      	add	r3, r2
 80010f8:	009b      	lsls	r3, r3, #2
 80010fa:	440b      	add	r3, r1
 80010fc:	4604      	mov	r4, r0
 80010fe:	461d      	mov	r5, r3
 8001100:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001102:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001104:	682b      	ldr	r3, [r5, #0]
 8001106:	6023      	str	r3, [r4, #0]
		SCH_tasks_G[Temp].TaskID -= 1;
 8001108:	4913      	ldr	r1, [pc, #76]	; (8001158 <SCH_Delete_Task+0xd8>)
 800110a:	68fa      	ldr	r2, [r7, #12]
 800110c:	4613      	mov	r3, r2
 800110e:	009b      	lsls	r3, r3, #2
 8001110:	4413      	add	r3, r2
 8001112:	009b      	lsls	r3, r3, #2
 8001114:	440b      	add	r3, r1
 8001116:	3310      	adds	r3, #16
 8001118:	681b      	ldr	r3, [r3, #0]
 800111a:	1e59      	subs	r1, r3, #1
 800111c:	480e      	ldr	r0, [pc, #56]	; (8001158 <SCH_Delete_Task+0xd8>)
 800111e:	68fa      	ldr	r2, [r7, #12]
 8001120:	4613      	mov	r3, r2
 8001122:	009b      	lsls	r3, r3, #2
 8001124:	4413      	add	r3, r2
 8001126:	009b      	lsls	r3, r3, #2
 8001128:	4403      	add	r3, r0
 800112a:	3310      	adds	r3, #16
 800112c:	6019      	str	r1, [r3, #0]
	for(uint32_t Temp = TASK_INDEX; Temp < Size - 1; Temp++) {
 800112e:	68fb      	ldr	r3, [r7, #12]
 8001130:	3301      	adds	r3, #1
 8001132:	60fb      	str	r3, [r7, #12]
 8001134:	4b09      	ldr	r3, [pc, #36]	; (800115c <SCH_Delete_Task+0xdc>)
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	3b01      	subs	r3, #1
 800113a:	68fa      	ldr	r2, [r7, #12]
 800113c:	429a      	cmp	r2, r3
 800113e:	d3ce      	bcc.n	80010de <SCH_Delete_Task+0x5e>
	}

	Size -= 1;
 8001140:	4b06      	ldr	r3, [pc, #24]	; (800115c <SCH_Delete_Task+0xdc>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	3b01      	subs	r3, #1
 8001146:	4a05      	ldr	r2, [pc, #20]	; (800115c <SCH_Delete_Task+0xdc>)
 8001148:	6013      	str	r3, [r2, #0]
 800114a:	e000      	b.n	800114e <SCH_Delete_Task+0xce>
	if(SCH_tasks_G[TASK_INDEX].pTask == 0) return;
 800114c:	bf00      	nop
}
 800114e:	3714      	adds	r7, #20
 8001150:	46bd      	mov	sp, r7
 8001152:	bcb0      	pop	{r4, r5, r7}
 8001154:	4770      	bx	lr
 8001156:	bf00      	nop
 8001158:	200003d8 	.word	0x200003d8
 800115c:	200006f8 	.word	0x200006f8

08001160 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void) {
 8001160:	b5b0      	push	{r4, r5, r7, lr}
 8001162:	b086      	sub	sp, #24
 8001164:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[HEAD].RunMe == 1) {
 8001166:	4b0f      	ldr	r3, [pc, #60]	; (80011a4 <SCH_Dispatch_Tasks+0x44>)
 8001168:	7b1b      	ldrb	r3, [r3, #12]
 800116a:	2b01      	cmp	r3, #1
 800116c:	d115      	bne.n	800119a <SCH_Dispatch_Tasks+0x3a>
		(*SCH_tasks_G[HEAD].pTask)();
 800116e:	4b0d      	ldr	r3, [pc, #52]	; (80011a4 <SCH_Dispatch_Tasks+0x44>)
 8001170:	681b      	ldr	r3, [r3, #0]
 8001172:	4798      	blx	r3

		sTask temp = SCH_tasks_G[HEAD];
 8001174:	4b0b      	ldr	r3, [pc, #44]	; (80011a4 <SCH_Dispatch_Tasks+0x44>)
 8001176:	1d3c      	adds	r4, r7, #4
 8001178:	461d      	mov	r5, r3
 800117a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800117c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800117e:	682b      	ldr	r3, [r5, #0]
 8001180:	6023      	str	r3, [r4, #0]

		SCH_Delete_Task(HEAD);
 8001182:	2000      	movs	r0, #0
 8001184:	f7ff ff7c 	bl	8001080 <SCH_Delete_Task>

		if(temp.Period > 0) {
 8001188:	68fb      	ldr	r3, [r7, #12]
 800118a:	2b00      	cmp	r3, #0
 800118c:	d005      	beq.n	800119a <SCH_Dispatch_Tasks+0x3a>
			SCH_Add_Task(temp.pTask, temp.Period, temp.Period);
 800118e:	687b      	ldr	r3, [r7, #4]
 8001190:	68f9      	ldr	r1, [r7, #12]
 8001192:	68fa      	ldr	r2, [r7, #12]
 8001194:	4618      	mov	r0, r3
 8001196:	f7ff fe8b 	bl	8000eb0 <SCH_Add_Task>
		}
	}
}
 800119a:	bf00      	nop
 800119c:	3718      	adds	r7, #24
 800119e:	46bd      	mov	sp, r7
 80011a0:	bdb0      	pop	{r4, r5, r7, pc}
 80011a2:	bf00      	nop
 80011a4:	200003d8 	.word	0x200003d8

080011a8 <SCH_Update>:

void SCH_Update(void) {
 80011a8:	b480      	push	{r7}
 80011aa:	af00      	add	r7, sp, #0
	if(SCH_tasks_G[HEAD].Delay > 0) SCH_tasks_G[HEAD].Delay--;
 80011ac:	4b09      	ldr	r3, [pc, #36]	; (80011d4 <SCH_Update+0x2c>)
 80011ae:	685b      	ldr	r3, [r3, #4]
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d004      	beq.n	80011be <SCH_Update+0x16>
 80011b4:	4b07      	ldr	r3, [pc, #28]	; (80011d4 <SCH_Update+0x2c>)
 80011b6:	685b      	ldr	r3, [r3, #4]
 80011b8:	3b01      	subs	r3, #1
 80011ba:	4a06      	ldr	r2, [pc, #24]	; (80011d4 <SCH_Update+0x2c>)
 80011bc:	6053      	str	r3, [r2, #4]

	if(SCH_tasks_G[HEAD].Delay == 0) {
 80011be:	4b05      	ldr	r3, [pc, #20]	; (80011d4 <SCH_Update+0x2c>)
 80011c0:	685b      	ldr	r3, [r3, #4]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d102      	bne.n	80011cc <SCH_Update+0x24>
		SCH_tasks_G[HEAD].RunMe = 1;
 80011c6:	4b03      	ldr	r3, [pc, #12]	; (80011d4 <SCH_Update+0x2c>)
 80011c8:	2201      	movs	r2, #1
 80011ca:	731a      	strb	r2, [r3, #12]
	}
}
 80011cc:	bf00      	nop
 80011ce:	46bd      	mov	sp, r7
 80011d0:	bc80      	pop	{r7}
 80011d2:	4770      	bx	lr
 80011d4:	200003d8 	.word	0x200003d8

080011d8 <setTimer>:
struct timer_count timer2;
struct timer_count timer3;

// Blame Nguyen Tran
/* DEPENDENCY INJECTION */
void setTimer(struct timer_count* timer, int duration) {
 80011d8:	b480      	push	{r7}
 80011da:	b085      	sub	sp, #20
 80011dc:	af00      	add	r7, sp, #0
 80011de:	6078      	str	r0, [r7, #4]
 80011e0:	6039      	str	r1, [r7, #0]
    int tick = SYSTEM_DELAY;
 80011e2:	230a      	movs	r3, #10
 80011e4:	60fb      	str	r3, [r7, #12]
    if (tick <= 0) {
 80011e6:	68fb      	ldr	r3, [r7, #12]
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	dc01      	bgt.n	80011f0 <setTimer+0x18>
        tick = 1;
 80011ec:	2301      	movs	r3, #1
 80011ee:	60fb      	str	r3, [r7, #12]
    }
    timer->counter = duration / tick;
 80011f0:	683a      	ldr	r2, [r7, #0]
 80011f2:	68fb      	ldr	r3, [r7, #12]
 80011f4:	fb92 f2f3 	sdiv	r2, r2, r3
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	601a      	str	r2, [r3, #0]
    timer->flag = 0;
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	2200      	movs	r2, #0
 8001200:	605a      	str	r2, [r3, #4]
}
 8001202:	bf00      	nop
 8001204:	3714      	adds	r7, #20
 8001206:	46bd      	mov	sp, r7
 8001208:	bc80      	pop	{r7}
 800120a:	4770      	bx	lr

0800120c <timerBreath>:

void timerBreath(struct timer_count* timer) {
 800120c:	b480      	push	{r7}
 800120e:	b083      	sub	sp, #12
 8001210:	af00      	add	r7, sp, #0
 8001212:	6078      	str	r0, [r7, #4]
    if (timer->counter > 0) {
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	2b00      	cmp	r3, #0
 800121a:	dd0b      	ble.n	8001234 <timerBreath+0x28>
        timer->counter -= 1;
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	1e5a      	subs	r2, r3, #1
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	601a      	str	r2, [r3, #0]
        if (timer->counter <= 0) {
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	2b00      	cmp	r3, #0
 800122c:	dc02      	bgt.n	8001234 <timerBreath+0x28>
            timer->flag = 1;
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	2201      	movs	r2, #1
 8001232:	605a      	str	r2, [r3, #4]
        }
    }
}
 8001234:	bf00      	nop
 8001236:	370c      	adds	r7, #12
 8001238:	46bd      	mov	sp, r7
 800123a:	bc80      	pop	{r7}
 800123c:	4770      	bx	lr
	...

08001240 <HAL_MspInit>:
 8001240:	b480      	push	{r7}
 8001242:	b085      	sub	sp, #20
 8001244:	af00      	add	r7, sp, #0
 8001246:	4b15      	ldr	r3, [pc, #84]	; (800129c <HAL_MspInit+0x5c>)
 8001248:	699b      	ldr	r3, [r3, #24]
 800124a:	4a14      	ldr	r2, [pc, #80]	; (800129c <HAL_MspInit+0x5c>)
 800124c:	f043 0301 	orr.w	r3, r3, #1
 8001250:	6193      	str	r3, [r2, #24]
 8001252:	4b12      	ldr	r3, [pc, #72]	; (800129c <HAL_MspInit+0x5c>)
 8001254:	699b      	ldr	r3, [r3, #24]
 8001256:	f003 0301 	and.w	r3, r3, #1
 800125a:	60bb      	str	r3, [r7, #8]
 800125c:	68bb      	ldr	r3, [r7, #8]
 800125e:	4b0f      	ldr	r3, [pc, #60]	; (800129c <HAL_MspInit+0x5c>)
 8001260:	69db      	ldr	r3, [r3, #28]
 8001262:	4a0e      	ldr	r2, [pc, #56]	; (800129c <HAL_MspInit+0x5c>)
 8001264:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001268:	61d3      	str	r3, [r2, #28]
 800126a:	4b0c      	ldr	r3, [pc, #48]	; (800129c <HAL_MspInit+0x5c>)
 800126c:	69db      	ldr	r3, [r3, #28]
 800126e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001272:	607b      	str	r3, [r7, #4]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	4b0a      	ldr	r3, [pc, #40]	; (80012a0 <HAL_MspInit+0x60>)
 8001278:	685b      	ldr	r3, [r3, #4]
 800127a:	60fb      	str	r3, [r7, #12]
 800127c:	68fb      	ldr	r3, [r7, #12]
 800127e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001282:	60fb      	str	r3, [r7, #12]
 8001284:	68fb      	ldr	r3, [r7, #12]
 8001286:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800128a:	60fb      	str	r3, [r7, #12]
 800128c:	4a04      	ldr	r2, [pc, #16]	; (80012a0 <HAL_MspInit+0x60>)
 800128e:	68fb      	ldr	r3, [r7, #12]
 8001290:	6053      	str	r3, [r2, #4]
 8001292:	bf00      	nop
 8001294:	3714      	adds	r7, #20
 8001296:	46bd      	mov	sp, r7
 8001298:	bc80      	pop	{r7}
 800129a:	4770      	bx	lr
 800129c:	40021000 	.word	0x40021000
 80012a0:	40010000 	.word	0x40010000

080012a4 <NMI_Handler>:
 80012a4:	b480      	push	{r7}
 80012a6:	af00      	add	r7, sp, #0
 80012a8:	e7fe      	b.n	80012a8 <NMI_Handler+0x4>

080012aa <HardFault_Handler>:
 80012aa:	b480      	push	{r7}
 80012ac:	af00      	add	r7, sp, #0
 80012ae:	e7fe      	b.n	80012ae <HardFault_Handler+0x4>

080012b0 <MemManage_Handler>:
 80012b0:	b480      	push	{r7}
 80012b2:	af00      	add	r7, sp, #0
 80012b4:	e7fe      	b.n	80012b4 <MemManage_Handler+0x4>

080012b6 <BusFault_Handler>:
 80012b6:	b480      	push	{r7}
 80012b8:	af00      	add	r7, sp, #0
 80012ba:	e7fe      	b.n	80012ba <BusFault_Handler+0x4>

080012bc <UsageFault_Handler>:
 80012bc:	b480      	push	{r7}
 80012be:	af00      	add	r7, sp, #0
 80012c0:	e7fe      	b.n	80012c0 <UsageFault_Handler+0x4>

080012c2 <SVC_Handler>:
 80012c2:	b480      	push	{r7}
 80012c4:	af00      	add	r7, sp, #0
 80012c6:	bf00      	nop
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bc80      	pop	{r7}
 80012cc:	4770      	bx	lr

080012ce <DebugMon_Handler>:
 80012ce:	b480      	push	{r7}
 80012d0:	af00      	add	r7, sp, #0
 80012d2:	bf00      	nop
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bc80      	pop	{r7}
 80012d8:	4770      	bx	lr

080012da <PendSV_Handler>:
 80012da:	b480      	push	{r7}
 80012dc:	af00      	add	r7, sp, #0
 80012de:	bf00      	nop
 80012e0:	46bd      	mov	sp, r7
 80012e2:	bc80      	pop	{r7}
 80012e4:	4770      	bx	lr

080012e6 <SysTick_Handler>:
 80012e6:	b580      	push	{r7, lr}
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	f000 fb2b 	bl	8001944 <HAL_IncTick>
 80012ee:	bf00      	nop
 80012f0:	bd80      	pop	{r7, pc}
	...

080012f4 <TIM2_IRQHandler>:
 80012f4:	b580      	push	{r7, lr}
 80012f6:	af00      	add	r7, sp, #0
 80012f8:	4802      	ldr	r0, [pc, #8]	; (8001304 <TIM2_IRQHandler+0x10>)
 80012fa:	f001 fbf1 	bl	8002ae0 <HAL_TIM_IRQHandler>
 80012fe:	bf00      	nop
 8001300:	bd80      	pop	{r7, pc}
 8001302:	bf00      	nop
 8001304:	20000718 	.word	0x20000718

08001308 <EXTI15_10_IRQHandler>:
 8001308:	b580      	push	{r7, lr}
 800130a:	af00      	add	r7, sp, #0
 800130c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001310:	f000 fe0e 	bl	8001f30 <HAL_GPIO_EXTI_IRQHandler>
 8001314:	bf00      	nop
 8001316:	bd80      	pop	{r7, pc}

08001318 <_sbrk>:
 8001318:	b580      	push	{r7, lr}
 800131a:	b086      	sub	sp, #24
 800131c:	af00      	add	r7, sp, #0
 800131e:	6078      	str	r0, [r7, #4]
 8001320:	4a14      	ldr	r2, [pc, #80]	; (8001374 <_sbrk+0x5c>)
 8001322:	4b15      	ldr	r3, [pc, #84]	; (8001378 <_sbrk+0x60>)
 8001324:	1ad3      	subs	r3, r2, r3
 8001326:	617b      	str	r3, [r7, #20]
 8001328:	697b      	ldr	r3, [r7, #20]
 800132a:	613b      	str	r3, [r7, #16]
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <_sbrk+0x64>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	2b00      	cmp	r3, #0
 8001332:	d102      	bne.n	800133a <_sbrk+0x22>
 8001334:	4b11      	ldr	r3, [pc, #68]	; (800137c <_sbrk+0x64>)
 8001336:	4a12      	ldr	r2, [pc, #72]	; (8001380 <_sbrk+0x68>)
 8001338:	601a      	str	r2, [r3, #0]
 800133a:	4b10      	ldr	r3, [pc, #64]	; (800137c <_sbrk+0x64>)
 800133c:	681a      	ldr	r2, [r3, #0]
 800133e:	687b      	ldr	r3, [r7, #4]
 8001340:	4413      	add	r3, r2
 8001342:	693a      	ldr	r2, [r7, #16]
 8001344:	429a      	cmp	r2, r3
 8001346:	d207      	bcs.n	8001358 <_sbrk+0x40>
 8001348:	f002 fb44 	bl	80039d4 <__errno>
 800134c:	4603      	mov	r3, r0
 800134e:	220c      	movs	r2, #12
 8001350:	601a      	str	r2, [r3, #0]
 8001352:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001356:	e009      	b.n	800136c <_sbrk+0x54>
 8001358:	4b08      	ldr	r3, [pc, #32]	; (800137c <_sbrk+0x64>)
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	60fb      	str	r3, [r7, #12]
 800135e:	4b07      	ldr	r3, [pc, #28]	; (800137c <_sbrk+0x64>)
 8001360:	681a      	ldr	r2, [r3, #0]
 8001362:	687b      	ldr	r3, [r7, #4]
 8001364:	4413      	add	r3, r2
 8001366:	4a05      	ldr	r2, [pc, #20]	; (800137c <_sbrk+0x64>)
 8001368:	6013      	str	r3, [r2, #0]
 800136a:	68fb      	ldr	r3, [r7, #12]
 800136c:	4618      	mov	r0, r3
 800136e:	3718      	adds	r7, #24
 8001370:	46bd      	mov	sp, r7
 8001372:	bd80      	pop	{r7, pc}
 8001374:	20005000 	.word	0x20005000
 8001378:	00000400 	.word	0x00000400
 800137c:	20000714 	.word	0x20000714
 8001380:	20000800 	.word	0x20000800

08001384 <SystemInit>:
 8001384:	b480      	push	{r7}
 8001386:	af00      	add	r7, sp, #0
 8001388:	bf00      	nop
 800138a:	46bd      	mov	sp, r7
 800138c:	bc80      	pop	{r7}
 800138e:	4770      	bx	lr

08001390 <MX_TIM2_Init>:
 8001390:	b580      	push	{r7, lr}
 8001392:	b086      	sub	sp, #24
 8001394:	af00      	add	r7, sp, #0
 8001396:	f107 0308 	add.w	r3, r7, #8
 800139a:	2200      	movs	r2, #0
 800139c:	601a      	str	r2, [r3, #0]
 800139e:	605a      	str	r2, [r3, #4]
 80013a0:	609a      	str	r2, [r3, #8]
 80013a2:	60da      	str	r2, [r3, #12]
 80013a4:	463b      	mov	r3, r7
 80013a6:	2200      	movs	r2, #0
 80013a8:	601a      	str	r2, [r3, #0]
 80013aa:	605a      	str	r2, [r3, #4]
 80013ac:	4b1d      	ldr	r3, [pc, #116]	; (8001424 <MX_TIM2_Init+0x94>)
 80013ae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80013b2:	601a      	str	r2, [r3, #0]
 80013b4:	4b1b      	ldr	r3, [pc, #108]	; (8001424 <MX_TIM2_Init+0x94>)
 80013b6:	223f      	movs	r2, #63	; 0x3f
 80013b8:	605a      	str	r2, [r3, #4]
 80013ba:	4b1a      	ldr	r3, [pc, #104]	; (8001424 <MX_TIM2_Init+0x94>)
 80013bc:	2200      	movs	r2, #0
 80013be:	609a      	str	r2, [r3, #8]
 80013c0:	4b18      	ldr	r3, [pc, #96]	; (8001424 <MX_TIM2_Init+0x94>)
 80013c2:	f242 720f 	movw	r2, #9999	; 0x270f
 80013c6:	60da      	str	r2, [r3, #12]
 80013c8:	4b16      	ldr	r3, [pc, #88]	; (8001424 <MX_TIM2_Init+0x94>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	611a      	str	r2, [r3, #16]
 80013ce:	4b15      	ldr	r3, [pc, #84]	; (8001424 <MX_TIM2_Init+0x94>)
 80013d0:	2200      	movs	r2, #0
 80013d2:	619a      	str	r2, [r3, #24]
 80013d4:	4813      	ldr	r0, [pc, #76]	; (8001424 <MX_TIM2_Init+0x94>)
 80013d6:	f001 f9e7 	bl	80027a8 <HAL_TIM_Base_Init>
 80013da:	4603      	mov	r3, r0
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d001      	beq.n	80013e4 <MX_TIM2_Init+0x54>
 80013e0:	f7ff fce9 	bl	8000db6 <Error_Handler>
 80013e4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013e8:	60bb      	str	r3, [r7, #8]
 80013ea:	f107 0308 	add.w	r3, r7, #8
 80013ee:	4619      	mov	r1, r3
 80013f0:	480c      	ldr	r0, [pc, #48]	; (8001424 <MX_TIM2_Init+0x94>)
 80013f2:	f001 fd3b 	bl	8002e6c <HAL_TIM_ConfigClockSource>
 80013f6:	4603      	mov	r3, r0
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	d001      	beq.n	8001400 <MX_TIM2_Init+0x70>
 80013fc:	f7ff fcdb 	bl	8000db6 <Error_Handler>
 8001400:	2300      	movs	r3, #0
 8001402:	603b      	str	r3, [r7, #0]
 8001404:	2300      	movs	r3, #0
 8001406:	607b      	str	r3, [r7, #4]
 8001408:	463b      	mov	r3, r7
 800140a:	4619      	mov	r1, r3
 800140c:	4805      	ldr	r0, [pc, #20]	; (8001424 <MX_TIM2_Init+0x94>)
 800140e:	f002 f8b9 	bl	8003584 <HAL_TIMEx_MasterConfigSynchronization>
 8001412:	4603      	mov	r3, r0
 8001414:	2b00      	cmp	r3, #0
 8001416:	d001      	beq.n	800141c <MX_TIM2_Init+0x8c>
 8001418:	f7ff fccd 	bl	8000db6 <Error_Handler>
 800141c:	bf00      	nop
 800141e:	3718      	adds	r7, #24
 8001420:	46bd      	mov	sp, r7
 8001422:	bd80      	pop	{r7, pc}
 8001424:	20000718 	.word	0x20000718

08001428 <MX_TIM3_Init>:
 8001428:	b580      	push	{r7, lr}
 800142a:	b08e      	sub	sp, #56	; 0x38
 800142c:	af00      	add	r7, sp, #0
 800142e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001432:	2200      	movs	r2, #0
 8001434:	601a      	str	r2, [r3, #0]
 8001436:	605a      	str	r2, [r3, #4]
 8001438:	609a      	str	r2, [r3, #8]
 800143a:	60da      	str	r2, [r3, #12]
 800143c:	f107 0320 	add.w	r3, r7, #32
 8001440:	2200      	movs	r2, #0
 8001442:	601a      	str	r2, [r3, #0]
 8001444:	605a      	str	r2, [r3, #4]
 8001446:	1d3b      	adds	r3, r7, #4
 8001448:	2200      	movs	r2, #0
 800144a:	601a      	str	r2, [r3, #0]
 800144c:	605a      	str	r2, [r3, #4]
 800144e:	609a      	str	r2, [r3, #8]
 8001450:	60da      	str	r2, [r3, #12]
 8001452:	611a      	str	r2, [r3, #16]
 8001454:	615a      	str	r2, [r3, #20]
 8001456:	619a      	str	r2, [r3, #24]
 8001458:	4b2c      	ldr	r3, [pc, #176]	; (800150c <MX_TIM3_Init+0xe4>)
 800145a:	4a2d      	ldr	r2, [pc, #180]	; (8001510 <MX_TIM3_Init+0xe8>)
 800145c:	601a      	str	r2, [r3, #0]
 800145e:	4b2b      	ldr	r3, [pc, #172]	; (800150c <MX_TIM3_Init+0xe4>)
 8001460:	223f      	movs	r2, #63	; 0x3f
 8001462:	605a      	str	r2, [r3, #4]
 8001464:	4b29      	ldr	r3, [pc, #164]	; (800150c <MX_TIM3_Init+0xe4>)
 8001466:	2200      	movs	r2, #0
 8001468:	609a      	str	r2, [r3, #8]
 800146a:	4b28      	ldr	r3, [pc, #160]	; (800150c <MX_TIM3_Init+0xe4>)
 800146c:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001470:	60da      	str	r2, [r3, #12]
 8001472:	4b26      	ldr	r3, [pc, #152]	; (800150c <MX_TIM3_Init+0xe4>)
 8001474:	2200      	movs	r2, #0
 8001476:	611a      	str	r2, [r3, #16]
 8001478:	4b24      	ldr	r3, [pc, #144]	; (800150c <MX_TIM3_Init+0xe4>)
 800147a:	2200      	movs	r2, #0
 800147c:	619a      	str	r2, [r3, #24]
 800147e:	4823      	ldr	r0, [pc, #140]	; (800150c <MX_TIM3_Init+0xe4>)
 8001480:	f001 f992 	bl	80027a8 <HAL_TIM_Base_Init>
 8001484:	4603      	mov	r3, r0
 8001486:	2b00      	cmp	r3, #0
 8001488:	d001      	beq.n	800148e <MX_TIM3_Init+0x66>
 800148a:	f7ff fc94 	bl	8000db6 <Error_Handler>
 800148e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001492:	62bb      	str	r3, [r7, #40]	; 0x28
 8001494:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001498:	4619      	mov	r1, r3
 800149a:	481c      	ldr	r0, [pc, #112]	; (800150c <MX_TIM3_Init+0xe4>)
 800149c:	f001 fce6 	bl	8002e6c <HAL_TIM_ConfigClockSource>
 80014a0:	4603      	mov	r3, r0
 80014a2:	2b00      	cmp	r3, #0
 80014a4:	d001      	beq.n	80014aa <MX_TIM3_Init+0x82>
 80014a6:	f7ff fc86 	bl	8000db6 <Error_Handler>
 80014aa:	4818      	ldr	r0, [pc, #96]	; (800150c <MX_TIM3_Init+0xe4>)
 80014ac:	f001 fa1e 	bl	80028ec <HAL_TIM_PWM_Init>
 80014b0:	4603      	mov	r3, r0
 80014b2:	2b00      	cmp	r3, #0
 80014b4:	d001      	beq.n	80014ba <MX_TIM3_Init+0x92>
 80014b6:	f7ff fc7e 	bl	8000db6 <Error_Handler>
 80014ba:	2300      	movs	r3, #0
 80014bc:	623b      	str	r3, [r7, #32]
 80014be:	2300      	movs	r3, #0
 80014c0:	627b      	str	r3, [r7, #36]	; 0x24
 80014c2:	f107 0320 	add.w	r3, r7, #32
 80014c6:	4619      	mov	r1, r3
 80014c8:	4810      	ldr	r0, [pc, #64]	; (800150c <MX_TIM3_Init+0xe4>)
 80014ca:	f002 f85b 	bl	8003584 <HAL_TIMEx_MasterConfigSynchronization>
 80014ce:	4603      	mov	r3, r0
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d001      	beq.n	80014d8 <MX_TIM3_Init+0xb0>
 80014d4:	f7ff fc6f 	bl	8000db6 <Error_Handler>
 80014d8:	2360      	movs	r3, #96	; 0x60
 80014da:	607b      	str	r3, [r7, #4]
 80014dc:	2300      	movs	r3, #0
 80014de:	60bb      	str	r3, [r7, #8]
 80014e0:	2300      	movs	r3, #0
 80014e2:	60fb      	str	r3, [r7, #12]
 80014e4:	2300      	movs	r3, #0
 80014e6:	617b      	str	r3, [r7, #20]
 80014e8:	1d3b      	adds	r3, r7, #4
 80014ea:	2200      	movs	r2, #0
 80014ec:	4619      	mov	r1, r3
 80014ee:	4807      	ldr	r0, [pc, #28]	; (800150c <MX_TIM3_Init+0xe4>)
 80014f0:	f001 fbfe 	bl	8002cf0 <HAL_TIM_PWM_ConfigChannel>
 80014f4:	4603      	mov	r3, r0
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d001      	beq.n	80014fe <MX_TIM3_Init+0xd6>
 80014fa:	f7ff fc5c 	bl	8000db6 <Error_Handler>
 80014fe:	4803      	ldr	r0, [pc, #12]	; (800150c <MX_TIM3_Init+0xe4>)
 8001500:	f000 f840 	bl	8001584 <HAL_TIM_MspPostInit>
 8001504:	bf00      	nop
 8001506:	3738      	adds	r7, #56	; 0x38
 8001508:	46bd      	mov	sp, r7
 800150a:	bd80      	pop	{r7, pc}
 800150c:	20000760 	.word	0x20000760
 8001510:	40000400 	.word	0x40000400

08001514 <HAL_TIM_Base_MspInit>:
 8001514:	b580      	push	{r7, lr}
 8001516:	b084      	sub	sp, #16
 8001518:	af00      	add	r7, sp, #0
 800151a:	6078      	str	r0, [r7, #4]
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001524:	d114      	bne.n	8001550 <HAL_TIM_Base_MspInit+0x3c>
 8001526:	4b15      	ldr	r3, [pc, #84]	; (800157c <HAL_TIM_Base_MspInit+0x68>)
 8001528:	69db      	ldr	r3, [r3, #28]
 800152a:	4a14      	ldr	r2, [pc, #80]	; (800157c <HAL_TIM_Base_MspInit+0x68>)
 800152c:	f043 0301 	orr.w	r3, r3, #1
 8001530:	61d3      	str	r3, [r2, #28]
 8001532:	4b12      	ldr	r3, [pc, #72]	; (800157c <HAL_TIM_Base_MspInit+0x68>)
 8001534:	69db      	ldr	r3, [r3, #28]
 8001536:	f003 0301 	and.w	r3, r3, #1
 800153a:	60fb      	str	r3, [r7, #12]
 800153c:	68fb      	ldr	r3, [r7, #12]
 800153e:	2200      	movs	r2, #0
 8001540:	2100      	movs	r1, #0
 8001542:	201c      	movs	r0, #28
 8001544:	f000 faf1 	bl	8001b2a <HAL_NVIC_SetPriority>
 8001548:	201c      	movs	r0, #28
 800154a:	f000 fb0a 	bl	8001b62 <HAL_NVIC_EnableIRQ>
 800154e:	e010      	b.n	8001572 <HAL_TIM_Base_MspInit+0x5e>
 8001550:	687b      	ldr	r3, [r7, #4]
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	4a0a      	ldr	r2, [pc, #40]	; (8001580 <HAL_TIM_Base_MspInit+0x6c>)
 8001556:	4293      	cmp	r3, r2
 8001558:	d10b      	bne.n	8001572 <HAL_TIM_Base_MspInit+0x5e>
 800155a:	4b08      	ldr	r3, [pc, #32]	; (800157c <HAL_TIM_Base_MspInit+0x68>)
 800155c:	69db      	ldr	r3, [r3, #28]
 800155e:	4a07      	ldr	r2, [pc, #28]	; (800157c <HAL_TIM_Base_MspInit+0x68>)
 8001560:	f043 0302 	orr.w	r3, r3, #2
 8001564:	61d3      	str	r3, [r2, #28]
 8001566:	4b05      	ldr	r3, [pc, #20]	; (800157c <HAL_TIM_Base_MspInit+0x68>)
 8001568:	69db      	ldr	r3, [r3, #28]
 800156a:	f003 0302 	and.w	r3, r3, #2
 800156e:	60bb      	str	r3, [r7, #8]
 8001570:	68bb      	ldr	r3, [r7, #8]
 8001572:	bf00      	nop
 8001574:	3710      	adds	r7, #16
 8001576:	46bd      	mov	sp, r7
 8001578:	bd80      	pop	{r7, pc}
 800157a:	bf00      	nop
 800157c:	40021000 	.word	0x40021000
 8001580:	40000400 	.word	0x40000400

08001584 <HAL_TIM_MspPostInit>:
 8001584:	b580      	push	{r7, lr}
 8001586:	b088      	sub	sp, #32
 8001588:	af00      	add	r7, sp, #0
 800158a:	6078      	str	r0, [r7, #4]
 800158c:	f107 0310 	add.w	r3, r7, #16
 8001590:	2200      	movs	r2, #0
 8001592:	601a      	str	r2, [r3, #0]
 8001594:	605a      	str	r2, [r3, #4]
 8001596:	609a      	str	r2, [r3, #8]
 8001598:	60da      	str	r2, [r3, #12]
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	4a0f      	ldr	r2, [pc, #60]	; (80015dc <HAL_TIM_MspPostInit+0x58>)
 80015a0:	4293      	cmp	r3, r2
 80015a2:	d117      	bne.n	80015d4 <HAL_TIM_MspPostInit+0x50>
 80015a4:	4b0e      	ldr	r3, [pc, #56]	; (80015e0 <HAL_TIM_MspPostInit+0x5c>)
 80015a6:	699b      	ldr	r3, [r3, #24]
 80015a8:	4a0d      	ldr	r2, [pc, #52]	; (80015e0 <HAL_TIM_MspPostInit+0x5c>)
 80015aa:	f043 0304 	orr.w	r3, r3, #4
 80015ae:	6193      	str	r3, [r2, #24]
 80015b0:	4b0b      	ldr	r3, [pc, #44]	; (80015e0 <HAL_TIM_MspPostInit+0x5c>)
 80015b2:	699b      	ldr	r3, [r3, #24]
 80015b4:	f003 0304 	and.w	r3, r3, #4
 80015b8:	60fb      	str	r3, [r7, #12]
 80015ba:	68fb      	ldr	r3, [r7, #12]
 80015bc:	2340      	movs	r3, #64	; 0x40
 80015be:	613b      	str	r3, [r7, #16]
 80015c0:	2302      	movs	r3, #2
 80015c2:	617b      	str	r3, [r7, #20]
 80015c4:	2302      	movs	r3, #2
 80015c6:	61fb      	str	r3, [r7, #28]
 80015c8:	f107 0310 	add.w	r3, r7, #16
 80015cc:	4619      	mov	r1, r3
 80015ce:	4805      	ldr	r0, [pc, #20]	; (80015e4 <HAL_TIM_MspPostInit+0x60>)
 80015d0:	f000 fae2 	bl	8001b98 <HAL_GPIO_Init>
 80015d4:	bf00      	nop
 80015d6:	3720      	adds	r7, #32
 80015d8:	46bd      	mov	sp, r7
 80015da:	bd80      	pop	{r7, pc}
 80015dc:	40000400 	.word	0x40000400
 80015e0:	40021000 	.word	0x40021000
 80015e4:	40010800 	.word	0x40010800

080015e8 <trafficLightBlinkGrn>:
uint16_t trafficLightPin[NUM_OF_TRAFFIC_LIGHTS][NUM_OF_PORTS] = {
		{D2_Pin, D3_Pin},
		{D4_Pin, D5_Pin}
};

void trafficLightBlinkGrn(int index) {
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 80015f0:	4a0e      	ldr	r2, [pc, #56]	; (800162c <trafficLightBlinkGrn+0x44>)
 80015f2:	687b      	ldr	r3, [r7, #4]
 80015f4:	00db      	lsls	r3, r3, #3
 80015f6:	4413      	add	r3, r2
 80015f8:	685a      	ldr	r2, [r3, #4]
 80015fa:	490d      	ldr	r1, [pc, #52]	; (8001630 <trafficLightBlinkGrn+0x48>)
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	009b      	lsls	r3, r3, #2
 8001600:	440b      	add	r3, r1
 8001602:	885b      	ldrh	r3, [r3, #2]
 8001604:	4619      	mov	r1, r3
 8001606:	4610      	mov	r0, r2
 8001608:	f000 fc79 	bl	8001efe <HAL_GPIO_TogglePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
 800160c:	4a07      	ldr	r2, [pc, #28]	; (800162c <trafficLightBlinkGrn+0x44>)
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001614:	4a06      	ldr	r2, [pc, #24]	; (8001630 <trafficLightBlinkGrn+0x48>)
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 800161c:	2200      	movs	r2, #0
 800161e:	4619      	mov	r1, r3
 8001620:	f000 fc55 	bl	8001ece <HAL_GPIO_WritePin>
}
 8001624:	bf00      	nop
 8001626:	3708      	adds	r7, #8
 8001628:	46bd      	mov	sp, r7
 800162a:	bd80      	pop	{r7, pc}
 800162c:	2000030c 	.word	0x2000030c
 8001630:	2000031c 	.word	0x2000031c

08001634 <trafficLightBlinkYel>:

void trafficLightBlinkYel(int index) {
 8001634:	b580      	push	{r7, lr}
 8001636:	b082      	sub	sp, #8
 8001638:	af00      	add	r7, sp, #0
 800163a:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT]);
 800163c:	4a0e      	ldr	r2, [pc, #56]	; (8001678 <trafficLightBlinkYel+0x44>)
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	00db      	lsls	r3, r3, #3
 8001642:	4413      	add	r3, r2
 8001644:	685a      	ldr	r2, [r3, #4]
 8001646:	490d      	ldr	r1, [pc, #52]	; (800167c <trafficLightBlinkYel+0x48>)
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	009b      	lsls	r3, r3, #2
 800164c:	440b      	add	r3, r1
 800164e:	885b      	ldrh	r3, [r3, #2]
 8001650:	4619      	mov	r1, r3
 8001652:	4610      	mov	r0, r2
 8001654:	f000 fc53 	bl	8001efe <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
 8001658:	4a07      	ldr	r2, [pc, #28]	; (8001678 <trafficLightBlinkYel+0x44>)
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8001660:	4906      	ldr	r1, [pc, #24]	; (800167c <trafficLightBlinkYel+0x48>)
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	f831 3023 	ldrh.w	r3, [r1, r3, lsl #2]
 8001668:	4619      	mov	r1, r3
 800166a:	4610      	mov	r0, r2
 800166c:	f000 fc47 	bl	8001efe <HAL_GPIO_TogglePin>
}
 8001670:	bf00      	nop
 8001672:	3708      	adds	r7, #8
 8001674:	46bd      	mov	sp, r7
 8001676:	bd80      	pop	{r7, pc}
 8001678:	2000030c 	.word	0x2000030c
 800167c:	2000031c 	.word	0x2000031c

08001680 <trafficLightGrn>:
void trafficLightBlinkRed(int index) {
	HAL_GPIO_TogglePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT]);
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
}

void trafficLightGrn(int index) {
 8001680:	b580      	push	{r7, lr}
 8001682:	b082      	sub	sp, #8
 8001684:	af00      	add	r7, sp, #0
 8001686:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], ON);
 8001688:	4a0e      	ldr	r2, [pc, #56]	; (80016c4 <trafficLightGrn+0x44>)
 800168a:	687b      	ldr	r3, [r7, #4]
 800168c:	00db      	lsls	r3, r3, #3
 800168e:	4413      	add	r3, r2
 8001690:	6858      	ldr	r0, [r3, #4]
 8001692:	4a0d      	ldr	r2, [pc, #52]	; (80016c8 <trafficLightGrn+0x48>)
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	009b      	lsls	r3, r3, #2
 8001698:	4413      	add	r3, r2
 800169a:	885b      	ldrh	r3, [r3, #2]
 800169c:	2201      	movs	r2, #1
 800169e:	4619      	mov	r1, r3
 80016a0:	f000 fc15 	bl	8001ece <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], OFF);
 80016a4:	4a07      	ldr	r2, [pc, #28]	; (80016c4 <trafficLightGrn+0x44>)
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80016ac:	4a06      	ldr	r2, [pc, #24]	; (80016c8 <trafficLightGrn+0x48>)
 80016ae:	687b      	ldr	r3, [r7, #4]
 80016b0:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 80016b4:	2200      	movs	r2, #0
 80016b6:	4619      	mov	r1, r3
 80016b8:	f000 fc09 	bl	8001ece <HAL_GPIO_WritePin>
}
 80016bc:	bf00      	nop
 80016be:	3708      	adds	r7, #8
 80016c0:	46bd      	mov	sp, r7
 80016c2:	bd80      	pop	{r7, pc}
 80016c4:	2000030c 	.word	0x2000030c
 80016c8:	2000031c 	.word	0x2000031c

080016cc <trafficLightYel>:

void trafficLightYel(int index) {
 80016cc:	b580      	push	{r7, lr}
 80016ce:	b082      	sub	sp, #8
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], ON);
 80016d4:	4a0e      	ldr	r2, [pc, #56]	; (8001710 <trafficLightYel+0x44>)
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	00db      	lsls	r3, r3, #3
 80016da:	4413      	add	r3, r2
 80016dc:	6858      	ldr	r0, [r3, #4]
 80016de:	4a0d      	ldr	r2, [pc, #52]	; (8001714 <trafficLightYel+0x48>)
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	009b      	lsls	r3, r3, #2
 80016e4:	4413      	add	r3, r2
 80016e6:	885b      	ldrh	r3, [r3, #2]
 80016e8:	2201      	movs	r2, #1
 80016ea:	4619      	mov	r1, r3
 80016ec:	f000 fbef 	bl	8001ece <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], ON);
 80016f0:	4a07      	ldr	r2, [pc, #28]	; (8001710 <trafficLightYel+0x44>)
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80016f8:	4a06      	ldr	r2, [pc, #24]	; (8001714 <trafficLightYel+0x48>)
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001700:	2201      	movs	r2, #1
 8001702:	4619      	mov	r1, r3
 8001704:	f000 fbe3 	bl	8001ece <HAL_GPIO_WritePin>
}
 8001708:	bf00      	nop
 800170a:	3708      	adds	r7, #8
 800170c:	46bd      	mov	sp, r7
 800170e:	bd80      	pop	{r7, pc}
 8001710:	2000030c 	.word	0x2000030c
 8001714:	2000031c 	.word	0x2000031c

08001718 <trafficLightRed>:

void trafficLightRed(int index) {
 8001718:	b580      	push	{r7, lr}
 800171a:	b082      	sub	sp, #8
 800171c:	af00      	add	r7, sp, #0
 800171e:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(trafficLightPort[index][RED_LIGHT], trafficLightPin[index][RED_LIGHT], ON);
 8001720:	4a0e      	ldr	r2, [pc, #56]	; (800175c <trafficLightRed+0x44>)
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001728:	4a0d      	ldr	r2, [pc, #52]	; (8001760 <trafficLightRed+0x48>)
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	f832 3023 	ldrh.w	r3, [r2, r3, lsl #2]
 8001730:	2201      	movs	r2, #1
 8001732:	4619      	mov	r1, r3
 8001734:	f000 fbcb 	bl	8001ece <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(trafficLightPort[index][GRN_LIGHT], trafficLightPin[index][GRN_LIGHT], OFF);
 8001738:	4a08      	ldr	r2, [pc, #32]	; (800175c <trafficLightRed+0x44>)
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	00db      	lsls	r3, r3, #3
 800173e:	4413      	add	r3, r2
 8001740:	6858      	ldr	r0, [r3, #4]
 8001742:	4a07      	ldr	r2, [pc, #28]	; (8001760 <trafficLightRed+0x48>)
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	009b      	lsls	r3, r3, #2
 8001748:	4413      	add	r3, r2
 800174a:	885b      	ldrh	r3, [r3, #2]
 800174c:	2200      	movs	r2, #0
 800174e:	4619      	mov	r1, r3
 8001750:	f000 fbbd 	bl	8001ece <HAL_GPIO_WritePin>
}
 8001754:	bf00      	nop
 8001756:	3708      	adds	r7, #8
 8001758:	46bd      	mov	sp, r7
 800175a:	bd80      	pop	{r7, pc}
 800175c:	2000030c 	.word	0x2000030c
 8001760:	2000031c 	.word	0x2000031c

08001764 <displayCountdown>:
 */


#include "uart_communication.h"

void displayCountdown(int value) {
 8001764:	b580      	push	{r7, lr}
 8001766:	b090      	sub	sp, #64	; 0x40
 8001768:	af00      	add	r7, sp, #0
 800176a:	6078      	str	r0, [r7, #4]
	char str[50];
	HAL_UART_Transmit(&huart2, (uint8_t *)str, sprintf(str, "!7SEG=%d#\r\n", value), 1000);
 800176c:	f107 030c 	add.w	r3, r7, #12
 8001770:	687a      	ldr	r2, [r7, #4]
 8001772:	4908      	ldr	r1, [pc, #32]	; (8001794 <displayCountdown+0x30>)
 8001774:	4618      	mov	r0, r3
 8001776:	f002 f95f 	bl	8003a38 <siprintf>
 800177a:	4603      	mov	r3, r0
 800177c:	b29a      	uxth	r2, r3
 800177e:	f107 010c 	add.w	r1, r7, #12
 8001782:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001786:	4804      	ldr	r0, [pc, #16]	; (8001798 <displayCountdown+0x34>)
 8001788:	f001 ffb9 	bl	80036fe <HAL_UART_Transmit>
}
 800178c:	bf00      	nop
 800178e:	3740      	adds	r7, #64	; 0x40
 8001790:	46bd      	mov	sp, r7
 8001792:	bd80      	pop	{r7, pc}
 8001794:	08004344 	.word	0x08004344
 8001798:	200007a8 	.word	0x200007a8

0800179c <MX_USART2_UART_Init>:
 800179c:	b580      	push	{r7, lr}
 800179e:	af00      	add	r7, sp, #0
 80017a0:	4b11      	ldr	r3, [pc, #68]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017a2:	4a12      	ldr	r2, [pc, #72]	; (80017ec <MX_USART2_UART_Init+0x50>)
 80017a4:	601a      	str	r2, [r3, #0]
 80017a6:	4b10      	ldr	r3, [pc, #64]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017a8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80017ac:	605a      	str	r2, [r3, #4]
 80017ae:	4b0e      	ldr	r3, [pc, #56]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017b0:	2200      	movs	r2, #0
 80017b2:	609a      	str	r2, [r3, #8]
 80017b4:	4b0c      	ldr	r3, [pc, #48]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017b6:	2200      	movs	r2, #0
 80017b8:	60da      	str	r2, [r3, #12]
 80017ba:	4b0b      	ldr	r3, [pc, #44]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017bc:	2200      	movs	r2, #0
 80017be:	611a      	str	r2, [r3, #16]
 80017c0:	4b09      	ldr	r3, [pc, #36]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017c2:	220c      	movs	r2, #12
 80017c4:	615a      	str	r2, [r3, #20]
 80017c6:	4b08      	ldr	r3, [pc, #32]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017c8:	2200      	movs	r2, #0
 80017ca:	619a      	str	r2, [r3, #24]
 80017cc:	4b06      	ldr	r3, [pc, #24]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017ce:	2200      	movs	r2, #0
 80017d0:	61da      	str	r2, [r3, #28]
 80017d2:	4805      	ldr	r0, [pc, #20]	; (80017e8 <MX_USART2_UART_Init+0x4c>)
 80017d4:	f001 ff46 	bl	8003664 <HAL_UART_Init>
 80017d8:	4603      	mov	r3, r0
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d001      	beq.n	80017e2 <MX_USART2_UART_Init+0x46>
 80017de:	f7ff faea 	bl	8000db6 <Error_Handler>
 80017e2:	bf00      	nop
 80017e4:	bd80      	pop	{r7, pc}
 80017e6:	bf00      	nop
 80017e8:	200007a8 	.word	0x200007a8
 80017ec:	40004400 	.word	0x40004400

080017f0 <HAL_UART_MspInit>:
 80017f0:	b580      	push	{r7, lr}
 80017f2:	b088      	sub	sp, #32
 80017f4:	af00      	add	r7, sp, #0
 80017f6:	6078      	str	r0, [r7, #4]
 80017f8:	f107 0310 	add.w	r3, r7, #16
 80017fc:	2200      	movs	r2, #0
 80017fe:	601a      	str	r2, [r3, #0]
 8001800:	605a      	str	r2, [r3, #4]
 8001802:	609a      	str	r2, [r3, #8]
 8001804:	60da      	str	r2, [r3, #12]
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	4a15      	ldr	r2, [pc, #84]	; (8001860 <HAL_UART_MspInit+0x70>)
 800180c:	4293      	cmp	r3, r2
 800180e:	d123      	bne.n	8001858 <HAL_UART_MspInit+0x68>
 8001810:	4b14      	ldr	r3, [pc, #80]	; (8001864 <HAL_UART_MspInit+0x74>)
 8001812:	69db      	ldr	r3, [r3, #28]
 8001814:	4a13      	ldr	r2, [pc, #76]	; (8001864 <HAL_UART_MspInit+0x74>)
 8001816:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800181a:	61d3      	str	r3, [r2, #28]
 800181c:	4b11      	ldr	r3, [pc, #68]	; (8001864 <HAL_UART_MspInit+0x74>)
 800181e:	69db      	ldr	r3, [r3, #28]
 8001820:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001824:	60fb      	str	r3, [r7, #12]
 8001826:	68fb      	ldr	r3, [r7, #12]
 8001828:	4b0e      	ldr	r3, [pc, #56]	; (8001864 <HAL_UART_MspInit+0x74>)
 800182a:	699b      	ldr	r3, [r3, #24]
 800182c:	4a0d      	ldr	r2, [pc, #52]	; (8001864 <HAL_UART_MspInit+0x74>)
 800182e:	f043 0304 	orr.w	r3, r3, #4
 8001832:	6193      	str	r3, [r2, #24]
 8001834:	4b0b      	ldr	r3, [pc, #44]	; (8001864 <HAL_UART_MspInit+0x74>)
 8001836:	699b      	ldr	r3, [r3, #24]
 8001838:	f003 0304 	and.w	r3, r3, #4
 800183c:	60bb      	str	r3, [r7, #8]
 800183e:	68bb      	ldr	r3, [r7, #8]
 8001840:	230c      	movs	r3, #12
 8001842:	613b      	str	r3, [r7, #16]
 8001844:	2302      	movs	r3, #2
 8001846:	617b      	str	r3, [r7, #20]
 8001848:	2302      	movs	r3, #2
 800184a:	61fb      	str	r3, [r7, #28]
 800184c:	f107 0310 	add.w	r3, r7, #16
 8001850:	4619      	mov	r1, r3
 8001852:	4805      	ldr	r0, [pc, #20]	; (8001868 <HAL_UART_MspInit+0x78>)
 8001854:	f000 f9a0 	bl	8001b98 <HAL_GPIO_Init>
 8001858:	bf00      	nop
 800185a:	3720      	adds	r7, #32
 800185c:	46bd      	mov	sp, r7
 800185e:	bd80      	pop	{r7, pc}
 8001860:	40004400 	.word	0x40004400
 8001864:	40021000 	.word	0x40021000
 8001868:	40010800 	.word	0x40010800

0800186c <Reset_Handler>:
 800186c:	480c      	ldr	r0, [pc, #48]	; (80018a0 <LoopFillZerobss+0x12>)
 800186e:	490d      	ldr	r1, [pc, #52]	; (80018a4 <LoopFillZerobss+0x16>)
 8001870:	4a0d      	ldr	r2, [pc, #52]	; (80018a8 <LoopFillZerobss+0x1a>)
 8001872:	2300      	movs	r3, #0
 8001874:	e002      	b.n	800187c <LoopCopyDataInit>

08001876 <CopyDataInit>:
 8001876:	58d4      	ldr	r4, [r2, r3]
 8001878:	50c4      	str	r4, [r0, r3]
 800187a:	3304      	adds	r3, #4

0800187c <LoopCopyDataInit>:
 800187c:	18c4      	adds	r4, r0, r3
 800187e:	428c      	cmp	r4, r1
 8001880:	d3f9      	bcc.n	8001876 <CopyDataInit>
 8001882:	4a0a      	ldr	r2, [pc, #40]	; (80018ac <LoopFillZerobss+0x1e>)
 8001884:	4c0a      	ldr	r4, [pc, #40]	; (80018b0 <LoopFillZerobss+0x22>)
 8001886:	2300      	movs	r3, #0
 8001888:	e001      	b.n	800188e <LoopFillZerobss>

0800188a <FillZerobss>:
 800188a:	6013      	str	r3, [r2, #0]
 800188c:	3204      	adds	r2, #4

0800188e <LoopFillZerobss>:
 800188e:	42a2      	cmp	r2, r4
 8001890:	d3fb      	bcc.n	800188a <FillZerobss>
 8001892:	f7ff fd77 	bl	8001384 <SystemInit>
 8001896:	f002 f8a3 	bl	80039e0 <__libc_init_array>
 800189a:	f7ff f9f5 	bl	8000c88 <main>
 800189e:	4770      	bx	lr
 80018a0:	20000000 	.word	0x20000000
 80018a4:	20000390 	.word	0x20000390
 80018a8:	080043b4 	.word	0x080043b4
 80018ac:	20000390 	.word	0x20000390
 80018b0:	20000800 	.word	0x20000800

080018b4 <ADC1_2_IRQHandler>:
 80018b4:	e7fe      	b.n	80018b4 <ADC1_2_IRQHandler>
	...

080018b8 <HAL_Init>:
 80018b8:	b580      	push	{r7, lr}
 80018ba:	af00      	add	r7, sp, #0
 80018bc:	4b08      	ldr	r3, [pc, #32]	; (80018e0 <HAL_Init+0x28>)
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	4a07      	ldr	r2, [pc, #28]	; (80018e0 <HAL_Init+0x28>)
 80018c2:	f043 0310 	orr.w	r3, r3, #16
 80018c6:	6013      	str	r3, [r2, #0]
 80018c8:	2003      	movs	r0, #3
 80018ca:	f000 f923 	bl	8001b14 <HAL_NVIC_SetPriorityGrouping>
 80018ce:	2000      	movs	r0, #0
 80018d0:	f000 f808 	bl	80018e4 <HAL_InitTick>
 80018d4:	f7ff fcb4 	bl	8001240 <HAL_MspInit>
 80018d8:	2300      	movs	r3, #0
 80018da:	4618      	mov	r0, r3
 80018dc:	bd80      	pop	{r7, pc}
 80018de:	bf00      	nop
 80018e0:	40022000 	.word	0x40022000

080018e4 <HAL_InitTick>:
 80018e4:	b580      	push	{r7, lr}
 80018e6:	b082      	sub	sp, #8
 80018e8:	af00      	add	r7, sp, #0
 80018ea:	6078      	str	r0, [r7, #4]
 80018ec:	4b12      	ldr	r3, [pc, #72]	; (8001938 <HAL_InitTick+0x54>)
 80018ee:	681a      	ldr	r2, [r3, #0]
 80018f0:	4b12      	ldr	r3, [pc, #72]	; (800193c <HAL_InitTick+0x58>)
 80018f2:	781b      	ldrb	r3, [r3, #0]
 80018f4:	4619      	mov	r1, r3
 80018f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80018fa:	fbb3 f3f1 	udiv	r3, r3, r1
 80018fe:	fbb2 f3f3 	udiv	r3, r2, r3
 8001902:	4618      	mov	r0, r3
 8001904:	f000 f93b 	bl	8001b7e <HAL_SYSTICK_Config>
 8001908:	4603      	mov	r3, r0
 800190a:	2b00      	cmp	r3, #0
 800190c:	d001      	beq.n	8001912 <HAL_InitTick+0x2e>
 800190e:	2301      	movs	r3, #1
 8001910:	e00e      	b.n	8001930 <HAL_InitTick+0x4c>
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	2b0f      	cmp	r3, #15
 8001916:	d80a      	bhi.n	800192e <HAL_InitTick+0x4a>
 8001918:	2200      	movs	r2, #0
 800191a:	6879      	ldr	r1, [r7, #4]
 800191c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001920:	f000 f903 	bl	8001b2a <HAL_NVIC_SetPriority>
 8001924:	4a06      	ldr	r2, [pc, #24]	; (8001940 <HAL_InitTick+0x5c>)
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	6013      	str	r3, [r2, #0]
 800192a:	2300      	movs	r3, #0
 800192c:	e000      	b.n	8001930 <HAL_InitTick+0x4c>
 800192e:	2301      	movs	r3, #1
 8001930:	4618      	mov	r0, r3
 8001932:	3708      	adds	r7, #8
 8001934:	46bd      	mov	sp, r7
 8001936:	bd80      	pop	{r7, pc}
 8001938:	20000308 	.word	0x20000308
 800193c:	20000328 	.word	0x20000328
 8001940:	20000324 	.word	0x20000324

08001944 <HAL_IncTick>:
 8001944:	b480      	push	{r7}
 8001946:	af00      	add	r7, sp, #0
 8001948:	4b05      	ldr	r3, [pc, #20]	; (8001960 <HAL_IncTick+0x1c>)
 800194a:	781b      	ldrb	r3, [r3, #0]
 800194c:	461a      	mov	r2, r3
 800194e:	4b05      	ldr	r3, [pc, #20]	; (8001964 <HAL_IncTick+0x20>)
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	4413      	add	r3, r2
 8001954:	4a03      	ldr	r2, [pc, #12]	; (8001964 <HAL_IncTick+0x20>)
 8001956:	6013      	str	r3, [r2, #0]
 8001958:	bf00      	nop
 800195a:	46bd      	mov	sp, r7
 800195c:	bc80      	pop	{r7}
 800195e:	4770      	bx	lr
 8001960:	20000328 	.word	0x20000328
 8001964:	200007ec 	.word	0x200007ec

08001968 <HAL_GetTick>:
 8001968:	b480      	push	{r7}
 800196a:	af00      	add	r7, sp, #0
 800196c:	4b02      	ldr	r3, [pc, #8]	; (8001978 <HAL_GetTick+0x10>)
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	4618      	mov	r0, r3
 8001972:	46bd      	mov	sp, r7
 8001974:	bc80      	pop	{r7}
 8001976:	4770      	bx	lr
 8001978:	200007ec 	.word	0x200007ec

0800197c <__NVIC_SetPriorityGrouping>:
 800197c:	b480      	push	{r7}
 800197e:	b085      	sub	sp, #20
 8001980:	af00      	add	r7, sp, #0
 8001982:	6078      	str	r0, [r7, #4]
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	f003 0307 	and.w	r3, r3, #7
 800198a:	60fb      	str	r3, [r7, #12]
 800198c:	4b0c      	ldr	r3, [pc, #48]	; (80019c0 <__NVIC_SetPriorityGrouping+0x44>)
 800198e:	68db      	ldr	r3, [r3, #12]
 8001990:	60bb      	str	r3, [r7, #8]
 8001992:	68ba      	ldr	r2, [r7, #8]
 8001994:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001998:	4013      	ands	r3, r2
 800199a:	60bb      	str	r3, [r7, #8]
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	021a      	lsls	r2, r3, #8
 80019a0:	68bb      	ldr	r3, [r7, #8]
 80019a2:	4313      	orrs	r3, r2
 80019a4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80019a8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80019ac:	60bb      	str	r3, [r7, #8]
 80019ae:	4a04      	ldr	r2, [pc, #16]	; (80019c0 <__NVIC_SetPriorityGrouping+0x44>)
 80019b0:	68bb      	ldr	r3, [r7, #8]
 80019b2:	60d3      	str	r3, [r2, #12]
 80019b4:	bf00      	nop
 80019b6:	3714      	adds	r7, #20
 80019b8:	46bd      	mov	sp, r7
 80019ba:	bc80      	pop	{r7}
 80019bc:	4770      	bx	lr
 80019be:	bf00      	nop
 80019c0:	e000ed00 	.word	0xe000ed00

080019c4 <__NVIC_GetPriorityGrouping>:
 80019c4:	b480      	push	{r7}
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	4b04      	ldr	r3, [pc, #16]	; (80019dc <__NVIC_GetPriorityGrouping+0x18>)
 80019ca:	68db      	ldr	r3, [r3, #12]
 80019cc:	0a1b      	lsrs	r3, r3, #8
 80019ce:	f003 0307 	and.w	r3, r3, #7
 80019d2:	4618      	mov	r0, r3
 80019d4:	46bd      	mov	sp, r7
 80019d6:	bc80      	pop	{r7}
 80019d8:	4770      	bx	lr
 80019da:	bf00      	nop
 80019dc:	e000ed00 	.word	0xe000ed00

080019e0 <__NVIC_EnableIRQ>:
 80019e0:	b480      	push	{r7}
 80019e2:	b083      	sub	sp, #12
 80019e4:	af00      	add	r7, sp, #0
 80019e6:	4603      	mov	r3, r0
 80019e8:	71fb      	strb	r3, [r7, #7]
 80019ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019ee:	2b00      	cmp	r3, #0
 80019f0:	db0b      	blt.n	8001a0a <__NVIC_EnableIRQ+0x2a>
 80019f2:	79fb      	ldrb	r3, [r7, #7]
 80019f4:	f003 021f 	and.w	r2, r3, #31
 80019f8:	4906      	ldr	r1, [pc, #24]	; (8001a14 <__NVIC_EnableIRQ+0x34>)
 80019fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019fe:	095b      	lsrs	r3, r3, #5
 8001a00:	2001      	movs	r0, #1
 8001a02:	fa00 f202 	lsl.w	r2, r0, r2
 8001a06:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a0a:	bf00      	nop
 8001a0c:	370c      	adds	r7, #12
 8001a0e:	46bd      	mov	sp, r7
 8001a10:	bc80      	pop	{r7}
 8001a12:	4770      	bx	lr
 8001a14:	e000e100 	.word	0xe000e100

08001a18 <__NVIC_SetPriority>:
 8001a18:	b480      	push	{r7}
 8001a1a:	b083      	sub	sp, #12
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	4603      	mov	r3, r0
 8001a20:	6039      	str	r1, [r7, #0]
 8001a22:	71fb      	strb	r3, [r7, #7]
 8001a24:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a28:	2b00      	cmp	r3, #0
 8001a2a:	db0a      	blt.n	8001a42 <__NVIC_SetPriority+0x2a>
 8001a2c:	683b      	ldr	r3, [r7, #0]
 8001a2e:	b2da      	uxtb	r2, r3
 8001a30:	490c      	ldr	r1, [pc, #48]	; (8001a64 <__NVIC_SetPriority+0x4c>)
 8001a32:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a36:	0112      	lsls	r2, r2, #4
 8001a38:	b2d2      	uxtb	r2, r2
 8001a3a:	440b      	add	r3, r1
 8001a3c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001a40:	e00a      	b.n	8001a58 <__NVIC_SetPriority+0x40>
 8001a42:	683b      	ldr	r3, [r7, #0]
 8001a44:	b2da      	uxtb	r2, r3
 8001a46:	4908      	ldr	r1, [pc, #32]	; (8001a68 <__NVIC_SetPriority+0x50>)
 8001a48:	79fb      	ldrb	r3, [r7, #7]
 8001a4a:	f003 030f 	and.w	r3, r3, #15
 8001a4e:	3b04      	subs	r3, #4
 8001a50:	0112      	lsls	r2, r2, #4
 8001a52:	b2d2      	uxtb	r2, r2
 8001a54:	440b      	add	r3, r1
 8001a56:	761a      	strb	r2, [r3, #24]
 8001a58:	bf00      	nop
 8001a5a:	370c      	adds	r7, #12
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	bc80      	pop	{r7}
 8001a60:	4770      	bx	lr
 8001a62:	bf00      	nop
 8001a64:	e000e100 	.word	0xe000e100
 8001a68:	e000ed00 	.word	0xe000ed00

08001a6c <NVIC_EncodePriority>:
 8001a6c:	b480      	push	{r7}
 8001a6e:	b089      	sub	sp, #36	; 0x24
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	60f8      	str	r0, [r7, #12]
 8001a74:	60b9      	str	r1, [r7, #8]
 8001a76:	607a      	str	r2, [r7, #4]
 8001a78:	68fb      	ldr	r3, [r7, #12]
 8001a7a:	f003 0307 	and.w	r3, r3, #7
 8001a7e:	61fb      	str	r3, [r7, #28]
 8001a80:	69fb      	ldr	r3, [r7, #28]
 8001a82:	f1c3 0307 	rsb	r3, r3, #7
 8001a86:	2b04      	cmp	r3, #4
 8001a88:	bf28      	it	cs
 8001a8a:	2304      	movcs	r3, #4
 8001a8c:	61bb      	str	r3, [r7, #24]
 8001a8e:	69fb      	ldr	r3, [r7, #28]
 8001a90:	3304      	adds	r3, #4
 8001a92:	2b06      	cmp	r3, #6
 8001a94:	d902      	bls.n	8001a9c <NVIC_EncodePriority+0x30>
 8001a96:	69fb      	ldr	r3, [r7, #28]
 8001a98:	3b03      	subs	r3, #3
 8001a9a:	e000      	b.n	8001a9e <NVIC_EncodePriority+0x32>
 8001a9c:	2300      	movs	r3, #0
 8001a9e:	617b      	str	r3, [r7, #20]
 8001aa0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001aa4:	69bb      	ldr	r3, [r7, #24]
 8001aa6:	fa02 f303 	lsl.w	r3, r2, r3
 8001aaa:	43da      	mvns	r2, r3
 8001aac:	68bb      	ldr	r3, [r7, #8]
 8001aae:	401a      	ands	r2, r3
 8001ab0:	697b      	ldr	r3, [r7, #20]
 8001ab2:	409a      	lsls	r2, r3
 8001ab4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001ab8:	697b      	ldr	r3, [r7, #20]
 8001aba:	fa01 f303 	lsl.w	r3, r1, r3
 8001abe:	43d9      	mvns	r1, r3
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	400b      	ands	r3, r1
 8001ac4:	4313      	orrs	r3, r2
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	3724      	adds	r7, #36	; 0x24
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bc80      	pop	{r7}
 8001ace:	4770      	bx	lr

08001ad0 <SysTick_Config>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	b082      	sub	sp, #8
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	6078      	str	r0, [r7, #4]
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	3b01      	subs	r3, #1
 8001adc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001ae0:	d301      	bcc.n	8001ae6 <SysTick_Config+0x16>
 8001ae2:	2301      	movs	r3, #1
 8001ae4:	e00f      	b.n	8001b06 <SysTick_Config+0x36>
 8001ae6:	4a0a      	ldr	r2, [pc, #40]	; (8001b10 <SysTick_Config+0x40>)
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	3b01      	subs	r3, #1
 8001aec:	6053      	str	r3, [r2, #4]
 8001aee:	210f      	movs	r1, #15
 8001af0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001af4:	f7ff ff90 	bl	8001a18 <__NVIC_SetPriority>
 8001af8:	4b05      	ldr	r3, [pc, #20]	; (8001b10 <SysTick_Config+0x40>)
 8001afa:	2200      	movs	r2, #0
 8001afc:	609a      	str	r2, [r3, #8]
 8001afe:	4b04      	ldr	r3, [pc, #16]	; (8001b10 <SysTick_Config+0x40>)
 8001b00:	2207      	movs	r2, #7
 8001b02:	601a      	str	r2, [r3, #0]
 8001b04:	2300      	movs	r3, #0
 8001b06:	4618      	mov	r0, r3
 8001b08:	3708      	adds	r7, #8
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	bd80      	pop	{r7, pc}
 8001b0e:	bf00      	nop
 8001b10:	e000e010 	.word	0xe000e010

08001b14 <HAL_NVIC_SetPriorityGrouping>:
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b082      	sub	sp, #8
 8001b18:	af00      	add	r7, sp, #0
 8001b1a:	6078      	str	r0, [r7, #4]
 8001b1c:	6878      	ldr	r0, [r7, #4]
 8001b1e:	f7ff ff2d 	bl	800197c <__NVIC_SetPriorityGrouping>
 8001b22:	bf00      	nop
 8001b24:	3708      	adds	r7, #8
 8001b26:	46bd      	mov	sp, r7
 8001b28:	bd80      	pop	{r7, pc}

08001b2a <HAL_NVIC_SetPriority>:
 8001b2a:	b580      	push	{r7, lr}
 8001b2c:	b086      	sub	sp, #24
 8001b2e:	af00      	add	r7, sp, #0
 8001b30:	4603      	mov	r3, r0
 8001b32:	60b9      	str	r1, [r7, #8]
 8001b34:	607a      	str	r2, [r7, #4]
 8001b36:	73fb      	strb	r3, [r7, #15]
 8001b38:	2300      	movs	r3, #0
 8001b3a:	617b      	str	r3, [r7, #20]
 8001b3c:	f7ff ff42 	bl	80019c4 <__NVIC_GetPriorityGrouping>
 8001b40:	6178      	str	r0, [r7, #20]
 8001b42:	687a      	ldr	r2, [r7, #4]
 8001b44:	68b9      	ldr	r1, [r7, #8]
 8001b46:	6978      	ldr	r0, [r7, #20]
 8001b48:	f7ff ff90 	bl	8001a6c <NVIC_EncodePriority>
 8001b4c:	4602      	mov	r2, r0
 8001b4e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b52:	4611      	mov	r1, r2
 8001b54:	4618      	mov	r0, r3
 8001b56:	f7ff ff5f 	bl	8001a18 <__NVIC_SetPriority>
 8001b5a:	bf00      	nop
 8001b5c:	3718      	adds	r7, #24
 8001b5e:	46bd      	mov	sp, r7
 8001b60:	bd80      	pop	{r7, pc}

08001b62 <HAL_NVIC_EnableIRQ>:
 8001b62:	b580      	push	{r7, lr}
 8001b64:	b082      	sub	sp, #8
 8001b66:	af00      	add	r7, sp, #0
 8001b68:	4603      	mov	r3, r0
 8001b6a:	71fb      	strb	r3, [r7, #7]
 8001b6c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b70:	4618      	mov	r0, r3
 8001b72:	f7ff ff35 	bl	80019e0 <__NVIC_EnableIRQ>
 8001b76:	bf00      	nop
 8001b78:	3708      	adds	r7, #8
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}

08001b7e <HAL_SYSTICK_Config>:
 8001b7e:	b580      	push	{r7, lr}
 8001b80:	b082      	sub	sp, #8
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	6078      	str	r0, [r7, #4]
 8001b86:	6878      	ldr	r0, [r7, #4]
 8001b88:	f7ff ffa2 	bl	8001ad0 <SysTick_Config>
 8001b8c:	4603      	mov	r3, r0
 8001b8e:	4618      	mov	r0, r3
 8001b90:	3708      	adds	r7, #8
 8001b92:	46bd      	mov	sp, r7
 8001b94:	bd80      	pop	{r7, pc}
	...

08001b98 <HAL_GPIO_Init>:
 8001b98:	b480      	push	{r7}
 8001b9a:	b08b      	sub	sp, #44	; 0x2c
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
 8001ba0:	6039      	str	r1, [r7, #0]
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	627b      	str	r3, [r7, #36]	; 0x24
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	623b      	str	r3, [r7, #32]
 8001baa:	e169      	b.n	8001e80 <HAL_GPIO_Init+0x2e8>
 8001bac:	2201      	movs	r2, #1
 8001bae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bb0:	fa02 f303 	lsl.w	r3, r2, r3
 8001bb4:	61fb      	str	r3, [r7, #28]
 8001bb6:	683b      	ldr	r3, [r7, #0]
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	69fa      	ldr	r2, [r7, #28]
 8001bbc:	4013      	ands	r3, r2
 8001bbe:	61bb      	str	r3, [r7, #24]
 8001bc0:	69ba      	ldr	r2, [r7, #24]
 8001bc2:	69fb      	ldr	r3, [r7, #28]
 8001bc4:	429a      	cmp	r2, r3
 8001bc6:	f040 8158 	bne.w	8001e7a <HAL_GPIO_Init+0x2e2>
 8001bca:	683b      	ldr	r3, [r7, #0]
 8001bcc:	685b      	ldr	r3, [r3, #4]
 8001bce:	4a9a      	ldr	r2, [pc, #616]	; (8001e38 <HAL_GPIO_Init+0x2a0>)
 8001bd0:	4293      	cmp	r3, r2
 8001bd2:	d05e      	beq.n	8001c92 <HAL_GPIO_Init+0xfa>
 8001bd4:	4a98      	ldr	r2, [pc, #608]	; (8001e38 <HAL_GPIO_Init+0x2a0>)
 8001bd6:	4293      	cmp	r3, r2
 8001bd8:	d875      	bhi.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001bda:	4a98      	ldr	r2, [pc, #608]	; (8001e3c <HAL_GPIO_Init+0x2a4>)
 8001bdc:	4293      	cmp	r3, r2
 8001bde:	d058      	beq.n	8001c92 <HAL_GPIO_Init+0xfa>
 8001be0:	4a96      	ldr	r2, [pc, #600]	; (8001e3c <HAL_GPIO_Init+0x2a4>)
 8001be2:	4293      	cmp	r3, r2
 8001be4:	d86f      	bhi.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001be6:	4a96      	ldr	r2, [pc, #600]	; (8001e40 <HAL_GPIO_Init+0x2a8>)
 8001be8:	4293      	cmp	r3, r2
 8001bea:	d052      	beq.n	8001c92 <HAL_GPIO_Init+0xfa>
 8001bec:	4a94      	ldr	r2, [pc, #592]	; (8001e40 <HAL_GPIO_Init+0x2a8>)
 8001bee:	4293      	cmp	r3, r2
 8001bf0:	d869      	bhi.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001bf2:	4a94      	ldr	r2, [pc, #592]	; (8001e44 <HAL_GPIO_Init+0x2ac>)
 8001bf4:	4293      	cmp	r3, r2
 8001bf6:	d04c      	beq.n	8001c92 <HAL_GPIO_Init+0xfa>
 8001bf8:	4a92      	ldr	r2, [pc, #584]	; (8001e44 <HAL_GPIO_Init+0x2ac>)
 8001bfa:	4293      	cmp	r3, r2
 8001bfc:	d863      	bhi.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001bfe:	4a92      	ldr	r2, [pc, #584]	; (8001e48 <HAL_GPIO_Init+0x2b0>)
 8001c00:	4293      	cmp	r3, r2
 8001c02:	d046      	beq.n	8001c92 <HAL_GPIO_Init+0xfa>
 8001c04:	4a90      	ldr	r2, [pc, #576]	; (8001e48 <HAL_GPIO_Init+0x2b0>)
 8001c06:	4293      	cmp	r3, r2
 8001c08:	d85d      	bhi.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001c0a:	2b12      	cmp	r3, #18
 8001c0c:	d82a      	bhi.n	8001c64 <HAL_GPIO_Init+0xcc>
 8001c0e:	2b12      	cmp	r3, #18
 8001c10:	d859      	bhi.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001c12:	a201      	add	r2, pc, #4	; (adr r2, 8001c18 <HAL_GPIO_Init+0x80>)
 8001c14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001c18:	08001c93 	.word	0x08001c93
 8001c1c:	08001c6d 	.word	0x08001c6d
 8001c20:	08001c7f 	.word	0x08001c7f
 8001c24:	08001cc1 	.word	0x08001cc1
 8001c28:	08001cc7 	.word	0x08001cc7
 8001c2c:	08001cc7 	.word	0x08001cc7
 8001c30:	08001cc7 	.word	0x08001cc7
 8001c34:	08001cc7 	.word	0x08001cc7
 8001c38:	08001cc7 	.word	0x08001cc7
 8001c3c:	08001cc7 	.word	0x08001cc7
 8001c40:	08001cc7 	.word	0x08001cc7
 8001c44:	08001cc7 	.word	0x08001cc7
 8001c48:	08001cc7 	.word	0x08001cc7
 8001c4c:	08001cc7 	.word	0x08001cc7
 8001c50:	08001cc7 	.word	0x08001cc7
 8001c54:	08001cc7 	.word	0x08001cc7
 8001c58:	08001cc7 	.word	0x08001cc7
 8001c5c:	08001c75 	.word	0x08001c75
 8001c60:	08001c89 	.word	0x08001c89
 8001c64:	4a79      	ldr	r2, [pc, #484]	; (8001e4c <HAL_GPIO_Init+0x2b4>)
 8001c66:	4293      	cmp	r3, r2
 8001c68:	d013      	beq.n	8001c92 <HAL_GPIO_Init+0xfa>
 8001c6a:	e02c      	b.n	8001cc6 <HAL_GPIO_Init+0x12e>
 8001c6c:	683b      	ldr	r3, [r7, #0]
 8001c6e:	68db      	ldr	r3, [r3, #12]
 8001c70:	623b      	str	r3, [r7, #32]
 8001c72:	e029      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001c74:	683b      	ldr	r3, [r7, #0]
 8001c76:	68db      	ldr	r3, [r3, #12]
 8001c78:	3304      	adds	r3, #4
 8001c7a:	623b      	str	r3, [r7, #32]
 8001c7c:	e024      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001c7e:	683b      	ldr	r3, [r7, #0]
 8001c80:	68db      	ldr	r3, [r3, #12]
 8001c82:	3308      	adds	r3, #8
 8001c84:	623b      	str	r3, [r7, #32]
 8001c86:	e01f      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001c88:	683b      	ldr	r3, [r7, #0]
 8001c8a:	68db      	ldr	r3, [r3, #12]
 8001c8c:	330c      	adds	r3, #12
 8001c8e:	623b      	str	r3, [r7, #32]
 8001c90:	e01a      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001c92:	683b      	ldr	r3, [r7, #0]
 8001c94:	689b      	ldr	r3, [r3, #8]
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	d102      	bne.n	8001ca0 <HAL_GPIO_Init+0x108>
 8001c9a:	2304      	movs	r3, #4
 8001c9c:	623b      	str	r3, [r7, #32]
 8001c9e:	e013      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001ca0:	683b      	ldr	r3, [r7, #0]
 8001ca2:	689b      	ldr	r3, [r3, #8]
 8001ca4:	2b01      	cmp	r3, #1
 8001ca6:	d105      	bne.n	8001cb4 <HAL_GPIO_Init+0x11c>
 8001ca8:	2308      	movs	r3, #8
 8001caa:	623b      	str	r3, [r7, #32]
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	69fa      	ldr	r2, [r7, #28]
 8001cb0:	611a      	str	r2, [r3, #16]
 8001cb2:	e009      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001cb4:	2308      	movs	r3, #8
 8001cb6:	623b      	str	r3, [r7, #32]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	69fa      	ldr	r2, [r7, #28]
 8001cbc:	615a      	str	r2, [r3, #20]
 8001cbe:	e003      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	623b      	str	r3, [r7, #32]
 8001cc4:	e000      	b.n	8001cc8 <HAL_GPIO_Init+0x130>
 8001cc6:	bf00      	nop
 8001cc8:	69bb      	ldr	r3, [r7, #24]
 8001cca:	2bff      	cmp	r3, #255	; 0xff
 8001ccc:	d801      	bhi.n	8001cd2 <HAL_GPIO_Init+0x13a>
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	e001      	b.n	8001cd6 <HAL_GPIO_Init+0x13e>
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	3304      	adds	r3, #4
 8001cd6:	617b      	str	r3, [r7, #20]
 8001cd8:	69bb      	ldr	r3, [r7, #24]
 8001cda:	2bff      	cmp	r3, #255	; 0xff
 8001cdc:	d802      	bhi.n	8001ce4 <HAL_GPIO_Init+0x14c>
 8001cde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ce0:	009b      	lsls	r3, r3, #2
 8001ce2:	e002      	b.n	8001cea <HAL_GPIO_Init+0x152>
 8001ce4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ce6:	3b08      	subs	r3, #8
 8001ce8:	009b      	lsls	r3, r3, #2
 8001cea:	613b      	str	r3, [r7, #16]
 8001cec:	697b      	ldr	r3, [r7, #20]
 8001cee:	681a      	ldr	r2, [r3, #0]
 8001cf0:	210f      	movs	r1, #15
 8001cf2:	693b      	ldr	r3, [r7, #16]
 8001cf4:	fa01 f303 	lsl.w	r3, r1, r3
 8001cf8:	43db      	mvns	r3, r3
 8001cfa:	401a      	ands	r2, r3
 8001cfc:	6a39      	ldr	r1, [r7, #32]
 8001cfe:	693b      	ldr	r3, [r7, #16]
 8001d00:	fa01 f303 	lsl.w	r3, r1, r3
 8001d04:	431a      	orrs	r2, r3
 8001d06:	697b      	ldr	r3, [r7, #20]
 8001d08:	601a      	str	r2, [r3, #0]
 8001d0a:	683b      	ldr	r3, [r7, #0]
 8001d0c:	685b      	ldr	r3, [r3, #4]
 8001d0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d12:	2b00      	cmp	r3, #0
 8001d14:	f000 80b1 	beq.w	8001e7a <HAL_GPIO_Init+0x2e2>
 8001d18:	4b4d      	ldr	r3, [pc, #308]	; (8001e50 <HAL_GPIO_Init+0x2b8>)
 8001d1a:	699b      	ldr	r3, [r3, #24]
 8001d1c:	4a4c      	ldr	r2, [pc, #304]	; (8001e50 <HAL_GPIO_Init+0x2b8>)
 8001d1e:	f043 0301 	orr.w	r3, r3, #1
 8001d22:	6193      	str	r3, [r2, #24]
 8001d24:	4b4a      	ldr	r3, [pc, #296]	; (8001e50 <HAL_GPIO_Init+0x2b8>)
 8001d26:	699b      	ldr	r3, [r3, #24]
 8001d28:	f003 0301 	and.w	r3, r3, #1
 8001d2c:	60bb      	str	r3, [r7, #8]
 8001d2e:	68bb      	ldr	r3, [r7, #8]
 8001d30:	4a48      	ldr	r2, [pc, #288]	; (8001e54 <HAL_GPIO_Init+0x2bc>)
 8001d32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d34:	089b      	lsrs	r3, r3, #2
 8001d36:	3302      	adds	r3, #2
 8001d38:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d3c:	60fb      	str	r3, [r7, #12]
 8001d3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d40:	f003 0303 	and.w	r3, r3, #3
 8001d44:	009b      	lsls	r3, r3, #2
 8001d46:	220f      	movs	r2, #15
 8001d48:	fa02 f303 	lsl.w	r3, r2, r3
 8001d4c:	43db      	mvns	r3, r3
 8001d4e:	68fa      	ldr	r2, [r7, #12]
 8001d50:	4013      	ands	r3, r2
 8001d52:	60fb      	str	r3, [r7, #12]
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	4a40      	ldr	r2, [pc, #256]	; (8001e58 <HAL_GPIO_Init+0x2c0>)
 8001d58:	4293      	cmp	r3, r2
 8001d5a:	d013      	beq.n	8001d84 <HAL_GPIO_Init+0x1ec>
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	4a3f      	ldr	r2, [pc, #252]	; (8001e5c <HAL_GPIO_Init+0x2c4>)
 8001d60:	4293      	cmp	r3, r2
 8001d62:	d00d      	beq.n	8001d80 <HAL_GPIO_Init+0x1e8>
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	4a3e      	ldr	r2, [pc, #248]	; (8001e60 <HAL_GPIO_Init+0x2c8>)
 8001d68:	4293      	cmp	r3, r2
 8001d6a:	d007      	beq.n	8001d7c <HAL_GPIO_Init+0x1e4>
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	4a3d      	ldr	r2, [pc, #244]	; (8001e64 <HAL_GPIO_Init+0x2cc>)
 8001d70:	4293      	cmp	r3, r2
 8001d72:	d101      	bne.n	8001d78 <HAL_GPIO_Init+0x1e0>
 8001d74:	2303      	movs	r3, #3
 8001d76:	e006      	b.n	8001d86 <HAL_GPIO_Init+0x1ee>
 8001d78:	2304      	movs	r3, #4
 8001d7a:	e004      	b.n	8001d86 <HAL_GPIO_Init+0x1ee>
 8001d7c:	2302      	movs	r3, #2
 8001d7e:	e002      	b.n	8001d86 <HAL_GPIO_Init+0x1ee>
 8001d80:	2301      	movs	r3, #1
 8001d82:	e000      	b.n	8001d86 <HAL_GPIO_Init+0x1ee>
 8001d84:	2300      	movs	r3, #0
 8001d86:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001d88:	f002 0203 	and.w	r2, r2, #3
 8001d8c:	0092      	lsls	r2, r2, #2
 8001d8e:	4093      	lsls	r3, r2
 8001d90:	68fa      	ldr	r2, [r7, #12]
 8001d92:	4313      	orrs	r3, r2
 8001d94:	60fb      	str	r3, [r7, #12]
 8001d96:	492f      	ldr	r1, [pc, #188]	; (8001e54 <HAL_GPIO_Init+0x2bc>)
 8001d98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d9a:	089b      	lsrs	r3, r3, #2
 8001d9c:	3302      	adds	r3, #2
 8001d9e:	68fa      	ldr	r2, [r7, #12]
 8001da0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001da4:	683b      	ldr	r3, [r7, #0]
 8001da6:	685b      	ldr	r3, [r3, #4]
 8001da8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d006      	beq.n	8001dbe <HAL_GPIO_Init+0x226>
 8001db0:	4b2d      	ldr	r3, [pc, #180]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001db2:	681a      	ldr	r2, [r3, #0]
 8001db4:	492c      	ldr	r1, [pc, #176]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001db6:	69bb      	ldr	r3, [r7, #24]
 8001db8:	4313      	orrs	r3, r2
 8001dba:	600b      	str	r3, [r1, #0]
 8001dbc:	e006      	b.n	8001dcc <HAL_GPIO_Init+0x234>
 8001dbe:	4b2a      	ldr	r3, [pc, #168]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001dc0:	681a      	ldr	r2, [r3, #0]
 8001dc2:	69bb      	ldr	r3, [r7, #24]
 8001dc4:	43db      	mvns	r3, r3
 8001dc6:	4928      	ldr	r1, [pc, #160]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001dc8:	4013      	ands	r3, r2
 8001dca:	600b      	str	r3, [r1, #0]
 8001dcc:	683b      	ldr	r3, [r7, #0]
 8001dce:	685b      	ldr	r3, [r3, #4]
 8001dd0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d006      	beq.n	8001de6 <HAL_GPIO_Init+0x24e>
 8001dd8:	4b23      	ldr	r3, [pc, #140]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001dda:	685a      	ldr	r2, [r3, #4]
 8001ddc:	4922      	ldr	r1, [pc, #136]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001dde:	69bb      	ldr	r3, [r7, #24]
 8001de0:	4313      	orrs	r3, r2
 8001de2:	604b      	str	r3, [r1, #4]
 8001de4:	e006      	b.n	8001df4 <HAL_GPIO_Init+0x25c>
 8001de6:	4b20      	ldr	r3, [pc, #128]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001de8:	685a      	ldr	r2, [r3, #4]
 8001dea:	69bb      	ldr	r3, [r7, #24]
 8001dec:	43db      	mvns	r3, r3
 8001dee:	491e      	ldr	r1, [pc, #120]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001df0:	4013      	ands	r3, r2
 8001df2:	604b      	str	r3, [r1, #4]
 8001df4:	683b      	ldr	r3, [r7, #0]
 8001df6:	685b      	ldr	r3, [r3, #4]
 8001df8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001dfc:	2b00      	cmp	r3, #0
 8001dfe:	d006      	beq.n	8001e0e <HAL_GPIO_Init+0x276>
 8001e00:	4b19      	ldr	r3, [pc, #100]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001e02:	689a      	ldr	r2, [r3, #8]
 8001e04:	4918      	ldr	r1, [pc, #96]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001e06:	69bb      	ldr	r3, [r7, #24]
 8001e08:	4313      	orrs	r3, r2
 8001e0a:	608b      	str	r3, [r1, #8]
 8001e0c:	e006      	b.n	8001e1c <HAL_GPIO_Init+0x284>
 8001e0e:	4b16      	ldr	r3, [pc, #88]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001e10:	689a      	ldr	r2, [r3, #8]
 8001e12:	69bb      	ldr	r3, [r7, #24]
 8001e14:	43db      	mvns	r3, r3
 8001e16:	4914      	ldr	r1, [pc, #80]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001e18:	4013      	ands	r3, r2
 8001e1a:	608b      	str	r3, [r1, #8]
 8001e1c:	683b      	ldr	r3, [r7, #0]
 8001e1e:	685b      	ldr	r3, [r3, #4]
 8001e20:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e24:	2b00      	cmp	r3, #0
 8001e26:	d021      	beq.n	8001e6c <HAL_GPIO_Init+0x2d4>
 8001e28:	4b0f      	ldr	r3, [pc, #60]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001e2a:	68da      	ldr	r2, [r3, #12]
 8001e2c:	490e      	ldr	r1, [pc, #56]	; (8001e68 <HAL_GPIO_Init+0x2d0>)
 8001e2e:	69bb      	ldr	r3, [r7, #24]
 8001e30:	4313      	orrs	r3, r2
 8001e32:	60cb      	str	r3, [r1, #12]
 8001e34:	e021      	b.n	8001e7a <HAL_GPIO_Init+0x2e2>
 8001e36:	bf00      	nop
 8001e38:	10320000 	.word	0x10320000
 8001e3c:	10310000 	.word	0x10310000
 8001e40:	10220000 	.word	0x10220000
 8001e44:	10210000 	.word	0x10210000
 8001e48:	10120000 	.word	0x10120000
 8001e4c:	10110000 	.word	0x10110000
 8001e50:	40021000 	.word	0x40021000
 8001e54:	40010000 	.word	0x40010000
 8001e58:	40010800 	.word	0x40010800
 8001e5c:	40010c00 	.word	0x40010c00
 8001e60:	40011000 	.word	0x40011000
 8001e64:	40011400 	.word	0x40011400
 8001e68:	40010400 	.word	0x40010400
 8001e6c:	4b0b      	ldr	r3, [pc, #44]	; (8001e9c <HAL_GPIO_Init+0x304>)
 8001e6e:	68da      	ldr	r2, [r3, #12]
 8001e70:	69bb      	ldr	r3, [r7, #24]
 8001e72:	43db      	mvns	r3, r3
 8001e74:	4909      	ldr	r1, [pc, #36]	; (8001e9c <HAL_GPIO_Init+0x304>)
 8001e76:	4013      	ands	r3, r2
 8001e78:	60cb      	str	r3, [r1, #12]
 8001e7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e7c:	3301      	adds	r3, #1
 8001e7e:	627b      	str	r3, [r7, #36]	; 0x24
 8001e80:	683b      	ldr	r3, [r7, #0]
 8001e82:	681a      	ldr	r2, [r3, #0]
 8001e84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e86:	fa22 f303 	lsr.w	r3, r2, r3
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	f47f ae8e 	bne.w	8001bac <HAL_GPIO_Init+0x14>
 8001e90:	bf00      	nop
 8001e92:	bf00      	nop
 8001e94:	372c      	adds	r7, #44	; 0x2c
 8001e96:	46bd      	mov	sp, r7
 8001e98:	bc80      	pop	{r7}
 8001e9a:	4770      	bx	lr
 8001e9c:	40010400 	.word	0x40010400

08001ea0 <HAL_GPIO_ReadPin>:
 8001ea0:	b480      	push	{r7}
 8001ea2:	b085      	sub	sp, #20
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
 8001ea8:	460b      	mov	r3, r1
 8001eaa:	807b      	strh	r3, [r7, #2]
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	689a      	ldr	r2, [r3, #8]
 8001eb0:	887b      	ldrh	r3, [r7, #2]
 8001eb2:	4013      	ands	r3, r2
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d002      	beq.n	8001ebe <HAL_GPIO_ReadPin+0x1e>
 8001eb8:	2301      	movs	r3, #1
 8001eba:	73fb      	strb	r3, [r7, #15]
 8001ebc:	e001      	b.n	8001ec2 <HAL_GPIO_ReadPin+0x22>
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	73fb      	strb	r3, [r7, #15]
 8001ec2:	7bfb      	ldrb	r3, [r7, #15]
 8001ec4:	4618      	mov	r0, r3
 8001ec6:	3714      	adds	r7, #20
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bc80      	pop	{r7}
 8001ecc:	4770      	bx	lr

08001ece <HAL_GPIO_WritePin>:
 8001ece:	b480      	push	{r7}
 8001ed0:	b083      	sub	sp, #12
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	6078      	str	r0, [r7, #4]
 8001ed6:	460b      	mov	r3, r1
 8001ed8:	807b      	strh	r3, [r7, #2]
 8001eda:	4613      	mov	r3, r2
 8001edc:	707b      	strb	r3, [r7, #1]
 8001ede:	787b      	ldrb	r3, [r7, #1]
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d003      	beq.n	8001eec <HAL_GPIO_WritePin+0x1e>
 8001ee4:	887a      	ldrh	r2, [r7, #2]
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	611a      	str	r2, [r3, #16]
 8001eea:	e003      	b.n	8001ef4 <HAL_GPIO_WritePin+0x26>
 8001eec:	887b      	ldrh	r3, [r7, #2]
 8001eee:	041a      	lsls	r2, r3, #16
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	611a      	str	r2, [r3, #16]
 8001ef4:	bf00      	nop
 8001ef6:	370c      	adds	r7, #12
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	bc80      	pop	{r7}
 8001efc:	4770      	bx	lr

08001efe <HAL_GPIO_TogglePin>:
 8001efe:	b480      	push	{r7}
 8001f00:	b085      	sub	sp, #20
 8001f02:	af00      	add	r7, sp, #0
 8001f04:	6078      	str	r0, [r7, #4]
 8001f06:	460b      	mov	r3, r1
 8001f08:	807b      	strh	r3, [r7, #2]
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	68db      	ldr	r3, [r3, #12]
 8001f0e:	60fb      	str	r3, [r7, #12]
 8001f10:	887a      	ldrh	r2, [r7, #2]
 8001f12:	68fb      	ldr	r3, [r7, #12]
 8001f14:	4013      	ands	r3, r2
 8001f16:	041a      	lsls	r2, r3, #16
 8001f18:	68fb      	ldr	r3, [r7, #12]
 8001f1a:	43d9      	mvns	r1, r3
 8001f1c:	887b      	ldrh	r3, [r7, #2]
 8001f1e:	400b      	ands	r3, r1
 8001f20:	431a      	orrs	r2, r3
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	611a      	str	r2, [r3, #16]
 8001f26:	bf00      	nop
 8001f28:	3714      	adds	r7, #20
 8001f2a:	46bd      	mov	sp, r7
 8001f2c:	bc80      	pop	{r7}
 8001f2e:	4770      	bx	lr

08001f30 <HAL_GPIO_EXTI_IRQHandler>:
 8001f30:	b580      	push	{r7, lr}
 8001f32:	b082      	sub	sp, #8
 8001f34:	af00      	add	r7, sp, #0
 8001f36:	4603      	mov	r3, r0
 8001f38:	80fb      	strh	r3, [r7, #6]
 8001f3a:	4b08      	ldr	r3, [pc, #32]	; (8001f5c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001f3c:	695a      	ldr	r2, [r3, #20]
 8001f3e:	88fb      	ldrh	r3, [r7, #6]
 8001f40:	4013      	ands	r3, r2
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d006      	beq.n	8001f54 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001f46:	4a05      	ldr	r2, [pc, #20]	; (8001f5c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001f48:	88fb      	ldrh	r3, [r7, #6]
 8001f4a:	6153      	str	r3, [r2, #20]
 8001f4c:	88fb      	ldrh	r3, [r7, #6]
 8001f4e:	4618      	mov	r0, r3
 8001f50:	f000 f806 	bl	8001f60 <HAL_GPIO_EXTI_Callback>
 8001f54:	bf00      	nop
 8001f56:	3708      	adds	r7, #8
 8001f58:	46bd      	mov	sp, r7
 8001f5a:	bd80      	pop	{r7, pc}
 8001f5c:	40010400 	.word	0x40010400

08001f60 <HAL_GPIO_EXTI_Callback>:
 8001f60:	b480      	push	{r7}
 8001f62:	b083      	sub	sp, #12
 8001f64:	af00      	add	r7, sp, #0
 8001f66:	4603      	mov	r3, r0
 8001f68:	80fb      	strh	r3, [r7, #6]
 8001f6a:	bf00      	nop
 8001f6c:	370c      	adds	r7, #12
 8001f6e:	46bd      	mov	sp, r7
 8001f70:	bc80      	pop	{r7}
 8001f72:	4770      	bx	lr

08001f74 <HAL_RCC_OscConfig>:
 8001f74:	b580      	push	{r7, lr}
 8001f76:	b086      	sub	sp, #24
 8001f78:	af00      	add	r7, sp, #0
 8001f7a:	6078      	str	r0, [r7, #4]
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d101      	bne.n	8001f86 <HAL_RCC_OscConfig+0x12>
 8001f82:	2301      	movs	r3, #1
 8001f84:	e272      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	f003 0301 	and.w	r3, r3, #1
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	f000 8087 	beq.w	80020a2 <HAL_RCC_OscConfig+0x12e>
 8001f94:	4b92      	ldr	r3, [pc, #584]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001f96:	685b      	ldr	r3, [r3, #4]
 8001f98:	f003 030c 	and.w	r3, r3, #12
 8001f9c:	2b04      	cmp	r3, #4
 8001f9e:	d00c      	beq.n	8001fba <HAL_RCC_OscConfig+0x46>
 8001fa0:	4b8f      	ldr	r3, [pc, #572]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001fa2:	685b      	ldr	r3, [r3, #4]
 8001fa4:	f003 030c 	and.w	r3, r3, #12
 8001fa8:	2b08      	cmp	r3, #8
 8001faa:	d112      	bne.n	8001fd2 <HAL_RCC_OscConfig+0x5e>
 8001fac:	4b8c      	ldr	r3, [pc, #560]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001fae:	685b      	ldr	r3, [r3, #4]
 8001fb0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001fb4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001fb8:	d10b      	bne.n	8001fd2 <HAL_RCC_OscConfig+0x5e>
 8001fba:	4b89      	ldr	r3, [pc, #548]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d06c      	beq.n	80020a0 <HAL_RCC_OscConfig+0x12c>
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	685b      	ldr	r3, [r3, #4]
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	d168      	bne.n	80020a0 <HAL_RCC_OscConfig+0x12c>
 8001fce:	2301      	movs	r3, #1
 8001fd0:	e24c      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	685b      	ldr	r3, [r3, #4]
 8001fd6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001fda:	d106      	bne.n	8001fea <HAL_RCC_OscConfig+0x76>
 8001fdc:	4b80      	ldr	r3, [pc, #512]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	4a7f      	ldr	r2, [pc, #508]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001fe2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001fe6:	6013      	str	r3, [r2, #0]
 8001fe8:	e02e      	b.n	8002048 <HAL_RCC_OscConfig+0xd4>
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	685b      	ldr	r3, [r3, #4]
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d10c      	bne.n	800200c <HAL_RCC_OscConfig+0x98>
 8001ff2:	4b7b      	ldr	r3, [pc, #492]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	4a7a      	ldr	r2, [pc, #488]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8001ff8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001ffc:	6013      	str	r3, [r2, #0]
 8001ffe:	4b78      	ldr	r3, [pc, #480]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	4a77      	ldr	r2, [pc, #476]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002004:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002008:	6013      	str	r3, [r2, #0]
 800200a:	e01d      	b.n	8002048 <HAL_RCC_OscConfig+0xd4>
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	685b      	ldr	r3, [r3, #4]
 8002010:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002014:	d10c      	bne.n	8002030 <HAL_RCC_OscConfig+0xbc>
 8002016:	4b72      	ldr	r3, [pc, #456]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	4a71      	ldr	r2, [pc, #452]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 800201c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002020:	6013      	str	r3, [r2, #0]
 8002022:	4b6f      	ldr	r3, [pc, #444]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	4a6e      	ldr	r2, [pc, #440]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002028:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800202c:	6013      	str	r3, [r2, #0]
 800202e:	e00b      	b.n	8002048 <HAL_RCC_OscConfig+0xd4>
 8002030:	4b6b      	ldr	r3, [pc, #428]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	4a6a      	ldr	r2, [pc, #424]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002036:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800203a:	6013      	str	r3, [r2, #0]
 800203c:	4b68      	ldr	r3, [pc, #416]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	4a67      	ldr	r2, [pc, #412]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002042:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002046:	6013      	str	r3, [r2, #0]
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	685b      	ldr	r3, [r3, #4]
 800204c:	2b00      	cmp	r3, #0
 800204e:	d013      	beq.n	8002078 <HAL_RCC_OscConfig+0x104>
 8002050:	f7ff fc8a 	bl	8001968 <HAL_GetTick>
 8002054:	6138      	str	r0, [r7, #16]
 8002056:	e008      	b.n	800206a <HAL_RCC_OscConfig+0xf6>
 8002058:	f7ff fc86 	bl	8001968 <HAL_GetTick>
 800205c:	4602      	mov	r2, r0
 800205e:	693b      	ldr	r3, [r7, #16]
 8002060:	1ad3      	subs	r3, r2, r3
 8002062:	2b64      	cmp	r3, #100	; 0x64
 8002064:	d901      	bls.n	800206a <HAL_RCC_OscConfig+0xf6>
 8002066:	2303      	movs	r3, #3
 8002068:	e200      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 800206a:	4b5d      	ldr	r3, [pc, #372]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002072:	2b00      	cmp	r3, #0
 8002074:	d0f0      	beq.n	8002058 <HAL_RCC_OscConfig+0xe4>
 8002076:	e014      	b.n	80020a2 <HAL_RCC_OscConfig+0x12e>
 8002078:	f7ff fc76 	bl	8001968 <HAL_GetTick>
 800207c:	6138      	str	r0, [r7, #16]
 800207e:	e008      	b.n	8002092 <HAL_RCC_OscConfig+0x11e>
 8002080:	f7ff fc72 	bl	8001968 <HAL_GetTick>
 8002084:	4602      	mov	r2, r0
 8002086:	693b      	ldr	r3, [r7, #16]
 8002088:	1ad3      	subs	r3, r2, r3
 800208a:	2b64      	cmp	r3, #100	; 0x64
 800208c:	d901      	bls.n	8002092 <HAL_RCC_OscConfig+0x11e>
 800208e:	2303      	movs	r3, #3
 8002090:	e1ec      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002092:	4b53      	ldr	r3, [pc, #332]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800209a:	2b00      	cmp	r3, #0
 800209c:	d1f0      	bne.n	8002080 <HAL_RCC_OscConfig+0x10c>
 800209e:	e000      	b.n	80020a2 <HAL_RCC_OscConfig+0x12e>
 80020a0:	bf00      	nop
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	f003 0302 	and.w	r3, r3, #2
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d063      	beq.n	8002176 <HAL_RCC_OscConfig+0x202>
 80020ae:	4b4c      	ldr	r3, [pc, #304]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80020b0:	685b      	ldr	r3, [r3, #4]
 80020b2:	f003 030c 	and.w	r3, r3, #12
 80020b6:	2b00      	cmp	r3, #0
 80020b8:	d00b      	beq.n	80020d2 <HAL_RCC_OscConfig+0x15e>
 80020ba:	4b49      	ldr	r3, [pc, #292]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80020bc:	685b      	ldr	r3, [r3, #4]
 80020be:	f003 030c 	and.w	r3, r3, #12
 80020c2:	2b08      	cmp	r3, #8
 80020c4:	d11c      	bne.n	8002100 <HAL_RCC_OscConfig+0x18c>
 80020c6:	4b46      	ldr	r3, [pc, #280]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80020c8:	685b      	ldr	r3, [r3, #4]
 80020ca:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d116      	bne.n	8002100 <HAL_RCC_OscConfig+0x18c>
 80020d2:	4b43      	ldr	r3, [pc, #268]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80020d4:	681b      	ldr	r3, [r3, #0]
 80020d6:	f003 0302 	and.w	r3, r3, #2
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d005      	beq.n	80020ea <HAL_RCC_OscConfig+0x176>
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	691b      	ldr	r3, [r3, #16]
 80020e2:	2b01      	cmp	r3, #1
 80020e4:	d001      	beq.n	80020ea <HAL_RCC_OscConfig+0x176>
 80020e6:	2301      	movs	r3, #1
 80020e8:	e1c0      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 80020ea:	4b3d      	ldr	r3, [pc, #244]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	695b      	ldr	r3, [r3, #20]
 80020f6:	00db      	lsls	r3, r3, #3
 80020f8:	4939      	ldr	r1, [pc, #228]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80020fa:	4313      	orrs	r3, r2
 80020fc:	600b      	str	r3, [r1, #0]
 80020fe:	e03a      	b.n	8002176 <HAL_RCC_OscConfig+0x202>
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	691b      	ldr	r3, [r3, #16]
 8002104:	2b00      	cmp	r3, #0
 8002106:	d020      	beq.n	800214a <HAL_RCC_OscConfig+0x1d6>
 8002108:	4b36      	ldr	r3, [pc, #216]	; (80021e4 <HAL_RCC_OscConfig+0x270>)
 800210a:	2201      	movs	r2, #1
 800210c:	601a      	str	r2, [r3, #0]
 800210e:	f7ff fc2b 	bl	8001968 <HAL_GetTick>
 8002112:	6138      	str	r0, [r7, #16]
 8002114:	e008      	b.n	8002128 <HAL_RCC_OscConfig+0x1b4>
 8002116:	f7ff fc27 	bl	8001968 <HAL_GetTick>
 800211a:	4602      	mov	r2, r0
 800211c:	693b      	ldr	r3, [r7, #16]
 800211e:	1ad3      	subs	r3, r2, r3
 8002120:	2b02      	cmp	r3, #2
 8002122:	d901      	bls.n	8002128 <HAL_RCC_OscConfig+0x1b4>
 8002124:	2303      	movs	r3, #3
 8002126:	e1a1      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002128:	4b2d      	ldr	r3, [pc, #180]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f003 0302 	and.w	r3, r3, #2
 8002130:	2b00      	cmp	r3, #0
 8002132:	d0f0      	beq.n	8002116 <HAL_RCC_OscConfig+0x1a2>
 8002134:	4b2a      	ldr	r3, [pc, #168]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	695b      	ldr	r3, [r3, #20]
 8002140:	00db      	lsls	r3, r3, #3
 8002142:	4927      	ldr	r1, [pc, #156]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 8002144:	4313      	orrs	r3, r2
 8002146:	600b      	str	r3, [r1, #0]
 8002148:	e015      	b.n	8002176 <HAL_RCC_OscConfig+0x202>
 800214a:	4b26      	ldr	r3, [pc, #152]	; (80021e4 <HAL_RCC_OscConfig+0x270>)
 800214c:	2200      	movs	r2, #0
 800214e:	601a      	str	r2, [r3, #0]
 8002150:	f7ff fc0a 	bl	8001968 <HAL_GetTick>
 8002154:	6138      	str	r0, [r7, #16]
 8002156:	e008      	b.n	800216a <HAL_RCC_OscConfig+0x1f6>
 8002158:	f7ff fc06 	bl	8001968 <HAL_GetTick>
 800215c:	4602      	mov	r2, r0
 800215e:	693b      	ldr	r3, [r7, #16]
 8002160:	1ad3      	subs	r3, r2, r3
 8002162:	2b02      	cmp	r3, #2
 8002164:	d901      	bls.n	800216a <HAL_RCC_OscConfig+0x1f6>
 8002166:	2303      	movs	r3, #3
 8002168:	e180      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 800216a:	4b1d      	ldr	r3, [pc, #116]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	f003 0302 	and.w	r3, r3, #2
 8002172:	2b00      	cmp	r3, #0
 8002174:	d1f0      	bne.n	8002158 <HAL_RCC_OscConfig+0x1e4>
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	f003 0308 	and.w	r3, r3, #8
 800217e:	2b00      	cmp	r3, #0
 8002180:	d03a      	beq.n	80021f8 <HAL_RCC_OscConfig+0x284>
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	699b      	ldr	r3, [r3, #24]
 8002186:	2b00      	cmp	r3, #0
 8002188:	d019      	beq.n	80021be <HAL_RCC_OscConfig+0x24a>
 800218a:	4b17      	ldr	r3, [pc, #92]	; (80021e8 <HAL_RCC_OscConfig+0x274>)
 800218c:	2201      	movs	r2, #1
 800218e:	601a      	str	r2, [r3, #0]
 8002190:	f7ff fbea 	bl	8001968 <HAL_GetTick>
 8002194:	6138      	str	r0, [r7, #16]
 8002196:	e008      	b.n	80021aa <HAL_RCC_OscConfig+0x236>
 8002198:	f7ff fbe6 	bl	8001968 <HAL_GetTick>
 800219c:	4602      	mov	r2, r0
 800219e:	693b      	ldr	r3, [r7, #16]
 80021a0:	1ad3      	subs	r3, r2, r3
 80021a2:	2b02      	cmp	r3, #2
 80021a4:	d901      	bls.n	80021aa <HAL_RCC_OscConfig+0x236>
 80021a6:	2303      	movs	r3, #3
 80021a8:	e160      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 80021aa:	4b0d      	ldr	r3, [pc, #52]	; (80021e0 <HAL_RCC_OscConfig+0x26c>)
 80021ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021ae:	f003 0302 	and.w	r3, r3, #2
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d0f0      	beq.n	8002198 <HAL_RCC_OscConfig+0x224>
 80021b6:	2001      	movs	r0, #1
 80021b8:	f000 fad8 	bl	800276c <RCC_Delay>
 80021bc:	e01c      	b.n	80021f8 <HAL_RCC_OscConfig+0x284>
 80021be:	4b0a      	ldr	r3, [pc, #40]	; (80021e8 <HAL_RCC_OscConfig+0x274>)
 80021c0:	2200      	movs	r2, #0
 80021c2:	601a      	str	r2, [r3, #0]
 80021c4:	f7ff fbd0 	bl	8001968 <HAL_GetTick>
 80021c8:	6138      	str	r0, [r7, #16]
 80021ca:	e00f      	b.n	80021ec <HAL_RCC_OscConfig+0x278>
 80021cc:	f7ff fbcc 	bl	8001968 <HAL_GetTick>
 80021d0:	4602      	mov	r2, r0
 80021d2:	693b      	ldr	r3, [r7, #16]
 80021d4:	1ad3      	subs	r3, r2, r3
 80021d6:	2b02      	cmp	r3, #2
 80021d8:	d908      	bls.n	80021ec <HAL_RCC_OscConfig+0x278>
 80021da:	2303      	movs	r3, #3
 80021dc:	e146      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 80021de:	bf00      	nop
 80021e0:	40021000 	.word	0x40021000
 80021e4:	42420000 	.word	0x42420000
 80021e8:	42420480 	.word	0x42420480
 80021ec:	4b92      	ldr	r3, [pc, #584]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80021ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021f0:	f003 0302 	and.w	r3, r3, #2
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d1e9      	bne.n	80021cc <HAL_RCC_OscConfig+0x258>
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	f003 0304 	and.w	r3, r3, #4
 8002200:	2b00      	cmp	r3, #0
 8002202:	f000 80a6 	beq.w	8002352 <HAL_RCC_OscConfig+0x3de>
 8002206:	2300      	movs	r3, #0
 8002208:	75fb      	strb	r3, [r7, #23]
 800220a:	4b8b      	ldr	r3, [pc, #556]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800220c:	69db      	ldr	r3, [r3, #28]
 800220e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002212:	2b00      	cmp	r3, #0
 8002214:	d10d      	bne.n	8002232 <HAL_RCC_OscConfig+0x2be>
 8002216:	4b88      	ldr	r3, [pc, #544]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002218:	69db      	ldr	r3, [r3, #28]
 800221a:	4a87      	ldr	r2, [pc, #540]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800221c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002220:	61d3      	str	r3, [r2, #28]
 8002222:	4b85      	ldr	r3, [pc, #532]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002224:	69db      	ldr	r3, [r3, #28]
 8002226:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800222a:	60bb      	str	r3, [r7, #8]
 800222c:	68bb      	ldr	r3, [r7, #8]
 800222e:	2301      	movs	r3, #1
 8002230:	75fb      	strb	r3, [r7, #23]
 8002232:	4b82      	ldr	r3, [pc, #520]	; (800243c <HAL_RCC_OscConfig+0x4c8>)
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800223a:	2b00      	cmp	r3, #0
 800223c:	d118      	bne.n	8002270 <HAL_RCC_OscConfig+0x2fc>
 800223e:	4b7f      	ldr	r3, [pc, #508]	; (800243c <HAL_RCC_OscConfig+0x4c8>)
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	4a7e      	ldr	r2, [pc, #504]	; (800243c <HAL_RCC_OscConfig+0x4c8>)
 8002244:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002248:	6013      	str	r3, [r2, #0]
 800224a:	f7ff fb8d 	bl	8001968 <HAL_GetTick>
 800224e:	6138      	str	r0, [r7, #16]
 8002250:	e008      	b.n	8002264 <HAL_RCC_OscConfig+0x2f0>
 8002252:	f7ff fb89 	bl	8001968 <HAL_GetTick>
 8002256:	4602      	mov	r2, r0
 8002258:	693b      	ldr	r3, [r7, #16]
 800225a:	1ad3      	subs	r3, r2, r3
 800225c:	2b64      	cmp	r3, #100	; 0x64
 800225e:	d901      	bls.n	8002264 <HAL_RCC_OscConfig+0x2f0>
 8002260:	2303      	movs	r3, #3
 8002262:	e103      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002264:	4b75      	ldr	r3, [pc, #468]	; (800243c <HAL_RCC_OscConfig+0x4c8>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800226c:	2b00      	cmp	r3, #0
 800226e:	d0f0      	beq.n	8002252 <HAL_RCC_OscConfig+0x2de>
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	68db      	ldr	r3, [r3, #12]
 8002274:	2b01      	cmp	r3, #1
 8002276:	d106      	bne.n	8002286 <HAL_RCC_OscConfig+0x312>
 8002278:	4b6f      	ldr	r3, [pc, #444]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800227a:	6a1b      	ldr	r3, [r3, #32]
 800227c:	4a6e      	ldr	r2, [pc, #440]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800227e:	f043 0301 	orr.w	r3, r3, #1
 8002282:	6213      	str	r3, [r2, #32]
 8002284:	e02d      	b.n	80022e2 <HAL_RCC_OscConfig+0x36e>
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	68db      	ldr	r3, [r3, #12]
 800228a:	2b00      	cmp	r3, #0
 800228c:	d10c      	bne.n	80022a8 <HAL_RCC_OscConfig+0x334>
 800228e:	4b6a      	ldr	r3, [pc, #424]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002290:	6a1b      	ldr	r3, [r3, #32]
 8002292:	4a69      	ldr	r2, [pc, #420]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002294:	f023 0301 	bic.w	r3, r3, #1
 8002298:	6213      	str	r3, [r2, #32]
 800229a:	4b67      	ldr	r3, [pc, #412]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800229c:	6a1b      	ldr	r3, [r3, #32]
 800229e:	4a66      	ldr	r2, [pc, #408]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022a0:	f023 0304 	bic.w	r3, r3, #4
 80022a4:	6213      	str	r3, [r2, #32]
 80022a6:	e01c      	b.n	80022e2 <HAL_RCC_OscConfig+0x36e>
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	68db      	ldr	r3, [r3, #12]
 80022ac:	2b05      	cmp	r3, #5
 80022ae:	d10c      	bne.n	80022ca <HAL_RCC_OscConfig+0x356>
 80022b0:	4b61      	ldr	r3, [pc, #388]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022b2:	6a1b      	ldr	r3, [r3, #32]
 80022b4:	4a60      	ldr	r2, [pc, #384]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022b6:	f043 0304 	orr.w	r3, r3, #4
 80022ba:	6213      	str	r3, [r2, #32]
 80022bc:	4b5e      	ldr	r3, [pc, #376]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022be:	6a1b      	ldr	r3, [r3, #32]
 80022c0:	4a5d      	ldr	r2, [pc, #372]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022c2:	f043 0301 	orr.w	r3, r3, #1
 80022c6:	6213      	str	r3, [r2, #32]
 80022c8:	e00b      	b.n	80022e2 <HAL_RCC_OscConfig+0x36e>
 80022ca:	4b5b      	ldr	r3, [pc, #364]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022cc:	6a1b      	ldr	r3, [r3, #32]
 80022ce:	4a5a      	ldr	r2, [pc, #360]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022d0:	f023 0301 	bic.w	r3, r3, #1
 80022d4:	6213      	str	r3, [r2, #32]
 80022d6:	4b58      	ldr	r3, [pc, #352]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022d8:	6a1b      	ldr	r3, [r3, #32]
 80022da:	4a57      	ldr	r2, [pc, #348]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80022dc:	f023 0304 	bic.w	r3, r3, #4
 80022e0:	6213      	str	r3, [r2, #32]
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	68db      	ldr	r3, [r3, #12]
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d015      	beq.n	8002316 <HAL_RCC_OscConfig+0x3a2>
 80022ea:	f7ff fb3d 	bl	8001968 <HAL_GetTick>
 80022ee:	6138      	str	r0, [r7, #16]
 80022f0:	e00a      	b.n	8002308 <HAL_RCC_OscConfig+0x394>
 80022f2:	f7ff fb39 	bl	8001968 <HAL_GetTick>
 80022f6:	4602      	mov	r2, r0
 80022f8:	693b      	ldr	r3, [r7, #16]
 80022fa:	1ad3      	subs	r3, r2, r3
 80022fc:	f241 3288 	movw	r2, #5000	; 0x1388
 8002300:	4293      	cmp	r3, r2
 8002302:	d901      	bls.n	8002308 <HAL_RCC_OscConfig+0x394>
 8002304:	2303      	movs	r3, #3
 8002306:	e0b1      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002308:	4b4b      	ldr	r3, [pc, #300]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800230a:	6a1b      	ldr	r3, [r3, #32]
 800230c:	f003 0302 	and.w	r3, r3, #2
 8002310:	2b00      	cmp	r3, #0
 8002312:	d0ee      	beq.n	80022f2 <HAL_RCC_OscConfig+0x37e>
 8002314:	e014      	b.n	8002340 <HAL_RCC_OscConfig+0x3cc>
 8002316:	f7ff fb27 	bl	8001968 <HAL_GetTick>
 800231a:	6138      	str	r0, [r7, #16]
 800231c:	e00a      	b.n	8002334 <HAL_RCC_OscConfig+0x3c0>
 800231e:	f7ff fb23 	bl	8001968 <HAL_GetTick>
 8002322:	4602      	mov	r2, r0
 8002324:	693b      	ldr	r3, [r7, #16]
 8002326:	1ad3      	subs	r3, r2, r3
 8002328:	f241 3288 	movw	r2, #5000	; 0x1388
 800232c:	4293      	cmp	r3, r2
 800232e:	d901      	bls.n	8002334 <HAL_RCC_OscConfig+0x3c0>
 8002330:	2303      	movs	r3, #3
 8002332:	e09b      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002334:	4b40      	ldr	r3, [pc, #256]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002336:	6a1b      	ldr	r3, [r3, #32]
 8002338:	f003 0302 	and.w	r3, r3, #2
 800233c:	2b00      	cmp	r3, #0
 800233e:	d1ee      	bne.n	800231e <HAL_RCC_OscConfig+0x3aa>
 8002340:	7dfb      	ldrb	r3, [r7, #23]
 8002342:	2b01      	cmp	r3, #1
 8002344:	d105      	bne.n	8002352 <HAL_RCC_OscConfig+0x3de>
 8002346:	4b3c      	ldr	r3, [pc, #240]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002348:	69db      	ldr	r3, [r3, #28]
 800234a:	4a3b      	ldr	r2, [pc, #236]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800234c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002350:	61d3      	str	r3, [r2, #28]
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	69db      	ldr	r3, [r3, #28]
 8002356:	2b00      	cmp	r3, #0
 8002358:	f000 8087 	beq.w	800246a <HAL_RCC_OscConfig+0x4f6>
 800235c:	4b36      	ldr	r3, [pc, #216]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 800235e:	685b      	ldr	r3, [r3, #4]
 8002360:	f003 030c 	and.w	r3, r3, #12
 8002364:	2b08      	cmp	r3, #8
 8002366:	d061      	beq.n	800242c <HAL_RCC_OscConfig+0x4b8>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	69db      	ldr	r3, [r3, #28]
 800236c:	2b02      	cmp	r3, #2
 800236e:	d146      	bne.n	80023fe <HAL_RCC_OscConfig+0x48a>
 8002370:	4b33      	ldr	r3, [pc, #204]	; (8002440 <HAL_RCC_OscConfig+0x4cc>)
 8002372:	2200      	movs	r2, #0
 8002374:	601a      	str	r2, [r3, #0]
 8002376:	f7ff faf7 	bl	8001968 <HAL_GetTick>
 800237a:	6138      	str	r0, [r7, #16]
 800237c:	e008      	b.n	8002390 <HAL_RCC_OscConfig+0x41c>
 800237e:	f7ff faf3 	bl	8001968 <HAL_GetTick>
 8002382:	4602      	mov	r2, r0
 8002384:	693b      	ldr	r3, [r7, #16]
 8002386:	1ad3      	subs	r3, r2, r3
 8002388:	2b02      	cmp	r3, #2
 800238a:	d901      	bls.n	8002390 <HAL_RCC_OscConfig+0x41c>
 800238c:	2303      	movs	r3, #3
 800238e:	e06d      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002390:	4b29      	ldr	r3, [pc, #164]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002398:	2b00      	cmp	r3, #0
 800239a:	d1f0      	bne.n	800237e <HAL_RCC_OscConfig+0x40a>
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	6a1b      	ldr	r3, [r3, #32]
 80023a0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80023a4:	d108      	bne.n	80023b8 <HAL_RCC_OscConfig+0x444>
 80023a6:	4b24      	ldr	r3, [pc, #144]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80023a8:	685b      	ldr	r3, [r3, #4]
 80023aa:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	689b      	ldr	r3, [r3, #8]
 80023b2:	4921      	ldr	r1, [pc, #132]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80023b4:	4313      	orrs	r3, r2
 80023b6:	604b      	str	r3, [r1, #4]
 80023b8:	4b1f      	ldr	r3, [pc, #124]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80023ba:	685b      	ldr	r3, [r3, #4]
 80023bc:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	6a19      	ldr	r1, [r3, #32]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023c8:	430b      	orrs	r3, r1
 80023ca:	491b      	ldr	r1, [pc, #108]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80023cc:	4313      	orrs	r3, r2
 80023ce:	604b      	str	r3, [r1, #4]
 80023d0:	4b1b      	ldr	r3, [pc, #108]	; (8002440 <HAL_RCC_OscConfig+0x4cc>)
 80023d2:	2201      	movs	r2, #1
 80023d4:	601a      	str	r2, [r3, #0]
 80023d6:	f7ff fac7 	bl	8001968 <HAL_GetTick>
 80023da:	6138      	str	r0, [r7, #16]
 80023dc:	e008      	b.n	80023f0 <HAL_RCC_OscConfig+0x47c>
 80023de:	f7ff fac3 	bl	8001968 <HAL_GetTick>
 80023e2:	4602      	mov	r2, r0
 80023e4:	693b      	ldr	r3, [r7, #16]
 80023e6:	1ad3      	subs	r3, r2, r3
 80023e8:	2b02      	cmp	r3, #2
 80023ea:	d901      	bls.n	80023f0 <HAL_RCC_OscConfig+0x47c>
 80023ec:	2303      	movs	r3, #3
 80023ee:	e03d      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 80023f0:	4b11      	ldr	r3, [pc, #68]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023f8:	2b00      	cmp	r3, #0
 80023fa:	d0f0      	beq.n	80023de <HAL_RCC_OscConfig+0x46a>
 80023fc:	e035      	b.n	800246a <HAL_RCC_OscConfig+0x4f6>
 80023fe:	4b10      	ldr	r3, [pc, #64]	; (8002440 <HAL_RCC_OscConfig+0x4cc>)
 8002400:	2200      	movs	r2, #0
 8002402:	601a      	str	r2, [r3, #0]
 8002404:	f7ff fab0 	bl	8001968 <HAL_GetTick>
 8002408:	6138      	str	r0, [r7, #16]
 800240a:	e008      	b.n	800241e <HAL_RCC_OscConfig+0x4aa>
 800240c:	f7ff faac 	bl	8001968 <HAL_GetTick>
 8002410:	4602      	mov	r2, r0
 8002412:	693b      	ldr	r3, [r7, #16]
 8002414:	1ad3      	subs	r3, r2, r3
 8002416:	2b02      	cmp	r3, #2
 8002418:	d901      	bls.n	800241e <HAL_RCC_OscConfig+0x4aa>
 800241a:	2303      	movs	r3, #3
 800241c:	e026      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 800241e:	4b06      	ldr	r3, [pc, #24]	; (8002438 <HAL_RCC_OscConfig+0x4c4>)
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002426:	2b00      	cmp	r3, #0
 8002428:	d1f0      	bne.n	800240c <HAL_RCC_OscConfig+0x498>
 800242a:	e01e      	b.n	800246a <HAL_RCC_OscConfig+0x4f6>
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	69db      	ldr	r3, [r3, #28]
 8002430:	2b01      	cmp	r3, #1
 8002432:	d107      	bne.n	8002444 <HAL_RCC_OscConfig+0x4d0>
 8002434:	2301      	movs	r3, #1
 8002436:	e019      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 8002438:	40021000 	.word	0x40021000
 800243c:	40007000 	.word	0x40007000
 8002440:	42420060 	.word	0x42420060
 8002444:	4b0b      	ldr	r3, [pc, #44]	; (8002474 <HAL_RCC_OscConfig+0x500>)
 8002446:	685b      	ldr	r3, [r3, #4]
 8002448:	60fb      	str	r3, [r7, #12]
 800244a:	68fb      	ldr	r3, [r7, #12]
 800244c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	6a1b      	ldr	r3, [r3, #32]
 8002454:	429a      	cmp	r2, r3
 8002456:	d106      	bne.n	8002466 <HAL_RCC_OscConfig+0x4f2>
 8002458:	68fb      	ldr	r3, [r7, #12]
 800245a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002462:	429a      	cmp	r2, r3
 8002464:	d001      	beq.n	800246a <HAL_RCC_OscConfig+0x4f6>
 8002466:	2301      	movs	r3, #1
 8002468:	e000      	b.n	800246c <HAL_RCC_OscConfig+0x4f8>
 800246a:	2300      	movs	r3, #0
 800246c:	4618      	mov	r0, r3
 800246e:	3718      	adds	r7, #24
 8002470:	46bd      	mov	sp, r7
 8002472:	bd80      	pop	{r7, pc}
 8002474:	40021000 	.word	0x40021000

08002478 <HAL_RCC_ClockConfig>:
 8002478:	b580      	push	{r7, lr}
 800247a:	b084      	sub	sp, #16
 800247c:	af00      	add	r7, sp, #0
 800247e:	6078      	str	r0, [r7, #4]
 8002480:	6039      	str	r1, [r7, #0]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	2b00      	cmp	r3, #0
 8002486:	d101      	bne.n	800248c <HAL_RCC_ClockConfig+0x14>
 8002488:	2301      	movs	r3, #1
 800248a:	e0d0      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 800248c:	4b6a      	ldr	r3, [pc, #424]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	f003 0307 	and.w	r3, r3, #7
 8002494:	683a      	ldr	r2, [r7, #0]
 8002496:	429a      	cmp	r2, r3
 8002498:	d910      	bls.n	80024bc <HAL_RCC_ClockConfig+0x44>
 800249a:	4b67      	ldr	r3, [pc, #412]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	f023 0207 	bic.w	r2, r3, #7
 80024a2:	4965      	ldr	r1, [pc, #404]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 80024a4:	683b      	ldr	r3, [r7, #0]
 80024a6:	4313      	orrs	r3, r2
 80024a8:	600b      	str	r3, [r1, #0]
 80024aa:	4b63      	ldr	r3, [pc, #396]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f003 0307 	and.w	r3, r3, #7
 80024b2:	683a      	ldr	r2, [r7, #0]
 80024b4:	429a      	cmp	r2, r3
 80024b6:	d001      	beq.n	80024bc <HAL_RCC_ClockConfig+0x44>
 80024b8:	2301      	movs	r3, #1
 80024ba:	e0b8      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	f003 0302 	and.w	r3, r3, #2
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d020      	beq.n	800250a <HAL_RCC_ClockConfig+0x92>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	f003 0304 	and.w	r3, r3, #4
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d005      	beq.n	80024e0 <HAL_RCC_ClockConfig+0x68>
 80024d4:	4b59      	ldr	r3, [pc, #356]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80024d6:	685b      	ldr	r3, [r3, #4]
 80024d8:	4a58      	ldr	r2, [pc, #352]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80024da:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80024de:	6053      	str	r3, [r2, #4]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f003 0308 	and.w	r3, r3, #8
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d005      	beq.n	80024f8 <HAL_RCC_ClockConfig+0x80>
 80024ec:	4b53      	ldr	r3, [pc, #332]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80024ee:	685b      	ldr	r3, [r3, #4]
 80024f0:	4a52      	ldr	r2, [pc, #328]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80024f2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80024f6:	6053      	str	r3, [r2, #4]
 80024f8:	4b50      	ldr	r3, [pc, #320]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80024fa:	685b      	ldr	r3, [r3, #4]
 80024fc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	689b      	ldr	r3, [r3, #8]
 8002504:	494d      	ldr	r1, [pc, #308]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002506:	4313      	orrs	r3, r2
 8002508:	604b      	str	r3, [r1, #4]
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	f003 0301 	and.w	r3, r3, #1
 8002512:	2b00      	cmp	r3, #0
 8002514:	d040      	beq.n	8002598 <HAL_RCC_ClockConfig+0x120>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	685b      	ldr	r3, [r3, #4]
 800251a:	2b01      	cmp	r3, #1
 800251c:	d107      	bne.n	800252e <HAL_RCC_ClockConfig+0xb6>
 800251e:	4b47      	ldr	r3, [pc, #284]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002526:	2b00      	cmp	r3, #0
 8002528:	d115      	bne.n	8002556 <HAL_RCC_ClockConfig+0xde>
 800252a:	2301      	movs	r3, #1
 800252c:	e07f      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	685b      	ldr	r3, [r3, #4]
 8002532:	2b02      	cmp	r3, #2
 8002534:	d107      	bne.n	8002546 <HAL_RCC_ClockConfig+0xce>
 8002536:	4b41      	ldr	r3, [pc, #260]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800253e:	2b00      	cmp	r3, #0
 8002540:	d109      	bne.n	8002556 <HAL_RCC_ClockConfig+0xde>
 8002542:	2301      	movs	r3, #1
 8002544:	e073      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 8002546:	4b3d      	ldr	r3, [pc, #244]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	f003 0302 	and.w	r3, r3, #2
 800254e:	2b00      	cmp	r3, #0
 8002550:	d101      	bne.n	8002556 <HAL_RCC_ClockConfig+0xde>
 8002552:	2301      	movs	r3, #1
 8002554:	e06b      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 8002556:	4b39      	ldr	r3, [pc, #228]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002558:	685b      	ldr	r3, [r3, #4]
 800255a:	f023 0203 	bic.w	r2, r3, #3
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	685b      	ldr	r3, [r3, #4]
 8002562:	4936      	ldr	r1, [pc, #216]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002564:	4313      	orrs	r3, r2
 8002566:	604b      	str	r3, [r1, #4]
 8002568:	f7ff f9fe 	bl	8001968 <HAL_GetTick>
 800256c:	60f8      	str	r0, [r7, #12]
 800256e:	e00a      	b.n	8002586 <HAL_RCC_ClockConfig+0x10e>
 8002570:	f7ff f9fa 	bl	8001968 <HAL_GetTick>
 8002574:	4602      	mov	r2, r0
 8002576:	68fb      	ldr	r3, [r7, #12]
 8002578:	1ad3      	subs	r3, r2, r3
 800257a:	f241 3288 	movw	r2, #5000	; 0x1388
 800257e:	4293      	cmp	r3, r2
 8002580:	d901      	bls.n	8002586 <HAL_RCC_ClockConfig+0x10e>
 8002582:	2303      	movs	r3, #3
 8002584:	e053      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 8002586:	4b2d      	ldr	r3, [pc, #180]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002588:	685b      	ldr	r3, [r3, #4]
 800258a:	f003 020c 	and.w	r2, r3, #12
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	685b      	ldr	r3, [r3, #4]
 8002592:	009b      	lsls	r3, r3, #2
 8002594:	429a      	cmp	r2, r3
 8002596:	d1eb      	bne.n	8002570 <HAL_RCC_ClockConfig+0xf8>
 8002598:	4b27      	ldr	r3, [pc, #156]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	f003 0307 	and.w	r3, r3, #7
 80025a0:	683a      	ldr	r2, [r7, #0]
 80025a2:	429a      	cmp	r2, r3
 80025a4:	d210      	bcs.n	80025c8 <HAL_RCC_ClockConfig+0x150>
 80025a6:	4b24      	ldr	r3, [pc, #144]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	f023 0207 	bic.w	r2, r3, #7
 80025ae:	4922      	ldr	r1, [pc, #136]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 80025b0:	683b      	ldr	r3, [r7, #0]
 80025b2:	4313      	orrs	r3, r2
 80025b4:	600b      	str	r3, [r1, #0]
 80025b6:	4b20      	ldr	r3, [pc, #128]	; (8002638 <HAL_RCC_ClockConfig+0x1c0>)
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	f003 0307 	and.w	r3, r3, #7
 80025be:	683a      	ldr	r2, [r7, #0]
 80025c0:	429a      	cmp	r2, r3
 80025c2:	d001      	beq.n	80025c8 <HAL_RCC_ClockConfig+0x150>
 80025c4:	2301      	movs	r3, #1
 80025c6:	e032      	b.n	800262e <HAL_RCC_ClockConfig+0x1b6>
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	f003 0304 	and.w	r3, r3, #4
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d008      	beq.n	80025e6 <HAL_RCC_ClockConfig+0x16e>
 80025d4:	4b19      	ldr	r3, [pc, #100]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80025d6:	685b      	ldr	r3, [r3, #4]
 80025d8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	68db      	ldr	r3, [r3, #12]
 80025e0:	4916      	ldr	r1, [pc, #88]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80025e2:	4313      	orrs	r3, r2
 80025e4:	604b      	str	r3, [r1, #4]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f003 0308 	and.w	r3, r3, #8
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d009      	beq.n	8002606 <HAL_RCC_ClockConfig+0x18e>
 80025f2:	4b12      	ldr	r3, [pc, #72]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 80025f4:	685b      	ldr	r3, [r3, #4]
 80025f6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	691b      	ldr	r3, [r3, #16]
 80025fe:	00db      	lsls	r3, r3, #3
 8002600:	490e      	ldr	r1, [pc, #56]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 8002602:	4313      	orrs	r3, r2
 8002604:	604b      	str	r3, [r1, #4]
 8002606:	f000 f821 	bl	800264c <HAL_RCC_GetSysClockFreq>
 800260a:	4602      	mov	r2, r0
 800260c:	4b0b      	ldr	r3, [pc, #44]	; (800263c <HAL_RCC_ClockConfig+0x1c4>)
 800260e:	685b      	ldr	r3, [r3, #4]
 8002610:	091b      	lsrs	r3, r3, #4
 8002612:	f003 030f 	and.w	r3, r3, #15
 8002616:	490a      	ldr	r1, [pc, #40]	; (8002640 <HAL_RCC_ClockConfig+0x1c8>)
 8002618:	5ccb      	ldrb	r3, [r1, r3]
 800261a:	fa22 f303 	lsr.w	r3, r2, r3
 800261e:	4a09      	ldr	r2, [pc, #36]	; (8002644 <HAL_RCC_ClockConfig+0x1cc>)
 8002620:	6013      	str	r3, [r2, #0]
 8002622:	4b09      	ldr	r3, [pc, #36]	; (8002648 <HAL_RCC_ClockConfig+0x1d0>)
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	4618      	mov	r0, r3
 8002628:	f7ff f95c 	bl	80018e4 <HAL_InitTick>
 800262c:	2300      	movs	r3, #0
 800262e:	4618      	mov	r0, r3
 8002630:	3710      	adds	r7, #16
 8002632:	46bd      	mov	sp, r7
 8002634:	bd80      	pop	{r7, pc}
 8002636:	bf00      	nop
 8002638:	40022000 	.word	0x40022000
 800263c:	40021000 	.word	0x40021000
 8002640:	08004360 	.word	0x08004360
 8002644:	20000308 	.word	0x20000308
 8002648:	20000324 	.word	0x20000324

0800264c <HAL_RCC_GetSysClockFreq>:
 800264c:	b490      	push	{r4, r7}
 800264e:	b08a      	sub	sp, #40	; 0x28
 8002650:	af00      	add	r7, sp, #0
 8002652:	4b29      	ldr	r3, [pc, #164]	; (80026f8 <HAL_RCC_GetSysClockFreq+0xac>)
 8002654:	1d3c      	adds	r4, r7, #4
 8002656:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002658:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800265c:	f240 2301 	movw	r3, #513	; 0x201
 8002660:	803b      	strh	r3, [r7, #0]
 8002662:	2300      	movs	r3, #0
 8002664:	61fb      	str	r3, [r7, #28]
 8002666:	2300      	movs	r3, #0
 8002668:	61bb      	str	r3, [r7, #24]
 800266a:	2300      	movs	r3, #0
 800266c:	627b      	str	r3, [r7, #36]	; 0x24
 800266e:	2300      	movs	r3, #0
 8002670:	617b      	str	r3, [r7, #20]
 8002672:	2300      	movs	r3, #0
 8002674:	623b      	str	r3, [r7, #32]
 8002676:	4b21      	ldr	r3, [pc, #132]	; (80026fc <HAL_RCC_GetSysClockFreq+0xb0>)
 8002678:	685b      	ldr	r3, [r3, #4]
 800267a:	61fb      	str	r3, [r7, #28]
 800267c:	69fb      	ldr	r3, [r7, #28]
 800267e:	f003 030c 	and.w	r3, r3, #12
 8002682:	2b04      	cmp	r3, #4
 8002684:	d002      	beq.n	800268c <HAL_RCC_GetSysClockFreq+0x40>
 8002686:	2b08      	cmp	r3, #8
 8002688:	d003      	beq.n	8002692 <HAL_RCC_GetSysClockFreq+0x46>
 800268a:	e02b      	b.n	80026e4 <HAL_RCC_GetSysClockFreq+0x98>
 800268c:	4b1c      	ldr	r3, [pc, #112]	; (8002700 <HAL_RCC_GetSysClockFreq+0xb4>)
 800268e:	623b      	str	r3, [r7, #32]
 8002690:	e02b      	b.n	80026ea <HAL_RCC_GetSysClockFreq+0x9e>
 8002692:	69fb      	ldr	r3, [r7, #28]
 8002694:	0c9b      	lsrs	r3, r3, #18
 8002696:	f003 030f 	and.w	r3, r3, #15
 800269a:	3328      	adds	r3, #40	; 0x28
 800269c:	443b      	add	r3, r7
 800269e:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80026a2:	617b      	str	r3, [r7, #20]
 80026a4:	69fb      	ldr	r3, [r7, #28]
 80026a6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	d012      	beq.n	80026d4 <HAL_RCC_GetSysClockFreq+0x88>
 80026ae:	4b13      	ldr	r3, [pc, #76]	; (80026fc <HAL_RCC_GetSysClockFreq+0xb0>)
 80026b0:	685b      	ldr	r3, [r3, #4]
 80026b2:	0c5b      	lsrs	r3, r3, #17
 80026b4:	f003 0301 	and.w	r3, r3, #1
 80026b8:	3328      	adds	r3, #40	; 0x28
 80026ba:	443b      	add	r3, r7
 80026bc:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80026c0:	61bb      	str	r3, [r7, #24]
 80026c2:	697b      	ldr	r3, [r7, #20]
 80026c4:	4a0e      	ldr	r2, [pc, #56]	; (8002700 <HAL_RCC_GetSysClockFreq+0xb4>)
 80026c6:	fb03 f202 	mul.w	r2, r3, r2
 80026ca:	69bb      	ldr	r3, [r7, #24]
 80026cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80026d0:	627b      	str	r3, [r7, #36]	; 0x24
 80026d2:	e004      	b.n	80026de <HAL_RCC_GetSysClockFreq+0x92>
 80026d4:	697b      	ldr	r3, [r7, #20]
 80026d6:	4a0b      	ldr	r2, [pc, #44]	; (8002704 <HAL_RCC_GetSysClockFreq+0xb8>)
 80026d8:	fb02 f303 	mul.w	r3, r2, r3
 80026dc:	627b      	str	r3, [r7, #36]	; 0x24
 80026de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80026e0:	623b      	str	r3, [r7, #32]
 80026e2:	e002      	b.n	80026ea <HAL_RCC_GetSysClockFreq+0x9e>
 80026e4:	4b06      	ldr	r3, [pc, #24]	; (8002700 <HAL_RCC_GetSysClockFreq+0xb4>)
 80026e6:	623b      	str	r3, [r7, #32]
 80026e8:	bf00      	nop
 80026ea:	6a3b      	ldr	r3, [r7, #32]
 80026ec:	4618      	mov	r0, r3
 80026ee:	3728      	adds	r7, #40	; 0x28
 80026f0:	46bd      	mov	sp, r7
 80026f2:	bc90      	pop	{r4, r7}
 80026f4:	4770      	bx	lr
 80026f6:	bf00      	nop
 80026f8:	08004350 	.word	0x08004350
 80026fc:	40021000 	.word	0x40021000
 8002700:	007a1200 	.word	0x007a1200
 8002704:	003d0900 	.word	0x003d0900

08002708 <HAL_RCC_GetHCLKFreq>:
 8002708:	b480      	push	{r7}
 800270a:	af00      	add	r7, sp, #0
 800270c:	4b02      	ldr	r3, [pc, #8]	; (8002718 <HAL_RCC_GetHCLKFreq+0x10>)
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	4618      	mov	r0, r3
 8002712:	46bd      	mov	sp, r7
 8002714:	bc80      	pop	{r7}
 8002716:	4770      	bx	lr
 8002718:	20000308 	.word	0x20000308

0800271c <HAL_RCC_GetPCLK1Freq>:
 800271c:	b580      	push	{r7, lr}
 800271e:	af00      	add	r7, sp, #0
 8002720:	f7ff fff2 	bl	8002708 <HAL_RCC_GetHCLKFreq>
 8002724:	4602      	mov	r2, r0
 8002726:	4b05      	ldr	r3, [pc, #20]	; (800273c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002728:	685b      	ldr	r3, [r3, #4]
 800272a:	0a1b      	lsrs	r3, r3, #8
 800272c:	f003 0307 	and.w	r3, r3, #7
 8002730:	4903      	ldr	r1, [pc, #12]	; (8002740 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002732:	5ccb      	ldrb	r3, [r1, r3]
 8002734:	fa22 f303 	lsr.w	r3, r2, r3
 8002738:	4618      	mov	r0, r3
 800273a:	bd80      	pop	{r7, pc}
 800273c:	40021000 	.word	0x40021000
 8002740:	08004370 	.word	0x08004370

08002744 <HAL_RCC_GetPCLK2Freq>:
 8002744:	b580      	push	{r7, lr}
 8002746:	af00      	add	r7, sp, #0
 8002748:	f7ff ffde 	bl	8002708 <HAL_RCC_GetHCLKFreq>
 800274c:	4602      	mov	r2, r0
 800274e:	4b05      	ldr	r3, [pc, #20]	; (8002764 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002750:	685b      	ldr	r3, [r3, #4]
 8002752:	0adb      	lsrs	r3, r3, #11
 8002754:	f003 0307 	and.w	r3, r3, #7
 8002758:	4903      	ldr	r1, [pc, #12]	; (8002768 <HAL_RCC_GetPCLK2Freq+0x24>)
 800275a:	5ccb      	ldrb	r3, [r1, r3]
 800275c:	fa22 f303 	lsr.w	r3, r2, r3
 8002760:	4618      	mov	r0, r3
 8002762:	bd80      	pop	{r7, pc}
 8002764:	40021000 	.word	0x40021000
 8002768:	08004370 	.word	0x08004370

0800276c <RCC_Delay>:
 800276c:	b480      	push	{r7}
 800276e:	b085      	sub	sp, #20
 8002770:	af00      	add	r7, sp, #0
 8002772:	6078      	str	r0, [r7, #4]
 8002774:	4b0a      	ldr	r3, [pc, #40]	; (80027a0 <RCC_Delay+0x34>)
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	4a0a      	ldr	r2, [pc, #40]	; (80027a4 <RCC_Delay+0x38>)
 800277a:	fba2 2303 	umull	r2, r3, r2, r3
 800277e:	0a5b      	lsrs	r3, r3, #9
 8002780:	687a      	ldr	r2, [r7, #4]
 8002782:	fb02 f303 	mul.w	r3, r2, r3
 8002786:	60fb      	str	r3, [r7, #12]
 8002788:	bf00      	nop
 800278a:	68fb      	ldr	r3, [r7, #12]
 800278c:	1e5a      	subs	r2, r3, #1
 800278e:	60fa      	str	r2, [r7, #12]
 8002790:	2b00      	cmp	r3, #0
 8002792:	d1f9      	bne.n	8002788 <RCC_Delay+0x1c>
 8002794:	bf00      	nop
 8002796:	bf00      	nop
 8002798:	3714      	adds	r7, #20
 800279a:	46bd      	mov	sp, r7
 800279c:	bc80      	pop	{r7}
 800279e:	4770      	bx	lr
 80027a0:	20000308 	.word	0x20000308
 80027a4:	10624dd3 	.word	0x10624dd3

080027a8 <HAL_TIM_Base_Init>:
 80027a8:	b580      	push	{r7, lr}
 80027aa:	b082      	sub	sp, #8
 80027ac:	af00      	add	r7, sp, #0
 80027ae:	6078      	str	r0, [r7, #4]
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d101      	bne.n	80027ba <HAL_TIM_Base_Init+0x12>
 80027b6:	2301      	movs	r3, #1
 80027b8:	e041      	b.n	800283e <HAL_TIM_Base_Init+0x96>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80027c0:	b2db      	uxtb	r3, r3
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d106      	bne.n	80027d4 <HAL_TIM_Base_Init+0x2c>
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	2200      	movs	r2, #0
 80027ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80027ce:	6878      	ldr	r0, [r7, #4]
 80027d0:	f7fe fea0 	bl	8001514 <HAL_TIM_Base_MspInit>
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	2202      	movs	r2, #2
 80027d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	681a      	ldr	r2, [r3, #0]
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	3304      	adds	r3, #4
 80027e4:	4619      	mov	r1, r3
 80027e6:	4610      	mov	r0, r2
 80027e8:	f000 fc28 	bl	800303c <TIM_Base_SetConfig>
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	2201      	movs	r2, #1
 80027f0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	2201      	movs	r2, #1
 80027f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	2201      	movs	r2, #1
 8002800:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	2201      	movs	r2, #1
 8002808:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	2201      	movs	r2, #1
 8002810:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	2201      	movs	r2, #1
 8002818:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	2201      	movs	r2, #1
 8002820:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	2201      	movs	r2, #1
 8002828:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	2201      	movs	r2, #1
 8002830:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	2201      	movs	r2, #1
 8002838:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800283c:	2300      	movs	r3, #0
 800283e:	4618      	mov	r0, r3
 8002840:	3708      	adds	r7, #8
 8002842:	46bd      	mov	sp, r7
 8002844:	bd80      	pop	{r7, pc}
	...

08002848 <HAL_TIM_Base_Start_IT>:
 8002848:	b480      	push	{r7}
 800284a:	b085      	sub	sp, #20
 800284c:	af00      	add	r7, sp, #0
 800284e:	6078      	str	r0, [r7, #4]
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002856:	b2db      	uxtb	r3, r3
 8002858:	2b01      	cmp	r3, #1
 800285a:	d001      	beq.n	8002860 <HAL_TIM_Base_Start_IT+0x18>
 800285c:	2301      	movs	r3, #1
 800285e:	e03a      	b.n	80028d6 <HAL_TIM_Base_Start_IT+0x8e>
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	2202      	movs	r2, #2
 8002864:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	68da      	ldr	r2, [r3, #12]
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	f042 0201 	orr.w	r2, r2, #1
 8002876:	60da      	str	r2, [r3, #12]
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	4a18      	ldr	r2, [pc, #96]	; (80028e0 <HAL_TIM_Base_Start_IT+0x98>)
 800287e:	4293      	cmp	r3, r2
 8002880:	d00e      	beq.n	80028a0 <HAL_TIM_Base_Start_IT+0x58>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800288a:	d009      	beq.n	80028a0 <HAL_TIM_Base_Start_IT+0x58>
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a14      	ldr	r2, [pc, #80]	; (80028e4 <HAL_TIM_Base_Start_IT+0x9c>)
 8002892:	4293      	cmp	r3, r2
 8002894:	d004      	beq.n	80028a0 <HAL_TIM_Base_Start_IT+0x58>
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	4a13      	ldr	r2, [pc, #76]	; (80028e8 <HAL_TIM_Base_Start_IT+0xa0>)
 800289c:	4293      	cmp	r3, r2
 800289e:	d111      	bne.n	80028c4 <HAL_TIM_Base_Start_IT+0x7c>
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	689b      	ldr	r3, [r3, #8]
 80028a6:	f003 0307 	and.w	r3, r3, #7
 80028aa:	60fb      	str	r3, [r7, #12]
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	2b06      	cmp	r3, #6
 80028b0:	d010      	beq.n	80028d4 <HAL_TIM_Base_Start_IT+0x8c>
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	681a      	ldr	r2, [r3, #0]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	f042 0201 	orr.w	r2, r2, #1
 80028c0:	601a      	str	r2, [r3, #0]
 80028c2:	e007      	b.n	80028d4 <HAL_TIM_Base_Start_IT+0x8c>
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	681a      	ldr	r2, [r3, #0]
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	f042 0201 	orr.w	r2, r2, #1
 80028d2:	601a      	str	r2, [r3, #0]
 80028d4:	2300      	movs	r3, #0
 80028d6:	4618      	mov	r0, r3
 80028d8:	3714      	adds	r7, #20
 80028da:	46bd      	mov	sp, r7
 80028dc:	bc80      	pop	{r7}
 80028de:	4770      	bx	lr
 80028e0:	40012c00 	.word	0x40012c00
 80028e4:	40000400 	.word	0x40000400
 80028e8:	40000800 	.word	0x40000800

080028ec <HAL_TIM_PWM_Init>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b082      	sub	sp, #8
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	6078      	str	r0, [r7, #4]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d101      	bne.n	80028fe <HAL_TIM_PWM_Init+0x12>
 80028fa:	2301      	movs	r3, #1
 80028fc:	e041      	b.n	8002982 <HAL_TIM_PWM_Init+0x96>
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002904:	b2db      	uxtb	r3, r3
 8002906:	2b00      	cmp	r3, #0
 8002908:	d106      	bne.n	8002918 <HAL_TIM_PWM_Init+0x2c>
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	2200      	movs	r2, #0
 800290e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002912:	6878      	ldr	r0, [r7, #4]
 8002914:	f000 f839 	bl	800298a <HAL_TIM_PWM_MspInit>
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	2202      	movs	r2, #2
 800291c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	681a      	ldr	r2, [r3, #0]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	3304      	adds	r3, #4
 8002928:	4619      	mov	r1, r3
 800292a:	4610      	mov	r0, r2
 800292c:	f000 fb86 	bl	800303c <TIM_Base_SetConfig>
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	2201      	movs	r2, #1
 8002934:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	2201      	movs	r2, #1
 800293c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	2201      	movs	r2, #1
 8002944:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	2201      	movs	r2, #1
 800294c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	2201      	movs	r2, #1
 8002954:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	2201      	movs	r2, #1
 800295c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	2201      	movs	r2, #1
 8002964:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	2201      	movs	r2, #1
 800296c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	2201      	movs	r2, #1
 8002974:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	2201      	movs	r2, #1
 800297c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002980:	2300      	movs	r3, #0
 8002982:	4618      	mov	r0, r3
 8002984:	3708      	adds	r7, #8
 8002986:	46bd      	mov	sp, r7
 8002988:	bd80      	pop	{r7, pc}

0800298a <HAL_TIM_PWM_MspInit>:
 800298a:	b480      	push	{r7}
 800298c:	b083      	sub	sp, #12
 800298e:	af00      	add	r7, sp, #0
 8002990:	6078      	str	r0, [r7, #4]
 8002992:	bf00      	nop
 8002994:	370c      	adds	r7, #12
 8002996:	46bd      	mov	sp, r7
 8002998:	bc80      	pop	{r7}
 800299a:	4770      	bx	lr

0800299c <HAL_TIM_PWM_Start>:
 800299c:	b580      	push	{r7, lr}
 800299e:	b084      	sub	sp, #16
 80029a0:	af00      	add	r7, sp, #0
 80029a2:	6078      	str	r0, [r7, #4]
 80029a4:	6039      	str	r1, [r7, #0]
 80029a6:	683b      	ldr	r3, [r7, #0]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d109      	bne.n	80029c0 <HAL_TIM_PWM_Start+0x24>
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80029b2:	b2db      	uxtb	r3, r3
 80029b4:	2b01      	cmp	r3, #1
 80029b6:	bf14      	ite	ne
 80029b8:	2301      	movne	r3, #1
 80029ba:	2300      	moveq	r3, #0
 80029bc:	b2db      	uxtb	r3, r3
 80029be:	e022      	b.n	8002a06 <HAL_TIM_PWM_Start+0x6a>
 80029c0:	683b      	ldr	r3, [r7, #0]
 80029c2:	2b04      	cmp	r3, #4
 80029c4:	d109      	bne.n	80029da <HAL_TIM_PWM_Start+0x3e>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80029cc:	b2db      	uxtb	r3, r3
 80029ce:	2b01      	cmp	r3, #1
 80029d0:	bf14      	ite	ne
 80029d2:	2301      	movne	r3, #1
 80029d4:	2300      	moveq	r3, #0
 80029d6:	b2db      	uxtb	r3, r3
 80029d8:	e015      	b.n	8002a06 <HAL_TIM_PWM_Start+0x6a>
 80029da:	683b      	ldr	r3, [r7, #0]
 80029dc:	2b08      	cmp	r3, #8
 80029de:	d109      	bne.n	80029f4 <HAL_TIM_PWM_Start+0x58>
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80029e6:	b2db      	uxtb	r3, r3
 80029e8:	2b01      	cmp	r3, #1
 80029ea:	bf14      	ite	ne
 80029ec:	2301      	movne	r3, #1
 80029ee:	2300      	moveq	r3, #0
 80029f0:	b2db      	uxtb	r3, r3
 80029f2:	e008      	b.n	8002a06 <HAL_TIM_PWM_Start+0x6a>
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80029fa:	b2db      	uxtb	r3, r3
 80029fc:	2b01      	cmp	r3, #1
 80029fe:	bf14      	ite	ne
 8002a00:	2301      	movne	r3, #1
 8002a02:	2300      	moveq	r3, #0
 8002a04:	b2db      	uxtb	r3, r3
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	d001      	beq.n	8002a0e <HAL_TIM_PWM_Start+0x72>
 8002a0a:	2301      	movs	r3, #1
 8002a0c:	e05e      	b.n	8002acc <HAL_TIM_PWM_Start+0x130>
 8002a0e:	683b      	ldr	r3, [r7, #0]
 8002a10:	2b00      	cmp	r3, #0
 8002a12:	d104      	bne.n	8002a1e <HAL_TIM_PWM_Start+0x82>
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	2202      	movs	r2, #2
 8002a18:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a1c:	e013      	b.n	8002a46 <HAL_TIM_PWM_Start+0xaa>
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	2b04      	cmp	r3, #4
 8002a22:	d104      	bne.n	8002a2e <HAL_TIM_PWM_Start+0x92>
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	2202      	movs	r2, #2
 8002a28:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002a2c:	e00b      	b.n	8002a46 <HAL_TIM_PWM_Start+0xaa>
 8002a2e:	683b      	ldr	r3, [r7, #0]
 8002a30:	2b08      	cmp	r3, #8
 8002a32:	d104      	bne.n	8002a3e <HAL_TIM_PWM_Start+0xa2>
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	2202      	movs	r2, #2
 8002a38:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a3c:	e003      	b.n	8002a46 <HAL_TIM_PWM_Start+0xaa>
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	2202      	movs	r2, #2
 8002a42:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	2201      	movs	r2, #1
 8002a4c:	6839      	ldr	r1, [r7, #0]
 8002a4e:	4618      	mov	r0, r3
 8002a50:	f000 fd74 	bl	800353c <TIM_CCxChannelCmd>
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	4a1e      	ldr	r2, [pc, #120]	; (8002ad4 <HAL_TIM_PWM_Start+0x138>)
 8002a5a:	4293      	cmp	r3, r2
 8002a5c:	d107      	bne.n	8002a6e <HAL_TIM_PWM_Start+0xd2>
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002a6c:	645a      	str	r2, [r3, #68]	; 0x44
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	4a18      	ldr	r2, [pc, #96]	; (8002ad4 <HAL_TIM_PWM_Start+0x138>)
 8002a74:	4293      	cmp	r3, r2
 8002a76:	d00e      	beq.n	8002a96 <HAL_TIM_PWM_Start+0xfa>
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002a80:	d009      	beq.n	8002a96 <HAL_TIM_PWM_Start+0xfa>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	4a14      	ldr	r2, [pc, #80]	; (8002ad8 <HAL_TIM_PWM_Start+0x13c>)
 8002a88:	4293      	cmp	r3, r2
 8002a8a:	d004      	beq.n	8002a96 <HAL_TIM_PWM_Start+0xfa>
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	4a12      	ldr	r2, [pc, #72]	; (8002adc <HAL_TIM_PWM_Start+0x140>)
 8002a92:	4293      	cmp	r3, r2
 8002a94:	d111      	bne.n	8002aba <HAL_TIM_PWM_Start+0x11e>
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	689b      	ldr	r3, [r3, #8]
 8002a9c:	f003 0307 	and.w	r3, r3, #7
 8002aa0:	60fb      	str	r3, [r7, #12]
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	2b06      	cmp	r3, #6
 8002aa6:	d010      	beq.n	8002aca <HAL_TIM_PWM_Start+0x12e>
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	681a      	ldr	r2, [r3, #0]
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	f042 0201 	orr.w	r2, r2, #1
 8002ab6:	601a      	str	r2, [r3, #0]
 8002ab8:	e007      	b.n	8002aca <HAL_TIM_PWM_Start+0x12e>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	681a      	ldr	r2, [r3, #0]
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	f042 0201 	orr.w	r2, r2, #1
 8002ac8:	601a      	str	r2, [r3, #0]
 8002aca:	2300      	movs	r3, #0
 8002acc:	4618      	mov	r0, r3
 8002ace:	3710      	adds	r7, #16
 8002ad0:	46bd      	mov	sp, r7
 8002ad2:	bd80      	pop	{r7, pc}
 8002ad4:	40012c00 	.word	0x40012c00
 8002ad8:	40000400 	.word	0x40000400
 8002adc:	40000800 	.word	0x40000800

08002ae0 <HAL_TIM_IRQHandler>:
 8002ae0:	b580      	push	{r7, lr}
 8002ae2:	b082      	sub	sp, #8
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	6078      	str	r0, [r7, #4]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	691b      	ldr	r3, [r3, #16]
 8002aee:	f003 0302 	and.w	r3, r3, #2
 8002af2:	2b02      	cmp	r3, #2
 8002af4:	d122      	bne.n	8002b3c <HAL_TIM_IRQHandler+0x5c>
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	68db      	ldr	r3, [r3, #12]
 8002afc:	f003 0302 	and.w	r3, r3, #2
 8002b00:	2b02      	cmp	r3, #2
 8002b02:	d11b      	bne.n	8002b3c <HAL_TIM_IRQHandler+0x5c>
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	681b      	ldr	r3, [r3, #0]
 8002b08:	f06f 0202 	mvn.w	r2, #2
 8002b0c:	611a      	str	r2, [r3, #16]
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	2201      	movs	r2, #1
 8002b12:	771a      	strb	r2, [r3, #28]
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	699b      	ldr	r3, [r3, #24]
 8002b1a:	f003 0303 	and.w	r3, r3, #3
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	d003      	beq.n	8002b2a <HAL_TIM_IRQHandler+0x4a>
 8002b22:	6878      	ldr	r0, [r7, #4]
 8002b24:	f000 fa6f 	bl	8003006 <HAL_TIM_IC_CaptureCallback>
 8002b28:	e005      	b.n	8002b36 <HAL_TIM_IRQHandler+0x56>
 8002b2a:	6878      	ldr	r0, [r7, #4]
 8002b2c:	f000 fa62 	bl	8002ff4 <HAL_TIM_OC_DelayElapsedCallback>
 8002b30:	6878      	ldr	r0, [r7, #4]
 8002b32:	f000 fa71 	bl	8003018 <HAL_TIM_PWM_PulseFinishedCallback>
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	2200      	movs	r2, #0
 8002b3a:	771a      	strb	r2, [r3, #28]
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	691b      	ldr	r3, [r3, #16]
 8002b42:	f003 0304 	and.w	r3, r3, #4
 8002b46:	2b04      	cmp	r3, #4
 8002b48:	d122      	bne.n	8002b90 <HAL_TIM_IRQHandler+0xb0>
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	68db      	ldr	r3, [r3, #12]
 8002b50:	f003 0304 	and.w	r3, r3, #4
 8002b54:	2b04      	cmp	r3, #4
 8002b56:	d11b      	bne.n	8002b90 <HAL_TIM_IRQHandler+0xb0>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	f06f 0204 	mvn.w	r2, #4
 8002b60:	611a      	str	r2, [r3, #16]
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	2202      	movs	r2, #2
 8002b66:	771a      	strb	r2, [r3, #28]
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	699b      	ldr	r3, [r3, #24]
 8002b6e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d003      	beq.n	8002b7e <HAL_TIM_IRQHandler+0x9e>
 8002b76:	6878      	ldr	r0, [r7, #4]
 8002b78:	f000 fa45 	bl	8003006 <HAL_TIM_IC_CaptureCallback>
 8002b7c:	e005      	b.n	8002b8a <HAL_TIM_IRQHandler+0xaa>
 8002b7e:	6878      	ldr	r0, [r7, #4]
 8002b80:	f000 fa38 	bl	8002ff4 <HAL_TIM_OC_DelayElapsedCallback>
 8002b84:	6878      	ldr	r0, [r7, #4]
 8002b86:	f000 fa47 	bl	8003018 <HAL_TIM_PWM_PulseFinishedCallback>
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	771a      	strb	r2, [r3, #28]
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	691b      	ldr	r3, [r3, #16]
 8002b96:	f003 0308 	and.w	r3, r3, #8
 8002b9a:	2b08      	cmp	r3, #8
 8002b9c:	d122      	bne.n	8002be4 <HAL_TIM_IRQHandler+0x104>
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	68db      	ldr	r3, [r3, #12]
 8002ba4:	f003 0308 	and.w	r3, r3, #8
 8002ba8:	2b08      	cmp	r3, #8
 8002baa:	d11b      	bne.n	8002be4 <HAL_TIM_IRQHandler+0x104>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	f06f 0208 	mvn.w	r2, #8
 8002bb4:	611a      	str	r2, [r3, #16]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	2204      	movs	r2, #4
 8002bba:	771a      	strb	r2, [r3, #28]
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	69db      	ldr	r3, [r3, #28]
 8002bc2:	f003 0303 	and.w	r3, r3, #3
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	d003      	beq.n	8002bd2 <HAL_TIM_IRQHandler+0xf2>
 8002bca:	6878      	ldr	r0, [r7, #4]
 8002bcc:	f000 fa1b 	bl	8003006 <HAL_TIM_IC_CaptureCallback>
 8002bd0:	e005      	b.n	8002bde <HAL_TIM_IRQHandler+0xfe>
 8002bd2:	6878      	ldr	r0, [r7, #4]
 8002bd4:	f000 fa0e 	bl	8002ff4 <HAL_TIM_OC_DelayElapsedCallback>
 8002bd8:	6878      	ldr	r0, [r7, #4]
 8002bda:	f000 fa1d 	bl	8003018 <HAL_TIM_PWM_PulseFinishedCallback>
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	2200      	movs	r2, #0
 8002be2:	771a      	strb	r2, [r3, #28]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	691b      	ldr	r3, [r3, #16]
 8002bea:	f003 0310 	and.w	r3, r3, #16
 8002bee:	2b10      	cmp	r3, #16
 8002bf0:	d122      	bne.n	8002c38 <HAL_TIM_IRQHandler+0x158>
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	68db      	ldr	r3, [r3, #12]
 8002bf8:	f003 0310 	and.w	r3, r3, #16
 8002bfc:	2b10      	cmp	r3, #16
 8002bfe:	d11b      	bne.n	8002c38 <HAL_TIM_IRQHandler+0x158>
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	f06f 0210 	mvn.w	r2, #16
 8002c08:	611a      	str	r2, [r3, #16]
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	2208      	movs	r2, #8
 8002c0e:	771a      	strb	r2, [r3, #28]
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	69db      	ldr	r3, [r3, #28]
 8002c16:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d003      	beq.n	8002c26 <HAL_TIM_IRQHandler+0x146>
 8002c1e:	6878      	ldr	r0, [r7, #4]
 8002c20:	f000 f9f1 	bl	8003006 <HAL_TIM_IC_CaptureCallback>
 8002c24:	e005      	b.n	8002c32 <HAL_TIM_IRQHandler+0x152>
 8002c26:	6878      	ldr	r0, [r7, #4]
 8002c28:	f000 f9e4 	bl	8002ff4 <HAL_TIM_OC_DelayElapsedCallback>
 8002c2c:	6878      	ldr	r0, [r7, #4]
 8002c2e:	f000 f9f3 	bl	8003018 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	2200      	movs	r2, #0
 8002c36:	771a      	strb	r2, [r3, #28]
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	691b      	ldr	r3, [r3, #16]
 8002c3e:	f003 0301 	and.w	r3, r3, #1
 8002c42:	2b01      	cmp	r3, #1
 8002c44:	d10e      	bne.n	8002c64 <HAL_TIM_IRQHandler+0x184>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	68db      	ldr	r3, [r3, #12]
 8002c4c:	f003 0301 	and.w	r3, r3, #1
 8002c50:	2b01      	cmp	r3, #1
 8002c52:	d107      	bne.n	8002c64 <HAL_TIM_IRQHandler+0x184>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	f06f 0201 	mvn.w	r2, #1
 8002c5c:	611a      	str	r2, [r3, #16]
 8002c5e:	6878      	ldr	r0, [r7, #4]
 8002c60:	f7fe f89f 	bl	8000da2 <HAL_TIM_PeriodElapsedCallback>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	691b      	ldr	r3, [r3, #16]
 8002c6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c6e:	2b80      	cmp	r3, #128	; 0x80
 8002c70:	d10e      	bne.n	8002c90 <HAL_TIM_IRQHandler+0x1b0>
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	68db      	ldr	r3, [r3, #12]
 8002c78:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c7c:	2b80      	cmp	r3, #128	; 0x80
 8002c7e:	d107      	bne.n	8002c90 <HAL_TIM_IRQHandler+0x1b0>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002c88:	611a      	str	r2, [r3, #16]
 8002c8a:	6878      	ldr	r0, [r7, #4]
 8002c8c:	f000 fce1 	bl	8003652 <HAL_TIMEx_BreakCallback>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	691b      	ldr	r3, [r3, #16]
 8002c96:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c9a:	2b40      	cmp	r3, #64	; 0x40
 8002c9c:	d10e      	bne.n	8002cbc <HAL_TIM_IRQHandler+0x1dc>
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	68db      	ldr	r3, [r3, #12]
 8002ca4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ca8:	2b40      	cmp	r3, #64	; 0x40
 8002caa:	d107      	bne.n	8002cbc <HAL_TIM_IRQHandler+0x1dc>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002cb4:	611a      	str	r2, [r3, #16]
 8002cb6:	6878      	ldr	r0, [r7, #4]
 8002cb8:	f000 f9b7 	bl	800302a <HAL_TIM_TriggerCallback>
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	691b      	ldr	r3, [r3, #16]
 8002cc2:	f003 0320 	and.w	r3, r3, #32
 8002cc6:	2b20      	cmp	r3, #32
 8002cc8:	d10e      	bne.n	8002ce8 <HAL_TIM_IRQHandler+0x208>
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	68db      	ldr	r3, [r3, #12]
 8002cd0:	f003 0320 	and.w	r3, r3, #32
 8002cd4:	2b20      	cmp	r3, #32
 8002cd6:	d107      	bne.n	8002ce8 <HAL_TIM_IRQHandler+0x208>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	f06f 0220 	mvn.w	r2, #32
 8002ce0:	611a      	str	r2, [r3, #16]
 8002ce2:	6878      	ldr	r0, [r7, #4]
 8002ce4:	f000 fcac 	bl	8003640 <HAL_TIMEx_CommutCallback>
 8002ce8:	bf00      	nop
 8002cea:	3708      	adds	r7, #8
 8002cec:	46bd      	mov	sp, r7
 8002cee:	bd80      	pop	{r7, pc}

08002cf0 <HAL_TIM_PWM_ConfigChannel>:
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b084      	sub	sp, #16
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	60f8      	str	r0, [r7, #12]
 8002cf8:	60b9      	str	r1, [r7, #8]
 8002cfa:	607a      	str	r2, [r7, #4]
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d02:	2b01      	cmp	r3, #1
 8002d04:	d101      	bne.n	8002d0a <HAL_TIM_PWM_ConfigChannel+0x1a>
 8002d06:	2302      	movs	r3, #2
 8002d08:	e0ac      	b.n	8002e64 <HAL_TIM_PWM_ConfigChannel+0x174>
 8002d0a:	68fb      	ldr	r3, [r7, #12]
 8002d0c:	2201      	movs	r2, #1
 8002d0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	2b0c      	cmp	r3, #12
 8002d16:	f200 809f 	bhi.w	8002e58 <HAL_TIM_PWM_ConfigChannel+0x168>
 8002d1a:	a201      	add	r2, pc, #4	; (adr r2, 8002d20 <HAL_TIM_PWM_ConfigChannel+0x30>)
 8002d1c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d20:	08002d55 	.word	0x08002d55
 8002d24:	08002e59 	.word	0x08002e59
 8002d28:	08002e59 	.word	0x08002e59
 8002d2c:	08002e59 	.word	0x08002e59
 8002d30:	08002d95 	.word	0x08002d95
 8002d34:	08002e59 	.word	0x08002e59
 8002d38:	08002e59 	.word	0x08002e59
 8002d3c:	08002e59 	.word	0x08002e59
 8002d40:	08002dd7 	.word	0x08002dd7
 8002d44:	08002e59 	.word	0x08002e59
 8002d48:	08002e59 	.word	0x08002e59
 8002d4c:	08002e59 	.word	0x08002e59
 8002d50:	08002e17 	.word	0x08002e17
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	68b9      	ldr	r1, [r7, #8]
 8002d5a:	4618      	mov	r0, r3
 8002d5c:	f000 f9d0 	bl	8003100 <TIM_OC1_SetConfig>
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	699a      	ldr	r2, [r3, #24]
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	681b      	ldr	r3, [r3, #0]
 8002d6a:	f042 0208 	orr.w	r2, r2, #8
 8002d6e:	619a      	str	r2, [r3, #24]
 8002d70:	68fb      	ldr	r3, [r7, #12]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	699a      	ldr	r2, [r3, #24]
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	f022 0204 	bic.w	r2, r2, #4
 8002d7e:	619a      	str	r2, [r3, #24]
 8002d80:	68fb      	ldr	r3, [r7, #12]
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	6999      	ldr	r1, [r3, #24]
 8002d86:	68bb      	ldr	r3, [r7, #8]
 8002d88:	691a      	ldr	r2, [r3, #16]
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	430a      	orrs	r2, r1
 8002d90:	619a      	str	r2, [r3, #24]
 8002d92:	e062      	b.n	8002e5a <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	68b9      	ldr	r1, [r7, #8]
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	f000 fa16 	bl	80031cc <TIM_OC2_SetConfig>
 8002da0:	68fb      	ldr	r3, [r7, #12]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	699a      	ldr	r2, [r3, #24]
 8002da6:	68fb      	ldr	r3, [r7, #12]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002dae:	619a      	str	r2, [r3, #24]
 8002db0:	68fb      	ldr	r3, [r7, #12]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	699a      	ldr	r2, [r3, #24]
 8002db6:	68fb      	ldr	r3, [r7, #12]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002dbe:	619a      	str	r2, [r3, #24]
 8002dc0:	68fb      	ldr	r3, [r7, #12]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	6999      	ldr	r1, [r3, #24]
 8002dc6:	68bb      	ldr	r3, [r7, #8]
 8002dc8:	691b      	ldr	r3, [r3, #16]
 8002dca:	021a      	lsls	r2, r3, #8
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	430a      	orrs	r2, r1
 8002dd2:	619a      	str	r2, [r3, #24]
 8002dd4:	e041      	b.n	8002e5a <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	68b9      	ldr	r1, [r7, #8]
 8002ddc:	4618      	mov	r0, r3
 8002dde:	f000 fa5f 	bl	80032a0 <TIM_OC3_SetConfig>
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	69da      	ldr	r2, [r3, #28]
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	f042 0208 	orr.w	r2, r2, #8
 8002df0:	61da      	str	r2, [r3, #28]
 8002df2:	68fb      	ldr	r3, [r7, #12]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	69da      	ldr	r2, [r3, #28]
 8002df8:	68fb      	ldr	r3, [r7, #12]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	f022 0204 	bic.w	r2, r2, #4
 8002e00:	61da      	str	r2, [r3, #28]
 8002e02:	68fb      	ldr	r3, [r7, #12]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	69d9      	ldr	r1, [r3, #28]
 8002e08:	68bb      	ldr	r3, [r7, #8]
 8002e0a:	691a      	ldr	r2, [r3, #16]
 8002e0c:	68fb      	ldr	r3, [r7, #12]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	430a      	orrs	r2, r1
 8002e12:	61da      	str	r2, [r3, #28]
 8002e14:	e021      	b.n	8002e5a <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002e16:	68fb      	ldr	r3, [r7, #12]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	68b9      	ldr	r1, [r7, #8]
 8002e1c:	4618      	mov	r0, r3
 8002e1e:	f000 faa9 	bl	8003374 <TIM_OC4_SetConfig>
 8002e22:	68fb      	ldr	r3, [r7, #12]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	69da      	ldr	r2, [r3, #28]
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002e30:	61da      	str	r2, [r3, #28]
 8002e32:	68fb      	ldr	r3, [r7, #12]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	69da      	ldr	r2, [r3, #28]
 8002e38:	68fb      	ldr	r3, [r7, #12]
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002e40:	61da      	str	r2, [r3, #28]
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	69d9      	ldr	r1, [r3, #28]
 8002e48:	68bb      	ldr	r3, [r7, #8]
 8002e4a:	691b      	ldr	r3, [r3, #16]
 8002e4c:	021a      	lsls	r2, r3, #8
 8002e4e:	68fb      	ldr	r3, [r7, #12]
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	430a      	orrs	r2, r1
 8002e54:	61da      	str	r2, [r3, #28]
 8002e56:	e000      	b.n	8002e5a <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002e58:	bf00      	nop
 8002e5a:	68fb      	ldr	r3, [r7, #12]
 8002e5c:	2200      	movs	r2, #0
 8002e5e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e62:	2300      	movs	r3, #0
 8002e64:	4618      	mov	r0, r3
 8002e66:	3710      	adds	r7, #16
 8002e68:	46bd      	mov	sp, r7
 8002e6a:	bd80      	pop	{r7, pc}

08002e6c <HAL_TIM_ConfigClockSource>:
 8002e6c:	b580      	push	{r7, lr}
 8002e6e:	b084      	sub	sp, #16
 8002e70:	af00      	add	r7, sp, #0
 8002e72:	6078      	str	r0, [r7, #4]
 8002e74:	6039      	str	r1, [r7, #0]
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002e7c:	2b01      	cmp	r3, #1
 8002e7e:	d101      	bne.n	8002e84 <HAL_TIM_ConfigClockSource+0x18>
 8002e80:	2302      	movs	r3, #2
 8002e82:	e0b3      	b.n	8002fec <HAL_TIM_ConfigClockSource+0x180>
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	2201      	movs	r2, #1
 8002e88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2202      	movs	r2, #2
 8002e90:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	689b      	ldr	r3, [r3, #8]
 8002e9a:	60fb      	str	r3, [r7, #12]
 8002e9c:	68fb      	ldr	r3, [r7, #12]
 8002e9e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002ea2:	60fb      	str	r3, [r7, #12]
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002eaa:	60fb      	str	r3, [r7, #12]
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	68fa      	ldr	r2, [r7, #12]
 8002eb2:	609a      	str	r2, [r3, #8]
 8002eb4:	683b      	ldr	r3, [r7, #0]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002ebc:	d03e      	beq.n	8002f3c <HAL_TIM_ConfigClockSource+0xd0>
 8002ebe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002ec2:	f200 8087 	bhi.w	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002ec6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002eca:	f000 8085 	beq.w	8002fd8 <HAL_TIM_ConfigClockSource+0x16c>
 8002ece:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002ed2:	d87f      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002ed4:	2b70      	cmp	r3, #112	; 0x70
 8002ed6:	d01a      	beq.n	8002f0e <HAL_TIM_ConfigClockSource+0xa2>
 8002ed8:	2b70      	cmp	r3, #112	; 0x70
 8002eda:	d87b      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002edc:	2b60      	cmp	r3, #96	; 0x60
 8002ede:	d050      	beq.n	8002f82 <HAL_TIM_ConfigClockSource+0x116>
 8002ee0:	2b60      	cmp	r3, #96	; 0x60
 8002ee2:	d877      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002ee4:	2b50      	cmp	r3, #80	; 0x50
 8002ee6:	d03c      	beq.n	8002f62 <HAL_TIM_ConfigClockSource+0xf6>
 8002ee8:	2b50      	cmp	r3, #80	; 0x50
 8002eea:	d873      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002eec:	2b40      	cmp	r3, #64	; 0x40
 8002eee:	d058      	beq.n	8002fa2 <HAL_TIM_ConfigClockSource+0x136>
 8002ef0:	2b40      	cmp	r3, #64	; 0x40
 8002ef2:	d86f      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002ef4:	2b30      	cmp	r3, #48	; 0x30
 8002ef6:	d064      	beq.n	8002fc2 <HAL_TIM_ConfigClockSource+0x156>
 8002ef8:	2b30      	cmp	r3, #48	; 0x30
 8002efa:	d86b      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002efc:	2b20      	cmp	r3, #32
 8002efe:	d060      	beq.n	8002fc2 <HAL_TIM_ConfigClockSource+0x156>
 8002f00:	2b20      	cmp	r3, #32
 8002f02:	d867      	bhi.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d05c      	beq.n	8002fc2 <HAL_TIM_ConfigClockSource+0x156>
 8002f08:	2b10      	cmp	r3, #16
 8002f0a:	d05a      	beq.n	8002fc2 <HAL_TIM_ConfigClockSource+0x156>
 8002f0c:	e062      	b.n	8002fd4 <HAL_TIM_ConfigClockSource+0x168>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	6818      	ldr	r0, [r3, #0]
 8002f12:	683b      	ldr	r3, [r7, #0]
 8002f14:	6899      	ldr	r1, [r3, #8]
 8002f16:	683b      	ldr	r3, [r7, #0]
 8002f18:	685a      	ldr	r2, [r3, #4]
 8002f1a:	683b      	ldr	r3, [r7, #0]
 8002f1c:	68db      	ldr	r3, [r3, #12]
 8002f1e:	f000 faee 	bl	80034fe <TIM_ETR_SetConfig>
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	689b      	ldr	r3, [r3, #8]
 8002f28:	60fb      	str	r3, [r7, #12]
 8002f2a:	68fb      	ldr	r3, [r7, #12]
 8002f2c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002f30:	60fb      	str	r3, [r7, #12]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	68fa      	ldr	r2, [r7, #12]
 8002f38:	609a      	str	r2, [r3, #8]
 8002f3a:	e04e      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	6818      	ldr	r0, [r3, #0]
 8002f40:	683b      	ldr	r3, [r7, #0]
 8002f42:	6899      	ldr	r1, [r3, #8]
 8002f44:	683b      	ldr	r3, [r7, #0]
 8002f46:	685a      	ldr	r2, [r3, #4]
 8002f48:	683b      	ldr	r3, [r7, #0]
 8002f4a:	68db      	ldr	r3, [r3, #12]
 8002f4c:	f000 fad7 	bl	80034fe <TIM_ETR_SetConfig>
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	689a      	ldr	r2, [r3, #8]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002f5e:	609a      	str	r2, [r3, #8]
 8002f60:	e03b      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	6818      	ldr	r0, [r3, #0]
 8002f66:	683b      	ldr	r3, [r7, #0]
 8002f68:	6859      	ldr	r1, [r3, #4]
 8002f6a:	683b      	ldr	r3, [r7, #0]
 8002f6c:	68db      	ldr	r3, [r3, #12]
 8002f6e:	461a      	mov	r2, r3
 8002f70:	f000 fa4e 	bl	8003410 <TIM_TI1_ConfigInputStage>
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	2150      	movs	r1, #80	; 0x50
 8002f7a:	4618      	mov	r0, r3
 8002f7c:	f000 faa5 	bl	80034ca <TIM_ITRx_SetConfig>
 8002f80:	e02b      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	6818      	ldr	r0, [r3, #0]
 8002f86:	683b      	ldr	r3, [r7, #0]
 8002f88:	6859      	ldr	r1, [r3, #4]
 8002f8a:	683b      	ldr	r3, [r7, #0]
 8002f8c:	68db      	ldr	r3, [r3, #12]
 8002f8e:	461a      	mov	r2, r3
 8002f90:	f000 fa6c 	bl	800346c <TIM_TI2_ConfigInputStage>
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	2160      	movs	r1, #96	; 0x60
 8002f9a:	4618      	mov	r0, r3
 8002f9c:	f000 fa95 	bl	80034ca <TIM_ITRx_SetConfig>
 8002fa0:	e01b      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	6818      	ldr	r0, [r3, #0]
 8002fa6:	683b      	ldr	r3, [r7, #0]
 8002fa8:	6859      	ldr	r1, [r3, #4]
 8002faa:	683b      	ldr	r3, [r7, #0]
 8002fac:	68db      	ldr	r3, [r3, #12]
 8002fae:	461a      	mov	r2, r3
 8002fb0:	f000 fa2e 	bl	8003410 <TIM_TI1_ConfigInputStage>
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	2140      	movs	r1, #64	; 0x40
 8002fba:	4618      	mov	r0, r3
 8002fbc:	f000 fa85 	bl	80034ca <TIM_ITRx_SetConfig>
 8002fc0:	e00b      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681a      	ldr	r2, [r3, #0]
 8002fc6:	683b      	ldr	r3, [r7, #0]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	4619      	mov	r1, r3
 8002fcc:	4610      	mov	r0, r2
 8002fce:	f000 fa7c 	bl	80034ca <TIM_ITRx_SetConfig>
 8002fd2:	e002      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002fd4:	bf00      	nop
 8002fd6:	e000      	b.n	8002fda <HAL_TIM_ConfigClockSource+0x16e>
 8002fd8:	bf00      	nop
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	2201      	movs	r2, #1
 8002fde:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	2200      	movs	r2, #0
 8002fe6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fea:	2300      	movs	r3, #0
 8002fec:	4618      	mov	r0, r3
 8002fee:	3710      	adds	r7, #16
 8002ff0:	46bd      	mov	sp, r7
 8002ff2:	bd80      	pop	{r7, pc}

08002ff4 <HAL_TIM_OC_DelayElapsedCallback>:
 8002ff4:	b480      	push	{r7}
 8002ff6:	b083      	sub	sp, #12
 8002ff8:	af00      	add	r7, sp, #0
 8002ffa:	6078      	str	r0, [r7, #4]
 8002ffc:	bf00      	nop
 8002ffe:	370c      	adds	r7, #12
 8003000:	46bd      	mov	sp, r7
 8003002:	bc80      	pop	{r7}
 8003004:	4770      	bx	lr

08003006 <HAL_TIM_IC_CaptureCallback>:
 8003006:	b480      	push	{r7}
 8003008:	b083      	sub	sp, #12
 800300a:	af00      	add	r7, sp, #0
 800300c:	6078      	str	r0, [r7, #4]
 800300e:	bf00      	nop
 8003010:	370c      	adds	r7, #12
 8003012:	46bd      	mov	sp, r7
 8003014:	bc80      	pop	{r7}
 8003016:	4770      	bx	lr

08003018 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003018:	b480      	push	{r7}
 800301a:	b083      	sub	sp, #12
 800301c:	af00      	add	r7, sp, #0
 800301e:	6078      	str	r0, [r7, #4]
 8003020:	bf00      	nop
 8003022:	370c      	adds	r7, #12
 8003024:	46bd      	mov	sp, r7
 8003026:	bc80      	pop	{r7}
 8003028:	4770      	bx	lr

0800302a <HAL_TIM_TriggerCallback>:
 800302a:	b480      	push	{r7}
 800302c:	b083      	sub	sp, #12
 800302e:	af00      	add	r7, sp, #0
 8003030:	6078      	str	r0, [r7, #4]
 8003032:	bf00      	nop
 8003034:	370c      	adds	r7, #12
 8003036:	46bd      	mov	sp, r7
 8003038:	bc80      	pop	{r7}
 800303a:	4770      	bx	lr

0800303c <TIM_Base_SetConfig>:
 800303c:	b480      	push	{r7}
 800303e:	b085      	sub	sp, #20
 8003040:	af00      	add	r7, sp, #0
 8003042:	6078      	str	r0, [r7, #4]
 8003044:	6039      	str	r1, [r7, #0]
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	60fb      	str	r3, [r7, #12]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	4a29      	ldr	r2, [pc, #164]	; (80030f4 <TIM_Base_SetConfig+0xb8>)
 8003050:	4293      	cmp	r3, r2
 8003052:	d00b      	beq.n	800306c <TIM_Base_SetConfig+0x30>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800305a:	d007      	beq.n	800306c <TIM_Base_SetConfig+0x30>
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	4a26      	ldr	r2, [pc, #152]	; (80030f8 <TIM_Base_SetConfig+0xbc>)
 8003060:	4293      	cmp	r3, r2
 8003062:	d003      	beq.n	800306c <TIM_Base_SetConfig+0x30>
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	4a25      	ldr	r2, [pc, #148]	; (80030fc <TIM_Base_SetConfig+0xc0>)
 8003068:	4293      	cmp	r3, r2
 800306a:	d108      	bne.n	800307e <TIM_Base_SetConfig+0x42>
 800306c:	68fb      	ldr	r3, [r7, #12]
 800306e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003072:	60fb      	str	r3, [r7, #12]
 8003074:	683b      	ldr	r3, [r7, #0]
 8003076:	685b      	ldr	r3, [r3, #4]
 8003078:	68fa      	ldr	r2, [r7, #12]
 800307a:	4313      	orrs	r3, r2
 800307c:	60fb      	str	r3, [r7, #12]
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	4a1c      	ldr	r2, [pc, #112]	; (80030f4 <TIM_Base_SetConfig+0xb8>)
 8003082:	4293      	cmp	r3, r2
 8003084:	d00b      	beq.n	800309e <TIM_Base_SetConfig+0x62>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800308c:	d007      	beq.n	800309e <TIM_Base_SetConfig+0x62>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	4a19      	ldr	r2, [pc, #100]	; (80030f8 <TIM_Base_SetConfig+0xbc>)
 8003092:	4293      	cmp	r3, r2
 8003094:	d003      	beq.n	800309e <TIM_Base_SetConfig+0x62>
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	4a18      	ldr	r2, [pc, #96]	; (80030fc <TIM_Base_SetConfig+0xc0>)
 800309a:	4293      	cmp	r3, r2
 800309c:	d108      	bne.n	80030b0 <TIM_Base_SetConfig+0x74>
 800309e:	68fb      	ldr	r3, [r7, #12]
 80030a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80030a4:	60fb      	str	r3, [r7, #12]
 80030a6:	683b      	ldr	r3, [r7, #0]
 80030a8:	68db      	ldr	r3, [r3, #12]
 80030aa:	68fa      	ldr	r2, [r7, #12]
 80030ac:	4313      	orrs	r3, r2
 80030ae:	60fb      	str	r3, [r7, #12]
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	695b      	ldr	r3, [r3, #20]
 80030ba:	4313      	orrs	r3, r2
 80030bc:	60fb      	str	r3, [r7, #12]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	68fa      	ldr	r2, [r7, #12]
 80030c2:	601a      	str	r2, [r3, #0]
 80030c4:	683b      	ldr	r3, [r7, #0]
 80030c6:	689a      	ldr	r2, [r3, #8]
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	62da      	str	r2, [r3, #44]	; 0x2c
 80030cc:	683b      	ldr	r3, [r7, #0]
 80030ce:	681a      	ldr	r2, [r3, #0]
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	629a      	str	r2, [r3, #40]	; 0x28
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	4a07      	ldr	r2, [pc, #28]	; (80030f4 <TIM_Base_SetConfig+0xb8>)
 80030d8:	4293      	cmp	r3, r2
 80030da:	d103      	bne.n	80030e4 <TIM_Base_SetConfig+0xa8>
 80030dc:	683b      	ldr	r3, [r7, #0]
 80030de:	691a      	ldr	r2, [r3, #16]
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	631a      	str	r2, [r3, #48]	; 0x30
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	2201      	movs	r2, #1
 80030e8:	615a      	str	r2, [r3, #20]
 80030ea:	bf00      	nop
 80030ec:	3714      	adds	r7, #20
 80030ee:	46bd      	mov	sp, r7
 80030f0:	bc80      	pop	{r7}
 80030f2:	4770      	bx	lr
 80030f4:	40012c00 	.word	0x40012c00
 80030f8:	40000400 	.word	0x40000400
 80030fc:	40000800 	.word	0x40000800

08003100 <TIM_OC1_SetConfig>:
 8003100:	b480      	push	{r7}
 8003102:	b087      	sub	sp, #28
 8003104:	af00      	add	r7, sp, #0
 8003106:	6078      	str	r0, [r7, #4]
 8003108:	6039      	str	r1, [r7, #0]
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	6a1b      	ldr	r3, [r3, #32]
 800310e:	f023 0201 	bic.w	r2, r3, #1
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	621a      	str	r2, [r3, #32]
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	6a1b      	ldr	r3, [r3, #32]
 800311a:	617b      	str	r3, [r7, #20]
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	685b      	ldr	r3, [r3, #4]
 8003120:	613b      	str	r3, [r7, #16]
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	699b      	ldr	r3, [r3, #24]
 8003126:	60fb      	str	r3, [r7, #12]
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800312e:	60fb      	str	r3, [r7, #12]
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	f023 0303 	bic.w	r3, r3, #3
 8003136:	60fb      	str	r3, [r7, #12]
 8003138:	683b      	ldr	r3, [r7, #0]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	68fa      	ldr	r2, [r7, #12]
 800313e:	4313      	orrs	r3, r2
 8003140:	60fb      	str	r3, [r7, #12]
 8003142:	697b      	ldr	r3, [r7, #20]
 8003144:	f023 0302 	bic.w	r3, r3, #2
 8003148:	617b      	str	r3, [r7, #20]
 800314a:	683b      	ldr	r3, [r7, #0]
 800314c:	689b      	ldr	r3, [r3, #8]
 800314e:	697a      	ldr	r2, [r7, #20]
 8003150:	4313      	orrs	r3, r2
 8003152:	617b      	str	r3, [r7, #20]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	4a1c      	ldr	r2, [pc, #112]	; (80031c8 <TIM_OC1_SetConfig+0xc8>)
 8003158:	4293      	cmp	r3, r2
 800315a:	d10c      	bne.n	8003176 <TIM_OC1_SetConfig+0x76>
 800315c:	697b      	ldr	r3, [r7, #20]
 800315e:	f023 0308 	bic.w	r3, r3, #8
 8003162:	617b      	str	r3, [r7, #20]
 8003164:	683b      	ldr	r3, [r7, #0]
 8003166:	68db      	ldr	r3, [r3, #12]
 8003168:	697a      	ldr	r2, [r7, #20]
 800316a:	4313      	orrs	r3, r2
 800316c:	617b      	str	r3, [r7, #20]
 800316e:	697b      	ldr	r3, [r7, #20]
 8003170:	f023 0304 	bic.w	r3, r3, #4
 8003174:	617b      	str	r3, [r7, #20]
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	4a13      	ldr	r2, [pc, #76]	; (80031c8 <TIM_OC1_SetConfig+0xc8>)
 800317a:	4293      	cmp	r3, r2
 800317c:	d111      	bne.n	80031a2 <TIM_OC1_SetConfig+0xa2>
 800317e:	693b      	ldr	r3, [r7, #16]
 8003180:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003184:	613b      	str	r3, [r7, #16]
 8003186:	693b      	ldr	r3, [r7, #16]
 8003188:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800318c:	613b      	str	r3, [r7, #16]
 800318e:	683b      	ldr	r3, [r7, #0]
 8003190:	695b      	ldr	r3, [r3, #20]
 8003192:	693a      	ldr	r2, [r7, #16]
 8003194:	4313      	orrs	r3, r2
 8003196:	613b      	str	r3, [r7, #16]
 8003198:	683b      	ldr	r3, [r7, #0]
 800319a:	699b      	ldr	r3, [r3, #24]
 800319c:	693a      	ldr	r2, [r7, #16]
 800319e:	4313      	orrs	r3, r2
 80031a0:	613b      	str	r3, [r7, #16]
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	693a      	ldr	r2, [r7, #16]
 80031a6:	605a      	str	r2, [r3, #4]
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	68fa      	ldr	r2, [r7, #12]
 80031ac:	619a      	str	r2, [r3, #24]
 80031ae:	683b      	ldr	r3, [r7, #0]
 80031b0:	685a      	ldr	r2, [r3, #4]
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	635a      	str	r2, [r3, #52]	; 0x34
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	697a      	ldr	r2, [r7, #20]
 80031ba:	621a      	str	r2, [r3, #32]
 80031bc:	bf00      	nop
 80031be:	371c      	adds	r7, #28
 80031c0:	46bd      	mov	sp, r7
 80031c2:	bc80      	pop	{r7}
 80031c4:	4770      	bx	lr
 80031c6:	bf00      	nop
 80031c8:	40012c00 	.word	0x40012c00

080031cc <TIM_OC2_SetConfig>:
 80031cc:	b480      	push	{r7}
 80031ce:	b087      	sub	sp, #28
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	6078      	str	r0, [r7, #4]
 80031d4:	6039      	str	r1, [r7, #0]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	6a1b      	ldr	r3, [r3, #32]
 80031da:	f023 0210 	bic.w	r2, r3, #16
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	621a      	str	r2, [r3, #32]
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	6a1b      	ldr	r3, [r3, #32]
 80031e6:	617b      	str	r3, [r7, #20]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	685b      	ldr	r3, [r3, #4]
 80031ec:	613b      	str	r3, [r7, #16]
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	699b      	ldr	r3, [r3, #24]
 80031f2:	60fb      	str	r3, [r7, #12]
 80031f4:	68fb      	ldr	r3, [r7, #12]
 80031f6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80031fa:	60fb      	str	r3, [r7, #12]
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003202:	60fb      	str	r3, [r7, #12]
 8003204:	683b      	ldr	r3, [r7, #0]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	021b      	lsls	r3, r3, #8
 800320a:	68fa      	ldr	r2, [r7, #12]
 800320c:	4313      	orrs	r3, r2
 800320e:	60fb      	str	r3, [r7, #12]
 8003210:	697b      	ldr	r3, [r7, #20]
 8003212:	f023 0320 	bic.w	r3, r3, #32
 8003216:	617b      	str	r3, [r7, #20]
 8003218:	683b      	ldr	r3, [r7, #0]
 800321a:	689b      	ldr	r3, [r3, #8]
 800321c:	011b      	lsls	r3, r3, #4
 800321e:	697a      	ldr	r2, [r7, #20]
 8003220:	4313      	orrs	r3, r2
 8003222:	617b      	str	r3, [r7, #20]
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	4a1d      	ldr	r2, [pc, #116]	; (800329c <TIM_OC2_SetConfig+0xd0>)
 8003228:	4293      	cmp	r3, r2
 800322a:	d10d      	bne.n	8003248 <TIM_OC2_SetConfig+0x7c>
 800322c:	697b      	ldr	r3, [r7, #20]
 800322e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003232:	617b      	str	r3, [r7, #20]
 8003234:	683b      	ldr	r3, [r7, #0]
 8003236:	68db      	ldr	r3, [r3, #12]
 8003238:	011b      	lsls	r3, r3, #4
 800323a:	697a      	ldr	r2, [r7, #20]
 800323c:	4313      	orrs	r3, r2
 800323e:	617b      	str	r3, [r7, #20]
 8003240:	697b      	ldr	r3, [r7, #20]
 8003242:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003246:	617b      	str	r3, [r7, #20]
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	4a14      	ldr	r2, [pc, #80]	; (800329c <TIM_OC2_SetConfig+0xd0>)
 800324c:	4293      	cmp	r3, r2
 800324e:	d113      	bne.n	8003278 <TIM_OC2_SetConfig+0xac>
 8003250:	693b      	ldr	r3, [r7, #16]
 8003252:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003256:	613b      	str	r3, [r7, #16]
 8003258:	693b      	ldr	r3, [r7, #16]
 800325a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800325e:	613b      	str	r3, [r7, #16]
 8003260:	683b      	ldr	r3, [r7, #0]
 8003262:	695b      	ldr	r3, [r3, #20]
 8003264:	009b      	lsls	r3, r3, #2
 8003266:	693a      	ldr	r2, [r7, #16]
 8003268:	4313      	orrs	r3, r2
 800326a:	613b      	str	r3, [r7, #16]
 800326c:	683b      	ldr	r3, [r7, #0]
 800326e:	699b      	ldr	r3, [r3, #24]
 8003270:	009b      	lsls	r3, r3, #2
 8003272:	693a      	ldr	r2, [r7, #16]
 8003274:	4313      	orrs	r3, r2
 8003276:	613b      	str	r3, [r7, #16]
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	693a      	ldr	r2, [r7, #16]
 800327c:	605a      	str	r2, [r3, #4]
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	68fa      	ldr	r2, [r7, #12]
 8003282:	619a      	str	r2, [r3, #24]
 8003284:	683b      	ldr	r3, [r7, #0]
 8003286:	685a      	ldr	r2, [r3, #4]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	639a      	str	r2, [r3, #56]	; 0x38
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	697a      	ldr	r2, [r7, #20]
 8003290:	621a      	str	r2, [r3, #32]
 8003292:	bf00      	nop
 8003294:	371c      	adds	r7, #28
 8003296:	46bd      	mov	sp, r7
 8003298:	bc80      	pop	{r7}
 800329a:	4770      	bx	lr
 800329c:	40012c00 	.word	0x40012c00

080032a0 <TIM_OC3_SetConfig>:
 80032a0:	b480      	push	{r7}
 80032a2:	b087      	sub	sp, #28
 80032a4:	af00      	add	r7, sp, #0
 80032a6:	6078      	str	r0, [r7, #4]
 80032a8:	6039      	str	r1, [r7, #0]
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	6a1b      	ldr	r3, [r3, #32]
 80032ae:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	621a      	str	r2, [r3, #32]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	6a1b      	ldr	r3, [r3, #32]
 80032ba:	617b      	str	r3, [r7, #20]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	685b      	ldr	r3, [r3, #4]
 80032c0:	613b      	str	r3, [r7, #16]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	69db      	ldr	r3, [r3, #28]
 80032c6:	60fb      	str	r3, [r7, #12]
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032ce:	60fb      	str	r3, [r7, #12]
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	f023 0303 	bic.w	r3, r3, #3
 80032d6:	60fb      	str	r3, [r7, #12]
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	68fa      	ldr	r2, [r7, #12]
 80032de:	4313      	orrs	r3, r2
 80032e0:	60fb      	str	r3, [r7, #12]
 80032e2:	697b      	ldr	r3, [r7, #20]
 80032e4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80032e8:	617b      	str	r3, [r7, #20]
 80032ea:	683b      	ldr	r3, [r7, #0]
 80032ec:	689b      	ldr	r3, [r3, #8]
 80032ee:	021b      	lsls	r3, r3, #8
 80032f0:	697a      	ldr	r2, [r7, #20]
 80032f2:	4313      	orrs	r3, r2
 80032f4:	617b      	str	r3, [r7, #20]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	4a1d      	ldr	r2, [pc, #116]	; (8003370 <TIM_OC3_SetConfig+0xd0>)
 80032fa:	4293      	cmp	r3, r2
 80032fc:	d10d      	bne.n	800331a <TIM_OC3_SetConfig+0x7a>
 80032fe:	697b      	ldr	r3, [r7, #20]
 8003300:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003304:	617b      	str	r3, [r7, #20]
 8003306:	683b      	ldr	r3, [r7, #0]
 8003308:	68db      	ldr	r3, [r3, #12]
 800330a:	021b      	lsls	r3, r3, #8
 800330c:	697a      	ldr	r2, [r7, #20]
 800330e:	4313      	orrs	r3, r2
 8003310:	617b      	str	r3, [r7, #20]
 8003312:	697b      	ldr	r3, [r7, #20]
 8003314:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003318:	617b      	str	r3, [r7, #20]
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	4a14      	ldr	r2, [pc, #80]	; (8003370 <TIM_OC3_SetConfig+0xd0>)
 800331e:	4293      	cmp	r3, r2
 8003320:	d113      	bne.n	800334a <TIM_OC3_SetConfig+0xaa>
 8003322:	693b      	ldr	r3, [r7, #16]
 8003324:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003328:	613b      	str	r3, [r7, #16]
 800332a:	693b      	ldr	r3, [r7, #16]
 800332c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003330:	613b      	str	r3, [r7, #16]
 8003332:	683b      	ldr	r3, [r7, #0]
 8003334:	695b      	ldr	r3, [r3, #20]
 8003336:	011b      	lsls	r3, r3, #4
 8003338:	693a      	ldr	r2, [r7, #16]
 800333a:	4313      	orrs	r3, r2
 800333c:	613b      	str	r3, [r7, #16]
 800333e:	683b      	ldr	r3, [r7, #0]
 8003340:	699b      	ldr	r3, [r3, #24]
 8003342:	011b      	lsls	r3, r3, #4
 8003344:	693a      	ldr	r2, [r7, #16]
 8003346:	4313      	orrs	r3, r2
 8003348:	613b      	str	r3, [r7, #16]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	693a      	ldr	r2, [r7, #16]
 800334e:	605a      	str	r2, [r3, #4]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	68fa      	ldr	r2, [r7, #12]
 8003354:	61da      	str	r2, [r3, #28]
 8003356:	683b      	ldr	r3, [r7, #0]
 8003358:	685a      	ldr	r2, [r3, #4]
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	63da      	str	r2, [r3, #60]	; 0x3c
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	697a      	ldr	r2, [r7, #20]
 8003362:	621a      	str	r2, [r3, #32]
 8003364:	bf00      	nop
 8003366:	371c      	adds	r7, #28
 8003368:	46bd      	mov	sp, r7
 800336a:	bc80      	pop	{r7}
 800336c:	4770      	bx	lr
 800336e:	bf00      	nop
 8003370:	40012c00 	.word	0x40012c00

08003374 <TIM_OC4_SetConfig>:
 8003374:	b480      	push	{r7}
 8003376:	b087      	sub	sp, #28
 8003378:	af00      	add	r7, sp, #0
 800337a:	6078      	str	r0, [r7, #4]
 800337c:	6039      	str	r1, [r7, #0]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	6a1b      	ldr	r3, [r3, #32]
 8003382:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	621a      	str	r2, [r3, #32]
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	6a1b      	ldr	r3, [r3, #32]
 800338e:	613b      	str	r3, [r7, #16]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	685b      	ldr	r3, [r3, #4]
 8003394:	617b      	str	r3, [r7, #20]
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	69db      	ldr	r3, [r3, #28]
 800339a:	60fb      	str	r3, [r7, #12]
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80033a2:	60fb      	str	r3, [r7, #12]
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80033aa:	60fb      	str	r3, [r7, #12]
 80033ac:	683b      	ldr	r3, [r7, #0]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	021b      	lsls	r3, r3, #8
 80033b2:	68fa      	ldr	r2, [r7, #12]
 80033b4:	4313      	orrs	r3, r2
 80033b6:	60fb      	str	r3, [r7, #12]
 80033b8:	693b      	ldr	r3, [r7, #16]
 80033ba:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80033be:	613b      	str	r3, [r7, #16]
 80033c0:	683b      	ldr	r3, [r7, #0]
 80033c2:	689b      	ldr	r3, [r3, #8]
 80033c4:	031b      	lsls	r3, r3, #12
 80033c6:	693a      	ldr	r2, [r7, #16]
 80033c8:	4313      	orrs	r3, r2
 80033ca:	613b      	str	r3, [r7, #16]
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	4a0f      	ldr	r2, [pc, #60]	; (800340c <TIM_OC4_SetConfig+0x98>)
 80033d0:	4293      	cmp	r3, r2
 80033d2:	d109      	bne.n	80033e8 <TIM_OC4_SetConfig+0x74>
 80033d4:	697b      	ldr	r3, [r7, #20]
 80033d6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80033da:	617b      	str	r3, [r7, #20]
 80033dc:	683b      	ldr	r3, [r7, #0]
 80033de:	695b      	ldr	r3, [r3, #20]
 80033e0:	019b      	lsls	r3, r3, #6
 80033e2:	697a      	ldr	r2, [r7, #20]
 80033e4:	4313      	orrs	r3, r2
 80033e6:	617b      	str	r3, [r7, #20]
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	697a      	ldr	r2, [r7, #20]
 80033ec:	605a      	str	r2, [r3, #4]
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	68fa      	ldr	r2, [r7, #12]
 80033f2:	61da      	str	r2, [r3, #28]
 80033f4:	683b      	ldr	r3, [r7, #0]
 80033f6:	685a      	ldr	r2, [r3, #4]
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	641a      	str	r2, [r3, #64]	; 0x40
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	693a      	ldr	r2, [r7, #16]
 8003400:	621a      	str	r2, [r3, #32]
 8003402:	bf00      	nop
 8003404:	371c      	adds	r7, #28
 8003406:	46bd      	mov	sp, r7
 8003408:	bc80      	pop	{r7}
 800340a:	4770      	bx	lr
 800340c:	40012c00 	.word	0x40012c00

08003410 <TIM_TI1_ConfigInputStage>:
 8003410:	b480      	push	{r7}
 8003412:	b087      	sub	sp, #28
 8003414:	af00      	add	r7, sp, #0
 8003416:	60f8      	str	r0, [r7, #12]
 8003418:	60b9      	str	r1, [r7, #8]
 800341a:	607a      	str	r2, [r7, #4]
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	6a1b      	ldr	r3, [r3, #32]
 8003420:	617b      	str	r3, [r7, #20]
 8003422:	68fb      	ldr	r3, [r7, #12]
 8003424:	6a1b      	ldr	r3, [r3, #32]
 8003426:	f023 0201 	bic.w	r2, r3, #1
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	621a      	str	r2, [r3, #32]
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	699b      	ldr	r3, [r3, #24]
 8003432:	613b      	str	r3, [r7, #16]
 8003434:	693b      	ldr	r3, [r7, #16]
 8003436:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800343a:	613b      	str	r3, [r7, #16]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	011b      	lsls	r3, r3, #4
 8003440:	693a      	ldr	r2, [r7, #16]
 8003442:	4313      	orrs	r3, r2
 8003444:	613b      	str	r3, [r7, #16]
 8003446:	697b      	ldr	r3, [r7, #20]
 8003448:	f023 030a 	bic.w	r3, r3, #10
 800344c:	617b      	str	r3, [r7, #20]
 800344e:	697a      	ldr	r2, [r7, #20]
 8003450:	68bb      	ldr	r3, [r7, #8]
 8003452:	4313      	orrs	r3, r2
 8003454:	617b      	str	r3, [r7, #20]
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	693a      	ldr	r2, [r7, #16]
 800345a:	619a      	str	r2, [r3, #24]
 800345c:	68fb      	ldr	r3, [r7, #12]
 800345e:	697a      	ldr	r2, [r7, #20]
 8003460:	621a      	str	r2, [r3, #32]
 8003462:	bf00      	nop
 8003464:	371c      	adds	r7, #28
 8003466:	46bd      	mov	sp, r7
 8003468:	bc80      	pop	{r7}
 800346a:	4770      	bx	lr

0800346c <TIM_TI2_ConfigInputStage>:
 800346c:	b480      	push	{r7}
 800346e:	b087      	sub	sp, #28
 8003470:	af00      	add	r7, sp, #0
 8003472:	60f8      	str	r0, [r7, #12]
 8003474:	60b9      	str	r1, [r7, #8]
 8003476:	607a      	str	r2, [r7, #4]
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	6a1b      	ldr	r3, [r3, #32]
 800347c:	f023 0210 	bic.w	r2, r3, #16
 8003480:	68fb      	ldr	r3, [r7, #12]
 8003482:	621a      	str	r2, [r3, #32]
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	699b      	ldr	r3, [r3, #24]
 8003488:	617b      	str	r3, [r7, #20]
 800348a:	68fb      	ldr	r3, [r7, #12]
 800348c:	6a1b      	ldr	r3, [r3, #32]
 800348e:	613b      	str	r3, [r7, #16]
 8003490:	697b      	ldr	r3, [r7, #20]
 8003492:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003496:	617b      	str	r3, [r7, #20]
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	031b      	lsls	r3, r3, #12
 800349c:	697a      	ldr	r2, [r7, #20]
 800349e:	4313      	orrs	r3, r2
 80034a0:	617b      	str	r3, [r7, #20]
 80034a2:	693b      	ldr	r3, [r7, #16]
 80034a4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80034a8:	613b      	str	r3, [r7, #16]
 80034aa:	68bb      	ldr	r3, [r7, #8]
 80034ac:	011b      	lsls	r3, r3, #4
 80034ae:	693a      	ldr	r2, [r7, #16]
 80034b0:	4313      	orrs	r3, r2
 80034b2:	613b      	str	r3, [r7, #16]
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	697a      	ldr	r2, [r7, #20]
 80034b8:	619a      	str	r2, [r3, #24]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	693a      	ldr	r2, [r7, #16]
 80034be:	621a      	str	r2, [r3, #32]
 80034c0:	bf00      	nop
 80034c2:	371c      	adds	r7, #28
 80034c4:	46bd      	mov	sp, r7
 80034c6:	bc80      	pop	{r7}
 80034c8:	4770      	bx	lr

080034ca <TIM_ITRx_SetConfig>:
 80034ca:	b480      	push	{r7}
 80034cc:	b085      	sub	sp, #20
 80034ce:	af00      	add	r7, sp, #0
 80034d0:	6078      	str	r0, [r7, #4]
 80034d2:	6039      	str	r1, [r7, #0]
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	689b      	ldr	r3, [r3, #8]
 80034d8:	60fb      	str	r3, [r7, #12]
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80034e0:	60fb      	str	r3, [r7, #12]
 80034e2:	683a      	ldr	r2, [r7, #0]
 80034e4:	68fb      	ldr	r3, [r7, #12]
 80034e6:	4313      	orrs	r3, r2
 80034e8:	f043 0307 	orr.w	r3, r3, #7
 80034ec:	60fb      	str	r3, [r7, #12]
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	68fa      	ldr	r2, [r7, #12]
 80034f2:	609a      	str	r2, [r3, #8]
 80034f4:	bf00      	nop
 80034f6:	3714      	adds	r7, #20
 80034f8:	46bd      	mov	sp, r7
 80034fa:	bc80      	pop	{r7}
 80034fc:	4770      	bx	lr

080034fe <TIM_ETR_SetConfig>:
 80034fe:	b480      	push	{r7}
 8003500:	b087      	sub	sp, #28
 8003502:	af00      	add	r7, sp, #0
 8003504:	60f8      	str	r0, [r7, #12]
 8003506:	60b9      	str	r1, [r7, #8]
 8003508:	607a      	str	r2, [r7, #4]
 800350a:	603b      	str	r3, [r7, #0]
 800350c:	68fb      	ldr	r3, [r7, #12]
 800350e:	689b      	ldr	r3, [r3, #8]
 8003510:	617b      	str	r3, [r7, #20]
 8003512:	697b      	ldr	r3, [r7, #20]
 8003514:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003518:	617b      	str	r3, [r7, #20]
 800351a:	683b      	ldr	r3, [r7, #0]
 800351c:	021a      	lsls	r2, r3, #8
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	431a      	orrs	r2, r3
 8003522:	68bb      	ldr	r3, [r7, #8]
 8003524:	4313      	orrs	r3, r2
 8003526:	697a      	ldr	r2, [r7, #20]
 8003528:	4313      	orrs	r3, r2
 800352a:	617b      	str	r3, [r7, #20]
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	697a      	ldr	r2, [r7, #20]
 8003530:	609a      	str	r2, [r3, #8]
 8003532:	bf00      	nop
 8003534:	371c      	adds	r7, #28
 8003536:	46bd      	mov	sp, r7
 8003538:	bc80      	pop	{r7}
 800353a:	4770      	bx	lr

0800353c <TIM_CCxChannelCmd>:
 800353c:	b480      	push	{r7}
 800353e:	b087      	sub	sp, #28
 8003540:	af00      	add	r7, sp, #0
 8003542:	60f8      	str	r0, [r7, #12]
 8003544:	60b9      	str	r1, [r7, #8]
 8003546:	607a      	str	r2, [r7, #4]
 8003548:	68bb      	ldr	r3, [r7, #8]
 800354a:	f003 031f 	and.w	r3, r3, #31
 800354e:	2201      	movs	r2, #1
 8003550:	fa02 f303 	lsl.w	r3, r2, r3
 8003554:	617b      	str	r3, [r7, #20]
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	6a1a      	ldr	r2, [r3, #32]
 800355a:	697b      	ldr	r3, [r7, #20]
 800355c:	43db      	mvns	r3, r3
 800355e:	401a      	ands	r2, r3
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	621a      	str	r2, [r3, #32]
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	6a1a      	ldr	r2, [r3, #32]
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	f003 031f 	and.w	r3, r3, #31
 800356e:	6879      	ldr	r1, [r7, #4]
 8003570:	fa01 f303 	lsl.w	r3, r1, r3
 8003574:	431a      	orrs	r2, r3
 8003576:	68fb      	ldr	r3, [r7, #12]
 8003578:	621a      	str	r2, [r3, #32]
 800357a:	bf00      	nop
 800357c:	371c      	adds	r7, #28
 800357e:	46bd      	mov	sp, r7
 8003580:	bc80      	pop	{r7}
 8003582:	4770      	bx	lr

08003584 <HAL_TIMEx_MasterConfigSynchronization>:
 8003584:	b480      	push	{r7}
 8003586:	b085      	sub	sp, #20
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
 800358c:	6039      	str	r1, [r7, #0]
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003594:	2b01      	cmp	r3, #1
 8003596:	d101      	bne.n	800359c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003598:	2302      	movs	r3, #2
 800359a:	e046      	b.n	800362a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	2201      	movs	r2, #1
 80035a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	2202      	movs	r2, #2
 80035a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	685b      	ldr	r3, [r3, #4]
 80035b2:	60fb      	str	r3, [r7, #12]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	689b      	ldr	r3, [r3, #8]
 80035ba:	60bb      	str	r3, [r7, #8]
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80035c2:	60fb      	str	r3, [r7, #12]
 80035c4:	683b      	ldr	r3, [r7, #0]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	68fa      	ldr	r2, [r7, #12]
 80035ca:	4313      	orrs	r3, r2
 80035cc:	60fb      	str	r3, [r7, #12]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	68fa      	ldr	r2, [r7, #12]
 80035d4:	605a      	str	r2, [r3, #4]
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	4a16      	ldr	r2, [pc, #88]	; (8003634 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80035dc:	4293      	cmp	r3, r2
 80035de:	d00e      	beq.n	80035fe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80035e8:	d009      	beq.n	80035fe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	4a12      	ldr	r2, [pc, #72]	; (8003638 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80035f0:	4293      	cmp	r3, r2
 80035f2:	d004      	beq.n	80035fe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4a10      	ldr	r2, [pc, #64]	; (800363c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d10c      	bne.n	8003618 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80035fe:	68bb      	ldr	r3, [r7, #8]
 8003600:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003604:	60bb      	str	r3, [r7, #8]
 8003606:	683b      	ldr	r3, [r7, #0]
 8003608:	685b      	ldr	r3, [r3, #4]
 800360a:	68ba      	ldr	r2, [r7, #8]
 800360c:	4313      	orrs	r3, r2
 800360e:	60bb      	str	r3, [r7, #8]
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	68ba      	ldr	r2, [r7, #8]
 8003616:	609a      	str	r2, [r3, #8]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	2201      	movs	r2, #1
 800361c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	2200      	movs	r2, #0
 8003624:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003628:	2300      	movs	r3, #0
 800362a:	4618      	mov	r0, r3
 800362c:	3714      	adds	r7, #20
 800362e:	46bd      	mov	sp, r7
 8003630:	bc80      	pop	{r7}
 8003632:	4770      	bx	lr
 8003634:	40012c00 	.word	0x40012c00
 8003638:	40000400 	.word	0x40000400
 800363c:	40000800 	.word	0x40000800

08003640 <HAL_TIMEx_CommutCallback>:
 8003640:	b480      	push	{r7}
 8003642:	b083      	sub	sp, #12
 8003644:	af00      	add	r7, sp, #0
 8003646:	6078      	str	r0, [r7, #4]
 8003648:	bf00      	nop
 800364a:	370c      	adds	r7, #12
 800364c:	46bd      	mov	sp, r7
 800364e:	bc80      	pop	{r7}
 8003650:	4770      	bx	lr

08003652 <HAL_TIMEx_BreakCallback>:
 8003652:	b480      	push	{r7}
 8003654:	b083      	sub	sp, #12
 8003656:	af00      	add	r7, sp, #0
 8003658:	6078      	str	r0, [r7, #4]
 800365a:	bf00      	nop
 800365c:	370c      	adds	r7, #12
 800365e:	46bd      	mov	sp, r7
 8003660:	bc80      	pop	{r7}
 8003662:	4770      	bx	lr

08003664 <HAL_UART_Init>:
 8003664:	b580      	push	{r7, lr}
 8003666:	b082      	sub	sp, #8
 8003668:	af00      	add	r7, sp, #0
 800366a:	6078      	str	r0, [r7, #4]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	2b00      	cmp	r3, #0
 8003670:	d101      	bne.n	8003676 <HAL_UART_Init+0x12>
 8003672:	2301      	movs	r3, #1
 8003674:	e03f      	b.n	80036f6 <HAL_UART_Init+0x92>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800367c:	b2db      	uxtb	r3, r3
 800367e:	2b00      	cmp	r3, #0
 8003680:	d106      	bne.n	8003690 <HAL_UART_Init+0x2c>
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	2200      	movs	r2, #0
 8003686:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800368a:	6878      	ldr	r0, [r7, #4]
 800368c:	f7fe f8b0 	bl	80017f0 <HAL_UART_MspInit>
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	2224      	movs	r2, #36	; 0x24
 8003694:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	68da      	ldr	r2, [r3, #12]
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80036a6:	60da      	str	r2, [r3, #12]
 80036a8:	6878      	ldr	r0, [r7, #4]
 80036aa:	f000 f905 	bl	80038b8 <UART_SetConfig>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	691a      	ldr	r2, [r3, #16]
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80036bc:	611a      	str	r2, [r3, #16]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	695a      	ldr	r2, [r3, #20]
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80036cc:	615a      	str	r2, [r3, #20]
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	68da      	ldr	r2, [r3, #12]
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80036dc:	60da      	str	r2, [r3, #12]
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	2200      	movs	r2, #0
 80036e2:	641a      	str	r2, [r3, #64]	; 0x40
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	2220      	movs	r2, #32
 80036e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	2220      	movs	r2, #32
 80036f0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80036f4:	2300      	movs	r3, #0
 80036f6:	4618      	mov	r0, r3
 80036f8:	3708      	adds	r7, #8
 80036fa:	46bd      	mov	sp, r7
 80036fc:	bd80      	pop	{r7, pc}

080036fe <HAL_UART_Transmit>:
 80036fe:	b580      	push	{r7, lr}
 8003700:	b08a      	sub	sp, #40	; 0x28
 8003702:	af02      	add	r7, sp, #8
 8003704:	60f8      	str	r0, [r7, #12]
 8003706:	60b9      	str	r1, [r7, #8]
 8003708:	603b      	str	r3, [r7, #0]
 800370a:	4613      	mov	r3, r2
 800370c:	80fb      	strh	r3, [r7, #6]
 800370e:	2300      	movs	r3, #0
 8003710:	617b      	str	r3, [r7, #20]
 8003712:	68fb      	ldr	r3, [r7, #12]
 8003714:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003718:	b2db      	uxtb	r3, r3
 800371a:	2b20      	cmp	r3, #32
 800371c:	d17c      	bne.n	8003818 <HAL_UART_Transmit+0x11a>
 800371e:	68bb      	ldr	r3, [r7, #8]
 8003720:	2b00      	cmp	r3, #0
 8003722:	d002      	beq.n	800372a <HAL_UART_Transmit+0x2c>
 8003724:	88fb      	ldrh	r3, [r7, #6]
 8003726:	2b00      	cmp	r3, #0
 8003728:	d101      	bne.n	800372e <HAL_UART_Transmit+0x30>
 800372a:	2301      	movs	r3, #1
 800372c:	e075      	b.n	800381a <HAL_UART_Transmit+0x11c>
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003734:	2b01      	cmp	r3, #1
 8003736:	d101      	bne.n	800373c <HAL_UART_Transmit+0x3e>
 8003738:	2302      	movs	r3, #2
 800373a:	e06e      	b.n	800381a <HAL_UART_Transmit+0x11c>
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	2201      	movs	r2, #1
 8003740:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	2200      	movs	r2, #0
 8003748:	641a      	str	r2, [r3, #64]	; 0x40
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	2221      	movs	r2, #33	; 0x21
 800374e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003752:	f7fe f909 	bl	8001968 <HAL_GetTick>
 8003756:	6178      	str	r0, [r7, #20]
 8003758:	68fb      	ldr	r3, [r7, #12]
 800375a:	88fa      	ldrh	r2, [r7, #6]
 800375c:	849a      	strh	r2, [r3, #36]	; 0x24
 800375e:	68fb      	ldr	r3, [r7, #12]
 8003760:	88fa      	ldrh	r2, [r7, #6]
 8003762:	84da      	strh	r2, [r3, #38]	; 0x26
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	689b      	ldr	r3, [r3, #8]
 8003768:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800376c:	d108      	bne.n	8003780 <HAL_UART_Transmit+0x82>
 800376e:	68fb      	ldr	r3, [r7, #12]
 8003770:	691b      	ldr	r3, [r3, #16]
 8003772:	2b00      	cmp	r3, #0
 8003774:	d104      	bne.n	8003780 <HAL_UART_Transmit+0x82>
 8003776:	2300      	movs	r3, #0
 8003778:	61fb      	str	r3, [r7, #28]
 800377a:	68bb      	ldr	r3, [r7, #8]
 800377c:	61bb      	str	r3, [r7, #24]
 800377e:	e003      	b.n	8003788 <HAL_UART_Transmit+0x8a>
 8003780:	68bb      	ldr	r3, [r7, #8]
 8003782:	61fb      	str	r3, [r7, #28]
 8003784:	2300      	movs	r3, #0
 8003786:	61bb      	str	r3, [r7, #24]
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	2200      	movs	r2, #0
 800378c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003790:	e02a      	b.n	80037e8 <HAL_UART_Transmit+0xea>
 8003792:	683b      	ldr	r3, [r7, #0]
 8003794:	9300      	str	r3, [sp, #0]
 8003796:	697b      	ldr	r3, [r7, #20]
 8003798:	2200      	movs	r2, #0
 800379a:	2180      	movs	r1, #128	; 0x80
 800379c:	68f8      	ldr	r0, [r7, #12]
 800379e:	f000 f840 	bl	8003822 <UART_WaitOnFlagUntilTimeout>
 80037a2:	4603      	mov	r3, r0
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	d001      	beq.n	80037ac <HAL_UART_Transmit+0xae>
 80037a8:	2303      	movs	r3, #3
 80037aa:	e036      	b.n	800381a <HAL_UART_Transmit+0x11c>
 80037ac:	69fb      	ldr	r3, [r7, #28]
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	d10b      	bne.n	80037ca <HAL_UART_Transmit+0xcc>
 80037b2:	69bb      	ldr	r3, [r7, #24]
 80037b4:	881b      	ldrh	r3, [r3, #0]
 80037b6:	461a      	mov	r2, r3
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80037c0:	605a      	str	r2, [r3, #4]
 80037c2:	69bb      	ldr	r3, [r7, #24]
 80037c4:	3302      	adds	r3, #2
 80037c6:	61bb      	str	r3, [r7, #24]
 80037c8:	e007      	b.n	80037da <HAL_UART_Transmit+0xdc>
 80037ca:	69fb      	ldr	r3, [r7, #28]
 80037cc:	781a      	ldrb	r2, [r3, #0]
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	605a      	str	r2, [r3, #4]
 80037d4:	69fb      	ldr	r3, [r7, #28]
 80037d6:	3301      	adds	r3, #1
 80037d8:	61fb      	str	r3, [r7, #28]
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80037de:	b29b      	uxth	r3, r3
 80037e0:	3b01      	subs	r3, #1
 80037e2:	b29a      	uxth	r2, r3
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	84da      	strh	r2, [r3, #38]	; 0x26
 80037e8:	68fb      	ldr	r3, [r7, #12]
 80037ea:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80037ec:	b29b      	uxth	r3, r3
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d1cf      	bne.n	8003792 <HAL_UART_Transmit+0x94>
 80037f2:	683b      	ldr	r3, [r7, #0]
 80037f4:	9300      	str	r3, [sp, #0]
 80037f6:	697b      	ldr	r3, [r7, #20]
 80037f8:	2200      	movs	r2, #0
 80037fa:	2140      	movs	r1, #64	; 0x40
 80037fc:	68f8      	ldr	r0, [r7, #12]
 80037fe:	f000 f810 	bl	8003822 <UART_WaitOnFlagUntilTimeout>
 8003802:	4603      	mov	r3, r0
 8003804:	2b00      	cmp	r3, #0
 8003806:	d001      	beq.n	800380c <HAL_UART_Transmit+0x10e>
 8003808:	2303      	movs	r3, #3
 800380a:	e006      	b.n	800381a <HAL_UART_Transmit+0x11c>
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	2220      	movs	r2, #32
 8003810:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003814:	2300      	movs	r3, #0
 8003816:	e000      	b.n	800381a <HAL_UART_Transmit+0x11c>
 8003818:	2302      	movs	r3, #2
 800381a:	4618      	mov	r0, r3
 800381c:	3720      	adds	r7, #32
 800381e:	46bd      	mov	sp, r7
 8003820:	bd80      	pop	{r7, pc}

08003822 <UART_WaitOnFlagUntilTimeout>:
 8003822:	b580      	push	{r7, lr}
 8003824:	b084      	sub	sp, #16
 8003826:	af00      	add	r7, sp, #0
 8003828:	60f8      	str	r0, [r7, #12]
 800382a:	60b9      	str	r1, [r7, #8]
 800382c:	603b      	str	r3, [r7, #0]
 800382e:	4613      	mov	r3, r2
 8003830:	71fb      	strb	r3, [r7, #7]
 8003832:	e02c      	b.n	800388e <UART_WaitOnFlagUntilTimeout+0x6c>
 8003834:	69bb      	ldr	r3, [r7, #24]
 8003836:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800383a:	d028      	beq.n	800388e <UART_WaitOnFlagUntilTimeout+0x6c>
 800383c:	69bb      	ldr	r3, [r7, #24]
 800383e:	2b00      	cmp	r3, #0
 8003840:	d007      	beq.n	8003852 <UART_WaitOnFlagUntilTimeout+0x30>
 8003842:	f7fe f891 	bl	8001968 <HAL_GetTick>
 8003846:	4602      	mov	r2, r0
 8003848:	683b      	ldr	r3, [r7, #0]
 800384a:	1ad3      	subs	r3, r2, r3
 800384c:	69ba      	ldr	r2, [r7, #24]
 800384e:	429a      	cmp	r2, r3
 8003850:	d21d      	bcs.n	800388e <UART_WaitOnFlagUntilTimeout+0x6c>
 8003852:	68fb      	ldr	r3, [r7, #12]
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	68da      	ldr	r2, [r3, #12]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003860:	60da      	str	r2, [r3, #12]
 8003862:	68fb      	ldr	r3, [r7, #12]
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	695a      	ldr	r2, [r3, #20]
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	f022 0201 	bic.w	r2, r2, #1
 8003870:	615a      	str	r2, [r3, #20]
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	2220      	movs	r2, #32
 8003876:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	2220      	movs	r2, #32
 800387e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	2200      	movs	r2, #0
 8003886:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800388a:	2303      	movs	r3, #3
 800388c:	e00f      	b.n	80038ae <UART_WaitOnFlagUntilTimeout+0x8c>
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	681a      	ldr	r2, [r3, #0]
 8003894:	68bb      	ldr	r3, [r7, #8]
 8003896:	4013      	ands	r3, r2
 8003898:	68ba      	ldr	r2, [r7, #8]
 800389a:	429a      	cmp	r2, r3
 800389c:	bf0c      	ite	eq
 800389e:	2301      	moveq	r3, #1
 80038a0:	2300      	movne	r3, #0
 80038a2:	b2db      	uxtb	r3, r3
 80038a4:	461a      	mov	r2, r3
 80038a6:	79fb      	ldrb	r3, [r7, #7]
 80038a8:	429a      	cmp	r2, r3
 80038aa:	d0c3      	beq.n	8003834 <UART_WaitOnFlagUntilTimeout+0x12>
 80038ac:	2300      	movs	r3, #0
 80038ae:	4618      	mov	r0, r3
 80038b0:	3710      	adds	r7, #16
 80038b2:	46bd      	mov	sp, r7
 80038b4:	bd80      	pop	{r7, pc}
	...

080038b8 <UART_SetConfig>:
 80038b8:	b580      	push	{r7, lr}
 80038ba:	b084      	sub	sp, #16
 80038bc:	af00      	add	r7, sp, #0
 80038be:	6078      	str	r0, [r7, #4]
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	691b      	ldr	r3, [r3, #16]
 80038c6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	68da      	ldr	r2, [r3, #12]
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	430a      	orrs	r2, r1
 80038d4:	611a      	str	r2, [r3, #16]
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	689a      	ldr	r2, [r3, #8]
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	691b      	ldr	r3, [r3, #16]
 80038de:	431a      	orrs	r2, r3
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	695b      	ldr	r3, [r3, #20]
 80038e4:	4313      	orrs	r3, r2
 80038e6:	60bb      	str	r3, [r7, #8]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	68db      	ldr	r3, [r3, #12]
 80038ee:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80038f2:	f023 030c 	bic.w	r3, r3, #12
 80038f6:	687a      	ldr	r2, [r7, #4]
 80038f8:	6812      	ldr	r2, [r2, #0]
 80038fa:	68b9      	ldr	r1, [r7, #8]
 80038fc:	430b      	orrs	r3, r1
 80038fe:	60d3      	str	r3, [r2, #12]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	695b      	ldr	r3, [r3, #20]
 8003906:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	699a      	ldr	r2, [r3, #24]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	430a      	orrs	r2, r1
 8003914:	615a      	str	r2, [r3, #20]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	4a2c      	ldr	r2, [pc, #176]	; (80039cc <UART_SetConfig+0x114>)
 800391c:	4293      	cmp	r3, r2
 800391e:	d103      	bne.n	8003928 <UART_SetConfig+0x70>
 8003920:	f7fe ff10 	bl	8002744 <HAL_RCC_GetPCLK2Freq>
 8003924:	60f8      	str	r0, [r7, #12]
 8003926:	e002      	b.n	800392e <UART_SetConfig+0x76>
 8003928:	f7fe fef8 	bl	800271c <HAL_RCC_GetPCLK1Freq>
 800392c:	60f8      	str	r0, [r7, #12]
 800392e:	68fa      	ldr	r2, [r7, #12]
 8003930:	4613      	mov	r3, r2
 8003932:	009b      	lsls	r3, r3, #2
 8003934:	4413      	add	r3, r2
 8003936:	009a      	lsls	r2, r3, #2
 8003938:	441a      	add	r2, r3
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	685b      	ldr	r3, [r3, #4]
 800393e:	009b      	lsls	r3, r3, #2
 8003940:	fbb2 f3f3 	udiv	r3, r2, r3
 8003944:	4a22      	ldr	r2, [pc, #136]	; (80039d0 <UART_SetConfig+0x118>)
 8003946:	fba2 2303 	umull	r2, r3, r2, r3
 800394a:	095b      	lsrs	r3, r3, #5
 800394c:	0119      	lsls	r1, r3, #4
 800394e:	68fa      	ldr	r2, [r7, #12]
 8003950:	4613      	mov	r3, r2
 8003952:	009b      	lsls	r3, r3, #2
 8003954:	4413      	add	r3, r2
 8003956:	009a      	lsls	r2, r3, #2
 8003958:	441a      	add	r2, r3
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	685b      	ldr	r3, [r3, #4]
 800395e:	009b      	lsls	r3, r3, #2
 8003960:	fbb2 f2f3 	udiv	r2, r2, r3
 8003964:	4b1a      	ldr	r3, [pc, #104]	; (80039d0 <UART_SetConfig+0x118>)
 8003966:	fba3 0302 	umull	r0, r3, r3, r2
 800396a:	095b      	lsrs	r3, r3, #5
 800396c:	2064      	movs	r0, #100	; 0x64
 800396e:	fb00 f303 	mul.w	r3, r0, r3
 8003972:	1ad3      	subs	r3, r2, r3
 8003974:	011b      	lsls	r3, r3, #4
 8003976:	3332      	adds	r3, #50	; 0x32
 8003978:	4a15      	ldr	r2, [pc, #84]	; (80039d0 <UART_SetConfig+0x118>)
 800397a:	fba2 2303 	umull	r2, r3, r2, r3
 800397e:	095b      	lsrs	r3, r3, #5
 8003980:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003984:	4419      	add	r1, r3
 8003986:	68fa      	ldr	r2, [r7, #12]
 8003988:	4613      	mov	r3, r2
 800398a:	009b      	lsls	r3, r3, #2
 800398c:	4413      	add	r3, r2
 800398e:	009a      	lsls	r2, r3, #2
 8003990:	441a      	add	r2, r3
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	685b      	ldr	r3, [r3, #4]
 8003996:	009b      	lsls	r3, r3, #2
 8003998:	fbb2 f2f3 	udiv	r2, r2, r3
 800399c:	4b0c      	ldr	r3, [pc, #48]	; (80039d0 <UART_SetConfig+0x118>)
 800399e:	fba3 0302 	umull	r0, r3, r3, r2
 80039a2:	095b      	lsrs	r3, r3, #5
 80039a4:	2064      	movs	r0, #100	; 0x64
 80039a6:	fb00 f303 	mul.w	r3, r0, r3
 80039aa:	1ad3      	subs	r3, r2, r3
 80039ac:	011b      	lsls	r3, r3, #4
 80039ae:	3332      	adds	r3, #50	; 0x32
 80039b0:	4a07      	ldr	r2, [pc, #28]	; (80039d0 <UART_SetConfig+0x118>)
 80039b2:	fba2 2303 	umull	r2, r3, r2, r3
 80039b6:	095b      	lsrs	r3, r3, #5
 80039b8:	f003 020f 	and.w	r2, r3, #15
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	440a      	add	r2, r1
 80039c2:	609a      	str	r2, [r3, #8]
 80039c4:	bf00      	nop
 80039c6:	3710      	adds	r7, #16
 80039c8:	46bd      	mov	sp, r7
 80039ca:	bd80      	pop	{r7, pc}
 80039cc:	40013800 	.word	0x40013800
 80039d0:	51eb851f 	.word	0x51eb851f

080039d4 <__errno>:
 80039d4:	4b01      	ldr	r3, [pc, #4]	; (80039dc <__errno+0x8>)
 80039d6:	6818      	ldr	r0, [r3, #0]
 80039d8:	4770      	bx	lr
 80039da:	bf00      	nop
 80039dc:	2000032c 	.word	0x2000032c

080039e0 <__libc_init_array>:
 80039e0:	b570      	push	{r4, r5, r6, lr}
 80039e2:	2600      	movs	r6, #0
 80039e4:	4d0c      	ldr	r5, [pc, #48]	; (8003a18 <__libc_init_array+0x38>)
 80039e6:	4c0d      	ldr	r4, [pc, #52]	; (8003a1c <__libc_init_array+0x3c>)
 80039e8:	1b64      	subs	r4, r4, r5
 80039ea:	10a4      	asrs	r4, r4, #2
 80039ec:	42a6      	cmp	r6, r4
 80039ee:	d109      	bne.n	8003a04 <__libc_init_array+0x24>
 80039f0:	f000 fc9c 	bl	800432c <_init>
 80039f4:	2600      	movs	r6, #0
 80039f6:	4d0a      	ldr	r5, [pc, #40]	; (8003a20 <__libc_init_array+0x40>)
 80039f8:	4c0a      	ldr	r4, [pc, #40]	; (8003a24 <__libc_init_array+0x44>)
 80039fa:	1b64      	subs	r4, r4, r5
 80039fc:	10a4      	asrs	r4, r4, #2
 80039fe:	42a6      	cmp	r6, r4
 8003a00:	d105      	bne.n	8003a0e <__libc_init_array+0x2e>
 8003a02:	bd70      	pop	{r4, r5, r6, pc}
 8003a04:	f855 3b04 	ldr.w	r3, [r5], #4
 8003a08:	4798      	blx	r3
 8003a0a:	3601      	adds	r6, #1
 8003a0c:	e7ee      	b.n	80039ec <__libc_init_array+0xc>
 8003a0e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003a12:	4798      	blx	r3
 8003a14:	3601      	adds	r6, #1
 8003a16:	e7f2      	b.n	80039fe <__libc_init_array+0x1e>
 8003a18:	080043ac 	.word	0x080043ac
 8003a1c:	080043ac 	.word	0x080043ac
 8003a20:	080043ac 	.word	0x080043ac
 8003a24:	080043b0 	.word	0x080043b0

08003a28 <memset>:
 8003a28:	4603      	mov	r3, r0
 8003a2a:	4402      	add	r2, r0
 8003a2c:	4293      	cmp	r3, r2
 8003a2e:	d100      	bne.n	8003a32 <memset+0xa>
 8003a30:	4770      	bx	lr
 8003a32:	f803 1b01 	strb.w	r1, [r3], #1
 8003a36:	e7f9      	b.n	8003a2c <memset+0x4>

08003a38 <siprintf>:
 8003a38:	b40e      	push	{r1, r2, r3}
 8003a3a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003a3e:	b500      	push	{lr}
 8003a40:	b09c      	sub	sp, #112	; 0x70
 8003a42:	ab1d      	add	r3, sp, #116	; 0x74
 8003a44:	9002      	str	r0, [sp, #8]
 8003a46:	9006      	str	r0, [sp, #24]
 8003a48:	9107      	str	r1, [sp, #28]
 8003a4a:	9104      	str	r1, [sp, #16]
 8003a4c:	4808      	ldr	r0, [pc, #32]	; (8003a70 <siprintf+0x38>)
 8003a4e:	4909      	ldr	r1, [pc, #36]	; (8003a74 <siprintf+0x3c>)
 8003a50:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a54:	9105      	str	r1, [sp, #20]
 8003a56:	6800      	ldr	r0, [r0, #0]
 8003a58:	a902      	add	r1, sp, #8
 8003a5a:	9301      	str	r3, [sp, #4]
 8003a5c:	f000 f868 	bl	8003b30 <_svfiprintf_r>
 8003a60:	2200      	movs	r2, #0
 8003a62:	9b02      	ldr	r3, [sp, #8]
 8003a64:	701a      	strb	r2, [r3, #0]
 8003a66:	b01c      	add	sp, #112	; 0x70
 8003a68:	f85d eb04 	ldr.w	lr, [sp], #4
 8003a6c:	b003      	add	sp, #12
 8003a6e:	4770      	bx	lr
 8003a70:	2000032c 	.word	0x2000032c
 8003a74:	ffff0208 	.word	0xffff0208

08003a78 <__ssputs_r>:
 8003a78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a7c:	688e      	ldr	r6, [r1, #8]
 8003a7e:	4682      	mov	sl, r0
 8003a80:	429e      	cmp	r6, r3
 8003a82:	460c      	mov	r4, r1
 8003a84:	4690      	mov	r8, r2
 8003a86:	461f      	mov	r7, r3
 8003a88:	d838      	bhi.n	8003afc <__ssputs_r+0x84>
 8003a8a:	898a      	ldrh	r2, [r1, #12]
 8003a8c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003a90:	d032      	beq.n	8003af8 <__ssputs_r+0x80>
 8003a92:	6825      	ldr	r5, [r4, #0]
 8003a94:	6909      	ldr	r1, [r1, #16]
 8003a96:	3301      	adds	r3, #1
 8003a98:	eba5 0901 	sub.w	r9, r5, r1
 8003a9c:	6965      	ldr	r5, [r4, #20]
 8003a9e:	444b      	add	r3, r9
 8003aa0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003aa4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003aa8:	106d      	asrs	r5, r5, #1
 8003aaa:	429d      	cmp	r5, r3
 8003aac:	bf38      	it	cc
 8003aae:	461d      	movcc	r5, r3
 8003ab0:	0553      	lsls	r3, r2, #21
 8003ab2:	d531      	bpl.n	8003b18 <__ssputs_r+0xa0>
 8003ab4:	4629      	mov	r1, r5
 8003ab6:	f000 fb6f 	bl	8004198 <_malloc_r>
 8003aba:	4606      	mov	r6, r0
 8003abc:	b950      	cbnz	r0, 8003ad4 <__ssputs_r+0x5c>
 8003abe:	230c      	movs	r3, #12
 8003ac0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003ac4:	f8ca 3000 	str.w	r3, [sl]
 8003ac8:	89a3      	ldrh	r3, [r4, #12]
 8003aca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ace:	81a3      	strh	r3, [r4, #12]
 8003ad0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ad4:	464a      	mov	r2, r9
 8003ad6:	6921      	ldr	r1, [r4, #16]
 8003ad8:	f000 face 	bl	8004078 <memcpy>
 8003adc:	89a3      	ldrh	r3, [r4, #12]
 8003ade:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003ae2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003ae6:	81a3      	strh	r3, [r4, #12]
 8003ae8:	6126      	str	r6, [r4, #16]
 8003aea:	444e      	add	r6, r9
 8003aec:	6026      	str	r6, [r4, #0]
 8003aee:	463e      	mov	r6, r7
 8003af0:	6165      	str	r5, [r4, #20]
 8003af2:	eba5 0509 	sub.w	r5, r5, r9
 8003af6:	60a5      	str	r5, [r4, #8]
 8003af8:	42be      	cmp	r6, r7
 8003afa:	d900      	bls.n	8003afe <__ssputs_r+0x86>
 8003afc:	463e      	mov	r6, r7
 8003afe:	4632      	mov	r2, r6
 8003b00:	4641      	mov	r1, r8
 8003b02:	6820      	ldr	r0, [r4, #0]
 8003b04:	f000 fac6 	bl	8004094 <memmove>
 8003b08:	68a3      	ldr	r3, [r4, #8]
 8003b0a:	2000      	movs	r0, #0
 8003b0c:	1b9b      	subs	r3, r3, r6
 8003b0e:	60a3      	str	r3, [r4, #8]
 8003b10:	6823      	ldr	r3, [r4, #0]
 8003b12:	4433      	add	r3, r6
 8003b14:	6023      	str	r3, [r4, #0]
 8003b16:	e7db      	b.n	8003ad0 <__ssputs_r+0x58>
 8003b18:	462a      	mov	r2, r5
 8003b1a:	f000 fbb1 	bl	8004280 <_realloc_r>
 8003b1e:	4606      	mov	r6, r0
 8003b20:	2800      	cmp	r0, #0
 8003b22:	d1e1      	bne.n	8003ae8 <__ssputs_r+0x70>
 8003b24:	4650      	mov	r0, sl
 8003b26:	6921      	ldr	r1, [r4, #16]
 8003b28:	f000 face 	bl	80040c8 <_free_r>
 8003b2c:	e7c7      	b.n	8003abe <__ssputs_r+0x46>
	...

08003b30 <_svfiprintf_r>:
 8003b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b34:	4698      	mov	r8, r3
 8003b36:	898b      	ldrh	r3, [r1, #12]
 8003b38:	4607      	mov	r7, r0
 8003b3a:	061b      	lsls	r3, r3, #24
 8003b3c:	460d      	mov	r5, r1
 8003b3e:	4614      	mov	r4, r2
 8003b40:	b09d      	sub	sp, #116	; 0x74
 8003b42:	d50e      	bpl.n	8003b62 <_svfiprintf_r+0x32>
 8003b44:	690b      	ldr	r3, [r1, #16]
 8003b46:	b963      	cbnz	r3, 8003b62 <_svfiprintf_r+0x32>
 8003b48:	2140      	movs	r1, #64	; 0x40
 8003b4a:	f000 fb25 	bl	8004198 <_malloc_r>
 8003b4e:	6028      	str	r0, [r5, #0]
 8003b50:	6128      	str	r0, [r5, #16]
 8003b52:	b920      	cbnz	r0, 8003b5e <_svfiprintf_r+0x2e>
 8003b54:	230c      	movs	r3, #12
 8003b56:	603b      	str	r3, [r7, #0]
 8003b58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003b5c:	e0d1      	b.n	8003d02 <_svfiprintf_r+0x1d2>
 8003b5e:	2340      	movs	r3, #64	; 0x40
 8003b60:	616b      	str	r3, [r5, #20]
 8003b62:	2300      	movs	r3, #0
 8003b64:	9309      	str	r3, [sp, #36]	; 0x24
 8003b66:	2320      	movs	r3, #32
 8003b68:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003b6c:	2330      	movs	r3, #48	; 0x30
 8003b6e:	f04f 0901 	mov.w	r9, #1
 8003b72:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b76:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003d1c <_svfiprintf_r+0x1ec>
 8003b7a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003b7e:	4623      	mov	r3, r4
 8003b80:	469a      	mov	sl, r3
 8003b82:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b86:	b10a      	cbz	r2, 8003b8c <_svfiprintf_r+0x5c>
 8003b88:	2a25      	cmp	r2, #37	; 0x25
 8003b8a:	d1f9      	bne.n	8003b80 <_svfiprintf_r+0x50>
 8003b8c:	ebba 0b04 	subs.w	fp, sl, r4
 8003b90:	d00b      	beq.n	8003baa <_svfiprintf_r+0x7a>
 8003b92:	465b      	mov	r3, fp
 8003b94:	4622      	mov	r2, r4
 8003b96:	4629      	mov	r1, r5
 8003b98:	4638      	mov	r0, r7
 8003b9a:	f7ff ff6d 	bl	8003a78 <__ssputs_r>
 8003b9e:	3001      	adds	r0, #1
 8003ba0:	f000 80aa 	beq.w	8003cf8 <_svfiprintf_r+0x1c8>
 8003ba4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ba6:	445a      	add	r2, fp
 8003ba8:	9209      	str	r2, [sp, #36]	; 0x24
 8003baa:	f89a 3000 	ldrb.w	r3, [sl]
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	f000 80a2 	beq.w	8003cf8 <_svfiprintf_r+0x1c8>
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003bba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003bbe:	f10a 0a01 	add.w	sl, sl, #1
 8003bc2:	9304      	str	r3, [sp, #16]
 8003bc4:	9307      	str	r3, [sp, #28]
 8003bc6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003bca:	931a      	str	r3, [sp, #104]	; 0x68
 8003bcc:	4654      	mov	r4, sl
 8003bce:	2205      	movs	r2, #5
 8003bd0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bd4:	4851      	ldr	r0, [pc, #324]	; (8003d1c <_svfiprintf_r+0x1ec>)
 8003bd6:	f000 fa41 	bl	800405c <memchr>
 8003bda:	9a04      	ldr	r2, [sp, #16]
 8003bdc:	b9d8      	cbnz	r0, 8003c16 <_svfiprintf_r+0xe6>
 8003bde:	06d0      	lsls	r0, r2, #27
 8003be0:	bf44      	itt	mi
 8003be2:	2320      	movmi	r3, #32
 8003be4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003be8:	0711      	lsls	r1, r2, #28
 8003bea:	bf44      	itt	mi
 8003bec:	232b      	movmi	r3, #43	; 0x2b
 8003bee:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003bf2:	f89a 3000 	ldrb.w	r3, [sl]
 8003bf6:	2b2a      	cmp	r3, #42	; 0x2a
 8003bf8:	d015      	beq.n	8003c26 <_svfiprintf_r+0xf6>
 8003bfa:	4654      	mov	r4, sl
 8003bfc:	2000      	movs	r0, #0
 8003bfe:	f04f 0c0a 	mov.w	ip, #10
 8003c02:	9a07      	ldr	r2, [sp, #28]
 8003c04:	4621      	mov	r1, r4
 8003c06:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003c0a:	3b30      	subs	r3, #48	; 0x30
 8003c0c:	2b09      	cmp	r3, #9
 8003c0e:	d94e      	bls.n	8003cae <_svfiprintf_r+0x17e>
 8003c10:	b1b0      	cbz	r0, 8003c40 <_svfiprintf_r+0x110>
 8003c12:	9207      	str	r2, [sp, #28]
 8003c14:	e014      	b.n	8003c40 <_svfiprintf_r+0x110>
 8003c16:	eba0 0308 	sub.w	r3, r0, r8
 8003c1a:	fa09 f303 	lsl.w	r3, r9, r3
 8003c1e:	4313      	orrs	r3, r2
 8003c20:	46a2      	mov	sl, r4
 8003c22:	9304      	str	r3, [sp, #16]
 8003c24:	e7d2      	b.n	8003bcc <_svfiprintf_r+0x9c>
 8003c26:	9b03      	ldr	r3, [sp, #12]
 8003c28:	1d19      	adds	r1, r3, #4
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	9103      	str	r1, [sp, #12]
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	bfbb      	ittet	lt
 8003c32:	425b      	neglt	r3, r3
 8003c34:	f042 0202 	orrlt.w	r2, r2, #2
 8003c38:	9307      	strge	r3, [sp, #28]
 8003c3a:	9307      	strlt	r3, [sp, #28]
 8003c3c:	bfb8      	it	lt
 8003c3e:	9204      	strlt	r2, [sp, #16]
 8003c40:	7823      	ldrb	r3, [r4, #0]
 8003c42:	2b2e      	cmp	r3, #46	; 0x2e
 8003c44:	d10c      	bne.n	8003c60 <_svfiprintf_r+0x130>
 8003c46:	7863      	ldrb	r3, [r4, #1]
 8003c48:	2b2a      	cmp	r3, #42	; 0x2a
 8003c4a:	d135      	bne.n	8003cb8 <_svfiprintf_r+0x188>
 8003c4c:	9b03      	ldr	r3, [sp, #12]
 8003c4e:	3402      	adds	r4, #2
 8003c50:	1d1a      	adds	r2, r3, #4
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	9203      	str	r2, [sp, #12]
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	bfb8      	it	lt
 8003c5a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003c5e:	9305      	str	r3, [sp, #20]
 8003c60:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8003d20 <_svfiprintf_r+0x1f0>
 8003c64:	2203      	movs	r2, #3
 8003c66:	4650      	mov	r0, sl
 8003c68:	7821      	ldrb	r1, [r4, #0]
 8003c6a:	f000 f9f7 	bl	800405c <memchr>
 8003c6e:	b140      	cbz	r0, 8003c82 <_svfiprintf_r+0x152>
 8003c70:	2340      	movs	r3, #64	; 0x40
 8003c72:	eba0 000a 	sub.w	r0, r0, sl
 8003c76:	fa03 f000 	lsl.w	r0, r3, r0
 8003c7a:	9b04      	ldr	r3, [sp, #16]
 8003c7c:	3401      	adds	r4, #1
 8003c7e:	4303      	orrs	r3, r0
 8003c80:	9304      	str	r3, [sp, #16]
 8003c82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c86:	2206      	movs	r2, #6
 8003c88:	4826      	ldr	r0, [pc, #152]	; (8003d24 <_svfiprintf_r+0x1f4>)
 8003c8a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003c8e:	f000 f9e5 	bl	800405c <memchr>
 8003c92:	2800      	cmp	r0, #0
 8003c94:	d038      	beq.n	8003d08 <_svfiprintf_r+0x1d8>
 8003c96:	4b24      	ldr	r3, [pc, #144]	; (8003d28 <_svfiprintf_r+0x1f8>)
 8003c98:	bb1b      	cbnz	r3, 8003ce2 <_svfiprintf_r+0x1b2>
 8003c9a:	9b03      	ldr	r3, [sp, #12]
 8003c9c:	3307      	adds	r3, #7
 8003c9e:	f023 0307 	bic.w	r3, r3, #7
 8003ca2:	3308      	adds	r3, #8
 8003ca4:	9303      	str	r3, [sp, #12]
 8003ca6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ca8:	4433      	add	r3, r6
 8003caa:	9309      	str	r3, [sp, #36]	; 0x24
 8003cac:	e767      	b.n	8003b7e <_svfiprintf_r+0x4e>
 8003cae:	460c      	mov	r4, r1
 8003cb0:	2001      	movs	r0, #1
 8003cb2:	fb0c 3202 	mla	r2, ip, r2, r3
 8003cb6:	e7a5      	b.n	8003c04 <_svfiprintf_r+0xd4>
 8003cb8:	2300      	movs	r3, #0
 8003cba:	f04f 0c0a 	mov.w	ip, #10
 8003cbe:	4619      	mov	r1, r3
 8003cc0:	3401      	adds	r4, #1
 8003cc2:	9305      	str	r3, [sp, #20]
 8003cc4:	4620      	mov	r0, r4
 8003cc6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003cca:	3a30      	subs	r2, #48	; 0x30
 8003ccc:	2a09      	cmp	r2, #9
 8003cce:	d903      	bls.n	8003cd8 <_svfiprintf_r+0x1a8>
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	d0c5      	beq.n	8003c60 <_svfiprintf_r+0x130>
 8003cd4:	9105      	str	r1, [sp, #20]
 8003cd6:	e7c3      	b.n	8003c60 <_svfiprintf_r+0x130>
 8003cd8:	4604      	mov	r4, r0
 8003cda:	2301      	movs	r3, #1
 8003cdc:	fb0c 2101 	mla	r1, ip, r1, r2
 8003ce0:	e7f0      	b.n	8003cc4 <_svfiprintf_r+0x194>
 8003ce2:	ab03      	add	r3, sp, #12
 8003ce4:	9300      	str	r3, [sp, #0]
 8003ce6:	462a      	mov	r2, r5
 8003ce8:	4638      	mov	r0, r7
 8003cea:	4b10      	ldr	r3, [pc, #64]	; (8003d2c <_svfiprintf_r+0x1fc>)
 8003cec:	a904      	add	r1, sp, #16
 8003cee:	f3af 8000 	nop.w
 8003cf2:	1c42      	adds	r2, r0, #1
 8003cf4:	4606      	mov	r6, r0
 8003cf6:	d1d6      	bne.n	8003ca6 <_svfiprintf_r+0x176>
 8003cf8:	89ab      	ldrh	r3, [r5, #12]
 8003cfa:	065b      	lsls	r3, r3, #25
 8003cfc:	f53f af2c 	bmi.w	8003b58 <_svfiprintf_r+0x28>
 8003d00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003d02:	b01d      	add	sp, #116	; 0x74
 8003d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d08:	ab03      	add	r3, sp, #12
 8003d0a:	9300      	str	r3, [sp, #0]
 8003d0c:	462a      	mov	r2, r5
 8003d0e:	4638      	mov	r0, r7
 8003d10:	4b06      	ldr	r3, [pc, #24]	; (8003d2c <_svfiprintf_r+0x1fc>)
 8003d12:	a904      	add	r1, sp, #16
 8003d14:	f000 f87c 	bl	8003e10 <_printf_i>
 8003d18:	e7eb      	b.n	8003cf2 <_svfiprintf_r+0x1c2>
 8003d1a:	bf00      	nop
 8003d1c:	08004378 	.word	0x08004378
 8003d20:	0800437e 	.word	0x0800437e
 8003d24:	08004382 	.word	0x08004382
 8003d28:	00000000 	.word	0x00000000
 8003d2c:	08003a79 	.word	0x08003a79

08003d30 <_printf_common>:
 8003d30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d34:	4616      	mov	r6, r2
 8003d36:	4699      	mov	r9, r3
 8003d38:	688a      	ldr	r2, [r1, #8]
 8003d3a:	690b      	ldr	r3, [r1, #16]
 8003d3c:	4607      	mov	r7, r0
 8003d3e:	4293      	cmp	r3, r2
 8003d40:	bfb8      	it	lt
 8003d42:	4613      	movlt	r3, r2
 8003d44:	6033      	str	r3, [r6, #0]
 8003d46:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003d4a:	460c      	mov	r4, r1
 8003d4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003d50:	b10a      	cbz	r2, 8003d56 <_printf_common+0x26>
 8003d52:	3301      	adds	r3, #1
 8003d54:	6033      	str	r3, [r6, #0]
 8003d56:	6823      	ldr	r3, [r4, #0]
 8003d58:	0699      	lsls	r1, r3, #26
 8003d5a:	bf42      	ittt	mi
 8003d5c:	6833      	ldrmi	r3, [r6, #0]
 8003d5e:	3302      	addmi	r3, #2
 8003d60:	6033      	strmi	r3, [r6, #0]
 8003d62:	6825      	ldr	r5, [r4, #0]
 8003d64:	f015 0506 	ands.w	r5, r5, #6
 8003d68:	d106      	bne.n	8003d78 <_printf_common+0x48>
 8003d6a:	f104 0a19 	add.w	sl, r4, #25
 8003d6e:	68e3      	ldr	r3, [r4, #12]
 8003d70:	6832      	ldr	r2, [r6, #0]
 8003d72:	1a9b      	subs	r3, r3, r2
 8003d74:	42ab      	cmp	r3, r5
 8003d76:	dc28      	bgt.n	8003dca <_printf_common+0x9a>
 8003d78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003d7c:	1e13      	subs	r3, r2, #0
 8003d7e:	6822      	ldr	r2, [r4, #0]
 8003d80:	bf18      	it	ne
 8003d82:	2301      	movne	r3, #1
 8003d84:	0692      	lsls	r2, r2, #26
 8003d86:	d42d      	bmi.n	8003de4 <_printf_common+0xb4>
 8003d88:	4649      	mov	r1, r9
 8003d8a:	4638      	mov	r0, r7
 8003d8c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003d90:	47c0      	blx	r8
 8003d92:	3001      	adds	r0, #1
 8003d94:	d020      	beq.n	8003dd8 <_printf_common+0xa8>
 8003d96:	6823      	ldr	r3, [r4, #0]
 8003d98:	68e5      	ldr	r5, [r4, #12]
 8003d9a:	f003 0306 	and.w	r3, r3, #6
 8003d9e:	2b04      	cmp	r3, #4
 8003da0:	bf18      	it	ne
 8003da2:	2500      	movne	r5, #0
 8003da4:	6832      	ldr	r2, [r6, #0]
 8003da6:	f04f 0600 	mov.w	r6, #0
 8003daa:	68a3      	ldr	r3, [r4, #8]
 8003dac:	bf08      	it	eq
 8003dae:	1aad      	subeq	r5, r5, r2
 8003db0:	6922      	ldr	r2, [r4, #16]
 8003db2:	bf08      	it	eq
 8003db4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003db8:	4293      	cmp	r3, r2
 8003dba:	bfc4      	itt	gt
 8003dbc:	1a9b      	subgt	r3, r3, r2
 8003dbe:	18ed      	addgt	r5, r5, r3
 8003dc0:	341a      	adds	r4, #26
 8003dc2:	42b5      	cmp	r5, r6
 8003dc4:	d11a      	bne.n	8003dfc <_printf_common+0xcc>
 8003dc6:	2000      	movs	r0, #0
 8003dc8:	e008      	b.n	8003ddc <_printf_common+0xac>
 8003dca:	2301      	movs	r3, #1
 8003dcc:	4652      	mov	r2, sl
 8003dce:	4649      	mov	r1, r9
 8003dd0:	4638      	mov	r0, r7
 8003dd2:	47c0      	blx	r8
 8003dd4:	3001      	adds	r0, #1
 8003dd6:	d103      	bne.n	8003de0 <_printf_common+0xb0>
 8003dd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003ddc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003de0:	3501      	adds	r5, #1
 8003de2:	e7c4      	b.n	8003d6e <_printf_common+0x3e>
 8003de4:	2030      	movs	r0, #48	; 0x30
 8003de6:	18e1      	adds	r1, r4, r3
 8003de8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003dec:	1c5a      	adds	r2, r3, #1
 8003dee:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003df2:	4422      	add	r2, r4
 8003df4:	3302      	adds	r3, #2
 8003df6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003dfa:	e7c5      	b.n	8003d88 <_printf_common+0x58>
 8003dfc:	2301      	movs	r3, #1
 8003dfe:	4622      	mov	r2, r4
 8003e00:	4649      	mov	r1, r9
 8003e02:	4638      	mov	r0, r7
 8003e04:	47c0      	blx	r8
 8003e06:	3001      	adds	r0, #1
 8003e08:	d0e6      	beq.n	8003dd8 <_printf_common+0xa8>
 8003e0a:	3601      	adds	r6, #1
 8003e0c:	e7d9      	b.n	8003dc2 <_printf_common+0x92>
	...

08003e10 <_printf_i>:
 8003e10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003e14:	7e0f      	ldrb	r7, [r1, #24]
 8003e16:	4691      	mov	r9, r2
 8003e18:	2f78      	cmp	r7, #120	; 0x78
 8003e1a:	4680      	mov	r8, r0
 8003e1c:	460c      	mov	r4, r1
 8003e1e:	469a      	mov	sl, r3
 8003e20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003e22:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003e26:	d807      	bhi.n	8003e38 <_printf_i+0x28>
 8003e28:	2f62      	cmp	r7, #98	; 0x62
 8003e2a:	d80a      	bhi.n	8003e42 <_printf_i+0x32>
 8003e2c:	2f00      	cmp	r7, #0
 8003e2e:	f000 80d9 	beq.w	8003fe4 <_printf_i+0x1d4>
 8003e32:	2f58      	cmp	r7, #88	; 0x58
 8003e34:	f000 80a4 	beq.w	8003f80 <_printf_i+0x170>
 8003e38:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003e3c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003e40:	e03a      	b.n	8003eb8 <_printf_i+0xa8>
 8003e42:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003e46:	2b15      	cmp	r3, #21
 8003e48:	d8f6      	bhi.n	8003e38 <_printf_i+0x28>
 8003e4a:	a101      	add	r1, pc, #4	; (adr r1, 8003e50 <_printf_i+0x40>)
 8003e4c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003e50:	08003ea9 	.word	0x08003ea9
 8003e54:	08003ebd 	.word	0x08003ebd
 8003e58:	08003e39 	.word	0x08003e39
 8003e5c:	08003e39 	.word	0x08003e39
 8003e60:	08003e39 	.word	0x08003e39
 8003e64:	08003e39 	.word	0x08003e39
 8003e68:	08003ebd 	.word	0x08003ebd
 8003e6c:	08003e39 	.word	0x08003e39
 8003e70:	08003e39 	.word	0x08003e39
 8003e74:	08003e39 	.word	0x08003e39
 8003e78:	08003e39 	.word	0x08003e39
 8003e7c:	08003fcb 	.word	0x08003fcb
 8003e80:	08003eed 	.word	0x08003eed
 8003e84:	08003fad 	.word	0x08003fad
 8003e88:	08003e39 	.word	0x08003e39
 8003e8c:	08003e39 	.word	0x08003e39
 8003e90:	08003fed 	.word	0x08003fed
 8003e94:	08003e39 	.word	0x08003e39
 8003e98:	08003eed 	.word	0x08003eed
 8003e9c:	08003e39 	.word	0x08003e39
 8003ea0:	08003e39 	.word	0x08003e39
 8003ea4:	08003fb5 	.word	0x08003fb5
 8003ea8:	682b      	ldr	r3, [r5, #0]
 8003eaa:	1d1a      	adds	r2, r3, #4
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	602a      	str	r2, [r5, #0]
 8003eb0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003eb4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003eb8:	2301      	movs	r3, #1
 8003eba:	e0a4      	b.n	8004006 <_printf_i+0x1f6>
 8003ebc:	6820      	ldr	r0, [r4, #0]
 8003ebe:	6829      	ldr	r1, [r5, #0]
 8003ec0:	0606      	lsls	r6, r0, #24
 8003ec2:	f101 0304 	add.w	r3, r1, #4
 8003ec6:	d50a      	bpl.n	8003ede <_printf_i+0xce>
 8003ec8:	680e      	ldr	r6, [r1, #0]
 8003eca:	602b      	str	r3, [r5, #0]
 8003ecc:	2e00      	cmp	r6, #0
 8003ece:	da03      	bge.n	8003ed8 <_printf_i+0xc8>
 8003ed0:	232d      	movs	r3, #45	; 0x2d
 8003ed2:	4276      	negs	r6, r6
 8003ed4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003ed8:	230a      	movs	r3, #10
 8003eda:	485e      	ldr	r0, [pc, #376]	; (8004054 <_printf_i+0x244>)
 8003edc:	e019      	b.n	8003f12 <_printf_i+0x102>
 8003ede:	680e      	ldr	r6, [r1, #0]
 8003ee0:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003ee4:	602b      	str	r3, [r5, #0]
 8003ee6:	bf18      	it	ne
 8003ee8:	b236      	sxthne	r6, r6
 8003eea:	e7ef      	b.n	8003ecc <_printf_i+0xbc>
 8003eec:	682b      	ldr	r3, [r5, #0]
 8003eee:	6820      	ldr	r0, [r4, #0]
 8003ef0:	1d19      	adds	r1, r3, #4
 8003ef2:	6029      	str	r1, [r5, #0]
 8003ef4:	0601      	lsls	r1, r0, #24
 8003ef6:	d501      	bpl.n	8003efc <_printf_i+0xec>
 8003ef8:	681e      	ldr	r6, [r3, #0]
 8003efa:	e002      	b.n	8003f02 <_printf_i+0xf2>
 8003efc:	0646      	lsls	r6, r0, #25
 8003efe:	d5fb      	bpl.n	8003ef8 <_printf_i+0xe8>
 8003f00:	881e      	ldrh	r6, [r3, #0]
 8003f02:	2f6f      	cmp	r7, #111	; 0x6f
 8003f04:	bf0c      	ite	eq
 8003f06:	2308      	moveq	r3, #8
 8003f08:	230a      	movne	r3, #10
 8003f0a:	4852      	ldr	r0, [pc, #328]	; (8004054 <_printf_i+0x244>)
 8003f0c:	2100      	movs	r1, #0
 8003f0e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003f12:	6865      	ldr	r5, [r4, #4]
 8003f14:	2d00      	cmp	r5, #0
 8003f16:	bfa8      	it	ge
 8003f18:	6821      	ldrge	r1, [r4, #0]
 8003f1a:	60a5      	str	r5, [r4, #8]
 8003f1c:	bfa4      	itt	ge
 8003f1e:	f021 0104 	bicge.w	r1, r1, #4
 8003f22:	6021      	strge	r1, [r4, #0]
 8003f24:	b90e      	cbnz	r6, 8003f2a <_printf_i+0x11a>
 8003f26:	2d00      	cmp	r5, #0
 8003f28:	d04d      	beq.n	8003fc6 <_printf_i+0x1b6>
 8003f2a:	4615      	mov	r5, r2
 8003f2c:	fbb6 f1f3 	udiv	r1, r6, r3
 8003f30:	fb03 6711 	mls	r7, r3, r1, r6
 8003f34:	5dc7      	ldrb	r7, [r0, r7]
 8003f36:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003f3a:	4637      	mov	r7, r6
 8003f3c:	42bb      	cmp	r3, r7
 8003f3e:	460e      	mov	r6, r1
 8003f40:	d9f4      	bls.n	8003f2c <_printf_i+0x11c>
 8003f42:	2b08      	cmp	r3, #8
 8003f44:	d10b      	bne.n	8003f5e <_printf_i+0x14e>
 8003f46:	6823      	ldr	r3, [r4, #0]
 8003f48:	07de      	lsls	r6, r3, #31
 8003f4a:	d508      	bpl.n	8003f5e <_printf_i+0x14e>
 8003f4c:	6923      	ldr	r3, [r4, #16]
 8003f4e:	6861      	ldr	r1, [r4, #4]
 8003f50:	4299      	cmp	r1, r3
 8003f52:	bfde      	ittt	le
 8003f54:	2330      	movle	r3, #48	; 0x30
 8003f56:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003f5a:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8003f5e:	1b52      	subs	r2, r2, r5
 8003f60:	6122      	str	r2, [r4, #16]
 8003f62:	464b      	mov	r3, r9
 8003f64:	4621      	mov	r1, r4
 8003f66:	4640      	mov	r0, r8
 8003f68:	f8cd a000 	str.w	sl, [sp]
 8003f6c:	aa03      	add	r2, sp, #12
 8003f6e:	f7ff fedf 	bl	8003d30 <_printf_common>
 8003f72:	3001      	adds	r0, #1
 8003f74:	d14c      	bne.n	8004010 <_printf_i+0x200>
 8003f76:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003f7a:	b004      	add	sp, #16
 8003f7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f80:	4834      	ldr	r0, [pc, #208]	; (8004054 <_printf_i+0x244>)
 8003f82:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003f86:	6829      	ldr	r1, [r5, #0]
 8003f88:	6823      	ldr	r3, [r4, #0]
 8003f8a:	f851 6b04 	ldr.w	r6, [r1], #4
 8003f8e:	6029      	str	r1, [r5, #0]
 8003f90:	061d      	lsls	r5, r3, #24
 8003f92:	d514      	bpl.n	8003fbe <_printf_i+0x1ae>
 8003f94:	07df      	lsls	r7, r3, #31
 8003f96:	bf44      	itt	mi
 8003f98:	f043 0320 	orrmi.w	r3, r3, #32
 8003f9c:	6023      	strmi	r3, [r4, #0]
 8003f9e:	b91e      	cbnz	r6, 8003fa8 <_printf_i+0x198>
 8003fa0:	6823      	ldr	r3, [r4, #0]
 8003fa2:	f023 0320 	bic.w	r3, r3, #32
 8003fa6:	6023      	str	r3, [r4, #0]
 8003fa8:	2310      	movs	r3, #16
 8003faa:	e7af      	b.n	8003f0c <_printf_i+0xfc>
 8003fac:	6823      	ldr	r3, [r4, #0]
 8003fae:	f043 0320 	orr.w	r3, r3, #32
 8003fb2:	6023      	str	r3, [r4, #0]
 8003fb4:	2378      	movs	r3, #120	; 0x78
 8003fb6:	4828      	ldr	r0, [pc, #160]	; (8004058 <_printf_i+0x248>)
 8003fb8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003fbc:	e7e3      	b.n	8003f86 <_printf_i+0x176>
 8003fbe:	0659      	lsls	r1, r3, #25
 8003fc0:	bf48      	it	mi
 8003fc2:	b2b6      	uxthmi	r6, r6
 8003fc4:	e7e6      	b.n	8003f94 <_printf_i+0x184>
 8003fc6:	4615      	mov	r5, r2
 8003fc8:	e7bb      	b.n	8003f42 <_printf_i+0x132>
 8003fca:	682b      	ldr	r3, [r5, #0]
 8003fcc:	6826      	ldr	r6, [r4, #0]
 8003fce:	1d18      	adds	r0, r3, #4
 8003fd0:	6961      	ldr	r1, [r4, #20]
 8003fd2:	6028      	str	r0, [r5, #0]
 8003fd4:	0635      	lsls	r5, r6, #24
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	d501      	bpl.n	8003fde <_printf_i+0x1ce>
 8003fda:	6019      	str	r1, [r3, #0]
 8003fdc:	e002      	b.n	8003fe4 <_printf_i+0x1d4>
 8003fde:	0670      	lsls	r0, r6, #25
 8003fe0:	d5fb      	bpl.n	8003fda <_printf_i+0x1ca>
 8003fe2:	8019      	strh	r1, [r3, #0]
 8003fe4:	2300      	movs	r3, #0
 8003fe6:	4615      	mov	r5, r2
 8003fe8:	6123      	str	r3, [r4, #16]
 8003fea:	e7ba      	b.n	8003f62 <_printf_i+0x152>
 8003fec:	682b      	ldr	r3, [r5, #0]
 8003fee:	2100      	movs	r1, #0
 8003ff0:	1d1a      	adds	r2, r3, #4
 8003ff2:	602a      	str	r2, [r5, #0]
 8003ff4:	681d      	ldr	r5, [r3, #0]
 8003ff6:	6862      	ldr	r2, [r4, #4]
 8003ff8:	4628      	mov	r0, r5
 8003ffa:	f000 f82f 	bl	800405c <memchr>
 8003ffe:	b108      	cbz	r0, 8004004 <_printf_i+0x1f4>
 8004000:	1b40      	subs	r0, r0, r5
 8004002:	6060      	str	r0, [r4, #4]
 8004004:	6863      	ldr	r3, [r4, #4]
 8004006:	6123      	str	r3, [r4, #16]
 8004008:	2300      	movs	r3, #0
 800400a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800400e:	e7a8      	b.n	8003f62 <_printf_i+0x152>
 8004010:	462a      	mov	r2, r5
 8004012:	4649      	mov	r1, r9
 8004014:	4640      	mov	r0, r8
 8004016:	6923      	ldr	r3, [r4, #16]
 8004018:	47d0      	blx	sl
 800401a:	3001      	adds	r0, #1
 800401c:	d0ab      	beq.n	8003f76 <_printf_i+0x166>
 800401e:	6823      	ldr	r3, [r4, #0]
 8004020:	079b      	lsls	r3, r3, #30
 8004022:	d413      	bmi.n	800404c <_printf_i+0x23c>
 8004024:	68e0      	ldr	r0, [r4, #12]
 8004026:	9b03      	ldr	r3, [sp, #12]
 8004028:	4298      	cmp	r0, r3
 800402a:	bfb8      	it	lt
 800402c:	4618      	movlt	r0, r3
 800402e:	e7a4      	b.n	8003f7a <_printf_i+0x16a>
 8004030:	2301      	movs	r3, #1
 8004032:	4632      	mov	r2, r6
 8004034:	4649      	mov	r1, r9
 8004036:	4640      	mov	r0, r8
 8004038:	47d0      	blx	sl
 800403a:	3001      	adds	r0, #1
 800403c:	d09b      	beq.n	8003f76 <_printf_i+0x166>
 800403e:	3501      	adds	r5, #1
 8004040:	68e3      	ldr	r3, [r4, #12]
 8004042:	9903      	ldr	r1, [sp, #12]
 8004044:	1a5b      	subs	r3, r3, r1
 8004046:	42ab      	cmp	r3, r5
 8004048:	dcf2      	bgt.n	8004030 <_printf_i+0x220>
 800404a:	e7eb      	b.n	8004024 <_printf_i+0x214>
 800404c:	2500      	movs	r5, #0
 800404e:	f104 0619 	add.w	r6, r4, #25
 8004052:	e7f5      	b.n	8004040 <_printf_i+0x230>
 8004054:	08004389 	.word	0x08004389
 8004058:	0800439a 	.word	0x0800439a

0800405c <memchr>:
 800405c:	4603      	mov	r3, r0
 800405e:	b510      	push	{r4, lr}
 8004060:	b2c9      	uxtb	r1, r1
 8004062:	4402      	add	r2, r0
 8004064:	4293      	cmp	r3, r2
 8004066:	4618      	mov	r0, r3
 8004068:	d101      	bne.n	800406e <memchr+0x12>
 800406a:	2000      	movs	r0, #0
 800406c:	e003      	b.n	8004076 <memchr+0x1a>
 800406e:	7804      	ldrb	r4, [r0, #0]
 8004070:	3301      	adds	r3, #1
 8004072:	428c      	cmp	r4, r1
 8004074:	d1f6      	bne.n	8004064 <memchr+0x8>
 8004076:	bd10      	pop	{r4, pc}

08004078 <memcpy>:
 8004078:	440a      	add	r2, r1
 800407a:	4291      	cmp	r1, r2
 800407c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8004080:	d100      	bne.n	8004084 <memcpy+0xc>
 8004082:	4770      	bx	lr
 8004084:	b510      	push	{r4, lr}
 8004086:	f811 4b01 	ldrb.w	r4, [r1], #1
 800408a:	4291      	cmp	r1, r2
 800408c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004090:	d1f9      	bne.n	8004086 <memcpy+0xe>
 8004092:	bd10      	pop	{r4, pc}

08004094 <memmove>:
 8004094:	4288      	cmp	r0, r1
 8004096:	b510      	push	{r4, lr}
 8004098:	eb01 0402 	add.w	r4, r1, r2
 800409c:	d902      	bls.n	80040a4 <memmove+0x10>
 800409e:	4284      	cmp	r4, r0
 80040a0:	4623      	mov	r3, r4
 80040a2:	d807      	bhi.n	80040b4 <memmove+0x20>
 80040a4:	1e43      	subs	r3, r0, #1
 80040a6:	42a1      	cmp	r1, r4
 80040a8:	d008      	beq.n	80040bc <memmove+0x28>
 80040aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80040ae:	f803 2f01 	strb.w	r2, [r3, #1]!
 80040b2:	e7f8      	b.n	80040a6 <memmove+0x12>
 80040b4:	4601      	mov	r1, r0
 80040b6:	4402      	add	r2, r0
 80040b8:	428a      	cmp	r2, r1
 80040ba:	d100      	bne.n	80040be <memmove+0x2a>
 80040bc:	bd10      	pop	{r4, pc}
 80040be:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80040c2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80040c6:	e7f7      	b.n	80040b8 <memmove+0x24>

080040c8 <_free_r>:
 80040c8:	b538      	push	{r3, r4, r5, lr}
 80040ca:	4605      	mov	r5, r0
 80040cc:	2900      	cmp	r1, #0
 80040ce:	d040      	beq.n	8004152 <_free_r+0x8a>
 80040d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80040d4:	1f0c      	subs	r4, r1, #4
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	bfb8      	it	lt
 80040da:	18e4      	addlt	r4, r4, r3
 80040dc:	f000 f910 	bl	8004300 <__malloc_lock>
 80040e0:	4a1c      	ldr	r2, [pc, #112]	; (8004154 <_free_r+0x8c>)
 80040e2:	6813      	ldr	r3, [r2, #0]
 80040e4:	b933      	cbnz	r3, 80040f4 <_free_r+0x2c>
 80040e6:	6063      	str	r3, [r4, #4]
 80040e8:	6014      	str	r4, [r2, #0]
 80040ea:	4628      	mov	r0, r5
 80040ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80040f0:	f000 b90c 	b.w	800430c <__malloc_unlock>
 80040f4:	42a3      	cmp	r3, r4
 80040f6:	d908      	bls.n	800410a <_free_r+0x42>
 80040f8:	6820      	ldr	r0, [r4, #0]
 80040fa:	1821      	adds	r1, r4, r0
 80040fc:	428b      	cmp	r3, r1
 80040fe:	bf01      	itttt	eq
 8004100:	6819      	ldreq	r1, [r3, #0]
 8004102:	685b      	ldreq	r3, [r3, #4]
 8004104:	1809      	addeq	r1, r1, r0
 8004106:	6021      	streq	r1, [r4, #0]
 8004108:	e7ed      	b.n	80040e6 <_free_r+0x1e>
 800410a:	461a      	mov	r2, r3
 800410c:	685b      	ldr	r3, [r3, #4]
 800410e:	b10b      	cbz	r3, 8004114 <_free_r+0x4c>
 8004110:	42a3      	cmp	r3, r4
 8004112:	d9fa      	bls.n	800410a <_free_r+0x42>
 8004114:	6811      	ldr	r1, [r2, #0]
 8004116:	1850      	adds	r0, r2, r1
 8004118:	42a0      	cmp	r0, r4
 800411a:	d10b      	bne.n	8004134 <_free_r+0x6c>
 800411c:	6820      	ldr	r0, [r4, #0]
 800411e:	4401      	add	r1, r0
 8004120:	1850      	adds	r0, r2, r1
 8004122:	4283      	cmp	r3, r0
 8004124:	6011      	str	r1, [r2, #0]
 8004126:	d1e0      	bne.n	80040ea <_free_r+0x22>
 8004128:	6818      	ldr	r0, [r3, #0]
 800412a:	685b      	ldr	r3, [r3, #4]
 800412c:	4401      	add	r1, r0
 800412e:	6011      	str	r1, [r2, #0]
 8004130:	6053      	str	r3, [r2, #4]
 8004132:	e7da      	b.n	80040ea <_free_r+0x22>
 8004134:	d902      	bls.n	800413c <_free_r+0x74>
 8004136:	230c      	movs	r3, #12
 8004138:	602b      	str	r3, [r5, #0]
 800413a:	e7d6      	b.n	80040ea <_free_r+0x22>
 800413c:	6820      	ldr	r0, [r4, #0]
 800413e:	1821      	adds	r1, r4, r0
 8004140:	428b      	cmp	r3, r1
 8004142:	bf01      	itttt	eq
 8004144:	6819      	ldreq	r1, [r3, #0]
 8004146:	685b      	ldreq	r3, [r3, #4]
 8004148:	1809      	addeq	r1, r1, r0
 800414a:	6021      	streq	r1, [r4, #0]
 800414c:	6063      	str	r3, [r4, #4]
 800414e:	6054      	str	r4, [r2, #4]
 8004150:	e7cb      	b.n	80040ea <_free_r+0x22>
 8004152:	bd38      	pop	{r3, r4, r5, pc}
 8004154:	200007f0 	.word	0x200007f0

08004158 <sbrk_aligned>:
 8004158:	b570      	push	{r4, r5, r6, lr}
 800415a:	4e0e      	ldr	r6, [pc, #56]	; (8004194 <sbrk_aligned+0x3c>)
 800415c:	460c      	mov	r4, r1
 800415e:	6831      	ldr	r1, [r6, #0]
 8004160:	4605      	mov	r5, r0
 8004162:	b911      	cbnz	r1, 800416a <sbrk_aligned+0x12>
 8004164:	f000 f8bc 	bl	80042e0 <_sbrk_r>
 8004168:	6030      	str	r0, [r6, #0]
 800416a:	4621      	mov	r1, r4
 800416c:	4628      	mov	r0, r5
 800416e:	f000 f8b7 	bl	80042e0 <_sbrk_r>
 8004172:	1c43      	adds	r3, r0, #1
 8004174:	d00a      	beq.n	800418c <sbrk_aligned+0x34>
 8004176:	1cc4      	adds	r4, r0, #3
 8004178:	f024 0403 	bic.w	r4, r4, #3
 800417c:	42a0      	cmp	r0, r4
 800417e:	d007      	beq.n	8004190 <sbrk_aligned+0x38>
 8004180:	1a21      	subs	r1, r4, r0
 8004182:	4628      	mov	r0, r5
 8004184:	f000 f8ac 	bl	80042e0 <_sbrk_r>
 8004188:	3001      	adds	r0, #1
 800418a:	d101      	bne.n	8004190 <sbrk_aligned+0x38>
 800418c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004190:	4620      	mov	r0, r4
 8004192:	bd70      	pop	{r4, r5, r6, pc}
 8004194:	200007f4 	.word	0x200007f4

08004198 <_malloc_r>:
 8004198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800419c:	1ccd      	adds	r5, r1, #3
 800419e:	f025 0503 	bic.w	r5, r5, #3
 80041a2:	3508      	adds	r5, #8
 80041a4:	2d0c      	cmp	r5, #12
 80041a6:	bf38      	it	cc
 80041a8:	250c      	movcc	r5, #12
 80041aa:	2d00      	cmp	r5, #0
 80041ac:	4607      	mov	r7, r0
 80041ae:	db01      	blt.n	80041b4 <_malloc_r+0x1c>
 80041b0:	42a9      	cmp	r1, r5
 80041b2:	d905      	bls.n	80041c0 <_malloc_r+0x28>
 80041b4:	230c      	movs	r3, #12
 80041b6:	2600      	movs	r6, #0
 80041b8:	603b      	str	r3, [r7, #0]
 80041ba:	4630      	mov	r0, r6
 80041bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041c0:	4e2e      	ldr	r6, [pc, #184]	; (800427c <_malloc_r+0xe4>)
 80041c2:	f000 f89d 	bl	8004300 <__malloc_lock>
 80041c6:	6833      	ldr	r3, [r6, #0]
 80041c8:	461c      	mov	r4, r3
 80041ca:	bb34      	cbnz	r4, 800421a <_malloc_r+0x82>
 80041cc:	4629      	mov	r1, r5
 80041ce:	4638      	mov	r0, r7
 80041d0:	f7ff ffc2 	bl	8004158 <sbrk_aligned>
 80041d4:	1c43      	adds	r3, r0, #1
 80041d6:	4604      	mov	r4, r0
 80041d8:	d14d      	bne.n	8004276 <_malloc_r+0xde>
 80041da:	6834      	ldr	r4, [r6, #0]
 80041dc:	4626      	mov	r6, r4
 80041de:	2e00      	cmp	r6, #0
 80041e0:	d140      	bne.n	8004264 <_malloc_r+0xcc>
 80041e2:	6823      	ldr	r3, [r4, #0]
 80041e4:	4631      	mov	r1, r6
 80041e6:	4638      	mov	r0, r7
 80041e8:	eb04 0803 	add.w	r8, r4, r3
 80041ec:	f000 f878 	bl	80042e0 <_sbrk_r>
 80041f0:	4580      	cmp	r8, r0
 80041f2:	d13a      	bne.n	800426a <_malloc_r+0xd2>
 80041f4:	6821      	ldr	r1, [r4, #0]
 80041f6:	3503      	adds	r5, #3
 80041f8:	1a6d      	subs	r5, r5, r1
 80041fa:	f025 0503 	bic.w	r5, r5, #3
 80041fe:	3508      	adds	r5, #8
 8004200:	2d0c      	cmp	r5, #12
 8004202:	bf38      	it	cc
 8004204:	250c      	movcc	r5, #12
 8004206:	4638      	mov	r0, r7
 8004208:	4629      	mov	r1, r5
 800420a:	f7ff ffa5 	bl	8004158 <sbrk_aligned>
 800420e:	3001      	adds	r0, #1
 8004210:	d02b      	beq.n	800426a <_malloc_r+0xd2>
 8004212:	6823      	ldr	r3, [r4, #0]
 8004214:	442b      	add	r3, r5
 8004216:	6023      	str	r3, [r4, #0]
 8004218:	e00e      	b.n	8004238 <_malloc_r+0xa0>
 800421a:	6822      	ldr	r2, [r4, #0]
 800421c:	1b52      	subs	r2, r2, r5
 800421e:	d41e      	bmi.n	800425e <_malloc_r+0xc6>
 8004220:	2a0b      	cmp	r2, #11
 8004222:	d916      	bls.n	8004252 <_malloc_r+0xba>
 8004224:	1961      	adds	r1, r4, r5
 8004226:	42a3      	cmp	r3, r4
 8004228:	6025      	str	r5, [r4, #0]
 800422a:	bf18      	it	ne
 800422c:	6059      	strne	r1, [r3, #4]
 800422e:	6863      	ldr	r3, [r4, #4]
 8004230:	bf08      	it	eq
 8004232:	6031      	streq	r1, [r6, #0]
 8004234:	5162      	str	r2, [r4, r5]
 8004236:	604b      	str	r3, [r1, #4]
 8004238:	4638      	mov	r0, r7
 800423a:	f104 060b 	add.w	r6, r4, #11
 800423e:	f000 f865 	bl	800430c <__malloc_unlock>
 8004242:	f026 0607 	bic.w	r6, r6, #7
 8004246:	1d23      	adds	r3, r4, #4
 8004248:	1af2      	subs	r2, r6, r3
 800424a:	d0b6      	beq.n	80041ba <_malloc_r+0x22>
 800424c:	1b9b      	subs	r3, r3, r6
 800424e:	50a3      	str	r3, [r4, r2]
 8004250:	e7b3      	b.n	80041ba <_malloc_r+0x22>
 8004252:	6862      	ldr	r2, [r4, #4]
 8004254:	42a3      	cmp	r3, r4
 8004256:	bf0c      	ite	eq
 8004258:	6032      	streq	r2, [r6, #0]
 800425a:	605a      	strne	r2, [r3, #4]
 800425c:	e7ec      	b.n	8004238 <_malloc_r+0xa0>
 800425e:	4623      	mov	r3, r4
 8004260:	6864      	ldr	r4, [r4, #4]
 8004262:	e7b2      	b.n	80041ca <_malloc_r+0x32>
 8004264:	4634      	mov	r4, r6
 8004266:	6876      	ldr	r6, [r6, #4]
 8004268:	e7b9      	b.n	80041de <_malloc_r+0x46>
 800426a:	230c      	movs	r3, #12
 800426c:	4638      	mov	r0, r7
 800426e:	603b      	str	r3, [r7, #0]
 8004270:	f000 f84c 	bl	800430c <__malloc_unlock>
 8004274:	e7a1      	b.n	80041ba <_malloc_r+0x22>
 8004276:	6025      	str	r5, [r4, #0]
 8004278:	e7de      	b.n	8004238 <_malloc_r+0xa0>
 800427a:	bf00      	nop
 800427c:	200007f0 	.word	0x200007f0

08004280 <_realloc_r>:
 8004280:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004284:	4680      	mov	r8, r0
 8004286:	4614      	mov	r4, r2
 8004288:	460e      	mov	r6, r1
 800428a:	b921      	cbnz	r1, 8004296 <_realloc_r+0x16>
 800428c:	4611      	mov	r1, r2
 800428e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004292:	f7ff bf81 	b.w	8004198 <_malloc_r>
 8004296:	b92a      	cbnz	r2, 80042a4 <_realloc_r+0x24>
 8004298:	f7ff ff16 	bl	80040c8 <_free_r>
 800429c:	4625      	mov	r5, r4
 800429e:	4628      	mov	r0, r5
 80042a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80042a4:	f000 f838 	bl	8004318 <_malloc_usable_size_r>
 80042a8:	4284      	cmp	r4, r0
 80042aa:	4607      	mov	r7, r0
 80042ac:	d802      	bhi.n	80042b4 <_realloc_r+0x34>
 80042ae:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80042b2:	d812      	bhi.n	80042da <_realloc_r+0x5a>
 80042b4:	4621      	mov	r1, r4
 80042b6:	4640      	mov	r0, r8
 80042b8:	f7ff ff6e 	bl	8004198 <_malloc_r>
 80042bc:	4605      	mov	r5, r0
 80042be:	2800      	cmp	r0, #0
 80042c0:	d0ed      	beq.n	800429e <_realloc_r+0x1e>
 80042c2:	42bc      	cmp	r4, r7
 80042c4:	4622      	mov	r2, r4
 80042c6:	4631      	mov	r1, r6
 80042c8:	bf28      	it	cs
 80042ca:	463a      	movcs	r2, r7
 80042cc:	f7ff fed4 	bl	8004078 <memcpy>
 80042d0:	4631      	mov	r1, r6
 80042d2:	4640      	mov	r0, r8
 80042d4:	f7ff fef8 	bl	80040c8 <_free_r>
 80042d8:	e7e1      	b.n	800429e <_realloc_r+0x1e>
 80042da:	4635      	mov	r5, r6
 80042dc:	e7df      	b.n	800429e <_realloc_r+0x1e>
	...

080042e0 <_sbrk_r>:
 80042e0:	b538      	push	{r3, r4, r5, lr}
 80042e2:	2300      	movs	r3, #0
 80042e4:	4d05      	ldr	r5, [pc, #20]	; (80042fc <_sbrk_r+0x1c>)
 80042e6:	4604      	mov	r4, r0
 80042e8:	4608      	mov	r0, r1
 80042ea:	602b      	str	r3, [r5, #0]
 80042ec:	f7fd f814 	bl	8001318 <_sbrk>
 80042f0:	1c43      	adds	r3, r0, #1
 80042f2:	d102      	bne.n	80042fa <_sbrk_r+0x1a>
 80042f4:	682b      	ldr	r3, [r5, #0]
 80042f6:	b103      	cbz	r3, 80042fa <_sbrk_r+0x1a>
 80042f8:	6023      	str	r3, [r4, #0]
 80042fa:	bd38      	pop	{r3, r4, r5, pc}
 80042fc:	200007f8 	.word	0x200007f8

08004300 <__malloc_lock>:
 8004300:	4801      	ldr	r0, [pc, #4]	; (8004308 <__malloc_lock+0x8>)
 8004302:	f000 b811 	b.w	8004328 <__retarget_lock_acquire_recursive>
 8004306:	bf00      	nop
 8004308:	200007fc 	.word	0x200007fc

0800430c <__malloc_unlock>:
 800430c:	4801      	ldr	r0, [pc, #4]	; (8004314 <__malloc_unlock+0x8>)
 800430e:	f000 b80c 	b.w	800432a <__retarget_lock_release_recursive>
 8004312:	bf00      	nop
 8004314:	200007fc 	.word	0x200007fc

08004318 <_malloc_usable_size_r>:
 8004318:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800431c:	1f18      	subs	r0, r3, #4
 800431e:	2b00      	cmp	r3, #0
 8004320:	bfbc      	itt	lt
 8004322:	580b      	ldrlt	r3, [r1, r0]
 8004324:	18c0      	addlt	r0, r0, r3
 8004326:	4770      	bx	lr

08004328 <__retarget_lock_acquire_recursive>:
 8004328:	4770      	bx	lr

0800432a <__retarget_lock_release_recursive>:
 800432a:	4770      	bx	lr

0800432c <_init>:
 800432c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800432e:	bf00      	nop
 8004330:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004332:	bc08      	pop	{r3}
 8004334:	469e      	mov	lr, r3
 8004336:	4770      	bx	lr

08004338 <_fini>:
 8004338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800433a:	bf00      	nop
 800433c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800433e:	bc08      	pop	{r3}
 8004340:	469e      	mov	lr, r3
 8004342:	4770      	bx	lr
